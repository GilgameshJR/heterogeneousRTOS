-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FaultDetector_read_data is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_continue : IN STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    sourceStream_din : OUT STD_LOGIC_VECTOR (223 downto 0);
    sourceStream_num_data_valid : IN STD_LOGIC_VECTOR (1 downto 0);
    sourceStream_fifo_cap : IN STD_LOGIC_VECTOR (1 downto 0);
    sourceStream_full_n : IN STD_LOGIC;
    sourceStream_write : OUT STD_LOGIC;
    m_axi_gmem_AWVALID : OUT STD_LOGIC;
    m_axi_gmem_AWREADY : IN STD_LOGIC;
    m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WVALID : OUT STD_LOGIC;
    m_axi_gmem_WREADY : IN STD_LOGIC;
    m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
    m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_WLAST : OUT STD_LOGIC;
    m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARVALID : OUT STD_LOGIC;
    m_axi_gmem_ARREADY : IN STD_LOGIC;
    m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
    m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
    m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
    m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
    m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RVALID : IN STD_LOGIC;
    m_axi_gmem_RREADY : OUT STD_LOGIC;
    m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (255 downto 0);
    m_axi_gmem_RLAST : IN STD_LOGIC;
    m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
    m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BVALID : IN STD_LOGIC;
    m_axi_gmem_BREADY : OUT STD_LOGIC;
    m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
    m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
    m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
    inputAOV : IN STD_LOGIC_VECTOR (63 downto 0);
    startCopy : IN STD_LOGIC_VECTOR (7 downto 0);
    startCopy_ap_vld : IN STD_LOGIC;
    startCopy_ap_ack : OUT STD_LOGIC;
    copying : OUT STD_LOGIC_VECTOR (7 downto 0);
    copying_ap_vld : OUT STD_LOGIC );
end;


architecture behav of FaultDetector_read_data is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_state1 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    constant ap_ST_fsm_state2 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000010";
    constant ap_ST_fsm_state3 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000100";
    constant ap_ST_fsm_state4 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000001000";
    constant ap_ST_fsm_state5 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000010000";
    constant ap_ST_fsm_state6 : STD_LOGIC_VECTOR (16 downto 0) := "00000000000100000";
    constant ap_ST_fsm_state7 : STD_LOGIC_VECTOR (16 downto 0) := "00000000001000000";
    constant ap_ST_fsm_state8 : STD_LOGIC_VECTOR (16 downto 0) := "00000000010000000";
    constant ap_ST_fsm_state9 : STD_LOGIC_VECTOR (16 downto 0) := "00000000100000000";
    constant ap_ST_fsm_state10 : STD_LOGIC_VECTOR (16 downto 0) := "00000001000000000";
    constant ap_ST_fsm_state11 : STD_LOGIC_VECTOR (16 downto 0) := "00000010000000000";
    constant ap_ST_fsm_state12 : STD_LOGIC_VECTOR (16 downto 0) := "00000100000000000";
    constant ap_ST_fsm_state13 : STD_LOGIC_VECTOR (16 downto 0) := "00001000000000000";
    constant ap_ST_fsm_state14 : STD_LOGIC_VECTOR (16 downto 0) := "00010000000000000";
    constant ap_ST_fsm_state15 : STD_LOGIC_VECTOR (16 downto 0) := "00100000000000000";
    constant ap_ST_fsm_state16 : STD_LOGIC_VECTOR (16 downto 0) := "01000000000000000";
    constant ap_ST_fsm_state17 : STD_LOGIC_VECTOR (16 downto 0) := "10000000000000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv64_0 : STD_LOGIC_VECTOR (63 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv3_0 : STD_LOGIC_VECTOR (2 downto 0) := "000";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv4_0 : STD_LOGIC_VECTOR (3 downto 0) := "0000";
    constant ap_const_lv256_lc_1 : STD_LOGIC_VECTOR (255 downto 0) := "0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000";
    constant ap_const_lv32_10 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_A : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001010";
    constant ap_const_lv32_B : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001011";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv32_C : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001100";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv8_0 : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000111111";
    constant ap_const_lv5_0 : STD_LOGIC_VECTOR (4 downto 0) := "00000";
    constant ap_const_lv32_E8 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101000";
    constant ap_const_lv32_EF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011101111";
    constant ap_const_lv8_1 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_const_lv8_3 : STD_LOGIC_VECTOR (7 downto 0) := "00000011";
    constant ap_const_lv32_40 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000001000000";
    constant ap_const_lv32_FF : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000011111111";
    constant ap_const_lv32_27 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000100111";

attribute shreg_extract : string;
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_CS_fsm : STD_LOGIC_VECTOR (16 downto 0) := "00000000000000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_state1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state1 : signal is "none";
    signal sourceStream_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state17 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state17 : signal is "none";
    signal icmp_ln332_reg_302 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_blk_n_AR : STD_LOGIC;
    signal ap_CS_fsm_state4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state4 : signal is "none";
    signal gmem_blk_n_R : STD_LOGIC;
    signal ap_CS_fsm_state11 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state11 : signal is "none";
    signal ap_CS_fsm_state12 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state12 : signal is "none";
    signal startCopy_blk_n : STD_LOGIC;
    signal ap_CS_fsm_state2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state2 : signal is "none";
    signal trunc_ln350_1_fu_151_p4 : STD_LOGIC_VECTOR (58 downto 0);
    signal trunc_ln350_1_reg_277 : STD_LOGIC_VECTOR (58 downto 0);
    signal gmem_addr_reg_282 : STD_LOGIC_VECTOR (63 downto 0);
    signal icmp_ln352_fu_175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln352_reg_288 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln352_fu_181_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal select_ln352_reg_292 : STD_LOGIC_VECTOR (31 downto 0);
    signal zext_ln352_fu_197_p1 : STD_LOGIC_VECTOR (511 downto 0);
    signal zext_ln352_reg_297 : STD_LOGIC_VECTOR (511 downto 0);
    signal icmp_ln332_fu_201_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal gmem_addr_read_reg_306 : STD_LOGIC_VECTOR (255 downto 0);
    signal ap_CS_fsm_state13 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state13 : signal is "none";
    signal grp_fu_214_p2 : STD_LOGIC_VECTOR (511 downto 0);
    signal lshr_ln352_reg_321 : STD_LOGIC_VECTOR (511 downto 0);
    signal ap_CS_fsm_state16 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state16 : signal is "none";
    signal destStr_checkId_V_fu_219_p1 : STD_LOGIC_VECTOR (7 downto 0);
    signal destStr_checkId_V_reg_327 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_s_reg_332 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_ap_start : STD_LOGIC;
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_ap_done : STD_LOGIC;
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_ap_idle : STD_LOGIC;
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_ap_ready : STD_LOGIC;
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWVALID : STD_LOGIC;
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_WVALID : STD_LOGIC;
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_WDATA : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_WSTRB : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_WLAST : STD_LOGIC;
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_WID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_WUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARVALID : STD_LOGIC;
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARADDR : STD_LOGIC_VECTOR (63 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARID : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARLEN : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARSIZE : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARBURST : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARLOCK : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARCACHE : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARPROT : STD_LOGIC_VECTOR (2 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARQOS : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARREGION : STD_LOGIC_VECTOR (3 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARUSER : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_RREADY : STD_LOGIC;
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_BREADY : STD_LOGIC;
    signal empty_54_reg_133 : STD_LOGIC_VECTOR (255 downto 0);
    signal grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_ap_start_reg : STD_LOGIC := '0';
    signal ap_CS_fsm_state3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_state3 : signal is "none";
    signal sext_ln350_fu_161_p1 : STD_LOGIC_VECTOR (63 downto 0);
    signal ap_block_state1 : BOOLEAN;
    signal copying_preg : STD_LOGIC_VECTOR (7 downto 0) := "00000000";
    signal ap_block_state17 : BOOLEAN;
    signal icmp_ln365_1_fu_243_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln350_fu_171_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal shl_ln_fu_189_p3 : STD_LOGIC_VECTOR (7 downto 0);
    signal grp_fu_214_p0 : STD_LOGIC_VECTOR (511 downto 0);
    signal add_ln365_fu_238_p2 : STD_LOGIC_VECTOR (7 downto 0);
    signal tmp_3_fu_249_p4 : STD_LOGIC_VECTOR (191 downto 0);
    signal tmp_4_fu_258_p4 : STD_LOGIC_VECTOR (23 downto 0);
    signal icmp_ln365_fu_233_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_NS_fsm : STD_LOGIC_VECTOR (16 downto 0);
    signal ap_ST_fsm_state1_blk : STD_LOGIC;
    signal ap_ST_fsm_state2_blk : STD_LOGIC;
    signal ap_ST_fsm_state3_blk : STD_LOGIC;
    signal ap_ST_fsm_state4_blk : STD_LOGIC;
    signal ap_ST_fsm_state5_blk : STD_LOGIC;
    signal ap_ST_fsm_state6_blk : STD_LOGIC;
    signal ap_ST_fsm_state7_blk : STD_LOGIC;
    signal ap_ST_fsm_state8_blk : STD_LOGIC;
    signal ap_ST_fsm_state9_blk : STD_LOGIC;
    signal ap_ST_fsm_state10_blk : STD_LOGIC;
    signal ap_ST_fsm_state11_blk : STD_LOGIC;
    signal ap_ST_fsm_state12_blk : STD_LOGIC;
    signal ap_ST_fsm_state13_blk : STD_LOGIC;
    signal ap_ST_fsm_state14_blk : STD_LOGIC;
    signal ap_ST_fsm_state15_blk : STD_LOGIC;
    signal ap_ST_fsm_state16_blk : STD_LOGIC;
    signal ap_ST_fsm_state17_blk : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component FaultDetector_read_data_Pipeline_VITIS_LOOP_348_2 IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_idle : OUT STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        m_axi_gmem_AWVALID : OUT STD_LOGIC;
        m_axi_gmem_AWREADY : IN STD_LOGIC;
        m_axi_gmem_AWADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_AWID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_AWLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_AWSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_AWCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_AWQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_AWUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WVALID : OUT STD_LOGIC;
        m_axi_gmem_WREADY : IN STD_LOGIC;
        m_axi_gmem_WDATA : OUT STD_LOGIC_VECTOR (255 downto 0);
        m_axi_gmem_WSTRB : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_WLAST : OUT STD_LOGIC;
        m_axi_gmem_WID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_WUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARVALID : OUT STD_LOGIC;
        m_axi_gmem_ARREADY : IN STD_LOGIC;
        m_axi_gmem_ARADDR : OUT STD_LOGIC_VECTOR (63 downto 0);
        m_axi_gmem_ARID : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_ARLEN : OUT STD_LOGIC_VECTOR (31 downto 0);
        m_axi_gmem_ARSIZE : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARBURST : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARLOCK : OUT STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_ARCACHE : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARPROT : OUT STD_LOGIC_VECTOR (2 downto 0);
        m_axi_gmem_ARQOS : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARREGION : OUT STD_LOGIC_VECTOR (3 downto 0);
        m_axi_gmem_ARUSER : OUT STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RVALID : IN STD_LOGIC;
        m_axi_gmem_RREADY : OUT STD_LOGIC;
        m_axi_gmem_RDATA : IN STD_LOGIC_VECTOR (255 downto 0);
        m_axi_gmem_RLAST : IN STD_LOGIC;
        m_axi_gmem_RID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RFIFONUM : IN STD_LOGIC_VECTOR (8 downto 0);
        m_axi_gmem_RUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_RRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BVALID : IN STD_LOGIC;
        m_axi_gmem_BREADY : OUT STD_LOGIC;
        m_axi_gmem_BRESP : IN STD_LOGIC_VECTOR (1 downto 0);
        m_axi_gmem_BID : IN STD_LOGIC_VECTOR (0 downto 0);
        m_axi_gmem_BUSER : IN STD_LOGIC_VECTOR (0 downto 0);
        sext_ln350 : IN STD_LOGIC_VECTOR (58 downto 0) );
    end component;


    component FaultDetector_lshr_512ns_8ns_512_4_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        OP : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (511 downto 0);
        din1 : IN STD_LOGIC_VECTOR (511 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (511 downto 0) );
    end component;



begin
    grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144 : component FaultDetector_read_data_Pipeline_VITIS_LOOP_348_2
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_ap_start,
        ap_done => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_ap_done,
        ap_idle => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_ap_idle,
        ap_ready => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_ap_ready,
        m_axi_gmem_AWVALID => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY => ap_const_logic_0,
        m_axi_gmem_AWADDR => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWADDR,
        m_axi_gmem_AWID => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWID,
        m_axi_gmem_AWLEN => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_WVALID,
        m_axi_gmem_WREADY => ap_const_logic_0,
        m_axi_gmem_WDATA => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_WLAST,
        m_axi_gmem_WID => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_WID,
        m_axi_gmem_WUSER => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY => m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARADDR,
        m_axi_gmem_ARID => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARID,
        m_axi_gmem_ARLEN => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID => m_axi_gmem_RVALID,
        m_axi_gmem_RREADY => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_RREADY,
        m_axi_gmem_RDATA => m_axi_gmem_RDATA,
        m_axi_gmem_RLAST => m_axi_gmem_RLAST,
        m_axi_gmem_RID => m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM => m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER => m_axi_gmem_RUSER,
        m_axi_gmem_RRESP => m_axi_gmem_RRESP,
        m_axi_gmem_BVALID => ap_const_logic_0,
        m_axi_gmem_BREADY => grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_BREADY,
        m_axi_gmem_BRESP => ap_const_lv2_0,
        m_axi_gmem_BID => ap_const_lv1_0,
        m_axi_gmem_BUSER => ap_const_lv1_0,
        sext_ln350 => trunc_ln350_1_reg_277);

    lshr_512ns_8ns_512_4_1_U3 : component FaultDetector_lshr_512ns_8ns_512_4_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        OP => 1,
        din0_WIDTH => 512,
        din1_WIDTH => 8,
        dout_WIDTH => 512)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_214_p0,
        din1 => zext_ln352_reg_297,
        ce => ap_const_logic_1,
        dout => grp_fu_214_p2);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_state1;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif ((not(((sourceStream_full_n = ap_const_logic_0) and (icmp_ln332_reg_302 = ap_const_lv1_0))) and (icmp_ln365_fu_233_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln332_reg_302 = ap_const_lv1_0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    copying_preg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                copying_preg <= ap_const_lv8_0;
            else
                if ((not(((sourceStream_full_n = ap_const_logic_0) and (icmp_ln332_reg_302 = ap_const_lv1_0))) and (icmp_ln365_1_fu_243_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln332_reg_302 = ap_const_lv1_0))) then 
                    copying_preg <= ap_const_lv8_0;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln332_fu_201_p2 = ap_const_lv1_0) and (startCopy_ap_vld = ap_const_logic_1))) then 
                    copying_preg <= ap_const_lv8_FF;
                end if; 
            end if;
        end if;
    end process;


    grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_ap_start_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_ap_start_reg <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln332_fu_201_p2 = ap_const_lv1_0) and (startCopy_ap_vld = ap_const_logic_1))) then 
                    grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_ap_start_reg <= ap_const_logic_1;
                elsif ((grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_ap_ready = ap_const_logic_1)) then 
                    grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_ap_start_reg <= ap_const_logic_0;
                end if; 
            end if;
        end if;
    end process;

    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state16)) then
                destStr_checkId_V_reg_327 <= destStr_checkId_V_fu_219_p1;
                lshr_ln352_reg_321 <= grp_fu_214_p2;
                tmp_s_reg_332 <= grp_fu_214_p2(239 downto 232);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((m_axi_gmem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                empty_54_reg_133 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state11)) then
                gmem_addr_read_reg_306 <= m_axi_gmem_RDATA;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state1)) then
                gmem_addr_reg_282 <= sext_ln350_fu_161_p1;
                icmp_ln352_reg_288 <= icmp_ln352_fu_175_p2;
                    select_ln352_reg_292(1 downto 0) <= select_ln352_fu_181_p3(1 downto 0);
                trunc_ln350_1_reg_277 <= inputAOV(63 downto 5);
                    zext_ln352_reg_297(7 downto 3) <= zext_ln352_fu_197_p1(7 downto 3);
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_CS_fsm_state2)) then
                icmp_ln332_reg_302 <= icmp_ln332_fu_201_p2;
            end if;
        end if;
    end process;
    select_ln352_reg_292(31 downto 2) <= "000000000000000000000000000000";
    zext_ln352_reg_297(2 downto 0) <= "000";
    zext_ln352_reg_297(511 downto

    ap_NS_fsm_assign_proc : process (ap_start, ap_done_reg, ap_CS_fsm, ap_CS_fsm_state1, sourceStream_full_n, m_axi_gmem_ARREADY, m_axi_gmem_RVALID, startCopy_ap_vld, ap_CS_fsm_state17, icmp_ln332_reg_302, ap_CS_fsm_state4, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state2, icmp_ln352_reg_288, icmp_ln332_fu_201_p2, grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_ap_done, ap_CS_fsm_state3, icmp_ln365_fu_233_p2)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_state1 => 
                if ((not(((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) and (ap_const_logic_1 = ap_CS_fsm_state1))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state1;
                end if;
            when ap_ST_fsm_state2 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln332_fu_201_p2 = ap_const_lv1_1) and (startCopy_ap_vld = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state17;
                elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln332_fu_201_p2 = ap_const_lv1_0) and (startCopy_ap_vld = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state3;
                else
                    ap_NS_fsm <= ap_ST_fsm_state2;
                end if;
            when ap_ST_fsm_state3 => 
                if (((ap_const_logic_1 = ap_CS_fsm_state3) and (grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_ap_done = ap_const_logic_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state4;
                else
                    ap_NS_fsm <= ap_ST_fsm_state3;
                end if;
            when ap_ST_fsm_state4 => 
                if (((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then
                    ap_NS_fsm <= ap_ST_fsm_state5;
                else
                    ap_NS_fsm <= ap_ST_fsm_state4;
                end if;
            when ap_ST_fsm_state5 => 
                ap_NS_fsm <= ap_ST_fsm_state6;
            when ap_ST_fsm_state6 => 
                ap_NS_fsm <= ap_ST_fsm_state7;
            when ap_ST_fsm_state7 => 
                ap_NS_fsm <= ap_ST_fsm_state8;
            when ap_ST_fsm_state8 => 
                ap_NS_fsm <= ap_ST_fsm_state9;
            when ap_ST_fsm_state9 => 
                ap_NS_fsm <= ap_ST_fsm_state10;
            when ap_ST_fsm_state10 => 
                ap_NS_fsm <= ap_ST_fsm_state11;
            when ap_ST_fsm_state11 => 
                if (((m_axi_gmem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln352_reg_288 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                elsif (((m_axi_gmem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11) and (icmp_ln352_reg_288 = ap_const_lv1_1))) then
                    ap_NS_fsm <= ap_ST_fsm_state12;
                else
                    ap_NS_fsm <= ap_ST_fsm_state11;
                end if;
            when ap_ST_fsm_state12 => 
                if (((m_axi_gmem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12))) then
                    ap_NS_fsm <= ap_ST_fsm_state13;
                else
                    ap_NS_fsm <= ap_ST_fsm_state12;
                end if;
            when ap_ST_fsm_state13 => 
                ap_NS_fsm <= ap_ST_fsm_state14;
            when ap_ST_fsm_state14 => 
                ap_NS_fsm <= ap_ST_fsm_state15;
            when ap_ST_fsm_state15 => 
                ap_NS_fsm <= ap_ST_fsm_state16;
            when ap_ST_fsm_state16 => 
                ap_NS_fsm <= ap_ST_fsm_state17;
            when ap_ST_fsm_state17 => 
                if ((not(((sourceStream_full_n = ap_const_logic_0) and (icmp_ln332_reg_302 = ap_const_lv1_0))) and (icmp_ln365_fu_233_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln332_reg_302 = ap_const_lv1_0))) then
                    ap_NS_fsm <= ap_ST_fsm_state1;
                elsif ((not(((sourceStream_full_n = ap_const_logic_0) and (icmp_ln332_reg_302 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state17) and ((icmp_ln365_fu_233_p2 = ap_const_lv1_0) or (icmp_ln332_reg_302 = ap_const_lv1_1)))) then
                    ap_NS_fsm <= ap_ST_fsm_state2;
                else
                    ap_NS_fsm <= ap_ST_fsm_state17;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXXXXXXXXXXX";
        end case;
    end process;
    add_ln365_fu_238_p2 <= std_logic_vector(unsigned(tmp_s_reg_332) + unsigned(ap_const_lv8_FF));
    ap_CS_fsm_state1 <= ap_CS_fsm(0);
    ap_CS_fsm_state11 <= ap_CS_fsm(10);
    ap_CS_fsm_state12 <= ap_CS_fsm(11);
    ap_CS_fsm_state13 <= ap_CS_fsm(12);
    ap_CS_fsm_state16 <= ap_CS_fsm(15);
    ap_CS_fsm_state17 <= ap_CS_fsm(16);
    ap_CS_fsm_state2 <= ap_CS_fsm(1);
    ap_CS_fsm_state3 <= ap_CS_fsm(2);
    ap_CS_fsm_state4 <= ap_CS_fsm(3);
    ap_ST_fsm_state10_blk <= ap_const_logic_0;

    ap_ST_fsm_state11_blk_assign_proc : process(m_axi_gmem_RVALID)
    begin
        if ((m_axi_gmem_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state11_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state11_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state12_blk_assign_proc : process(m_axi_gmem_RVALID)
    begin
        if ((m_axi_gmem_RVALID = ap_const_logic_0)) then 
            ap_ST_fsm_state12_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state12_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state13_blk <= ap_const_logic_0;
    ap_ST_fsm_state14_blk <= ap_const_logic_0;
    ap_ST_fsm_state15_blk <= ap_const_logic_0;
    ap_ST_fsm_state16_blk <= ap_const_logic_0;

    ap_ST_fsm_state17_blk_assign_proc : process(sourceStream_full_n, icmp_ln332_reg_302)
    begin
        if (((sourceStream_full_n = ap_const_logic_0) and (icmp_ln332_reg_302 = ap_const_lv1_0))) then 
            ap_ST_fsm_state17_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state17_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state1_blk_assign_proc : process(ap_start, ap_done_reg)
    begin
        if (((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0))) then 
            ap_ST_fsm_state1_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state1_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state2_blk_assign_proc : process(startCopy_ap_vld)
    begin
        if ((startCopy_ap_vld = ap_const_logic_0)) then 
            ap_ST_fsm_state2_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state2_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state3_blk_assign_proc : process(grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_ap_done)
    begin
        if ((grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_ap_done = ap_const_logic_0)) then 
            ap_ST_fsm_state3_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state3_blk <= ap_const_logic_0;
        end if; 
    end process;


    ap_ST_fsm_state4_blk_assign_proc : process(m_axi_gmem_ARREADY)
    begin
        if ((m_axi_gmem_ARREADY = ap_const_logic_0)) then 
            ap_ST_fsm_state4_blk <= ap_const_logic_1;
        else 
            ap_ST_fsm_state4_blk <= ap_const_logic_0;
        end if; 
    end process;

    ap_ST_fsm_state5_blk <= ap_const_logic_0;
    ap_ST_fsm_state6_blk <= ap_const_logic_0;
    ap_ST_fsm_state7_blk <= ap_const_logic_0;
    ap_ST_fsm_state8_blk <= ap_const_logic_0;
    ap_ST_fsm_state9_blk <= ap_const_logic_0;

    ap_block_state1_assign_proc : process(ap_start, ap_done_reg)
    begin
                ap_block_state1 <= ((ap_done_reg = ap_const_logic_1) or (ap_start = ap_const_logic_0));
    end process;


    ap_block_state17_assign_proc : process(sourceStream_full_n, icmp_ln332_reg_302)
    begin
                ap_block_state17 <= ((sourceStream_full_n = ap_const_logic_0) and (icmp_ln332_reg_302 = ap_const_lv1_0));
    end process;


    ap_done_assign_proc : process(ap_done_reg, sourceStream_full_n, ap_CS_fsm_state17, icmp_ln332_reg_302, icmp_ln365_fu_233_p2)
    begin
        if ((not(((sourceStream_full_n = ap_const_logic_0) and (icmp_ln332_reg_302 = ap_const_lv1_0))) and (icmp_ln365_fu_233_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln332_reg_302 = ap_const_lv1_0))) then 
            ap_done <= ap_const_logic_1;
        else 
            ap_done <= ap_done_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_start, ap_CS_fsm_state1)
    begin
        if (((ap_start = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_state1))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_ready_assign_proc : process(sourceStream_full_n, ap_CS_fsm_state17, icmp_ln332_reg_302, icmp_ln365_fu_233_p2)
    begin
        if ((not(((sourceStream_full_n = ap_const_logic_0) and (icmp_ln332_reg_302 = ap_const_lv1_0))) and (icmp_ln365_fu_233_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln332_reg_302 = ap_const_lv1_0))) then 
            ap_ready <= ap_const_logic_1;
        else 
            ap_ready <= ap_const_logic_0;
        end if; 
    end process;


    copying_assign_proc : process(sourceStream_full_n, startCopy_ap_vld, ap_CS_fsm_state17, icmp_ln332_reg_302, ap_CS_fsm_state2, icmp_ln332_fu_201_p2, copying_preg, icmp_ln365_1_fu_243_p2)
    begin
        if ((not(((sourceStream_full_n = ap_const_logic_0) and (icmp_ln332_reg_302 = ap_const_lv1_0))) and (icmp_ln365_1_fu_243_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln332_reg_302 = ap_const_lv1_0))) then 
            copying <= ap_const_lv8_0;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln332_fu_201_p2 = ap_const_lv1_0) and (startCopy_ap_vld = ap_const_logic_1))) then 
            copying <= ap_const_lv8_FF;
        else 
            copying <= copying_preg;
        end if; 
    end process;


    copying_ap_vld_assign_proc : process(sourceStream_full_n, startCopy_ap_vld, ap_CS_fsm_state17, icmp_ln332_reg_302, ap_CS_fsm_state2, icmp_ln332_fu_201_p2, icmp_ln365_1_fu_243_p2)
    begin
        if (((not(((sourceStream_full_n = ap_const_logic_0) and (icmp_ln332_reg_302 = ap_const_lv1_0))) and (icmp_ln365_1_fu_243_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln332_reg_302 = ap_const_lv1_0)) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln332_fu_201_p2 = ap_const_lv1_0) and (startCopy_ap_vld = ap_const_logic_1)))) then 
            copying_ap_vld <= ap_const_logic_1;
        else 
            copying_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    destStr_checkId_V_fu_219_p1 <= grp_fu_214_p2(8 - 1 downto 0);

    gmem_blk_n_AR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state4)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state4)) then 
            gmem_blk_n_AR <= m_axi_gmem_ARREADY;
        else 
            gmem_blk_n_AR <= ap_const_logic_1;
        end if; 
    end process;


    gmem_blk_n_R_assign_proc : process(m_axi_gmem_RVALID, ap_CS_fsm_state11, ap_CS_fsm_state12)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state12) or (ap_const_logic_1 = ap_CS_fsm_state11))) then 
            gmem_blk_n_R <= m_axi_gmem_RVALID;
        else 
            gmem_blk_n_R <= ap_const_logic_1;
        end if; 
    end process;

    grp_fu_214_p0 <= (empty_54_reg_133 & gmem_addr_read_reg_306);
    grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_ap_start <= grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_ap_start_reg;
    icmp_ln332_fu_201_p2 <= "1" when (startCopy = ap_const_lv8_0) else "0";
    icmp_ln352_fu_175_p2 <= "0" when (trunc_ln350_fu_171_p1 = ap_const_lv5_0) else "1";
    icmp_ln365_1_fu_243_p2 <= "1" when (unsigned(add_ln365_fu_238_p2) < unsigned(ap_const_lv8_3)) else "0";
    icmp_ln365_fu_233_p2 <= "1" when (tmp_s_reg_332 = ap_const_lv8_1) else "0";

    m_axi_gmem_ARADDR_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state4, ap_CS_fsm_state2, gmem_addr_reg_282, icmp_ln332_fu_201_p2, grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARADDR, ap_CS_fsm_state3)
    begin
        if (((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem_ARADDR <= gmem_addr_reg_282;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln332_fu_201_p2 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARADDR <= grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARADDR;
        else 
            m_axi_gmem_ARADDR <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_ARBURST_assign_proc : process(ap_CS_fsm_state2, icmp_ln332_fu_201_p2, grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARBURST, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln332_fu_201_p2 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARBURST <= grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARBURST;
        else 
            m_axi_gmem_ARBURST <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem_ARCACHE_assign_proc : process(ap_CS_fsm_state2, icmp_ln332_fu_201_p2, grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARCACHE, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln332_fu_201_p2 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARCACHE <= grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARCACHE;
        else 
            m_axi_gmem_ARCACHE <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_ARID_assign_proc : process(ap_CS_fsm_state2, icmp_ln332_fu_201_p2, grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARID, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln332_fu_201_p2 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARID <= grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARID;
        else 
            m_axi_gmem_ARID <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem_ARLEN_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state4, ap_CS_fsm_state2, select_ln352_reg_292, icmp_ln332_fu_201_p2, grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARLEN, ap_CS_fsm_state3)
    begin
        if (((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem_ARLEN <= select_ln352_reg_292;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln332_fu_201_p2 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARLEN <= grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARLEN;
        else 
            m_axi_gmem_ARLEN <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    m_axi_gmem_ARLOCK_assign_proc : process(ap_CS_fsm_state2, icmp_ln332_fu_201_p2, grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARLOCK, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln332_fu_201_p2 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARLOCK <= grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARLOCK;
        else 
            m_axi_gmem_ARLOCK <= ap_const_lv2_0;
        end if; 
    end process;


    m_axi_gmem_ARPROT_assign_proc : process(ap_CS_fsm_state2, icmp_ln332_fu_201_p2, grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARPROT, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln332_fu_201_p2 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARPROT <= grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARPROT;
        else 
            m_axi_gmem_ARPROT <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem_ARQOS_assign_proc : process(ap_CS_fsm_state2, icmp_ln332_fu_201_p2, grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARQOS, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln332_fu_201_p2 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARQOS <= grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARQOS;
        else 
            m_axi_gmem_ARQOS <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_ARREGION_assign_proc : process(ap_CS_fsm_state2, icmp_ln332_fu_201_p2, grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARREGION, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln332_fu_201_p2 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARREGION <= grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARREGION;
        else 
            m_axi_gmem_ARREGION <= ap_const_lv4_0;
        end if; 
    end process;


    m_axi_gmem_ARSIZE_assign_proc : process(ap_CS_fsm_state2, icmp_ln332_fu_201_p2, grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARSIZE, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln332_fu_201_p2 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARSIZE <= grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARSIZE;
        else 
            m_axi_gmem_ARSIZE <= ap_const_lv3_0;
        end if; 
    end process;


    m_axi_gmem_ARUSER_assign_proc : process(ap_CS_fsm_state2, icmp_ln332_fu_201_p2, grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARUSER, ap_CS_fsm_state3)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln332_fu_201_p2 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARUSER <= grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARUSER;
        else 
            m_axi_gmem_ARUSER <= ap_const_lv1_0;
        end if; 
    end process;


    m_axi_gmem_ARVALID_assign_proc : process(m_axi_gmem_ARREADY, ap_CS_fsm_state4, ap_CS_fsm_state2, icmp_ln332_fu_201_p2, grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARVALID, ap_CS_fsm_state3)
    begin
        if (((m_axi_gmem_ARREADY = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state4))) then 
            m_axi_gmem_ARVALID <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln332_fu_201_p2 = ap_const_lv1_0)))) then 
            m_axi_gmem_ARVALID <= grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_ARVALID;
        else 
            m_axi_gmem_ARVALID <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_AWADDR <= ap_const_lv64_0;
    m_axi_gmem_AWBURST <= ap_const_lv2_0;
    m_axi_gmem_AWCACHE <= ap_const_lv4_0;
    m_axi_gmem_AWID <= ap_const_lv1_0;
    m_axi_gmem_AWLEN <= ap_const_lv32_0;
    m_axi_gmem_AWLOCK <= ap_const_lv2_0;
    m_axi_gmem_AWPROT <= ap_const_lv3_0;
    m_axi_gmem_AWQOS <= ap_const_lv4_0;
    m_axi_gmem_AWREGION <= ap_const_lv4_0;
    m_axi_gmem_AWSIZE <= ap_const_lv3_0;
    m_axi_gmem_AWUSER <= ap_const_lv1_0;
    m_axi_gmem_AWVALID <= ap_const_logic_0;
    m_axi_gmem_BREADY <= ap_const_logic_0;

    m_axi_gmem_RREADY_assign_proc : process(m_axi_gmem_RVALID, ap_CS_fsm_state11, ap_CS_fsm_state12, ap_CS_fsm_state2, icmp_ln332_fu_201_p2, grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_RREADY, ap_CS_fsm_state3)
    begin
        if ((((m_axi_gmem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state12)) or ((m_axi_gmem_RVALID = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_state11)))) then 
            m_axi_gmem_RREADY <= ap_const_logic_1;
        elsif (((ap_const_logic_1 = ap_CS_fsm_state3) or ((ap_const_logic_1 = ap_CS_fsm_state2) and (icmp_ln332_fu_201_p2 = ap_const_lv1_0)))) then 
            m_axi_gmem_RREADY <= grp_read_data_Pipeline_VITIS_LOOP_348_2_fu_144_m_axi_gmem_RREADY;
        else 
            m_axi_gmem_RREADY <= ap_const_logic_0;
        end if; 
    end process;

    m_axi_gmem_WDATA <= ap_const_lv256_lc_1;
    m_axi_gmem_WID <= ap_const_lv1_0;
    m_axi_gmem_WLAST <= ap_const_logic_0;
    m_axi_gmem_WSTRB <= ap_const_lv32_0;
    m_axi_gmem_WUSER <= ap_const_lv1_0;
    m_axi_gmem_WVALID <= ap_const_logic_0;
    select_ln352_fu_181_p3 <= 
        ap_const_lv32_2 when (icmp_ln352_fu_175_p2(0) = '1') else 
        ap_const_lv32_1;
        sext_ln350_fu_161_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln350_1_fu_151_p4),64));

    shl_ln_fu_189_p3 <= (trunc_ln350_fu_171_p1 & ap_const_lv3_0);

    sourceStream_blk_n_assign_proc : process(sourceStream_full_n, ap_CS_fsm_state17, icmp_ln332_reg_302)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln332_reg_302 = ap_const_lv1_0))) then 
            sourceStream_blk_n <= sourceStream_full_n;
        else 
            sourceStream_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    sourceStream_din <= ((tmp_3_fu_249_p4 & tmp_4_fu_258_p4) & destStr_checkId_V_reg_327);

    sourceStream_write_assign_proc : process(sourceStream_full_n, ap_CS_fsm_state17, icmp_ln332_reg_302)
    begin
        if ((not(((sourceStream_full_n = ap_const_logic_0) and (icmp_ln332_reg_302 = ap_const_lv1_0))) and (ap_const_logic_1 = ap_CS_fsm_state17) and (icmp_ln332_reg_302 = ap_const_lv1_0))) then 
            sourceStream_write <= ap_const_logic_1;
        else 
            sourceStream_write <= ap_const_logic_0;
        end if; 
    end process;


    startCopy_ap_ack_assign_proc : process(startCopy_ap_vld, ap_CS_fsm_state2)
    begin
        if (((ap_const_logic_1 = ap_CS_fsm_state2) and (startCopy_ap_vld = ap_const_logic_1))) then 
            startCopy_ap_ack <= ap_const_logic_1;
        else 
            startCopy_ap_ack <= ap_const_logic_0;
        end if; 
    end process;


    startCopy_blk_n_assign_proc : process(startCopy_ap_vld, ap_CS_fsm_state2)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_state2)) then 
            startCopy_blk_n <= startCopy_ap_vld;
        else 
            startCopy_blk_n <= ap_const_logic_1;
        end if; 
    end process;

    tmp_3_fu_249_p4 <= lshr_ln352_reg_321(255 downto 64);
    tmp_4_fu_258_p4 <= lshr_ln352_reg_321(39 downto 16);
    trunc_ln350_1_fu_151_p4 <= inputAOV(63 downto 5);
    trunc_ln350_fu_171_p1 <= inputAOV(5 - 1 downto 0);
    zext_ln352_fu_197_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_189_p3),512));
end behav;
