// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        regions_center_0_0_0,
        regions_center_1_0_0,
        regions_center_2_0_0,
        regions_center_3_0_0,
        regions_center_4_0_0,
        regions_center_5_0_0,
        regions_center_6_0_0,
        regions_center_7_0_0,
        regions_center_8_0_0,
        regions_center_9_0_0,
        regions_center_10_0_0,
        regions_center_11_0_0,
        regions_center_12_0_0,
        regions_center_13_0_0,
        regions_center_14_0_0,
        regions_center_15_0_0,
        regions_center_16_0_0,
        regions_center_17_0_0,
        regions_center_18_0_0,
        regions_center_19_0_0,
        regions_center_20_0_0,
        regions_center_21_0_0,
        regions_center_22_0_0,
        regions_center_23_0_0,
        regions_center_24_0_0,
        regions_center_25_0_0,
        regions_center_26_0_0,
        regions_center_27_0_0,
        regions_center_28_0_0,
        regions_center_29_0_0,
        regions_center_30_0_0,
        regions_center_31_0_0,
        regions_max_0_0_0,
        regions_max_1_0_0,
        regions_max_2_0_0,
        regions_max_3_0_0,
        regions_max_4_0_0,
        regions_max_5_0_0,
        regions_max_6_0_0,
        regions_max_7_0_0,
        regions_max_8_0_0,
        regions_max_9_0_0,
        regions_max_10_0_0,
        regions_max_11_0_0,
        regions_max_12_0_0,
        regions_max_13_0_0,
        regions_max_14_0_0,
        regions_max_15_0_0,
        regions_max_16_0_0,
        regions_max_17_0_0,
        regions_max_18_0_0,
        regions_max_19_0_0,
        regions_max_20_0_0,
        regions_max_21_0_0,
        regions_max_22_0_0,
        regions_max_23_0_0,
        regions_max_24_0_0,
        regions_max_25_0_0,
        regions_max_26_0_0,
        regions_max_27_0_0,
        regions_max_28_0_0,
        regions_max_29_0_0,
        regions_max_30_0_0,
        regions_max_31_0_0,
        regions_min_0_0_0,
        regions_min_1_0_0,
        regions_min_2_0_0,
        regions_min_3_0_0,
        regions_min_4_0_0,
        regions_min_5_0_0,
        regions_min_6_0_0,
        regions_min_7_0_0,
        regions_min_8_0_0,
        regions_min_9_0_0,
        regions_min_10_0_0,
        regions_min_11_0_0,
        regions_min_12_0_0,
        regions_min_13_0_0,
        regions_min_14_0_0,
        regions_min_15_0_0,
        regions_min_16_0_0,
        regions_min_17_0_0,
        regions_min_18_0_0,
        regions_min_19_0_0,
        regions_min_20_0_0,
        regions_min_21_0_0,
        regions_min_22_0_0,
        regions_min_23_0_0,
        regions_min_24_0_0,
        regions_min_25_0_0,
        regions_min_26_0_0,
        regions_min_27_0_0,
        regions_min_28_0_0,
        regions_min_29_0_0,
        regions_min_30_0_0,
        regions_min_31_0_0,
        regions_center_0_1_0,
        regions_center_1_1_0,
        regions_center_2_1_0,
        regions_center_3_1_0,
        regions_center_4_1_0,
        regions_center_5_1_0,
        regions_center_6_1_0,
        regions_center_7_1_0,
        regions_center_8_1_0,
        regions_center_9_1_0,
        regions_center_10_1_0,
        regions_center_11_1_0,
        regions_center_12_1_0,
        regions_center_13_1_0,
        regions_center_14_1_0,
        regions_center_15_1_0,
        regions_center_16_1_0,
        regions_center_17_1_0,
        regions_center_18_1_0,
        regions_center_19_1_0,
        regions_center_20_1_0,
        regions_center_21_1_0,
        regions_center_22_1_0,
        regions_center_23_1_0,
        regions_center_24_1_0,
        regions_center_25_1_0,
        regions_center_26_1_0,
        regions_center_27_1_0,
        regions_center_28_1_0,
        regions_center_29_1_0,
        regions_center_30_1_0,
        regions_center_31_1_0,
        regions_max_0_1_0,
        regions_max_1_1_0,
        regions_max_2_1_0,
        regions_max_3_1_0,
        regions_max_4_1_0,
        regions_max_5_1_0,
        regions_max_6_1_0,
        regions_max_7_1_0,
        regions_max_8_1_0,
        regions_max_9_1_0,
        regions_max_10_1_0,
        regions_max_11_1_0,
        regions_max_12_1_0,
        regions_max_13_1_0,
        regions_max_14_1_0,
        regions_max_15_1_0,
        regions_max_16_1_0,
        regions_max_17_1_0,
        regions_max_18_1_0,
        regions_max_19_1_0,
        regions_max_20_1_0,
        regions_max_21_1_0,
        regions_max_22_1_0,
        regions_max_23_1_0,
        regions_max_24_1_0,
        regions_max_25_1_0,
        regions_max_26_1_0,
        regions_max_27_1_0,
        regions_max_28_1_0,
        regions_max_29_1_0,
        regions_max_30_1_0,
        regions_max_31_1_0,
        regions_min_0_1_0,
        regions_min_1_1_0,
        regions_min_2_1_0,
        regions_min_3_1_0,
        regions_min_4_1_0,
        regions_min_5_1_0,
        regions_min_6_1_0,
        regions_min_7_1_0,
        regions_min_8_1_0,
        regions_min_9_1_0,
        regions_min_10_1_0,
        regions_min_11_1_0,
        regions_min_12_1_0,
        regions_min_13_1_0,
        regions_min_14_1_0,
        regions_min_15_1_0,
        regions_min_16_1_0,
        regions_min_17_1_0,
        regions_min_18_1_0,
        regions_min_19_1_0,
        regions_min_20_1_0,
        regions_min_21_1_0,
        regions_min_22_1_0,
        regions_min_23_1_0,
        regions_min_24_1_0,
        regions_min_25_1_0,
        regions_min_26_1_0,
        regions_min_27_1_0,
        regions_min_28_1_0,
        regions_min_29_1_0,
        regions_min_30_1_0,
        regions_min_31_1_0,
        regions_center_0_2_0,
        regions_center_1_2_0,
        regions_center_2_2_0,
        regions_center_3_2_0,
        regions_center_4_2_0,
        regions_center_5_2_0,
        regions_center_6_2_0,
        regions_center_7_2_0,
        regions_center_8_2_0,
        regions_center_9_2_0,
        regions_center_10_2_0,
        regions_center_11_2_0,
        regions_center_12_2_0,
        regions_center_13_2_0,
        regions_center_14_2_0,
        regions_center_15_2_0,
        regions_center_16_2_0,
        regions_center_17_2_0,
        regions_center_18_2_0,
        regions_center_19_2_0,
        regions_center_20_2_0,
        regions_center_21_2_0,
        regions_center_22_2_0,
        regions_center_23_2_0,
        regions_center_24_2_0,
        regions_center_25_2_0,
        regions_center_26_2_0,
        regions_center_27_2_0,
        regions_center_28_2_0,
        regions_center_29_2_0,
        regions_center_30_2_0,
        regions_center_31_2_0,
        regions_max_0_2_0,
        regions_max_1_2_0,
        regions_max_2_2_0,
        regions_max_3_2_0,
        regions_max_4_2_0,
        regions_max_5_2_0,
        regions_max_6_2_0,
        regions_max_7_2_0,
        regions_max_8_2_0,
        regions_max_9_2_0,
        regions_max_10_2_0,
        regions_max_11_2_0,
        regions_max_12_2_0,
        regions_max_13_2_0,
        regions_max_14_2_0,
        regions_max_15_2_0,
        regions_max_16_2_0,
        regions_max_17_2_0,
        regions_max_18_2_0,
        regions_max_19_2_0,
        regions_max_20_2_0,
        regions_max_21_2_0,
        regions_max_22_2_0,
        regions_max_23_2_0,
        regions_max_24_2_0,
        regions_max_25_2_0,
        regions_max_26_2_0,
        regions_max_27_2_0,
        regions_max_28_2_0,
        regions_max_29_2_0,
        regions_max_30_2_0,
        regions_max_31_2_0,
        regions_min_0_2_0,
        regions_min_1_2_0,
        regions_min_2_2_0,
        regions_min_3_2_0,
        regions_min_4_2_0,
        regions_min_5_2_0,
        regions_min_6_2_0,
        regions_min_7_2_0,
        regions_min_8_2_0,
        regions_min_9_2_0,
        regions_min_10_2_0,
        regions_min_11_2_0,
        regions_min_12_2_0,
        regions_min_13_2_0,
        regions_min_14_2_0,
        regions_min_15_2_0,
        regions_min_16_2_0,
        regions_min_17_2_0,
        regions_min_18_2_0,
        regions_min_19_2_0,
        regions_min_20_2_0,
        regions_min_21_2_0,
        regions_min_22_2_0,
        regions_min_23_2_0,
        regions_min_24_2_0,
        regions_min_25_2_0,
        regions_min_26_2_0,
        regions_min_27_2_0,
        regions_min_28_2_0,
        regions_min_29_2_0,
        regions_min_30_2_0,
        regions_min_31_2_0,
        regions_center_0_3_0,
        regions_center_1_3_0,
        regions_center_2_3_0,
        regions_center_3_3_0,
        regions_center_4_3_0,
        regions_center_5_3_0,
        regions_center_6_3_0,
        regions_center_7_3_0,
        regions_center_8_3_0,
        regions_center_9_3_0,
        regions_center_10_3_0,
        regions_center_11_3_0,
        regions_center_12_3_0,
        regions_center_13_3_0,
        regions_center_14_3_0,
        regions_center_15_3_0,
        regions_center_16_3_0,
        regions_center_17_3_0,
        regions_center_18_3_0,
        regions_center_19_3_0,
        regions_center_20_3_0,
        regions_center_21_3_0,
        regions_center_22_3_0,
        regions_center_23_3_0,
        regions_center_24_3_0,
        regions_center_25_3_0,
        regions_center_26_3_0,
        regions_center_27_3_0,
        regions_center_28_3_0,
        regions_center_29_3_0,
        regions_center_30_3_0,
        regions_center_31_3_0,
        regions_max_0_3_0,
        regions_max_1_3_0,
        regions_max_2_3_0,
        regions_max_3_3_0,
        regions_max_4_3_0,
        regions_max_5_3_0,
        regions_max_6_3_0,
        regions_max_7_3_0,
        regions_max_8_3_0,
        regions_max_9_3_0,
        regions_max_10_3_0,
        regions_max_11_3_0,
        regions_max_12_3_0,
        regions_max_13_3_0,
        regions_max_14_3_0,
        regions_max_15_3_0,
        regions_max_16_3_0,
        regions_max_17_3_0,
        regions_max_18_3_0,
        regions_max_19_3_0,
        regions_max_20_3_0,
        regions_max_21_3_0,
        regions_max_22_3_0,
        regions_max_23_3_0,
        regions_max_24_3_0,
        regions_max_25_3_0,
        regions_max_26_3_0,
        regions_max_27_3_0,
        regions_max_28_3_0,
        regions_max_29_3_0,
        regions_max_30_3_0,
        regions_max_31_3_0,
        regions_min_0_3_0,
        regions_min_1_3_0,
        regions_min_2_3_0,
        regions_min_3_3_0,
        regions_min_4_3_0,
        regions_min_5_3_0,
        regions_min_6_3_0,
        regions_min_7_3_0,
        regions_min_8_3_0,
        regions_min_9_3_0,
        regions_min_10_3_0,
        regions_min_11_3_0,
        regions_min_12_3_0,
        regions_min_13_3_0,
        regions_min_14_3_0,
        regions_min_15_3_0,
        regions_min_16_3_0,
        regions_min_17_3_0,
        regions_min_18_3_0,
        regions_min_19_3_0,
        regions_min_20_3_0,
        regions_min_21_3_0,
        regions_min_22_3_0,
        regions_min_23_3_0,
        regions_min_24_3_0,
        regions_min_25_3_0,
        regions_min_26_3_0,
        regions_min_27_3_0,
        regions_min_28_3_0,
        regions_min_29_3_0,
        regions_min_30_3_0,
        regions_min_31_3_0,
        regions_center_0_4_0,
        regions_center_1_4_0,
        regions_center_2_4_0,
        regions_center_3_4_0,
        regions_center_4_4_0,
        regions_center_5_4_0,
        regions_center_6_4_0,
        regions_center_7_4_0,
        regions_center_8_4_0,
        regions_center_9_4_0,
        regions_center_10_4_0,
        regions_center_11_4_0,
        regions_center_12_4_0,
        regions_center_13_4_0,
        regions_center_14_4_0,
        regions_center_15_4_0,
        regions_center_16_4_0,
        regions_center_17_4_0,
        regions_center_18_4_0,
        regions_center_19_4_0,
        regions_center_20_4_0,
        regions_center_21_4_0,
        regions_center_22_4_0,
        regions_center_23_4_0,
        regions_center_24_4_0,
        regions_center_25_4_0,
        regions_center_26_4_0,
        regions_center_27_4_0,
        regions_center_28_4_0,
        regions_center_29_4_0,
        regions_center_30_4_0,
        regions_center_31_4_0,
        regions_max_0_4_0,
        regions_max_1_4_0,
        regions_max_2_4_0,
        regions_max_3_4_0,
        regions_max_4_4_0,
        regions_max_5_4_0,
        regions_max_6_4_0,
        regions_max_7_4_0,
        regions_max_8_4_0,
        regions_max_9_4_0,
        regions_max_10_4_0,
        regions_max_11_4_0,
        regions_max_12_4_0,
        regions_max_13_4_0,
        regions_max_14_4_0,
        regions_max_15_4_0,
        regions_max_16_4_0,
        regions_max_17_4_0,
        regions_max_18_4_0,
        regions_max_19_4_0,
        regions_max_20_4_0,
        regions_max_21_4_0,
        regions_max_22_4_0,
        regions_max_23_4_0,
        regions_max_24_4_0,
        regions_max_25_4_0,
        regions_max_26_4_0,
        regions_max_27_4_0,
        regions_max_28_4_0,
        regions_max_29_4_0,
        regions_max_30_4_0,
        regions_max_31_4_0,
        regions_min_0_4_0,
        regions_min_1_4_0,
        regions_min_2_4_0,
        regions_min_3_4_0,
        regions_min_4_4_0,
        regions_min_5_4_0,
        regions_min_6_4_0,
        regions_min_7_4_0,
        regions_min_8_4_0,
        regions_min_9_4_0,
        regions_min_10_4_0,
        regions_min_11_4_0,
        regions_min_12_4_0,
        regions_min_13_4_0,
        regions_min_14_4_0,
        regions_min_15_4_0,
        regions_min_16_4_0,
        regions_min_17_4_0,
        regions_min_18_4_0,
        regions_min_19_4_0,
        regions_min_20_4_0,
        regions_min_21_4_0,
        regions_min_22_4_0,
        regions_min_23_4_0,
        regions_min_24_4_0,
        regions_min_25_4_0,
        regions_min_26_4_0,
        regions_min_27_4_0,
        regions_min_28_4_0,
        regions_min_29_4_0,
        regions_min_30_4_0,
        regions_min_31_4_0,
        merge_2_out,
        merge_2_out_ap_vld,
        merge_1_out,
        merge_1_out_ap_vld,
        grp_fu_45318_p_din0,
        grp_fu_45318_p_din1,
        grp_fu_45318_p_opcode,
        grp_fu_45318_p_dout0,
        grp_fu_45318_p_ce,
        grp_fu_45324_p_din0,
        grp_fu_45324_p_din1,
        grp_fu_45324_p_dout0,
        grp_fu_45324_p_ce,
        grp_fu_45329_p_din0,
        grp_fu_45329_p_din1,
        grp_fu_45329_p_opcode,
        grp_fu_45329_p_dout0,
        grp_fu_45329_p_ce,
        grp_fu_45334_p_din0,
        grp_fu_45334_p_din1,
        grp_fu_45334_p_opcode,
        grp_fu_45334_p_dout0,
        grp_fu_45334_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] regions_center_0_0_0;
input  [31:0] regions_center_1_0_0;
input  [31:0] regions_center_2_0_0;
input  [31:0] regions_center_3_0_0;
input  [31:0] regions_center_4_0_0;
input  [31:0] regions_center_5_0_0;
input  [31:0] regions_center_6_0_0;
input  [31:0] regions_center_7_0_0;
input  [31:0] regions_center_8_0_0;
input  [31:0] regions_center_9_0_0;
input  [31:0] regions_center_10_0_0;
input  [31:0] regions_center_11_0_0;
input  [31:0] regions_center_12_0_0;
input  [31:0] regions_center_13_0_0;
input  [31:0] regions_center_14_0_0;
input  [31:0] regions_center_15_0_0;
input  [31:0] regions_center_16_0_0;
input  [31:0] regions_center_17_0_0;
input  [31:0] regions_center_18_0_0;
input  [31:0] regions_center_19_0_0;
input  [31:0] regions_center_20_0_0;
input  [31:0] regions_center_21_0_0;
input  [31:0] regions_center_22_0_0;
input  [31:0] regions_center_23_0_0;
input  [31:0] regions_center_24_0_0;
input  [31:0] regions_center_25_0_0;
input  [31:0] regions_center_26_0_0;
input  [31:0] regions_center_27_0_0;
input  [31:0] regions_center_28_0_0;
input  [31:0] regions_center_29_0_0;
input  [31:0] regions_center_30_0_0;
input  [31:0] regions_center_31_0_0;
input  [31:0] regions_max_0_0_0;
input  [31:0] regions_max_1_0_0;
input  [31:0] regions_max_2_0_0;
input  [31:0] regions_max_3_0_0;
input  [31:0] regions_max_4_0_0;
input  [31:0] regions_max_5_0_0;
input  [31:0] regions_max_6_0_0;
input  [31:0] regions_max_7_0_0;
input  [31:0] regions_max_8_0_0;
input  [31:0] regions_max_9_0_0;
input  [31:0] regions_max_10_0_0;
input  [31:0] regions_max_11_0_0;
input  [31:0] regions_max_12_0_0;
input  [31:0] regions_max_13_0_0;
input  [31:0] regions_max_14_0_0;
input  [31:0] regions_max_15_0_0;
input  [31:0] regions_max_16_0_0;
input  [31:0] regions_max_17_0_0;
input  [31:0] regions_max_18_0_0;
input  [31:0] regions_max_19_0_0;
input  [31:0] regions_max_20_0_0;
input  [31:0] regions_max_21_0_0;
input  [31:0] regions_max_22_0_0;
input  [31:0] regions_max_23_0_0;
input  [31:0] regions_max_24_0_0;
input  [31:0] regions_max_25_0_0;
input  [31:0] regions_max_26_0_0;
input  [31:0] regions_max_27_0_0;
input  [31:0] regions_max_28_0_0;
input  [31:0] regions_max_29_0_0;
input  [31:0] regions_max_30_0_0;
input  [31:0] regions_max_31_0_0;
input  [31:0] regions_min_0_0_0;
input  [31:0] regions_min_1_0_0;
input  [31:0] regions_min_2_0_0;
input  [31:0] regions_min_3_0_0;
input  [31:0] regions_min_4_0_0;
input  [31:0] regions_min_5_0_0;
input  [31:0] regions_min_6_0_0;
input  [31:0] regions_min_7_0_0;
input  [31:0] regions_min_8_0_0;
input  [31:0] regions_min_9_0_0;
input  [31:0] regions_min_10_0_0;
input  [31:0] regions_min_11_0_0;
input  [31:0] regions_min_12_0_0;
input  [31:0] regions_min_13_0_0;
input  [31:0] regions_min_14_0_0;
input  [31:0] regions_min_15_0_0;
input  [31:0] regions_min_16_0_0;
input  [31:0] regions_min_17_0_0;
input  [31:0] regions_min_18_0_0;
input  [31:0] regions_min_19_0_0;
input  [31:0] regions_min_20_0_0;
input  [31:0] regions_min_21_0_0;
input  [31:0] regions_min_22_0_0;
input  [31:0] regions_min_23_0_0;
input  [31:0] regions_min_24_0_0;
input  [31:0] regions_min_25_0_0;
input  [31:0] regions_min_26_0_0;
input  [31:0] regions_min_27_0_0;
input  [31:0] regions_min_28_0_0;
input  [31:0] regions_min_29_0_0;
input  [31:0] regions_min_30_0_0;
input  [31:0] regions_min_31_0_0;
input  [31:0] regions_center_0_1_0;
input  [31:0] regions_center_1_1_0;
input  [31:0] regions_center_2_1_0;
input  [31:0] regions_center_3_1_0;
input  [31:0] regions_center_4_1_0;
input  [31:0] regions_center_5_1_0;
input  [31:0] regions_center_6_1_0;
input  [31:0] regions_center_7_1_0;
input  [31:0] regions_center_8_1_0;
input  [31:0] regions_center_9_1_0;
input  [31:0] regions_center_10_1_0;
input  [31:0] regions_center_11_1_0;
input  [31:0] regions_center_12_1_0;
input  [31:0] regions_center_13_1_0;
input  [31:0] regions_center_14_1_0;
input  [31:0] regions_center_15_1_0;
input  [31:0] regions_center_16_1_0;
input  [31:0] regions_center_17_1_0;
input  [31:0] regions_center_18_1_0;
input  [31:0] regions_center_19_1_0;
input  [31:0] regions_center_20_1_0;
input  [31:0] regions_center_21_1_0;
input  [31:0] regions_center_22_1_0;
input  [31:0] regions_center_23_1_0;
input  [31:0] regions_center_24_1_0;
input  [31:0] regions_center_25_1_0;
input  [31:0] regions_center_26_1_0;
input  [31:0] regions_center_27_1_0;
input  [31:0] regions_center_28_1_0;
input  [31:0] regions_center_29_1_0;
input  [31:0] regions_center_30_1_0;
input  [31:0] regions_center_31_1_0;
input  [31:0] regions_max_0_1_0;
input  [31:0] regions_max_1_1_0;
input  [31:0] regions_max_2_1_0;
input  [31:0] regions_max_3_1_0;
input  [31:0] regions_max_4_1_0;
input  [31:0] regions_max_5_1_0;
input  [31:0] regions_max_6_1_0;
input  [31:0] regions_max_7_1_0;
input  [31:0] regions_max_8_1_0;
input  [31:0] regions_max_9_1_0;
input  [31:0] regions_max_10_1_0;
input  [31:0] regions_max_11_1_0;
input  [31:0] regions_max_12_1_0;
input  [31:0] regions_max_13_1_0;
input  [31:0] regions_max_14_1_0;
input  [31:0] regions_max_15_1_0;
input  [31:0] regions_max_16_1_0;
input  [31:0] regions_max_17_1_0;
input  [31:0] regions_max_18_1_0;
input  [31:0] regions_max_19_1_0;
input  [31:0] regions_max_20_1_0;
input  [31:0] regions_max_21_1_0;
input  [31:0] regions_max_22_1_0;
input  [31:0] regions_max_23_1_0;
input  [31:0] regions_max_24_1_0;
input  [31:0] regions_max_25_1_0;
input  [31:0] regions_max_26_1_0;
input  [31:0] regions_max_27_1_0;
input  [31:0] regions_max_28_1_0;
input  [31:0] regions_max_29_1_0;
input  [31:0] regions_max_30_1_0;
input  [31:0] regions_max_31_1_0;
input  [31:0] regions_min_0_1_0;
input  [31:0] regions_min_1_1_0;
input  [31:0] regions_min_2_1_0;
input  [31:0] regions_min_3_1_0;
input  [31:0] regions_min_4_1_0;
input  [31:0] regions_min_5_1_0;
input  [31:0] regions_min_6_1_0;
input  [31:0] regions_min_7_1_0;
input  [31:0] regions_min_8_1_0;
input  [31:0] regions_min_9_1_0;
input  [31:0] regions_min_10_1_0;
input  [31:0] regions_min_11_1_0;
input  [31:0] regions_min_12_1_0;
input  [31:0] regions_min_13_1_0;
input  [31:0] regions_min_14_1_0;
input  [31:0] regions_min_15_1_0;
input  [31:0] regions_min_16_1_0;
input  [31:0] regions_min_17_1_0;
input  [31:0] regions_min_18_1_0;
input  [31:0] regions_min_19_1_0;
input  [31:0] regions_min_20_1_0;
input  [31:0] regions_min_21_1_0;
input  [31:0] regions_min_22_1_0;
input  [31:0] regions_min_23_1_0;
input  [31:0] regions_min_24_1_0;
input  [31:0] regions_min_25_1_0;
input  [31:0] regions_min_26_1_0;
input  [31:0] regions_min_27_1_0;
input  [31:0] regions_min_28_1_0;
input  [31:0] regions_min_29_1_0;
input  [31:0] regions_min_30_1_0;
input  [31:0] regions_min_31_1_0;
input  [31:0] regions_center_0_2_0;
input  [31:0] regions_center_1_2_0;
input  [31:0] regions_center_2_2_0;
input  [31:0] regions_center_3_2_0;
input  [31:0] regions_center_4_2_0;
input  [31:0] regions_center_5_2_0;
input  [31:0] regions_center_6_2_0;
input  [31:0] regions_center_7_2_0;
input  [31:0] regions_center_8_2_0;
input  [31:0] regions_center_9_2_0;
input  [31:0] regions_center_10_2_0;
input  [31:0] regions_center_11_2_0;
input  [31:0] regions_center_12_2_0;
input  [31:0] regions_center_13_2_0;
input  [31:0] regions_center_14_2_0;
input  [31:0] regions_center_15_2_0;
input  [31:0] regions_center_16_2_0;
input  [31:0] regions_center_17_2_0;
input  [31:0] regions_center_18_2_0;
input  [31:0] regions_center_19_2_0;
input  [31:0] regions_center_20_2_0;
input  [31:0] regions_center_21_2_0;
input  [31:0] regions_center_22_2_0;
input  [31:0] regions_center_23_2_0;
input  [31:0] regions_center_24_2_0;
input  [31:0] regions_center_25_2_0;
input  [31:0] regions_center_26_2_0;
input  [31:0] regions_center_27_2_0;
input  [31:0] regions_center_28_2_0;
input  [31:0] regions_center_29_2_0;
input  [31:0] regions_center_30_2_0;
input  [31:0] regions_center_31_2_0;
input  [31:0] regions_max_0_2_0;
input  [31:0] regions_max_1_2_0;
input  [31:0] regions_max_2_2_0;
input  [31:0] regions_max_3_2_0;
input  [31:0] regions_max_4_2_0;
input  [31:0] regions_max_5_2_0;
input  [31:0] regions_max_6_2_0;
input  [31:0] regions_max_7_2_0;
input  [31:0] regions_max_8_2_0;
input  [31:0] regions_max_9_2_0;
input  [31:0] regions_max_10_2_0;
input  [31:0] regions_max_11_2_0;
input  [31:0] regions_max_12_2_0;
input  [31:0] regions_max_13_2_0;
input  [31:0] regions_max_14_2_0;
input  [31:0] regions_max_15_2_0;
input  [31:0] regions_max_16_2_0;
input  [31:0] regions_max_17_2_0;
input  [31:0] regions_max_18_2_0;
input  [31:0] regions_max_19_2_0;
input  [31:0] regions_max_20_2_0;
input  [31:0] regions_max_21_2_0;
input  [31:0] regions_max_22_2_0;
input  [31:0] regions_max_23_2_0;
input  [31:0] regions_max_24_2_0;
input  [31:0] regions_max_25_2_0;
input  [31:0] regions_max_26_2_0;
input  [31:0] regions_max_27_2_0;
input  [31:0] regions_max_28_2_0;
input  [31:0] regions_max_29_2_0;
input  [31:0] regions_max_30_2_0;
input  [31:0] regions_max_31_2_0;
input  [31:0] regions_min_0_2_0;
input  [31:0] regions_min_1_2_0;
input  [31:0] regions_min_2_2_0;
input  [31:0] regions_min_3_2_0;
input  [31:0] regions_min_4_2_0;
input  [31:0] regions_min_5_2_0;
input  [31:0] regions_min_6_2_0;
input  [31:0] regions_min_7_2_0;
input  [31:0] regions_min_8_2_0;
input  [31:0] regions_min_9_2_0;
input  [31:0] regions_min_10_2_0;
input  [31:0] regions_min_11_2_0;
input  [31:0] regions_min_12_2_0;
input  [31:0] regions_min_13_2_0;
input  [31:0] regions_min_14_2_0;
input  [31:0] regions_min_15_2_0;
input  [31:0] regions_min_16_2_0;
input  [31:0] regions_min_17_2_0;
input  [31:0] regions_min_18_2_0;
input  [31:0] regions_min_19_2_0;
input  [31:0] regions_min_20_2_0;
input  [31:0] regions_min_21_2_0;
input  [31:0] regions_min_22_2_0;
input  [31:0] regions_min_23_2_0;
input  [31:0] regions_min_24_2_0;
input  [31:0] regions_min_25_2_0;
input  [31:0] regions_min_26_2_0;
input  [31:0] regions_min_27_2_0;
input  [31:0] regions_min_28_2_0;
input  [31:0] regions_min_29_2_0;
input  [31:0] regions_min_30_2_0;
input  [31:0] regions_min_31_2_0;
input  [31:0] regions_center_0_3_0;
input  [31:0] regions_center_1_3_0;
input  [31:0] regions_center_2_3_0;
input  [31:0] regions_center_3_3_0;
input  [31:0] regions_center_4_3_0;
input  [31:0] regions_center_5_3_0;
input  [31:0] regions_center_6_3_0;
input  [31:0] regions_center_7_3_0;
input  [31:0] regions_center_8_3_0;
input  [31:0] regions_center_9_3_0;
input  [31:0] regions_center_10_3_0;
input  [31:0] regions_center_11_3_0;
input  [31:0] regions_center_12_3_0;
input  [31:0] regions_center_13_3_0;
input  [31:0] regions_center_14_3_0;
input  [31:0] regions_center_15_3_0;
input  [31:0] regions_center_16_3_0;
input  [31:0] regions_center_17_3_0;
input  [31:0] regions_center_18_3_0;
input  [31:0] regions_center_19_3_0;
input  [31:0] regions_center_20_3_0;
input  [31:0] regions_center_21_3_0;
input  [31:0] regions_center_22_3_0;
input  [31:0] regions_center_23_3_0;
input  [31:0] regions_center_24_3_0;
input  [31:0] regions_center_25_3_0;
input  [31:0] regions_center_26_3_0;
input  [31:0] regions_center_27_3_0;
input  [31:0] regions_center_28_3_0;
input  [31:0] regions_center_29_3_0;
input  [31:0] regions_center_30_3_0;
input  [31:0] regions_center_31_3_0;
input  [31:0] regions_max_0_3_0;
input  [31:0] regions_max_1_3_0;
input  [31:0] regions_max_2_3_0;
input  [31:0] regions_max_3_3_0;
input  [31:0] regions_max_4_3_0;
input  [31:0] regions_max_5_3_0;
input  [31:0] regions_max_6_3_0;
input  [31:0] regions_max_7_3_0;
input  [31:0] regions_max_8_3_0;
input  [31:0] regions_max_9_3_0;
input  [31:0] regions_max_10_3_0;
input  [31:0] regions_max_11_3_0;
input  [31:0] regions_max_12_3_0;
input  [31:0] regions_max_13_3_0;
input  [31:0] regions_max_14_3_0;
input  [31:0] regions_max_15_3_0;
input  [31:0] regions_max_16_3_0;
input  [31:0] regions_max_17_3_0;
input  [31:0] regions_max_18_3_0;
input  [31:0] regions_max_19_3_0;
input  [31:0] regions_max_20_3_0;
input  [31:0] regions_max_21_3_0;
input  [31:0] regions_max_22_3_0;
input  [31:0] regions_max_23_3_0;
input  [31:0] regions_max_24_3_0;
input  [31:0] regions_max_25_3_0;
input  [31:0] regions_max_26_3_0;
input  [31:0] regions_max_27_3_0;
input  [31:0] regions_max_28_3_0;
input  [31:0] regions_max_29_3_0;
input  [31:0] regions_max_30_3_0;
input  [31:0] regions_max_31_3_0;
input  [31:0] regions_min_0_3_0;
input  [31:0] regions_min_1_3_0;
input  [31:0] regions_min_2_3_0;
input  [31:0] regions_min_3_3_0;
input  [31:0] regions_min_4_3_0;
input  [31:0] regions_min_5_3_0;
input  [31:0] regions_min_6_3_0;
input  [31:0] regions_min_7_3_0;
input  [31:0] regions_min_8_3_0;
input  [31:0] regions_min_9_3_0;
input  [31:0] regions_min_10_3_0;
input  [31:0] regions_min_11_3_0;
input  [31:0] regions_min_12_3_0;
input  [31:0] regions_min_13_3_0;
input  [31:0] regions_min_14_3_0;
input  [31:0] regions_min_15_3_0;
input  [31:0] regions_min_16_3_0;
input  [31:0] regions_min_17_3_0;
input  [31:0] regions_min_18_3_0;
input  [31:0] regions_min_19_3_0;
input  [31:0] regions_min_20_3_0;
input  [31:0] regions_min_21_3_0;
input  [31:0] regions_min_22_3_0;
input  [31:0] regions_min_23_3_0;
input  [31:0] regions_min_24_3_0;
input  [31:0] regions_min_25_3_0;
input  [31:0] regions_min_26_3_0;
input  [31:0] regions_min_27_3_0;
input  [31:0] regions_min_28_3_0;
input  [31:0] regions_min_29_3_0;
input  [31:0] regions_min_30_3_0;
input  [31:0] regions_min_31_3_0;
input  [31:0] regions_center_0_4_0;
input  [31:0] regions_center_1_4_0;
input  [31:0] regions_center_2_4_0;
input  [31:0] regions_center_3_4_0;
input  [31:0] regions_center_4_4_0;
input  [31:0] regions_center_5_4_0;
input  [31:0] regions_center_6_4_0;
input  [31:0] regions_center_7_4_0;
input  [31:0] regions_center_8_4_0;
input  [31:0] regions_center_9_4_0;
input  [31:0] regions_center_10_4_0;
input  [31:0] regions_center_11_4_0;
input  [31:0] regions_center_12_4_0;
input  [31:0] regions_center_13_4_0;
input  [31:0] regions_center_14_4_0;
input  [31:0] regions_center_15_4_0;
input  [31:0] regions_center_16_4_0;
input  [31:0] regions_center_17_4_0;
input  [31:0] regions_center_18_4_0;
input  [31:0] regions_center_19_4_0;
input  [31:0] regions_center_20_4_0;
input  [31:0] regions_center_21_4_0;
input  [31:0] regions_center_22_4_0;
input  [31:0] regions_center_23_4_0;
input  [31:0] regions_center_24_4_0;
input  [31:0] regions_center_25_4_0;
input  [31:0] regions_center_26_4_0;
input  [31:0] regions_center_27_4_0;
input  [31:0] regions_center_28_4_0;
input  [31:0] regions_center_29_4_0;
input  [31:0] regions_center_30_4_0;
input  [31:0] regions_center_31_4_0;
input  [31:0] regions_max_0_4_0;
input  [31:0] regions_max_1_4_0;
input  [31:0] regions_max_2_4_0;
input  [31:0] regions_max_3_4_0;
input  [31:0] regions_max_4_4_0;
input  [31:0] regions_max_5_4_0;
input  [31:0] regions_max_6_4_0;
input  [31:0] regions_max_7_4_0;
input  [31:0] regions_max_8_4_0;
input  [31:0] regions_max_9_4_0;
input  [31:0] regions_max_10_4_0;
input  [31:0] regions_max_11_4_0;
input  [31:0] regions_max_12_4_0;
input  [31:0] regions_max_13_4_0;
input  [31:0] regions_max_14_4_0;
input  [31:0] regions_max_15_4_0;
input  [31:0] regions_max_16_4_0;
input  [31:0] regions_max_17_4_0;
input  [31:0] regions_max_18_4_0;
input  [31:0] regions_max_19_4_0;
input  [31:0] regions_max_20_4_0;
input  [31:0] regions_max_21_4_0;
input  [31:0] regions_max_22_4_0;
input  [31:0] regions_max_23_4_0;
input  [31:0] regions_max_24_4_0;
input  [31:0] regions_max_25_4_0;
input  [31:0] regions_max_26_4_0;
input  [31:0] regions_max_27_4_0;
input  [31:0] regions_max_28_4_0;
input  [31:0] regions_max_29_4_0;
input  [31:0] regions_max_30_4_0;
input  [31:0] regions_max_31_4_0;
input  [31:0] regions_min_0_4_0;
input  [31:0] regions_min_1_4_0;
input  [31:0] regions_min_2_4_0;
input  [31:0] regions_min_3_4_0;
input  [31:0] regions_min_4_4_0;
input  [31:0] regions_min_5_4_0;
input  [31:0] regions_min_6_4_0;
input  [31:0] regions_min_7_4_0;
input  [31:0] regions_min_8_4_0;
input  [31:0] regions_min_9_4_0;
input  [31:0] regions_min_10_4_0;
input  [31:0] regions_min_11_4_0;
input  [31:0] regions_min_12_4_0;
input  [31:0] regions_min_13_4_0;
input  [31:0] regions_min_14_4_0;
input  [31:0] regions_min_15_4_0;
input  [31:0] regions_min_16_4_0;
input  [31:0] regions_min_17_4_0;
input  [31:0] regions_min_18_4_0;
input  [31:0] regions_min_19_4_0;
input  [31:0] regions_min_20_4_0;
input  [31:0] regions_min_21_4_0;
input  [31:0] regions_min_22_4_0;
input  [31:0] regions_min_23_4_0;
input  [31:0] regions_min_24_4_0;
input  [31:0] regions_min_25_4_0;
input  [31:0] regions_min_26_4_0;
input  [31:0] regions_min_27_4_0;
input  [31:0] regions_min_28_4_0;
input  [31:0] regions_min_29_4_0;
input  [31:0] regions_min_30_4_0;
input  [31:0] regions_min_31_4_0;
output  [4:0] merge_2_out;
output   merge_2_out_ap_vld;
output  [4:0] merge_1_out;
output   merge_1_out_ap_vld;
output  [31:0] grp_fu_45318_p_din0;
output  [31:0] grp_fu_45318_p_din1;
output  [1:0] grp_fu_45318_p_opcode;
input  [31:0] grp_fu_45318_p_dout0;
output   grp_fu_45318_p_ce;
output  [31:0] grp_fu_45324_p_din0;
output  [31:0] grp_fu_45324_p_din1;
input  [31:0] grp_fu_45324_p_dout0;
output   grp_fu_45324_p_ce;
output  [31:0] grp_fu_45329_p_din0;
output  [31:0] grp_fu_45329_p_din1;
output  [4:0] grp_fu_45329_p_opcode;
input  [0:0] grp_fu_45329_p_dout0;
output   grp_fu_45329_p_ce;
output  [31:0] grp_fu_45334_p_din0;
output  [31:0] grp_fu_45334_p_din1;
output  [4:0] grp_fu_45334_p_opcode;
input  [0:0] grp_fu_45334_p_dout0;
output   grp_fu_45334_p_ce;

reg ap_idle;
reg merge_2_out_ap_vld;
reg merge_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state16_pp0_stage7_iter1;
wire    ap_block_state24_pp0_stage7_iter2;
wire    ap_block_state32_pp0_stage7_iter3;
wire    ap_block_state40_pp0_stage7_iter4;
wire    ap_block_state48_pp0_stage7_iter5;
wire    ap_block_state56_pp0_stage7_iter6;
wire    ap_block_state64_pp0_stage7_iter7;
wire    ap_block_pp0_stage7_subdone;
reg   [0:0] icmp_ln1027_reg_9205;
reg    ap_condition_exit_pp0_iter0_stage7;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_3975;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state10_pp0_stage1_iter1;
wire    ap_block_state18_pp0_stage1_iter2;
wire    ap_block_state26_pp0_stage1_iter3;
wire    ap_block_state34_pp0_stage1_iter4;
wire    ap_block_state42_pp0_stage1_iter5;
wire    ap_block_state50_pp0_stage1_iter6;
wire    ap_block_state58_pp0_stage1_iter7;
wire    ap_block_state66_pp0_stage1_iter8;
wire    ap_block_pp0_stage1_11001;
wire    ap_block_pp0_stage7_11001;
reg   [0:0] icmp_ln1027_reg_9205_pp0_iter2_reg;
reg   [0:0] and_ln112_5_reg_9489;
reg   [0:0] and_ln112_5_reg_9489_pp0_iter2_reg;
wire   [31:0] grp_fu_3940_p2;
reg   [31:0] reg_3981;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state15_pp0_stage6_iter1;
wire    ap_block_state23_pp0_stage6_iter2;
wire    ap_block_state31_pp0_stage6_iter3;
wire    ap_block_state39_pp0_stage6_iter4;
wire    ap_block_state47_pp0_stage6_iter5;
wire    ap_block_state55_pp0_stage6_iter6;
wire    ap_block_state63_pp0_stage6_iter7;
wire    ap_block_pp0_stage6_11001;
reg   [0:0] icmp_ln1027_reg_9205_pp0_iter1_reg;
reg   [0:0] and_ln112_9_reg_9504;
wire   [31:0] grp_fu_3944_p2;
reg   [31:0] reg_3986;
reg   [31:0] reg_3991;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state14_pp0_stage5_iter1;
wire    ap_block_state22_pp0_stage5_iter2;
wire    ap_block_state30_pp0_stage5_iter3;
wire    ap_block_state38_pp0_stage5_iter4;
wire    ap_block_state46_pp0_stage5_iter5;
wire    ap_block_state54_pp0_stage5_iter6;
wire    ap_block_state62_pp0_stage5_iter7;
wire    ap_block_pp0_stage5_11001;
reg   [0:0] and_ln112_1_reg_9449;
reg   [0:0] and_ln112_1_reg_9449_pp0_iter2_reg;
reg   [0:0] and_ln112_7_reg_9494;
reg   [0:0] and_ln112_7_reg_9494_pp0_iter2_reg;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_state17_pp0_stage0_iter2;
wire    ap_block_state25_pp0_stage0_iter3;
wire    ap_block_state33_pp0_stage0_iter4;
wire    ap_block_state41_pp0_stage0_iter5;
wire    ap_block_state49_pp0_stage0_iter6;
wire    ap_block_state57_pp0_stage0_iter7;
wire    ap_block_state65_pp0_stage0_iter8;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] and_ln112_9_reg_9504_pp0_iter2_reg;
reg   [31:0] reg_3995;
reg   [0:0] and_ln112_3_reg_9454;
reg   [0:0] and_ln112_3_reg_9454_pp0_iter2_reg;
reg   [31:0] i_real_3_reg_9190;
reg   [31:0] i_real_3_reg_9190_pp0_iter1_reg;
reg   [31:0] i_real_3_reg_9190_pp0_iter2_reg;
reg   [31:0] i_real_3_reg_9190_pp0_iter3_reg;
reg   [31:0] i_real_3_reg_9190_pp0_iter4_reg;
reg   [31:0] i_real_3_reg_9190_pp0_iter5_reg;
reg   [31:0] i_real_3_reg_9190_pp0_iter6_reg;
reg   [31:0] i_real_3_reg_9190_pp0_iter7_reg;
reg   [31:0] i_real_3_reg_9190_pp0_iter8_reg;
reg   [31:0] k_real_5_reg_9198;
reg   [31:0] k_real_5_reg_9198_pp0_iter1_reg;
reg   [31:0] k_real_5_reg_9198_pp0_iter2_reg;
reg   [31:0] k_real_5_reg_9198_pp0_iter3_reg;
reg   [31:0] k_real_5_reg_9198_pp0_iter4_reg;
reg   [31:0] k_real_5_reg_9198_pp0_iter5_reg;
reg   [31:0] k_real_5_reg_9198_pp0_iter6_reg;
reg   [31:0] k_real_5_reg_9198_pp0_iter7_reg;
wire   [0:0] icmp_ln1027_fu_4040_p2;
reg   [0:0] icmp_ln1027_reg_9205_pp0_iter3_reg;
reg   [0:0] icmp_ln1027_reg_9205_pp0_iter4_reg;
reg   [0:0] icmp_ln1027_reg_9205_pp0_iter5_reg;
reg   [0:0] icmp_ln1027_reg_9205_pp0_iter6_reg;
reg   [0:0] icmp_ln1027_reg_9205_pp0_iter7_reg;
reg   [0:0] icmp_ln1027_reg_9205_pp0_iter8_reg;
wire   [31:0] tmp_s_fu_4050_p34;
reg   [31:0] tmp_s_reg_9209;
wire   [31:0] tmp_1_fu_4092_p34;
reg   [31:0] tmp_1_reg_9214;
wire   [31:0] tmp_2_fu_4130_p34;
reg   [31:0] tmp_2_reg_9219;
wire   [31:0] tmp_3_fu_4168_p34;
reg   [31:0] tmp_3_reg_9224;
wire   [31:0] tmp_4_fu_4206_p34;
reg   [31:0] tmp_4_reg_9233;
wire   [31:0] tmp_5_fu_4244_p34;
reg   [31:0] tmp_5_reg_9238;
wire   [31:0] tmp_6_fu_4282_p34;
reg   [31:0] tmp_6_reg_9247;
wire   [31:0] tmp_7_fu_4320_p34;
reg   [31:0] tmp_7_reg_9252;
wire   [31:0] tmp_8_fu_4358_p34;
reg   [31:0] tmp_8_reg_9257;
wire   [31:0] tmp_9_fu_4396_p34;
reg   [31:0] tmp_9_reg_9262;
wire   [31:0] tmp_10_fu_4434_p34;
reg   [31:0] tmp_10_reg_9271;
wire   [31:0] tmp_11_fu_4472_p34;
reg   [31:0] tmp_11_reg_9276;
wire   [31:0] tmp_12_fu_4510_p34;
reg   [31:0] tmp_12_reg_9285;
wire   [31:0] tmp_13_fu_4548_p34;
reg   [31:0] tmp_13_reg_9290;
wire   [31:0] tmp_14_fu_4586_p34;
reg   [31:0] tmp_14_reg_9295;
wire   [31:0] tmp_15_fu_4624_p34;
reg   [31:0] tmp_15_reg_9300;
wire   [31:0] tmp_16_fu_4662_p34;
reg   [31:0] tmp_16_reg_9309;
wire   [31:0] tmp_17_fu_4700_p34;
reg   [31:0] tmp_17_reg_9314;
wire   [31:0] tmp_18_fu_4738_p34;
reg   [31:0] tmp_18_reg_9323;
wire   [31:0] tmp_19_fu_4776_p34;
reg   [31:0] tmp_19_reg_9328;
wire   [31:0] tmp_20_fu_4814_p34;
reg   [31:0] tmp_20_reg_9333;
wire   [31:0] tmp_21_fu_4852_p34;
reg   [31:0] tmp_21_reg_9338;
wire   [31:0] tmp_22_fu_4890_p34;
reg   [31:0] tmp_22_reg_9347;
wire   [31:0] tmp_23_fu_4928_p34;
reg   [31:0] tmp_23_reg_9352;
wire   [31:0] tmp_24_fu_4966_p34;
reg   [31:0] tmp_24_reg_9361;
wire   [31:0] tmp_25_fu_5004_p34;
reg   [31:0] tmp_25_reg_9366;
wire   [31:0] tmp_26_fu_5042_p34;
reg   [31:0] tmp_26_reg_9371;
wire   [31:0] tmp_27_fu_5080_p34;
reg   [31:0] tmp_27_reg_9376;
wire   [31:0] tmp_28_fu_5118_p34;
reg   [31:0] tmp_28_reg_9385;
wire   [31:0] tmp_29_fu_5156_p34;
reg   [31:0] tmp_29_reg_9390;
wire   [0:0] icmp_ln112_fu_5228_p2;
reg   [0:0] icmp_ln112_reg_9399;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state12_pp0_stage3_iter1;
wire    ap_block_state20_pp0_stage3_iter2;
wire    ap_block_state28_pp0_stage3_iter3;
wire    ap_block_state36_pp0_stage3_iter4;
wire    ap_block_state44_pp0_stage3_iter5;
wire    ap_block_state52_pp0_stage3_iter6;
wire    ap_block_state60_pp0_stage3_iter7;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] icmp_ln112_1_fu_5234_p2;
reg   [0:0] icmp_ln112_1_reg_9404;
wire   [0:0] icmp_ln112_2_fu_5240_p2;
reg   [0:0] icmp_ln112_2_reg_9409;
wire   [0:0] icmp_ln112_3_fu_5246_p2;
reg   [0:0] icmp_ln112_3_reg_9414;
reg   [0:0] tmp_32_reg_9419;
wire   [0:0] icmp_ln112_4_fu_5286_p2;
reg   [0:0] icmp_ln112_4_reg_9424;
wire   [0:0] icmp_ln112_5_fu_5292_p2;
reg   [0:0] icmp_ln112_5_reg_9429;
wire   [0:0] icmp_ln112_6_fu_5298_p2;
reg   [0:0] icmp_ln112_6_reg_9434;
wire   [0:0] icmp_ln112_7_fu_5304_p2;
reg   [0:0] icmp_ln112_7_reg_9439;
reg   [0:0] tmp_37_reg_9444;
wire   [0:0] and_ln112_1_fu_5323_p2;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state13_pp0_stage4_iter1;
wire    ap_block_state21_pp0_stage4_iter2;
wire    ap_block_state29_pp0_stage4_iter3;
wire    ap_block_state37_pp0_stage4_iter4;
wire    ap_block_state45_pp0_stage4_iter5;
wire    ap_block_state53_pp0_stage4_iter6;
wire    ap_block_state61_pp0_stage4_iter7;
wire    ap_block_pp0_stage4_11001;
reg   [0:0] and_ln112_1_reg_9449_pp0_iter1_reg;
wire   [0:0] and_ln112_3_fu_5342_p2;
reg   [0:0] and_ln112_3_reg_9454_pp0_iter1_reg;
wire   [0:0] icmp_ln112_8_fu_5382_p2;
reg   [0:0] icmp_ln112_8_reg_9459;
wire   [0:0] icmp_ln112_9_fu_5388_p2;
reg   [0:0] icmp_ln112_9_reg_9464;
wire   [0:0] icmp_ln112_10_fu_5394_p2;
reg   [0:0] icmp_ln112_10_reg_9469;
wire   [0:0] icmp_ln112_11_fu_5400_p2;
reg   [0:0] icmp_ln112_11_reg_9474;
reg   [0:0] tmp_42_reg_9479;
reg   [0:0] tmp_47_reg_9484;
wire   [0:0] and_ln112_5_fu_5420_p2;
reg   [0:0] and_ln112_5_reg_9489_pp0_iter1_reg;
wire   [0:0] and_ln112_7_fu_5501_p2;
reg   [0:0] and_ln112_7_reg_9494_pp0_iter1_reg;
reg   [0:0] tmp_52_reg_9499;
wire   [0:0] and_ln112_9_fu_5582_p2;
reg   [0:0] and_ln112_9_reg_9504_pp0_iter1_reg;
wire   [0:0] icmp_ln1019_fu_5587_p2;
reg   [0:0] icmp_ln1019_reg_9509;
reg   [0:0] icmp_ln1019_reg_9509_pp0_iter2_reg;
reg   [0:0] icmp_ln1019_reg_9509_pp0_iter3_reg;
reg   [0:0] icmp_ln1019_reg_9509_pp0_iter4_reg;
reg   [0:0] icmp_ln1019_reg_9509_pp0_iter5_reg;
reg   [0:0] icmp_ln1019_reg_9509_pp0_iter6_reg;
reg   [0:0] icmp_ln1019_reg_9509_pp0_iter7_reg;
reg   [0:0] icmp_ln1019_reg_9509_pp0_iter8_reg;
reg   [31:0] d1_reg_9518;
reg   [31:0] d2_reg_9523;
wire   [31:0] grp_fu_3948_p2;
reg   [31:0] sub_reg_9528;
wire   [31:0] grp_fu_3952_p2;
reg   [31:0] d_1_reg_9533;
reg   [31:0] sub2_reg_9539;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state11_pp0_stage2_iter1;
wire    ap_block_state19_pp0_stage2_iter2;
wire    ap_block_state27_pp0_stage2_iter3;
wire    ap_block_state35_pp0_stage2_iter4;
wire    ap_block_state43_pp0_stage2_iter5;
wire    ap_block_state51_pp0_stage2_iter6;
wire    ap_block_state59_pp0_stage2_iter7;
wire    ap_block_state67_pp0_stage2_iter8;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] d1_1_reg_9544;
reg   [31:0] d2_1_reg_9549;
reg   [31:0] sub75_1_reg_9554;
reg   [31:0] sub87_1_reg_9559;
reg   [31:0] d_2_reg_9564;
reg   [31:0] d1_2_reg_9570;
reg   [31:0] d2_2_reg_9575;
reg   [31:0] sub75_2_reg_9580;
reg   [31:0] sub87_2_reg_9585;
reg   [31:0] d1_3_reg_9590;
reg   [31:0] d2_3_reg_9595;
reg   [31:0] sub75_3_reg_9600;
reg   [31:0] sub87_3_reg_9605;
reg   [31:0] mul_reg_9610;
wire   [31:0] grp_fu_3961_p2;
reg   [31:0] mul_1_reg_9615;
reg   [31:0] mul_1_reg_9615_pp0_iter2_reg;
reg   [31:0] d_3_reg_9620;
reg   [31:0] mul_2_reg_9626;
reg   [31:0] mul_2_reg_9626_pp0_iter2_reg;
reg   [31:0] mul_2_reg_9626_pp0_iter3_reg;
reg   [31:0] d_4_reg_9631;
reg   [31:0] mul_3_reg_9637;
reg   [31:0] mul_3_reg_9637_pp0_iter3_reg;
reg   [31:0] mul_3_reg_9637_pp0_iter4_reg;
reg   [31:0] ov_reg_9642;
reg   [31:0] mul_4_reg_9647;
reg   [31:0] mul_4_reg_9647_pp0_iter3_reg;
reg   [31:0] mul_4_reg_9647_pp0_iter4_reg;
reg   [31:0] mul_4_reg_9647_pp0_iter5_reg;
reg   [31:0] distance_reg_9652;
wire   [31:0] ov_2_fu_5632_p3;
reg   [31:0] ov_2_reg_9657;
wire   [31:0] ov_6_fu_5638_p3;
reg   [31:0] ov_6_reg_9664;
reg   [0:0] tmp_34_reg_9671;
reg   [0:0] tmp_39_reg_9676;
wire   [31:0] ov_10_fu_5645_p3;
reg   [31:0] ov_10_reg_9681;
wire   [31:0] ov_14_fu_5652_p3;
reg   [31:0] ov_14_reg_9688;
wire   [31:0] ov_20_fu_5699_p3;
reg   [31:0] ov_20_reg_9695;
wire   [31:0] ov_7_fu_5746_p3;
reg   [31:0] ov_7_reg_9700;
wire   [31:0] ov_18_fu_5753_p3;
reg   [31:0] ov_18_reg_9705;
reg   [0:0] tmp_44_reg_9712;
reg   [0:0] tmp_49_reg_9717;
wire   [31:0] ov_11_fu_5800_p3;
reg   [31:0] ov_11_reg_9722;
wire   [31:0] ov_15_fu_5847_p3;
reg   [31:0] ov_15_reg_9727;
reg   [31:0] distance_1_reg_9732;
reg   [0:0] tmp_54_reg_9737;
reg   [31:0] overlap_1_reg_9742;
wire   [31:0] ov_19_fu_5894_p3;
reg   [31:0] ov_19_reg_9747;
reg   [31:0] ov_19_reg_9747_pp0_iter4_reg;
reg   [31:0] overlap_2_reg_9752;
reg   [31:0] overlap_3_reg_9757;
reg   [31:0] distance_2_reg_9762;
reg   [31:0] overlap_4_reg_9767;
reg   [31:0] overlap_4_reg_9767_pp0_iter6_reg;
reg   [0:0] tmp_56_reg_9774;
reg   [0:0] tmp_56_reg_9774_pp0_iter6_reg;
reg   [31:0] distance_3_reg_9779;
reg   [31:0] distance_4_reg_9784;
wire   [31:0] sc_2_fu_5954_p3;
reg   [31:0] sc_2_reg_9789;
reg   [31:0] tmp_score_load_reg_9796;
reg   [0:0] tmp_59_reg_9803;
wire   [31:0] tmp_other_4_fu_6061_p3;
reg   [31:0] tmp_other_4_reg_9808;
wire   [31:0] tmp_score_4_fu_6068_p3;
reg   [31:0] tmp_score_4_reg_9814;
reg   [31:0] score_load_reg_9822;
reg   [31:0] merge_1_4_reg_9830;
reg   [31:0] merge_2_1_reg_9837;
reg   [0:0] tmp_62_reg_9843;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter8_stage1;
wire    ap_block_pp0_stage2_subdone;
reg   [31:0] merge_1_fu_1014;
wire   [31:0] merge_1_7_fu_6240_p3;
wire    ap_loop_init;
wire    ap_block_pp0_stage1;
reg   [31:0] merge_2_fu_1018;
wire   [31:0] merge_2_6_fu_6234_p3;
reg   [31:0] score_fu_1022;
wire   [31:0] score_3_fu_6228_p3;
wire    ap_block_pp0_stage0;
reg   [31:0] merge_1_1_fu_1026;
wire   [31:0] i_real_2_fu_5615_p3;
reg   [31:0] k_real_4_fu_1030;
wire   [31:0] k_real_3_fu_5607_p3;
reg   [31:0] tmp_score_fu_1034;
wire   [31:0] tmp_score_3_fu_6084_p3;
wire    ap_block_pp0_stage5;
reg   [31:0] tmp_other_fu_1038;
wire   [31:0] tmp_other_3_fu_6078_p3;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage1_01001;
reg   [31:0] grp_fu_3936_p0;
reg   [31:0] grp_fu_3936_p1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage6;
reg   [31:0] grp_fu_3940_p0;
reg   [31:0] grp_fu_3940_p1;
reg   [31:0] grp_fu_3944_p0;
reg   [31:0] grp_fu_3944_p1;
reg   [31:0] grp_fu_3948_p0;
reg   [31:0] grp_fu_3948_p1;
reg   [31:0] grp_fu_3952_p0;
reg   [31:0] grp_fu_3952_p1;
reg   [31:0] grp_fu_3957_p0;
reg   [31:0] grp_fu_3957_p1;
reg   [31:0] grp_fu_3961_p0;
reg   [31:0] grp_fu_3961_p1;
reg   [31:0] grp_fu_3965_p0;
reg   [31:0] grp_fu_3965_p1;
reg   [31:0] grp_fu_3969_p0;
reg   [31:0] grp_fu_3969_p1;
wire   [4:0] trunc_ln104_fu_4046_p1;
wire   [4:0] trunc_ln104_1_fu_4088_p1;
wire   [31:0] bitcast_ln112_fu_5194_p1;
wire   [31:0] bitcast_ln112_1_fu_5211_p1;
wire   [7:0] tmp_30_fu_5197_p4;
wire   [22:0] trunc_ln112_fu_5207_p1;
wire   [7:0] tmp_31_fu_5214_p4;
wire   [22:0] trunc_ln112_1_fu_5224_p1;
wire   [31:0] bitcast_ln112_2_fu_5252_p1;
wire   [31:0] bitcast_ln112_3_fu_5269_p1;
wire   [7:0] tmp_35_fu_5255_p4;
wire   [22:0] trunc_ln112_2_fu_5265_p1;
wire   [7:0] tmp_36_fu_5272_p4;
wire   [22:0] trunc_ln112_3_fu_5282_p1;
wire   [0:0] or_ln112_1_fu_5314_p2;
wire   [0:0] and_ln112_fu_5318_p2;
wire   [0:0] or_ln112_fu_5310_p2;
wire   [0:0] or_ln112_3_fu_5333_p2;
wire   [0:0] and_ln112_2_fu_5337_p2;
wire   [0:0] or_ln112_2_fu_5329_p2;
wire   [31:0] bitcast_ln112_4_fu_5348_p1;
wire   [31:0] bitcast_ln112_5_fu_5365_p1;
wire   [7:0] tmp_40_fu_5351_p4;
wire   [22:0] trunc_ln112_4_fu_5361_p1;
wire   [7:0] tmp_41_fu_5368_p4;
wire   [22:0] trunc_ln112_5_fu_5378_p1;
wire   [0:0] or_ln112_4_fu_5406_p2;
wire   [0:0] or_ln112_5_fu_5410_p2;
wire   [0:0] and_ln112_4_fu_5414_p2;
wire   [31:0] bitcast_ln112_6_fu_5425_p1;
wire   [31:0] bitcast_ln112_7_fu_5442_p1;
wire   [7:0] tmp_45_fu_5428_p4;
wire   [22:0] trunc_ln112_6_fu_5438_p1;
wire   [0:0] icmp_ln112_13_fu_5465_p2;
wire   [0:0] icmp_ln112_12_fu_5459_p2;
wire   [7:0] tmp_46_fu_5445_p4;
wire   [22:0] trunc_ln112_7_fu_5455_p1;
wire   [0:0] icmp_ln112_15_fu_5483_p2;
wire   [0:0] icmp_ln112_14_fu_5477_p2;
wire   [0:0] or_ln112_6_fu_5471_p2;
wire   [0:0] or_ln112_7_fu_5489_p2;
wire   [0:0] and_ln112_6_fu_5495_p2;
wire   [31:0] bitcast_ln112_8_fu_5506_p1;
wire   [31:0] bitcast_ln112_9_fu_5523_p1;
wire   [7:0] tmp_50_fu_5509_p4;
wire   [22:0] trunc_ln112_8_fu_5519_p1;
wire   [0:0] icmp_ln112_17_fu_5546_p2;
wire   [0:0] icmp_ln112_16_fu_5540_p2;
wire   [7:0] tmp_51_fu_5526_p4;
wire   [22:0] trunc_ln112_9_fu_5536_p1;
wire   [0:0] icmp_ln112_19_fu_5564_p2;
wire   [0:0] icmp_ln112_18_fu_5558_p2;
wire   [0:0] or_ln112_8_fu_5552_p2;
wire   [0:0] or_ln112_9_fu_5570_p2;
wire   [0:0] and_ln112_8_fu_5576_p2;
wire   [31:0] k_real_fu_5597_p2;
wire   [31:0] k_real_2_fu_5602_p2;
wire   [31:0] i_real_fu_5592_p2;
wire   [31:0] bitcast_ln116_fu_5659_p1;
wire   [7:0] tmp_33_fu_5662_p4;
wire   [22:0] trunc_ln116_fu_5672_p1;
wire   [0:0] icmp_ln116_1_fu_5682_p2;
wire   [0:0] icmp_ln116_fu_5676_p2;
wire   [0:0] or_ln116_fu_5688_p2;
wire   [0:0] and_ln116_fu_5694_p2;
wire   [31:0] bitcast_ln116_1_fu_5706_p1;
wire   [7:0] tmp_38_fu_5709_p4;
wire   [22:0] trunc_ln116_1_fu_5719_p1;
wire   [0:0] icmp_ln116_3_fu_5729_p2;
wire   [0:0] icmp_ln116_2_fu_5723_p2;
wire   [0:0] or_ln116_1_fu_5735_p2;
wire   [0:0] and_ln116_1_fu_5741_p2;
wire   [31:0] bitcast_ln116_2_fu_5760_p1;
wire   [7:0] tmp_43_fu_5763_p4;
wire   [22:0] trunc_ln116_2_fu_5773_p1;
wire   [0:0] icmp_ln116_5_fu_5783_p2;
wire   [0:0] icmp_ln116_4_fu_5777_p2;
wire   [0:0] or_ln116_2_fu_5789_p2;
wire   [0:0] and_ln116_2_fu_5795_p2;
wire   [31:0] bitcast_ln116_3_fu_5807_p1;
wire   [7:0] tmp_48_fu_5810_p4;
wire   [22:0] trunc_ln116_3_fu_5820_p1;
wire   [0:0] icmp_ln116_7_fu_5830_p2;
wire   [0:0] icmp_ln116_6_fu_5824_p2;
wire   [0:0] or_ln116_3_fu_5836_p2;
wire   [0:0] and_ln116_3_fu_5842_p2;
wire   [31:0] bitcast_ln116_4_fu_5854_p1;
wire   [7:0] tmp_53_fu_5857_p4;
wire   [22:0] trunc_ln116_4_fu_5867_p1;
wire   [0:0] icmp_ln116_9_fu_5877_p2;
wire   [0:0] icmp_ln116_8_fu_5871_p2;
wire   [0:0] or_ln116_4_fu_5883_p2;
wire   [0:0] and_ln116_4_fu_5889_p2;
wire   [31:0] bitcast_ln122_fu_5901_p1;
wire   [7:0] tmp_55_fu_5904_p4;
wire   [22:0] trunc_ln122_fu_5914_p1;
wire   [0:0] icmp_ln122_1_fu_5924_p2;
wire   [0:0] icmp_ln122_fu_5918_p2;
wire   [0:0] or_ln122_fu_5930_p2;
wire   [31:0] bitcast_ln126_fu_5941_p1;
wire   [31:0] xor_ln126_fu_5944_p2;
wire   [0:0] and_ln122_fu_5936_p2;
wire   [31:0] sc_fu_5950_p1;
wire   [31:0] bitcast_ln130_fu_5974_p1;
wire   [31:0] bitcast_ln130_1_fu_5991_p1;
wire   [7:0] tmp_57_fu_5977_p4;
wire   [22:0] trunc_ln130_fu_5987_p1;
wire   [0:0] icmp_ln130_2_fu_6014_p2;
wire   [0:0] icmp_ln130_1_fu_6008_p2;
wire   [7:0] tmp_58_fu_5994_p4;
wire   [22:0] trunc_ln130_1_fu_6004_p1;
wire   [0:0] icmp_ln130_4_fu_6032_p2;
wire   [0:0] icmp_ln130_3_fu_6026_p2;
wire   [0:0] or_ln130_1_fu_6020_p2;
wire   [0:0] or_ln130_2_fu_6038_p2;
wire   [0:0] and_ln130_fu_6044_p2;
wire   [0:0] icmp_ln130_fu_5968_p2;
wire   [0:0] and_ln130_1_fu_6050_p2;
wire   [0:0] or_ln130_fu_6055_p2;
wire   [31:0] bitcast_ln139_fu_6123_p1;
wire   [31:0] bitcast_ln139_1_fu_6140_p1;
wire   [7:0] tmp_60_fu_6126_p4;
wire   [22:0] trunc_ln139_fu_6136_p1;
wire   [0:0] icmp_ln139_1_fu_6163_p2;
wire   [0:0] icmp_ln139_fu_6157_p2;
wire   [7:0] tmp_61_fu_6143_p4;
wire   [22:0] trunc_ln139_1_fu_6153_p1;
wire   [0:0] icmp_ln139_3_fu_6181_p2;
wire   [0:0] icmp_ln139_2_fu_6175_p2;
wire   [0:0] or_ln139_1_fu_6169_p2;
wire   [0:0] or_ln139_2_fu_6187_p2;
wire   [0:0] and_ln139_fu_6193_p2;
wire   [0:0] tmp_fu_6116_p3;
wire   [0:0] and_ln139_1_fu_6199_p2;
wire   [0:0] or_ln139_fu_6204_p2;
wire   [31:0] score_2_fu_6210_p3;
wire   [31:0] merge_2_5_fu_6216_p3;
wire   [31:0] merge_1_6_fu_6222_p3;
reg   [1:0] grp_fu_3936_opcode;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage5_00001;
wire    ap_block_pp0_stage7_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage0_00001;
reg   [1:0] grp_fu_3944_opcode;
reg   [1:0] grp_fu_3948_opcode;
reg   [4:0] grp_fu_3965_opcode;
reg   [4:0] grp_fu_3969_opcode;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_idle_pp0_0to7;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [7:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to8;
reg    ap_done_pending_pp0;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_8_full_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3940_p0),
    .din1(grp_fu_3940_p1),
    .ce(1'b1),
    .dout(grp_fu_3940_p2)
);

FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_8_full_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3944_p0),
    .din1(grp_fu_3944_p1),
    .opcode(grp_fu_3944_opcode),
    .ce(1'b1),
    .dout(grp_fu_3944_p2)
);

FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_8_full_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3948_p0),
    .din1(grp_fu_3948_p1),
    .opcode(grp_fu_3948_opcode),
    .ce(1'b1),
    .dout(grp_fu_3948_p2)
);

FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_8_full_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3952_p0),
    .din1(grp_fu_3952_p1),
    .ce(1'b1),
    .dout(grp_fu_3952_p2)
);

FaultDetector_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3961_p0),
    .din1(grp_fu_3961_p1),
    .ce(1'b1),
    .dout(grp_fu_3961_p2)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U19(
    .din0(regions_center_0_0_0),
    .din1(regions_center_1_0_0),
    .din2(regions_center_2_0_0),
    .din3(regions_center_3_0_0),
    .din4(regions_center_4_0_0),
    .din5(regions_center_5_0_0),
    .din6(regions_center_6_0_0),
    .din7(regions_center_7_0_0),
    .din8(regions_center_8_0_0),
    .din9(regions_center_9_0_0),
    .din10(regions_center_10_0_0),
    .din11(regions_center_11_0_0),
    .din12(regions_center_12_0_0),
    .din13(regions_center_13_0_0),
    .din14(regions_center_14_0_0),
    .din15(regions_center_15_0_0),
    .din16(regions_center_16_0_0),
    .din17(regions_center_17_0_0),
    .din18(regions_center_18_0_0),
    .din19(regions_center_19_0_0),
    .din20(regions_center_20_0_0),
    .din21(regions_center_21_0_0),
    .din22(regions_center_22_0_0),
    .din23(regions_center_23_0_0),
    .din24(regions_center_24_0_0),
    .din25(regions_center_25_0_0),
    .din26(regions_center_26_0_0),
    .din27(regions_center_27_0_0),
    .din28(regions_center_28_0_0),
    .din29(regions_center_29_0_0),
    .din30(regions_center_30_0_0),
    .din31(regions_center_31_0_0),
    .din32(trunc_ln104_fu_4046_p1),
    .dout(tmp_s_fu_4050_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U20(
    .din0(regions_center_0_0_0),
    .din1(regions_center_1_0_0),
    .din2(regions_center_2_0_0),
    .din3(regions_center_3_0_0),
    .din4(regions_center_4_0_0),
    .din5(regions_center_5_0_0),
    .din6(regions_center_6_0_0),
    .din7(regions_center_7_0_0),
    .din8(regions_center_8_0_0),
    .din9(regions_center_9_0_0),
    .din10(regions_center_10_0_0),
    .din11(regions_center_11_0_0),
    .din12(regions_center_12_0_0),
    .din13(regions_center_13_0_0),
    .din14(regions_center_14_0_0),
    .din15(regions_center_15_0_0),
    .din16(regions_center_16_0_0),
    .din17(regions_center_17_0_0),
    .din18(regions_center_18_0_0),
    .din19(regions_center_19_0_0),
    .din20(regions_center_20_0_0),
    .din21(regions_center_21_0_0),
    .din22(regions_center_22_0_0),
    .din23(regions_center_23_0_0),
    .din24(regions_center_24_0_0),
    .din25(regions_center_25_0_0),
    .din26(regions_center_26_0_0),
    .din27(regions_center_27_0_0),
    .din28(regions_center_28_0_0),
    .din29(regions_center_29_0_0),
    .din30(regions_center_30_0_0),
    .din31(regions_center_31_0_0),
    .din32(trunc_ln104_1_fu_4088_p1),
    .dout(tmp_1_fu_4092_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U21(
    .din0(regions_max_0_0_0),
    .din1(regions_max_1_0_0),
    .din2(regions_max_2_0_0),
    .din3(regions_max_3_0_0),
    .din4(regions_max_4_0_0),
    .din5(regions_max_5_0_0),
    .din6(regions_max_6_0_0),
    .din7(regions_max_7_0_0),
    .din8(regions_max_8_0_0),
    .din9(regions_max_9_0_0),
    .din10(regions_max_10_0_0),
    .din11(regions_max_11_0_0),
    .din12(regions_max_12_0_0),
    .din13(regions_max_13_0_0),
    .din14(regions_max_14_0_0),
    .din15(regions_max_15_0_0),
    .din16(regions_max_16_0_0),
    .din17(regions_max_17_0_0),
    .din18(regions_max_18_0_0),
    .din19(regions_max_19_0_0),
    .din20(regions_max_20_0_0),
    .din21(regions_max_21_0_0),
    .din22(regions_max_22_0_0),
    .din23(regions_max_23_0_0),
    .din24(regions_max_24_0_0),
    .din25(regions_max_25_0_0),
    .din26(regions_max_26_0_0),
    .din27(regions_max_27_0_0),
    .din28(regions_max_28_0_0),
    .din29(regions_max_29_0_0),
    .din30(regions_max_30_0_0),
    .din31(regions_max_31_0_0),
    .din32(trunc_ln104_fu_4046_p1),
    .dout(tmp_2_fu_4130_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U22(
    .din0(regions_min_0_0_0),
    .din1(regions_min_1_0_0),
    .din2(regions_min_2_0_0),
    .din3(regions_min_3_0_0),
    .din4(regions_min_4_0_0),
    .din5(regions_min_5_0_0),
    .din6(regions_min_6_0_0),
    .din7(regions_min_7_0_0),
    .din8(regions_min_8_0_0),
    .din9(regions_min_9_0_0),
    .din10(regions_min_10_0_0),
    .din11(regions_min_11_0_0),
    .din12(regions_min_12_0_0),
    .din13(regions_min_13_0_0),
    .din14(regions_min_14_0_0),
    .din15(regions_min_15_0_0),
    .din16(regions_min_16_0_0),
    .din17(regions_min_17_0_0),
    .din18(regions_min_18_0_0),
    .din19(regions_min_19_0_0),
    .din20(regions_min_20_0_0),
    .din21(regions_min_21_0_0),
    .din22(regions_min_22_0_0),
    .din23(regions_min_23_0_0),
    .din24(regions_min_24_0_0),
    .din25(regions_min_25_0_0),
    .din26(regions_min_26_0_0),
    .din27(regions_min_27_0_0),
    .din28(regions_min_28_0_0),
    .din29(regions_min_29_0_0),
    .din30(regions_min_30_0_0),
    .din31(regions_min_31_0_0),
    .din32(trunc_ln104_fu_4046_p1),
    .dout(tmp_3_fu_4168_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U23(
    .din0(regions_max_0_0_0),
    .din1(regions_max_1_0_0),
    .din2(regions_max_2_0_0),
    .din3(regions_max_3_0_0),
    .din4(regions_max_4_0_0),
    .din5(regions_max_5_0_0),
    .din6(regions_max_6_0_0),
    .din7(regions_max_7_0_0),
    .din8(regions_max_8_0_0),
    .din9(regions_max_9_0_0),
    .din10(regions_max_10_0_0),
    .din11(regions_max_11_0_0),
    .din12(regions_max_12_0_0),
    .din13(regions_max_13_0_0),
    .din14(regions_max_14_0_0),
    .din15(regions_max_15_0_0),
    .din16(regions_max_16_0_0),
    .din17(regions_max_17_0_0),
    .din18(regions_max_18_0_0),
    .din19(regions_max_19_0_0),
    .din20(regions_max_20_0_0),
    .din21(regions_max_21_0_0),
    .din22(regions_max_22_0_0),
    .din23(regions_max_23_0_0),
    .din24(regions_max_24_0_0),
    .din25(regions_max_25_0_0),
    .din26(regions_max_26_0_0),
    .din27(regions_max_27_0_0),
    .din28(regions_max_28_0_0),
    .din29(regions_max_29_0_0),
    .din30(regions_max_30_0_0),
    .din31(regions_max_31_0_0),
    .din32(trunc_ln104_1_fu_4088_p1),
    .dout(tmp_4_fu_4206_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U24(
    .din0(regions_min_0_0_0),
    .din1(regions_min_1_0_0),
    .din2(regions_min_2_0_0),
    .din3(regions_min_3_0_0),
    .din4(regions_min_4_0_0),
    .din5(regions_min_5_0_0),
    .din6(regions_min_6_0_0),
    .din7(regions_min_7_0_0),
    .din8(regions_min_8_0_0),
    .din9(regions_min_9_0_0),
    .din10(regions_min_10_0_0),
    .din11(regions_min_11_0_0),
    .din12(regions_min_12_0_0),
    .din13(regions_min_13_0_0),
    .din14(regions_min_14_0_0),
    .din15(regions_min_15_0_0),
    .din16(regions_min_16_0_0),
    .din17(regions_min_17_0_0),
    .din18(regions_min_18_0_0),
    .din19(regions_min_19_0_0),
    .din20(regions_min_20_0_0),
    .din21(regions_min_21_0_0),
    .din22(regions_min_22_0_0),
    .din23(regions_min_23_0_0),
    .din24(regions_min_24_0_0),
    .din25(regions_min_25_0_0),
    .din26(regions_min_26_0_0),
    .din27(regions_min_27_0_0),
    .din28(regions_min_28_0_0),
    .din29(regions_min_29_0_0),
    .din30(regions_min_30_0_0),
    .din31(regions_min_31_0_0),
    .din32(trunc_ln104_1_fu_4088_p1),
    .dout(tmp_5_fu_4244_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U25(
    .din0(regions_center_0_1_0),
    .din1(regions_center_1_1_0),
    .din2(regions_center_2_1_0),
    .din3(regions_center_3_1_0),
    .din4(regions_center_4_1_0),
    .din5(regions_center_5_1_0),
    .din6(regions_center_6_1_0),
    .din7(regions_center_7_1_0),
    .din8(regions_center_8_1_0),
    .din9(regions_center_9_1_0),
    .din10(regions_center_10_1_0),
    .din11(regions_center_11_1_0),
    .din12(regions_center_12_1_0),
    .din13(regions_center_13_1_0),
    .din14(regions_center_14_1_0),
    .din15(regions_center_15_1_0),
    .din16(regions_center_16_1_0),
    .din17(regions_center_17_1_0),
    .din18(regions_center_18_1_0),
    .din19(regions_center_19_1_0),
    .din20(regions_center_20_1_0),
    .din21(regions_center_21_1_0),
    .din22(regions_center_22_1_0),
    .din23(regions_center_23_1_0),
    .din24(regions_center_24_1_0),
    .din25(regions_center_25_1_0),
    .din26(regions_center_26_1_0),
    .din27(regions_center_27_1_0),
    .din28(regions_center_28_1_0),
    .din29(regions_center_29_1_0),
    .din30(regions_center_30_1_0),
    .din31(regions_center_31_1_0),
    .din32(trunc_ln104_fu_4046_p1),
    .dout(tmp_6_fu_4282_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U26(
    .din0(regions_center_0_1_0),
    .din1(regions_center_1_1_0),
    .din2(regions_center_2_1_0),
    .din3(regions_center_3_1_0),
    .din4(regions_center_4_1_0),
    .din5(regions_center_5_1_0),
    .din6(regions_center_6_1_0),
    .din7(regions_center_7_1_0),
    .din8(regions_center_8_1_0),
    .din9(regions_center_9_1_0),
    .din10(regions_center_10_1_0),
    .din11(regions_center_11_1_0),
    .din12(regions_center_12_1_0),
    .din13(regions_center_13_1_0),
    .din14(regions_center_14_1_0),
    .din15(regions_center_15_1_0),
    .din16(regions_center_16_1_0),
    .din17(regions_center_17_1_0),
    .din18(regions_center_18_1_0),
    .din19(regions_center_19_1_0),
    .din20(regions_center_20_1_0),
    .din21(regions_center_21_1_0),
    .din22(regions_center_22_1_0),
    .din23(regions_center_23_1_0),
    .din24(regions_center_24_1_0),
    .din25(regions_center_25_1_0),
    .din26(regions_center_26_1_0),
    .din27(regions_center_27_1_0),
    .din28(regions_center_28_1_0),
    .din29(regions_center_29_1_0),
    .din30(regions_center_30_1_0),
    .din31(regions_center_31_1_0),
    .din32(trunc_ln104_1_fu_4088_p1),
    .dout(tmp_7_fu_4320_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U27(
    .din0(regions_max_0_1_0),
    .din1(regions_max_1_1_0),
    .din2(regions_max_2_1_0),
    .din3(regions_max_3_1_0),
    .din4(regions_max_4_1_0),
    .din5(regions_max_5_1_0),
    .din6(regions_max_6_1_0),
    .din7(regions_max_7_1_0),
    .din8(regions_max_8_1_0),
    .din9(regions_max_9_1_0),
    .din10(regions_max_10_1_0),
    .din11(regions_max_11_1_0),
    .din12(regions_max_12_1_0),
    .din13(regions_max_13_1_0),
    .din14(regions_max_14_1_0),
    .din15(regions_max_15_1_0),
    .din16(regions_max_16_1_0),
    .din17(regions_max_17_1_0),
    .din18(regions_max_18_1_0),
    .din19(regions_max_19_1_0),
    .din20(regions_max_20_1_0),
    .din21(regions_max_21_1_0),
    .din22(regions_max_22_1_0),
    .din23(regions_max_23_1_0),
    .din24(regions_max_24_1_0),
    .din25(regions_max_25_1_0),
    .din26(regions_max_26_1_0),
    .din27(regions_max_27_1_0),
    .din28(regions_max_28_1_0),
    .din29(regions_max_29_1_0),
    .din30(regions_max_30_1_0),
    .din31(regions_max_31_1_0),
    .din32(trunc_ln104_fu_4046_p1),
    .dout(tmp_8_fu_4358_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U28(
    .din0(regions_min_0_1_0),
    .din1(regions_min_1_1_0),
    .din2(regions_min_2_1_0),
    .din3(regions_min_3_1_0),
    .din4(regions_min_4_1_0),
    .din5(regions_min_5_1_0),
    .din6(regions_min_6_1_0),
    .din7(regions_min_7_1_0),
    .din8(regions_min_8_1_0),
    .din9(regions_min_9_1_0),
    .din10(regions_min_10_1_0),
    .din11(regions_min_11_1_0),
    .din12(regions_min_12_1_0),
    .din13(regions_min_13_1_0),
    .din14(regions_min_14_1_0),
    .din15(regions_min_15_1_0),
    .din16(regions_min_16_1_0),
    .din17(regions_min_17_1_0),
    .din18(regions_min_18_1_0),
    .din19(regions_min_19_1_0),
    .din20(regions_min_20_1_0),
    .din21(regions_min_21_1_0),
    .din22(regions_min_22_1_0),
    .din23(regions_min_23_1_0),
    .din24(regions_min_24_1_0),
    .din25(regions_min_25_1_0),
    .din26(regions_min_26_1_0),
    .din27(regions_min_27_1_0),
    .din28(regions_min_28_1_0),
    .din29(regions_min_29_1_0),
    .din30(regions_min_30_1_0),
    .din31(regions_min_31_1_0),
    .din32(trunc_ln104_fu_4046_p1),
    .dout(tmp_9_fu_4396_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U29(
    .din0(regions_max_0_1_0),
    .din1(regions_max_1_1_0),
    .din2(regions_max_2_1_0),
    .din3(regions_max_3_1_0),
    .din4(regions_max_4_1_0),
    .din5(regions_max_5_1_0),
    .din6(regions_max_6_1_0),
    .din7(regions_max_7_1_0),
    .din8(regions_max_8_1_0),
    .din9(regions_max_9_1_0),
    .din10(regions_max_10_1_0),
    .din11(regions_max_11_1_0),
    .din12(regions_max_12_1_0),
    .din13(regions_max_13_1_0),
    .din14(regions_max_14_1_0),
    .din15(regions_max_15_1_0),
    .din16(regions_max_16_1_0),
    .din17(regions_max_17_1_0),
    .din18(regions_max_18_1_0),
    .din19(regions_max_19_1_0),
    .din20(regions_max_20_1_0),
    .din21(regions_max_21_1_0),
    .din22(regions_max_22_1_0),
    .din23(regions_max_23_1_0),
    .din24(regions_max_24_1_0),
    .din25(regions_max_25_1_0),
    .din26(regions_max_26_1_0),
    .din27(regions_max_27_1_0),
    .din28(regions_max_28_1_0),
    .din29(regions_max_29_1_0),
    .din30(regions_max_30_1_0),
    .din31(regions_max_31_1_0),
    .din32(trunc_ln104_1_fu_4088_p1),
    .dout(tmp_10_fu_4434_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U30(
    .din0(regions_min_0_1_0),
    .din1(regions_min_1_1_0),
    .din2(regions_min_2_1_0),
    .din3(regions_min_3_1_0),
    .din4(regions_min_4_1_0),
    .din5(regions_min_5_1_0),
    .din6(regions_min_6_1_0),
    .din7(regions_min_7_1_0),
    .din8(regions_min_8_1_0),
    .din9(regions_min_9_1_0),
    .din10(regions_min_10_1_0),
    .din11(regions_min_11_1_0),
    .din12(regions_min_12_1_0),
    .din13(regions_min_13_1_0),
    .din14(regions_min_14_1_0),
    .din15(regions_min_15_1_0),
    .din16(regions_min_16_1_0),
    .din17(regions_min_17_1_0),
    .din18(regions_min_18_1_0),
    .din19(regions_min_19_1_0),
    .din20(regions_min_20_1_0),
    .din21(regions_min_21_1_0),
    .din22(regions_min_22_1_0),
    .din23(regions_min_23_1_0),
    .din24(regions_min_24_1_0),
    .din25(regions_min_25_1_0),
    .din26(regions_min_26_1_0),
    .din27(regions_min_27_1_0),
    .din28(regions_min_28_1_0),
    .din29(regions_min_29_1_0),
    .din30(regions_min_30_1_0),
    .din31(regions_min_31_1_0),
    .din32(trunc_ln104_1_fu_4088_p1),
    .dout(tmp_11_fu_4472_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U31(
    .din0(regions_center_0_2_0),
    .din1(regions_center_1_2_0),
    .din2(regions_center_2_2_0),
    .din3(regions_center_3_2_0),
    .din4(regions_center_4_2_0),
    .din5(regions_center_5_2_0),
    .din6(regions_center_6_2_0),
    .din7(regions_center_7_2_0),
    .din8(regions_center_8_2_0),
    .din9(regions_center_9_2_0),
    .din10(regions_center_10_2_0),
    .din11(regions_center_11_2_0),
    .din12(regions_center_12_2_0),
    .din13(regions_center_13_2_0),
    .din14(regions_center_14_2_0),
    .din15(regions_center_15_2_0),
    .din16(regions_center_16_2_0),
    .din17(regions_center_17_2_0),
    .din18(regions_center_18_2_0),
    .din19(regions_center_19_2_0),
    .din20(regions_center_20_2_0),
    .din21(regions_center_21_2_0),
    .din22(regions_center_22_2_0),
    .din23(regions_center_23_2_0),
    .din24(regions_center_24_2_0),
    .din25(regions_center_25_2_0),
    .din26(regions_center_26_2_0),
    .din27(regions_center_27_2_0),
    .din28(regions_center_28_2_0),
    .din29(regions_center_29_2_0),
    .din30(regions_center_30_2_0),
    .din31(regions_center_31_2_0),
    .din32(trunc_ln104_fu_4046_p1),
    .dout(tmp_12_fu_4510_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U32(
    .din0(regions_center_0_2_0),
    .din1(regions_center_1_2_0),
    .din2(regions_center_2_2_0),
    .din3(regions_center_3_2_0),
    .din4(regions_center_4_2_0),
    .din5(regions_center_5_2_0),
    .din6(regions_center_6_2_0),
    .din7(regions_center_7_2_0),
    .din8(regions_center_8_2_0),
    .din9(regions_center_9_2_0),
    .din10(regions_center_10_2_0),
    .din11(regions_center_11_2_0),
    .din12(regions_center_12_2_0),
    .din13(regions_center_13_2_0),
    .din14(regions_center_14_2_0),
    .din15(regions_center_15_2_0),
    .din16(regions_center_16_2_0),
    .din17(regions_center_17_2_0),
    .din18(regions_center_18_2_0),
    .din19(regions_center_19_2_0),
    .din20(regions_center_20_2_0),
    .din21(regions_center_21_2_0),
    .din22(regions_center_22_2_0),
    .din23(regions_center_23_2_0),
    .din24(regions_center_24_2_0),
    .din25(regions_center_25_2_0),
    .din26(regions_center_26_2_0),
    .din27(regions_center_27_2_0),
    .din28(regions_center_28_2_0),
    .din29(regions_center_29_2_0),
    .din30(regions_center_30_2_0),
    .din31(regions_center_31_2_0),
    .din32(trunc_ln104_1_fu_4088_p1),
    .dout(tmp_13_fu_4548_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U33(
    .din0(regions_max_0_2_0),
    .din1(regions_max_1_2_0),
    .din2(regions_max_2_2_0),
    .din3(regions_max_3_2_0),
    .din4(regions_max_4_2_0),
    .din5(regions_max_5_2_0),
    .din6(regions_max_6_2_0),
    .din7(regions_max_7_2_0),
    .din8(regions_max_8_2_0),
    .din9(regions_max_9_2_0),
    .din10(regions_max_10_2_0),
    .din11(regions_max_11_2_0),
    .din12(regions_max_12_2_0),
    .din13(regions_max_13_2_0),
    .din14(regions_max_14_2_0),
    .din15(regions_max_15_2_0),
    .din16(regions_max_16_2_0),
    .din17(regions_max_17_2_0),
    .din18(regions_max_18_2_0),
    .din19(regions_max_19_2_0),
    .din20(regions_max_20_2_0),
    .din21(regions_max_21_2_0),
    .din22(regions_max_22_2_0),
    .din23(regions_max_23_2_0),
    .din24(regions_max_24_2_0),
    .din25(regions_max_25_2_0),
    .din26(regions_max_26_2_0),
    .din27(regions_max_27_2_0),
    .din28(regions_max_28_2_0),
    .din29(regions_max_29_2_0),
    .din30(regions_max_30_2_0),
    .din31(regions_max_31_2_0),
    .din32(trunc_ln104_fu_4046_p1),
    .dout(tmp_14_fu_4586_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U34(
    .din0(regions_min_0_2_0),
    .din1(regions_min_1_2_0),
    .din2(regions_min_2_2_0),
    .din3(regions_min_3_2_0),
    .din4(regions_min_4_2_0),
    .din5(regions_min_5_2_0),
    .din6(regions_min_6_2_0),
    .din7(regions_min_7_2_0),
    .din8(regions_min_8_2_0),
    .din9(regions_min_9_2_0),
    .din10(regions_min_10_2_0),
    .din11(regions_min_11_2_0),
    .din12(regions_min_12_2_0),
    .din13(regions_min_13_2_0),
    .din14(regions_min_14_2_0),
    .din15(regions_min_15_2_0),
    .din16(regions_min_16_2_0),
    .din17(regions_min_17_2_0),
    .din18(regions_min_18_2_0),
    .din19(regions_min_19_2_0),
    .din20(regions_min_20_2_0),
    .din21(regions_min_21_2_0),
    .din22(regions_min_22_2_0),
    .din23(regions_min_23_2_0),
    .din24(regions_min_24_2_0),
    .din25(regions_min_25_2_0),
    .din26(regions_min_26_2_0),
    .din27(regions_min_27_2_0),
    .din28(regions_min_28_2_0),
    .din29(regions_min_29_2_0),
    .din30(regions_min_30_2_0),
    .din31(regions_min_31_2_0),
    .din32(trunc_ln104_fu_4046_p1),
    .dout(tmp_15_fu_4624_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U35(
    .din0(regions_max_0_2_0),
    .din1(regions_max_1_2_0),
    .din2(regions_max_2_2_0),
    .din3(regions_max_3_2_0),
    .din4(regions_max_4_2_0),
    .din5(regions_max_5_2_0),
    .din6(regions_max_6_2_0),
    .din7(regions_max_7_2_0),
    .din8(regions_max_8_2_0),
    .din9(regions_max_9_2_0),
    .din10(regions_max_10_2_0),
    .din11(regions_max_11_2_0),
    .din12(regions_max_12_2_0),
    .din13(regions_max_13_2_0),
    .din14(regions_max_14_2_0),
    .din15(regions_max_15_2_0),
    .din16(regions_max_16_2_0),
    .din17(regions_max_17_2_0),
    .din18(regions_max_18_2_0),
    .din19(regions_max_19_2_0),
    .din20(regions_max_20_2_0),
    .din21(regions_max_21_2_0),
    .din22(regions_max_22_2_0),
    .din23(regions_max_23_2_0),
    .din24(regions_max_24_2_0),
    .din25(regions_max_25_2_0),
    .din26(regions_max_26_2_0),
    .din27(regions_max_27_2_0),
    .din28(regions_max_28_2_0),
    .din29(regions_max_29_2_0),
    .din30(regions_max_30_2_0),
    .din31(regions_max_31_2_0),
    .din32(trunc_ln104_1_fu_4088_p1),
    .dout(tmp_16_fu_4662_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U36(
    .din0(regions_min_0_2_0),
    .din1(regions_min_1_2_0),
    .din2(regions_min_2_2_0),
    .din3(regions_min_3_2_0),
    .din4(regions_min_4_2_0),
    .din5(regions_min_5_2_0),
    .din6(regions_min_6_2_0),
    .din7(regions_min_7_2_0),
    .din8(regions_min_8_2_0),
    .din9(regions_min_9_2_0),
    .din10(regions_min_10_2_0),
    .din11(regions_min_11_2_0),
    .din12(regions_min_12_2_0),
    .din13(regions_min_13_2_0),
    .din14(regions_min_14_2_0),
    .din15(regions_min_15_2_0),
    .din16(regions_min_16_2_0),
    .din17(regions_min_17_2_0),
    .din18(regions_min_18_2_0),
    .din19(regions_min_19_2_0),
    .din20(regions_min_20_2_0),
    .din21(regions_min_21_2_0),
    .din22(regions_min_22_2_0),
    .din23(regions_min_23_2_0),
    .din24(regions_min_24_2_0),
    .din25(regions_min_25_2_0),
    .din26(regions_min_26_2_0),
    .din27(regions_min_27_2_0),
    .din28(regions_min_28_2_0),
    .din29(regions_min_29_2_0),
    .din30(regions_min_30_2_0),
    .din31(regions_min_31_2_0),
    .din32(trunc_ln104_1_fu_4088_p1),
    .dout(tmp_17_fu_4700_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U37(
    .din0(regions_center_0_3_0),
    .din1(regions_center_1_3_0),
    .din2(regions_center_2_3_0),
    .din3(regions_center_3_3_0),
    .din4(regions_center_4_3_0),
    .din5(regions_center_5_3_0),
    .din6(regions_center_6_3_0),
    .din7(regions_center_7_3_0),
    .din8(regions_center_8_3_0),
    .din9(regions_center_9_3_0),
    .din10(regions_center_10_3_0),
    .din11(regions_center_11_3_0),
    .din12(regions_center_12_3_0),
    .din13(regions_center_13_3_0),
    .din14(regions_center_14_3_0),
    .din15(regions_center_15_3_0),
    .din16(regions_center_16_3_0),
    .din17(regions_center_17_3_0),
    .din18(regions_center_18_3_0),
    .din19(regions_center_19_3_0),
    .din20(regions_center_20_3_0),
    .din21(regions_center_21_3_0),
    .din22(regions_center_22_3_0),
    .din23(regions_center_23_3_0),
    .din24(regions_center_24_3_0),
    .din25(regions_center_25_3_0),
    .din26(regions_center_26_3_0),
    .din27(regions_center_27_3_0),
    .din28(regions_center_28_3_0),
    .din29(regions_center_29_3_0),
    .din30(regions_center_30_3_0),
    .din31(regions_center_31_3_0),
    .din32(trunc_ln104_fu_4046_p1),
    .dout(tmp_18_fu_4738_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U38(
    .din0(regions_center_0_3_0),
    .din1(regions_center_1_3_0),
    .din2(regions_center_2_3_0),
    .din3(regions_center_3_3_0),
    .din4(regions_center_4_3_0),
    .din5(regions_center_5_3_0),
    .din6(regions_center_6_3_0),
    .din7(regions_center_7_3_0),
    .din8(regions_center_8_3_0),
    .din9(regions_center_9_3_0),
    .din10(regions_center_10_3_0),
    .din11(regions_center_11_3_0),
    .din12(regions_center_12_3_0),
    .din13(regions_center_13_3_0),
    .din14(regions_center_14_3_0),
    .din15(regions_center_15_3_0),
    .din16(regions_center_16_3_0),
    .din17(regions_center_17_3_0),
    .din18(regions_center_18_3_0),
    .din19(regions_center_19_3_0),
    .din20(regions_center_20_3_0),
    .din21(regions_center_21_3_0),
    .din22(regions_center_22_3_0),
    .din23(regions_center_23_3_0),
    .din24(regions_center_24_3_0),
    .din25(regions_center_25_3_0),
    .din26(regions_center_26_3_0),
    .din27(regions_center_27_3_0),
    .din28(regions_center_28_3_0),
    .din29(regions_center_29_3_0),
    .din30(regions_center_30_3_0),
    .din31(regions_center_31_3_0),
    .din32(trunc_ln104_1_fu_4088_p1),
    .dout(tmp_19_fu_4776_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U39(
    .din0(regions_max_0_3_0),
    .din1(regions_max_1_3_0),
    .din2(regions_max_2_3_0),
    .din3(regions_max_3_3_0),
    .din4(regions_max_4_3_0),
    .din5(regions_max_5_3_0),
    .din6(regions_max_6_3_0),
    .din7(regions_max_7_3_0),
    .din8(regions_max_8_3_0),
    .din9(regions_max_9_3_0),
    .din10(regions_max_10_3_0),
    .din11(regions_max_11_3_0),
    .din12(regions_max_12_3_0),
    .din13(regions_max_13_3_0),
    .din14(regions_max_14_3_0),
    .din15(regions_max_15_3_0),
    .din16(regions_max_16_3_0),
    .din17(regions_max_17_3_0),
    .din18(regions_max_18_3_0),
    .din19(regions_max_19_3_0),
    .din20(regions_max_20_3_0),
    .din21(regions_max_21_3_0),
    .din22(regions_max_22_3_0),
    .din23(regions_max_23_3_0),
    .din24(regions_max_24_3_0),
    .din25(regions_max_25_3_0),
    .din26(regions_max_26_3_0),
    .din27(regions_max_27_3_0),
    .din28(regions_max_28_3_0),
    .din29(regions_max_29_3_0),
    .din30(regions_max_30_3_0),
    .din31(regions_max_31_3_0),
    .din32(trunc_ln104_fu_4046_p1),
    .dout(tmp_20_fu_4814_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U40(
    .din0(regions_min_0_3_0),
    .din1(regions_min_1_3_0),
    .din2(regions_min_2_3_0),
    .din3(regions_min_3_3_0),
    .din4(regions_min_4_3_0),
    .din5(regions_min_5_3_0),
    .din6(regions_min_6_3_0),
    .din7(regions_min_7_3_0),
    .din8(regions_min_8_3_0),
    .din9(regions_min_9_3_0),
    .din10(regions_min_10_3_0),
    .din11(regions_min_11_3_0),
    .din12(regions_min_12_3_0),
    .din13(regions_min_13_3_0),
    .din14(regions_min_14_3_0),
    .din15(regions_min_15_3_0),
    .din16(regions_min_16_3_0),
    .din17(regions_min_17_3_0),
    .din18(regions_min_18_3_0),
    .din19(regions_min_19_3_0),
    .din20(regions_min_20_3_0),
    .din21(regions_min_21_3_0),
    .din22(regions_min_22_3_0),
    .din23(regions_min_23_3_0),
    .din24(regions_min_24_3_0),
    .din25(regions_min_25_3_0),
    .din26(regions_min_26_3_0),
    .din27(regions_min_27_3_0),
    .din28(regions_min_28_3_0),
    .din29(regions_min_29_3_0),
    .din30(regions_min_30_3_0),
    .din31(regions_min_31_3_0),
    .din32(trunc_ln104_fu_4046_p1),
    .dout(tmp_21_fu_4852_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U41(
    .din0(regions_max_0_3_0),
    .din1(regions_max_1_3_0),
    .din2(regions_max_2_3_0),
    .din3(regions_max_3_3_0),
    .din4(regions_max_4_3_0),
    .din5(regions_max_5_3_0),
    .din6(regions_max_6_3_0),
    .din7(regions_max_7_3_0),
    .din8(regions_max_8_3_0),
    .din9(regions_max_9_3_0),
    .din10(regions_max_10_3_0),
    .din11(regions_max_11_3_0),
    .din12(regions_max_12_3_0),
    .din13(regions_max_13_3_0),
    .din14(regions_max_14_3_0),
    .din15(regions_max_15_3_0),
    .din16(regions_max_16_3_0),
    .din17(regions_max_17_3_0),
    .din18(regions_max_18_3_0),
    .din19(regions_max_19_3_0),
    .din20(regions_max_20_3_0),
    .din21(regions_max_21_3_0),
    .din22(regions_max_22_3_0),
    .din23(regions_max_23_3_0),
    .din24(regions_max_24_3_0),
    .din25(regions_max_25_3_0),
    .din26(regions_max_26_3_0),
    .din27(regions_max_27_3_0),
    .din28(regions_max_28_3_0),
    .din29(regions_max_29_3_0),
    .din30(regions_max_30_3_0),
    .din31(regions_max_31_3_0),
    .din32(trunc_ln104_1_fu_4088_p1),
    .dout(tmp_22_fu_4890_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U42(
    .din0(regions_min_0_3_0),
    .din1(regions_min_1_3_0),
    .din2(regions_min_2_3_0),
    .din3(regions_min_3_3_0),
    .din4(regions_min_4_3_0),
    .din5(regions_min_5_3_0),
    .din6(regions_min_6_3_0),
    .din7(regions_min_7_3_0),
    .din8(regions_min_8_3_0),
    .din9(regions_min_9_3_0),
    .din10(regions_min_10_3_0),
    .din11(regions_min_11_3_0),
    .din12(regions_min_12_3_0),
    .din13(regions_min_13_3_0),
    .din14(regions_min_14_3_0),
    .din15(regions_min_15_3_0),
    .din16(regions_min_16_3_0),
    .din17(regions_min_17_3_0),
    .din18(regions_min_18_3_0),
    .din19(regions_min_19_3_0),
    .din20(regions_min_20_3_0),
    .din21(regions_min_21_3_0),
    .din22(regions_min_22_3_0),
    .din23(regions_min_23_3_0),
    .din24(regions_min_24_3_0),
    .din25(regions_min_25_3_0),
    .din26(regions_min_26_3_0),
    .din27(regions_min_27_3_0),
    .din28(regions_min_28_3_0),
    .din29(regions_min_29_3_0),
    .din30(regions_min_30_3_0),
    .din31(regions_min_31_3_0),
    .din32(trunc_ln104_1_fu_4088_p1),
    .dout(tmp_23_fu_4928_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U43(
    .din0(regions_center_0_4_0),
    .din1(regions_center_1_4_0),
    .din2(regions_center_2_4_0),
    .din3(regions_center_3_4_0),
    .din4(regions_center_4_4_0),
    .din5(regions_center_5_4_0),
    .din6(regions_center_6_4_0),
    .din7(regions_center_7_4_0),
    .din8(regions_center_8_4_0),
    .din9(regions_center_9_4_0),
    .din10(regions_center_10_4_0),
    .din11(regions_center_11_4_0),
    .din12(regions_center_12_4_0),
    .din13(regions_center_13_4_0),
    .din14(regions_center_14_4_0),
    .din15(regions_center_15_4_0),
    .din16(regions_center_16_4_0),
    .din17(regions_center_17_4_0),
    .din18(regions_center_18_4_0),
    .din19(regions_center_19_4_0),
    .din20(regions_center_20_4_0),
    .din21(regions_center_21_4_0),
    .din22(regions_center_22_4_0),
    .din23(regions_center_23_4_0),
    .din24(regions_center_24_4_0),
    .din25(regions_center_25_4_0),
    .din26(regions_center_26_4_0),
    .din27(regions_center_27_4_0),
    .din28(regions_center_28_4_0),
    .din29(regions_center_29_4_0),
    .din30(regions_center_30_4_0),
    .din31(regions_center_31_4_0),
    .din32(trunc_ln104_fu_4046_p1),
    .dout(tmp_24_fu_4966_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U44(
    .din0(regions_center_0_4_0),
    .din1(regions_center_1_4_0),
    .din2(regions_center_2_4_0),
    .din3(regions_center_3_4_0),
    .din4(regions_center_4_4_0),
    .din5(regions_center_5_4_0),
    .din6(regions_center_6_4_0),
    .din7(regions_center_7_4_0),
    .din8(regions_center_8_4_0),
    .din9(regions_center_9_4_0),
    .din10(regions_center_10_4_0),
    .din11(regions_center_11_4_0),
    .din12(regions_center_12_4_0),
    .din13(regions_center_13_4_0),
    .din14(regions_center_14_4_0),
    .din15(regions_center_15_4_0),
    .din16(regions_center_16_4_0),
    .din17(regions_center_17_4_0),
    .din18(regions_center_18_4_0),
    .din19(regions_center_19_4_0),
    .din20(regions_center_20_4_0),
    .din21(regions_center_21_4_0),
    .din22(regions_center_22_4_0),
    .din23(regions_center_23_4_0),
    .din24(regions_center_24_4_0),
    .din25(regions_center_25_4_0),
    .din26(regions_center_26_4_0),
    .din27(regions_center_27_4_0),
    .din28(regions_center_28_4_0),
    .din29(regions_center_29_4_0),
    .din30(regions_center_30_4_0),
    .din31(regions_center_31_4_0),
    .din32(trunc_ln104_1_fu_4088_p1),
    .dout(tmp_25_fu_5004_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U45(
    .din0(regions_max_0_4_0),
    .din1(regions_max_1_4_0),
    .din2(regions_max_2_4_0),
    .din3(regions_max_3_4_0),
    .din4(regions_max_4_4_0),
    .din5(regions_max_5_4_0),
    .din6(regions_max_6_4_0),
    .din7(regions_max_7_4_0),
    .din8(regions_max_8_4_0),
    .din9(regions_max_9_4_0),
    .din10(regions_max_10_4_0),
    .din11(regions_max_11_4_0),
    .din12(regions_max_12_4_0),
    .din13(regions_max_13_4_0),
    .din14(regions_max_14_4_0),
    .din15(regions_max_15_4_0),
    .din16(regions_max_16_4_0),
    .din17(regions_max_17_4_0),
    .din18(regions_max_18_4_0),
    .din19(regions_max_19_4_0),
    .din20(regions_max_20_4_0),
    .din21(regions_max_21_4_0),
    .din22(regions_max_22_4_0),
    .din23(regions_max_23_4_0),
    .din24(regions_max_24_4_0),
    .din25(regions_max_25_4_0),
    .din26(regions_max_26_4_0),
    .din27(regions_max_27_4_0),
    .din28(regions_max_28_4_0),
    .din29(regions_max_29_4_0),
    .din30(regions_max_30_4_0),
    .din31(regions_max_31_4_0),
    .din32(trunc_ln104_fu_4046_p1),
    .dout(tmp_26_fu_5042_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U46(
    .din0(regions_min_0_4_0),
    .din1(regions_min_1_4_0),
    .din2(regions_min_2_4_0),
    .din3(regions_min_3_4_0),
    .din4(regions_min_4_4_0),
    .din5(regions_min_5_4_0),
    .din6(regions_min_6_4_0),
    .din7(regions_min_7_4_0),
    .din8(regions_min_8_4_0),
    .din9(regions_min_9_4_0),
    .din10(regions_min_10_4_0),
    .din11(regions_min_11_4_0),
    .din12(regions_min_12_4_0),
    .din13(regions_min_13_4_0),
    .din14(regions_min_14_4_0),
    .din15(regions_min_15_4_0),
    .din16(regions_min_16_4_0),
    .din17(regions_min_17_4_0),
    .din18(regions_min_18_4_0),
    .din19(regions_min_19_4_0),
    .din20(regions_min_20_4_0),
    .din21(regions_min_21_4_0),
    .din22(regions_min_22_4_0),
    .din23(regions_min_23_4_0),
    .din24(regions_min_24_4_0),
    .din25(regions_min_25_4_0),
    .din26(regions_min_26_4_0),
    .din27(regions_min_27_4_0),
    .din28(regions_min_28_4_0),
    .din29(regions_min_29_4_0),
    .din30(regions_min_30_4_0),
    .din31(regions_min_31_4_0),
    .din32(trunc_ln104_fu_4046_p1),
    .dout(tmp_27_fu_5080_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U47(
    .din0(regions_max_0_4_0),
    .din1(regions_max_1_4_0),
    .din2(regions_max_2_4_0),
    .din3(regions_max_3_4_0),
    .din4(regions_max_4_4_0),
    .din5(regions_max_5_4_0),
    .din6(regions_max_6_4_0),
    .din7(regions_max_7_4_0),
    .din8(regions_max_8_4_0),
    .din9(regions_max_9_4_0),
    .din10(regions_max_10_4_0),
    .din11(regions_max_11_4_0),
    .din12(regions_max_12_4_0),
    .din13(regions_max_13_4_0),
    .din14(regions_max_14_4_0),
    .din15(regions_max_15_4_0),
    .din16(regions_max_16_4_0),
    .din17(regions_max_17_4_0),
    .din18(regions_max_18_4_0),
    .din19(regions_max_19_4_0),
    .din20(regions_max_20_4_0),
    .din21(regions_max_21_4_0),
    .din22(regions_max_22_4_0),
    .din23(regions_max_23_4_0),
    .din24(regions_max_24_4_0),
    .din25(regions_max_25_4_0),
    .din26(regions_max_26_4_0),
    .din27(regions_max_27_4_0),
    .din28(regions_max_28_4_0),
    .din29(regions_max_29_4_0),
    .din30(regions_max_30_4_0),
    .din31(regions_max_31_4_0),
    .din32(trunc_ln104_1_fu_4088_p1),
    .dout(tmp_28_fu_5118_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U48(
    .din0(regions_min_0_4_0),
    .din1(regions_min_1_4_0),
    .din2(regions_min_2_4_0),
    .din3(regions_min_3_4_0),
    .din4(regions_min_4_4_0),
    .din5(regions_min_5_4_0),
    .din6(regions_min_6_4_0),
    .din7(regions_min_7_4_0),
    .din8(regions_min_8_4_0),
    .din9(regions_min_9_4_0),
    .din10(regions_min_10_4_0),
    .din11(regions_min_11_4_0),
    .din12(regions_min_12_4_0),
    .din13(regions_min_13_4_0),
    .din14(regions_min_14_4_0),
    .din15(regions_min_15_4_0),
    .din16(regions_min_16_4_0),
    .din17(regions_min_17_4_0),
    .din18(regions_min_18_4_0),
    .din19(regions_min_19_4_0),
    .din20(regions_min_20_4_0),
    .din21(regions_min_21_4_0),
    .din22(regions_min_22_4_0),
    .din23(regions_min_23_4_0),
    .din24(regions_min_24_4_0),
    .din25(regions_min_25_4_0),
    .din26(regions_min_26_4_0),
    .din27(regions_min_27_4_0),
    .din28(regions_min_28_4_0),
    .din29(regions_min_29_4_0),
    .din30(regions_min_30_4_0),
    .din31(regions_min_31_4_0),
    .din32(trunc_ln104_1_fu_4088_p1),
    .dout(tmp_29_fu_5156_p34)
);

FaultDetector_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage7),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter8_stage1) | ((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_real_4_fu_1030 <= 32'd1;
        end else if (((icmp_ln1027_reg_9205 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            k_real_4_fu_1030 <= k_real_3_fu_5607_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            merge_1_1_fu_1026 <= 32'd0;
        end else if (((icmp_ln1027_reg_9205 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            merge_1_1_fu_1026 <= i_real_2_fu_5615_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        merge_1_fu_1014 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_9205_pp0_iter8_reg == 1'd1))) begin
        merge_1_fu_1014 <= merge_1_7_fu_6240_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        merge_2_fu_1018 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_9205_pp0_iter8_reg == 1'd1))) begin
        merge_2_fu_1018 <= merge_2_6_fu_6234_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        score_fu_1022 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_9205_pp0_iter8_reg == 1'd1))) begin
        score_fu_1022 <= score_3_fu_6228_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_other_fu_1038 <= 32'd4294967295;
        end else if (((ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln1027_reg_9205_pp0_iter7_reg == 1'd1))) begin
            tmp_other_fu_1038 <= tmp_other_3_fu_6078_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_score_fu_1034 <= 32'd0;
        end else if (((ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln1027_reg_9205_pp0_iter7_reg == 1'd1))) begin
            tmp_score_fu_1034 <= tmp_score_3_fu_6084_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln112_1_reg_9449 <= and_ln112_1_fu_5323_p2;
        and_ln112_3_reg_9454 <= and_ln112_3_fu_5342_p2;
        icmp_ln112_10_reg_9469 <= icmp_ln112_10_fu_5394_p2;
        icmp_ln112_11_reg_9474 <= icmp_ln112_11_fu_5400_p2;
        icmp_ln112_8_reg_9459 <= icmp_ln112_8_fu_5382_p2;
        icmp_ln112_9_reg_9464 <= icmp_ln112_9_fu_5388_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln112_1_reg_9449_pp0_iter1_reg <= and_ln112_1_reg_9449;
        and_ln112_1_reg_9449_pp0_iter2_reg <= and_ln112_1_reg_9449_pp0_iter1_reg;
        and_ln112_3_reg_9454_pp0_iter1_reg <= and_ln112_3_reg_9454;
        and_ln112_3_reg_9454_pp0_iter2_reg <= and_ln112_3_reg_9454_pp0_iter1_reg;
        mul_4_reg_9647_pp0_iter3_reg <= mul_4_reg_9647;
        mul_4_reg_9647_pp0_iter4_reg <= mul_4_reg_9647_pp0_iter3_reg;
        mul_4_reg_9647_pp0_iter5_reg <= mul_4_reg_9647_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        and_ln112_5_reg_9489 <= and_ln112_5_fu_5420_p2;
        and_ln112_7_reg_9494 <= and_ln112_7_fu_5501_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        and_ln112_5_reg_9489_pp0_iter1_reg <= and_ln112_5_reg_9489;
        and_ln112_5_reg_9489_pp0_iter2_reg <= and_ln112_5_reg_9489_pp0_iter1_reg;
        and_ln112_7_reg_9494_pp0_iter1_reg <= and_ln112_7_reg_9494;
        and_ln112_7_reg_9494_pp0_iter2_reg <= and_ln112_7_reg_9494_pp0_iter1_reg;
        mul_1_reg_9615_pp0_iter2_reg <= mul_1_reg_9615;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        and_ln112_9_reg_9504 <= and_ln112_9_fu_5582_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        and_ln112_9_reg_9504_pp0_iter1_reg <= and_ln112_9_reg_9504;
        and_ln112_9_reg_9504_pp0_iter2_reg <= and_ln112_9_reg_9504_pp0_iter1_reg;
        ov_19_reg_9747_pp0_iter4_reg <= ov_19_reg_9747;
        tmp_56_reg_9774_pp0_iter6_reg <= tmp_56_reg_9774;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        d1_1_reg_9544 <= grp_fu_3940_p2;
        d2_1_reg_9549 <= grp_fu_3944_p2;
        sub2_reg_9539 <= grp_fu_45318_p_dout0;
        sub75_1_reg_9554 <= grp_fu_3948_p2;
        sub87_1_reg_9559 <= grp_fu_3952_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        d1_2_reg_9570 <= grp_fu_3940_p2;
        d2_2_reg_9575 <= grp_fu_3944_p2;
        d_2_reg_9564 <= grp_fu_45318_p_dout0;
        sub75_2_reg_9580 <= grp_fu_3948_p2;
        sub87_2_reg_9585 <= grp_fu_3952_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        d1_3_reg_9590 <= grp_fu_45318_p_dout0;
        d2_3_reg_9595 <= grp_fu_3940_p2;
        sub75_3_reg_9600 <= grp_fu_3944_p2;
        sub87_3_reg_9605 <= grp_fu_3948_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        d1_reg_9518 <= grp_fu_3940_p2;
        d2_reg_9523 <= grp_fu_3944_p2;
        d_1_reg_9533 <= grp_fu_3952_p2;
        sub_reg_9528 <= grp_fu_3948_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        d_3_reg_9620 <= grp_fu_45318_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        d_4_reg_9631 <= grp_fu_45318_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln1027_reg_9205_pp0_iter3_reg == 1'd1))) begin
        distance_1_reg_9732 <= grp_fu_3948_p2;
        tmp_54_reg_9737 <= grp_fu_45334_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln1027_reg_9205_pp0_iter4_reg == 1'd1))) begin
        distance_2_reg_9762 <= grp_fu_3944_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_9205_pp0_iter5_reg == 1'd1))) begin
        distance_3_reg_9779 <= grp_fu_3944_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_9205_pp0_iter6_reg == 1'd1))) begin
        distance_4_reg_9784 <= grp_fu_3948_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        distance_reg_9652 <= grp_fu_45318_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_real_3_reg_9190 <= merge_1_1_fu_1026;
        i_real_3_reg_9190_pp0_iter1_reg <= i_real_3_reg_9190;
        i_real_3_reg_9190_pp0_iter2_reg <= i_real_3_reg_9190_pp0_iter1_reg;
        i_real_3_reg_9190_pp0_iter3_reg <= i_real_3_reg_9190_pp0_iter2_reg;
        i_real_3_reg_9190_pp0_iter4_reg <= i_real_3_reg_9190_pp0_iter3_reg;
        i_real_3_reg_9190_pp0_iter5_reg <= i_real_3_reg_9190_pp0_iter4_reg;
        i_real_3_reg_9190_pp0_iter6_reg <= i_real_3_reg_9190_pp0_iter5_reg;
        i_real_3_reg_9190_pp0_iter7_reg <= i_real_3_reg_9190_pp0_iter6_reg;
        i_real_3_reg_9190_pp0_iter8_reg <= i_real_3_reg_9190_pp0_iter7_reg;
        icmp_ln1027_reg_9205 <= icmp_ln1027_fu_4040_p2;
        icmp_ln1027_reg_9205_pp0_iter1_reg <= icmp_ln1027_reg_9205;
        icmp_ln1027_reg_9205_pp0_iter2_reg <= icmp_ln1027_reg_9205_pp0_iter1_reg;
        icmp_ln1027_reg_9205_pp0_iter3_reg <= icmp_ln1027_reg_9205_pp0_iter2_reg;
        icmp_ln1027_reg_9205_pp0_iter4_reg <= icmp_ln1027_reg_9205_pp0_iter3_reg;
        icmp_ln1027_reg_9205_pp0_iter5_reg <= icmp_ln1027_reg_9205_pp0_iter4_reg;
        icmp_ln1027_reg_9205_pp0_iter6_reg <= icmp_ln1027_reg_9205_pp0_iter5_reg;
        icmp_ln1027_reg_9205_pp0_iter7_reg <= icmp_ln1027_reg_9205_pp0_iter6_reg;
        icmp_ln1027_reg_9205_pp0_iter8_reg <= icmp_ln1027_reg_9205_pp0_iter7_reg;
        k_real_5_reg_9198 <= k_real_4_fu_1030;
        k_real_5_reg_9198_pp0_iter1_reg <= k_real_5_reg_9198;
        k_real_5_reg_9198_pp0_iter2_reg <= k_real_5_reg_9198_pp0_iter1_reg;
        k_real_5_reg_9198_pp0_iter3_reg <= k_real_5_reg_9198_pp0_iter2_reg;
        k_real_5_reg_9198_pp0_iter4_reg <= k_real_5_reg_9198_pp0_iter3_reg;
        k_real_5_reg_9198_pp0_iter5_reg <= k_real_5_reg_9198_pp0_iter4_reg;
        k_real_5_reg_9198_pp0_iter6_reg <= k_real_5_reg_9198_pp0_iter5_reg;
        k_real_5_reg_9198_pp0_iter7_reg <= k_real_5_reg_9198_pp0_iter6_reg;
        merge_1_4_reg_9830 <= merge_1_fu_1014;
        merge_2_1_reg_9837 <= merge_2_fu_1018;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1019_reg_9509 <= icmp_ln1019_fu_5587_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1019_reg_9509_pp0_iter2_reg <= icmp_ln1019_reg_9509;
        icmp_ln1019_reg_9509_pp0_iter3_reg <= icmp_ln1019_reg_9509_pp0_iter2_reg;
        icmp_ln1019_reg_9509_pp0_iter4_reg <= icmp_ln1019_reg_9509_pp0_iter3_reg;
        icmp_ln1019_reg_9509_pp0_iter5_reg <= icmp_ln1019_reg_9509_pp0_iter4_reg;
        icmp_ln1019_reg_9509_pp0_iter6_reg <= icmp_ln1019_reg_9509_pp0_iter5_reg;
        icmp_ln1019_reg_9509_pp0_iter7_reg <= icmp_ln1019_reg_9509_pp0_iter6_reg;
        icmp_ln1019_reg_9509_pp0_iter8_reg <= icmp_ln1019_reg_9509_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        icmp_ln112_1_reg_9404 <= icmp_ln112_1_fu_5234_p2;
        icmp_ln112_2_reg_9409 <= icmp_ln112_2_fu_5240_p2;
        icmp_ln112_3_reg_9414 <= icmp_ln112_3_fu_5246_p2;
        icmp_ln112_4_reg_9424 <= icmp_ln112_4_fu_5286_p2;
        icmp_ln112_5_reg_9429 <= icmp_ln112_5_fu_5292_p2;
        icmp_ln112_6_reg_9434 <= icmp_ln112_6_fu_5298_p2;
        icmp_ln112_7_reg_9439 <= icmp_ln112_7_fu_5304_p2;
        icmp_ln112_reg_9399 <= icmp_ln112_fu_5228_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul_1_reg_9615 <= grp_fu_3961_p2;
        mul_reg_9610 <= grp_fu_45324_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_2_reg_9626 <= grp_fu_45324_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_2_reg_9626_pp0_iter2_reg <= mul_2_reg_9626;
        mul_2_reg_9626_pp0_iter3_reg <= mul_2_reg_9626_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_3_reg_9637 <= grp_fu_45324_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_3_reg_9637_pp0_iter3_reg <= mul_3_reg_9637;
        mul_3_reg_9637_pp0_iter4_reg <= mul_3_reg_9637_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul_4_reg_9647 <= grp_fu_45324_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ov_10_reg_9681 <= ov_10_fu_5645_p3;
        ov_14_reg_9688 <= ov_14_fu_5652_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln1027_reg_9205_pp0_iter3_reg == 1'd1))) begin
        ov_11_reg_9722 <= ov_11_fu_5800_p3;
        ov_15_reg_9727 <= ov_15_fu_5847_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ov_18_reg_9705 <= ov_18_fu_5753_p3;
        ov_20_reg_9695 <= ov_20_fu_5699_p3;
        ov_7_reg_9700 <= ov_7_fu_5746_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln1027_reg_9205_pp0_iter3_reg == 1'd1))) begin
        ov_19_reg_9747 <= ov_19_fu_5894_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ov_2_reg_9657 <= ov_2_fu_5632_p3;
        ov_6_reg_9664 <= ov_6_fu_5638_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_1_reg_9449_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ov_reg_9642 <= grp_fu_3952_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln1027_reg_9205_pp0_iter3_reg == 1'd1))) begin
        overlap_1_reg_9742 <= grp_fu_45324_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_9205_pp0_iter4_reg == 1'd1))) begin
        overlap_2_reg_9752 <= grp_fu_3961_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln1027_reg_9205_pp0_iter4_reg == 1'd1))) begin
        overlap_3_reg_9757 <= grp_fu_3961_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln1027_reg_9205_pp0_iter5_reg == 1'd1))) begin
        overlap_4_reg_9767 <= grp_fu_45324_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        overlap_4_reg_9767_pp0_iter6_reg <= overlap_4_reg_9767;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_5_reg_9489_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_5_reg_9489_pp0_iter2_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_3975 <= grp_fu_45318_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_9_reg_9504) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_9_reg_9504) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_3981 <= grp_fu_3940_p2;
        reg_3986 <= grp_fu_3944_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_9_reg_9504_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_9_reg_9504_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln112_7_reg_9494_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'd0 == and_ln112_1_reg_9449_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_7_reg_9494_pp0_iter2_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        reg_3991 <= grp_fu_3940_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_3_reg_9454_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_3_reg_9454_pp0_iter2_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_3995 <= grp_fu_3944_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_9205_pp0_iter6_reg == 1'd1))) begin
        sc_2_reg_9789 <= sc_2_fu_5954_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_9205_pp0_iter7_reg == 1'd1))) begin
        score_load_reg_9822 <= score_fu_1022;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_fu_4040_p2 == 1'd1))) begin
        tmp_10_reg_9271 <= tmp_10_fu_4434_p34;
        tmp_11_reg_9276 <= tmp_11_fu_4472_p34;
        tmp_12_reg_9285 <= tmp_12_fu_4510_p34;
        tmp_13_reg_9290 <= tmp_13_fu_4548_p34;
        tmp_14_reg_9295 <= tmp_14_fu_4586_p34;
        tmp_15_reg_9300 <= tmp_15_fu_4624_p34;
        tmp_16_reg_9309 <= tmp_16_fu_4662_p34;
        tmp_17_reg_9314 <= tmp_17_fu_4700_p34;
        tmp_18_reg_9323 <= tmp_18_fu_4738_p34;
        tmp_19_reg_9328 <= tmp_19_fu_4776_p34;
        tmp_1_reg_9214 <= tmp_1_fu_4092_p34;
        tmp_20_reg_9333 <= tmp_20_fu_4814_p34;
        tmp_21_reg_9338 <= tmp_21_fu_4852_p34;
        tmp_22_reg_9347 <= tmp_22_fu_4890_p34;
        tmp_23_reg_9352 <= tmp_23_fu_4928_p34;
        tmp_24_reg_9361 <= tmp_24_fu_4966_p34;
        tmp_25_reg_9366 <= tmp_25_fu_5004_p34;
        tmp_26_reg_9371 <= tmp_26_fu_5042_p34;
        tmp_27_reg_9376 <= tmp_27_fu_5080_p34;
        tmp_28_reg_9385 <= tmp_28_fu_5118_p34;
        tmp_29_reg_9390 <= tmp_29_fu_5156_p34;
        tmp_2_reg_9219 <= tmp_2_fu_4130_p34;
        tmp_3_reg_9224 <= tmp_3_fu_4168_p34;
        tmp_4_reg_9233 <= tmp_4_fu_4206_p34;
        tmp_5_reg_9238 <= tmp_5_fu_4244_p34;
        tmp_6_reg_9247 <= tmp_6_fu_4282_p34;
        tmp_7_reg_9252 <= tmp_7_fu_4320_p34;
        tmp_8_reg_9257 <= tmp_8_fu_4358_p34;
        tmp_9_reg_9262 <= tmp_9_fu_4396_p34;
        tmp_s_reg_9209 <= tmp_s_fu_4050_p34;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_32_reg_9419 <= grp_fu_45329_p_dout0;
        tmp_37_reg_9444 <= grp_fu_45334_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_34_reg_9671 <= grp_fu_45329_p_dout0;
        tmp_39_reg_9676 <= grp_fu_45334_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_42_reg_9479 <= grp_fu_45329_p_dout0;
        tmp_47_reg_9484 <= grp_fu_45334_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_9205_pp0_iter3_reg == 1'd1))) begin
        tmp_44_reg_9712 <= grp_fu_45329_p_dout0;
        tmp_49_reg_9717 <= grp_fu_45334_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_52_reg_9499 <= grp_fu_45329_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln1027_reg_9205_pp0_iter5_reg == 1'd1))) begin
        tmp_56_reg_9774 <= grp_fu_45329_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln1027_reg_9205_pp0_iter7_reg == 1'd1))) begin
        tmp_59_reg_9803 <= grp_fu_45334_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_9205_pp0_iter7_reg == 1'd1))) begin
        tmp_62_reg_9843 <= grp_fu_45329_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln1027_reg_9205_pp0_iter7_reg == 1'd1))) begin
        tmp_other_4_reg_9808 <= tmp_other_4_fu_6061_p3;
        tmp_score_4_reg_9814 <= tmp_score_4_fu_6068_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln1027_reg_9205_pp0_iter7_reg == 1'd1))) begin
        tmp_score_load_reg_9796 <= tmp_score_fu_1034;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_9205 == 1'd0) & (1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_9205_pp0_iter7_reg == 1'd0))) begin
        ap_condition_exit_pp0_iter8_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter8_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to7 = 1'b1;
    end else begin
        ap_idle_pp0_0to7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to8 = 1'b1;
    end else begin
        ap_idle_pp0_1to8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage7_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_00001) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_5_reg_9489_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln112_5_reg_9489_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0_00001) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_3936_opcode = 2'd1;
    end else if (((1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3936_opcode = 2'd0;
    end else begin
        grp_fu_3936_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln112_5_reg_9489_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3936_p0 = d2_2_reg_9575;
    end else if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_5_reg_9489_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3936_p0 = d1_2_reg_9570;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3936_p0 = mul_reg_9610;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3936_p0 = tmp_24_reg_9361;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3936_p0 = tmp_18_reg_9323;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3936_p0 = tmp_20_reg_9333;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3936_p0 = tmp_12_reg_9285;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3936_p0 = tmp_3_reg_9224;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3936_p0 = tmp_s_reg_9209;
    end else begin
        grp_fu_3936_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln112_5_reg_9489_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3936_p1 = sub87_2_reg_9585;
    end else if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_5_reg_9489_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3936_p1 = sub75_2_reg_9580;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3936_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3936_p1 = tmp_25_reg_9366;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3936_p1 = tmp_19_reg_9328;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3936_p1 = tmp_21_reg_9338;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3936_p1 = tmp_13_reg_9290;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3936_p1 = tmp_5_reg_9238;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3936_p1 = tmp_1_reg_9214;
    end else begin
        grp_fu_3936_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_9_reg_9504_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_9_reg_9504_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_3940_p0 = reg_3981;
    end else if (((1'd0 == and_ln112_7_reg_9494_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3940_p0 = d2_3_reg_9595;
    end else if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_7_reg_9494_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3940_p0 = d1_3_reg_9590;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3940_p0 = d2_reg_9523;
    end else if (((1'd0 == and_ln112_9_reg_9504) & (icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3940_p0 = tmp_28_reg_9385;
    end else if (((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (1'd1 == and_ln112_9_reg_9504) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3940_p0 = tmp_26_reg_9371;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3940_p0 = tmp_22_reg_9347;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3940_p0 = tmp_14_reg_9295;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3940_p0 = tmp_8_reg_9257;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3940_p0 = tmp_2_reg_9219;
    end else begin
        grp_fu_3940_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_9_reg_9504_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_9_reg_9504_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_3940_p1 = reg_3986;
    end else if (((1'd0 == and_ln112_7_reg_9494_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3940_p1 = sub87_3_reg_9605;
    end else if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_7_reg_9494_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3940_p1 = sub75_3_reg_9600;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3940_p1 = sub2_reg_9539;
    end else if (((1'd0 == and_ln112_9_reg_9504) & (icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3940_p1 = tmp_29_reg_9390;
    end else if (((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (1'd1 == and_ln112_9_reg_9504) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3940_p1 = tmp_27_reg_9376;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3940_p1 = tmp_23_reg_9352;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3940_p1 = tmp_15_reg_9300;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3940_p1 = tmp_9_reg_9262;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3940_p1 = tmp_3_reg_9224;
    end else begin
        grp_fu_3940_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_9_reg_9504) & (icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage7_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage7_00001) & (1'd1 == and_ln112_9_reg_9504) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_3_reg_9454_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'd0 == and_ln112_3_reg_9454_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_3944_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_9205_pp0_iter3_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_9205_pp0_iter4_reg == 1'd1)))) begin
        grp_fu_3944_opcode = 2'd0;
    end else begin
        grp_fu_3944_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3944_p0 = distance_2_reg_9762;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3944_p0 = distance_1_reg_9732;
    end else if (((1'd0 == and_ln112_3_reg_9454_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage6) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3944_p0 = d2_1_reg_9549;
    end else if (((1'b0 == ap_block_pp0_stage6) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_3_reg_9454_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3944_p0 = d1_1_reg_9544;
    end else if (((1'd0 == and_ln112_9_reg_9504) & (icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3944_p0 = tmp_27_reg_9376;
    end else if (((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (1'd1 == and_ln112_9_reg_9504) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3944_p0 = tmp_29_reg_9390;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3944_p0 = tmp_23_reg_9352;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3944_p0 = tmp_16_reg_9309;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3944_p0 = tmp_10_reg_9271;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3944_p0 = tmp_4_reg_9233;
    end else begin
        grp_fu_3944_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3944_p1 = mul_3_reg_9637_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3944_p1 = mul_2_reg_9626_pp0_iter3_reg;
    end else if (((1'd0 == and_ln112_3_reg_9454_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage6) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3944_p1 = sub87_1_reg_9559;
    end else if (((1'b0 == ap_block_pp0_stage6) & (icmp_ln1027_reg_9205_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_3_reg_9454_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3944_p1 = sub75_1_reg_9554;
    end else if (((1'd0 == and_ln112_9_reg_9504) & (icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3944_p1 = tmp_29_reg_9390;
    end else if (((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (1'd1 == and_ln112_9_reg_9504) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3944_p1 = tmp_27_reg_9376;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3944_p1 = tmp_21_reg_9338;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3944_p1 = tmp_17_reg_9314;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3944_p1 = tmp_11_reg_9276;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3944_p1 = tmp_5_reg_9238;
    end else begin
        grp_fu_3944_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_3948_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_9205_pp0_iter5_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_3948_opcode = 2'd0;
    end else begin
        grp_fu_3948_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3948_p0 = distance_3_reg_9779;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3948_p0 = distance_reg_9652;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3948_p0 = tmp_21_reg_9338;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3948_p0 = tmp_17_reg_9314;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3948_p0 = tmp_11_reg_9276;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3948_p0 = tmp_5_reg_9238;
    end else begin
        grp_fu_3948_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3948_p1 = mul_4_reg_9647_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3948_p1 = mul_1_reg_9615_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3948_p1 = tmp_23_reg_9352;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3948_p1 = tmp_15_reg_9300;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3948_p1 = tmp_9_reg_9262;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3948_p1 = tmp_3_reg_9224;
    end else begin
        grp_fu_3948_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3952_p0 = d1_reg_9518;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3952_p0 = tmp_15_reg_9300;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3952_p0 = tmp_9_reg_9262;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3952_p0 = tmp_6_reg_9247;
    end else begin
        grp_fu_3952_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3952_p1 = sub_reg_9528;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3952_p1 = tmp_17_reg_9314;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3952_p1 = tmp_11_reg_9276;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3952_p1 = tmp_7_reg_9252;
    end else begin
        grp_fu_3952_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3957_p0 = overlap_3_reg_9757;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3957_p0 = ov_20_reg_9695;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3957_p0 = d_4_reg_9631;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3957_p0 = d_3_reg_9620;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3957_p0 = d_2_reg_9564;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3957_p0 = reg_3975;
    end else begin
        grp_fu_3957_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3957_p1 = ov_19_reg_9747_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3957_p1 = ov_7_reg_9700;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3957_p1 = d_4_reg_9631;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3957_p1 = d_3_reg_9620;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3957_p1 = d_2_reg_9564;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3957_p1 = reg_3975;
    end else begin
        grp_fu_3957_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3961_p0 = overlap_2_reg_9752;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3961_p0 = overlap_1_reg_9742;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3961_p0 = d_1_reg_9533;
    end else begin
        grp_fu_3961_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3961_p1 = ov_15_reg_9727;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3961_p1 = ov_11_reg_9722;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3961_p1 = d_1_reg_9533;
    end else begin
        grp_fu_3961_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_9205_pp0_iter7_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln1027_reg_9205_pp0_iter5_reg == 1'd1)))) begin
        grp_fu_3965_opcode = 5'd2;
    end else if ((((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_00001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage7_00001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        grp_fu_3965_opcode = 5'd4;
    end else begin
        grp_fu_3965_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3965_p0 = tmp_score_4_reg_9814;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3965_p0 = overlap_4_reg_9767;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3965_p0 = ov_10_reg_9681;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3965_p0 = ov_2_reg_9657;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3965_p0 = tmp_27_reg_9376;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3965_p0 = tmp_15_reg_9300;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3965_p0 = tmp_3_reg_9224;
    end else begin
        grp_fu_3965_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3965_p1 = score_fu_1022;
    end else if ((((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_3965_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3965_p1 = tmp_29_reg_9390;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3965_p1 = tmp_17_reg_9314;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3965_p1 = tmp_5_reg_9238;
    end else begin
        grp_fu_3965_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln1027_reg_9205_pp0_iter7_reg == 1'd1))) begin
        grp_fu_3969_opcode = 5'd2;
    end else if ((((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_9205 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_00001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage7_00001) & (icmp_ln1027_reg_9205_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln1027_reg_9205_pp0_iter3_reg == 1'd1)))) begin
        grp_fu_3969_opcode = 5'd4;
    end else begin
        grp_fu_3969_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3969_p0 = sc_2_reg_9789;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3969_p0 = ov_18_reg_9705;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3969_p0 = ov_14_reg_9688;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3969_p0 = ov_6_reg_9664;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3969_p0 = tmp_21_reg_9338;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3969_p0 = tmp_9_reg_9262;
    end else begin
        grp_fu_3969_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3969_p1 = tmp_score_fu_1034;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_3969_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3969_p1 = tmp_23_reg_9352;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3969_p1 = tmp_11_reg_9276;
    end else begin
        grp_fu_3969_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_9205_pp0_iter7_reg == 1'd0))) begin
        merge_1_out_ap_vld = 1'b1;
    end else begin
        merge_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_9205_pp0_iter7_reg == 1'd0))) begin
        merge_2_out_ap_vld = 1'b1;
    end else begin
        merge_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to8 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln112_1_fu_5323_p2 = (or_ln112_fu_5310_p2 & and_ln112_fu_5318_p2);

assign and_ln112_2_fu_5337_p2 = (tmp_37_reg_9444 & or_ln112_3_fu_5333_p2);

assign and_ln112_3_fu_5342_p2 = (or_ln112_2_fu_5329_p2 & and_ln112_2_fu_5337_p2);

assign and_ln112_4_fu_5414_p2 = (or_ln112_5_fu_5410_p2 & or_ln112_4_fu_5406_p2);

assign and_ln112_5_fu_5420_p2 = (tmp_42_reg_9479 & and_ln112_4_fu_5414_p2);

assign and_ln112_6_fu_5495_p2 = (or_ln112_7_fu_5489_p2 & or_ln112_6_fu_5471_p2);

assign and_ln112_7_fu_5501_p2 = (tmp_47_reg_9484 & and_ln112_6_fu_5495_p2);

assign and_ln112_8_fu_5576_p2 = (or_ln112_9_fu_5570_p2 & or_ln112_8_fu_5552_p2);

assign and_ln112_9_fu_5582_p2 = (tmp_52_reg_9499 & and_ln112_8_fu_5576_p2);

assign and_ln112_fu_5318_p2 = (tmp_32_reg_9419 & or_ln112_1_fu_5314_p2);

assign and_ln116_1_fu_5741_p2 = (tmp_39_reg_9676 & or_ln116_1_fu_5735_p2);

assign and_ln116_2_fu_5795_p2 = (tmp_44_reg_9712 & or_ln116_2_fu_5789_p2);

assign and_ln116_3_fu_5842_p2 = (tmp_49_reg_9717 & or_ln116_3_fu_5836_p2);

assign and_ln116_4_fu_5889_p2 = (tmp_54_reg_9737 & or_ln116_4_fu_5883_p2);

assign and_ln116_fu_5694_p2 = (tmp_34_reg_9671 & or_ln116_fu_5688_p2);

assign and_ln122_fu_5936_p2 = (tmp_56_reg_9774_pp0_iter6_reg & or_ln122_fu_5930_p2);

assign and_ln130_1_fu_6050_p2 = (tmp_59_reg_9803 & and_ln130_fu_6044_p2);

assign and_ln130_fu_6044_p2 = (or_ln130_2_fu_6038_p2 & or_ln130_1_fu_6020_p2);

assign and_ln139_1_fu_6199_p2 = (tmp_62_reg_9843 & and_ln139_fu_6193_p2);

assign and_ln139_fu_6193_p2 = (or_ln139_2_fu_6187_p2 & or_ln139_1_fu_6169_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage5_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage6_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage7_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage7;

assign bitcast_ln112_1_fu_5211_p1 = tmp_5_reg_9238;

assign bitcast_ln112_2_fu_5252_p1 = tmp_9_reg_9262;

assign bitcast_ln112_3_fu_5269_p1 = tmp_11_reg_9276;

assign bitcast_ln112_4_fu_5348_p1 = tmp_15_reg_9300;

assign bitcast_ln112_5_fu_5365_p1 = tmp_17_reg_9314;

assign bitcast_ln112_6_fu_5425_p1 = tmp_21_reg_9338;

assign bitcast_ln112_7_fu_5442_p1 = tmp_23_reg_9352;

assign bitcast_ln112_8_fu_5506_p1 = tmp_27_reg_9376;

assign bitcast_ln112_9_fu_5523_p1 = tmp_29_reg_9390;

assign bitcast_ln112_fu_5194_p1 = tmp_3_reg_9224;

assign bitcast_ln116_1_fu_5706_p1 = ov_6_reg_9664;

assign bitcast_ln116_2_fu_5760_p1 = ov_10_reg_9681;

assign bitcast_ln116_3_fu_5807_p1 = ov_14_reg_9688;

assign bitcast_ln116_4_fu_5854_p1 = ov_18_reg_9705;

assign bitcast_ln116_fu_5659_p1 = ov_2_reg_9657;

assign bitcast_ln122_fu_5901_p1 = overlap_4_reg_9767_pp0_iter6_reg;

assign bitcast_ln126_fu_5941_p1 = distance_4_reg_9784;

assign bitcast_ln130_1_fu_5991_p1 = tmp_score_load_reg_9796;

assign bitcast_ln130_fu_5974_p1 = sc_2_reg_9789;

assign bitcast_ln139_1_fu_6140_p1 = score_load_reg_9822;

assign bitcast_ln139_fu_6123_p1 = tmp_score_4_reg_9814;

assign grp_fu_45318_p_ce = 1'b1;

assign grp_fu_45318_p_din0 = grp_fu_3936_p0;

assign grp_fu_45318_p_din1 = grp_fu_3936_p1;

assign grp_fu_45318_p_opcode = grp_fu_3936_opcode;

assign grp_fu_45324_p_ce = 1'b1;

assign grp_fu_45324_p_din0 = grp_fu_3957_p0;

assign grp_fu_45324_p_din1 = grp_fu_3957_p1;

assign grp_fu_45329_p_ce = 1'b1;

assign grp_fu_45329_p_din0 = grp_fu_3965_p0;

assign grp_fu_45329_p_din1 = grp_fu_3965_p1;

assign grp_fu_45329_p_opcode = grp_fu_3965_opcode;

assign grp_fu_45334_p_ce = 1'b1;

assign grp_fu_45334_p_din0 = grp_fu_3969_p0;

assign grp_fu_45334_p_din1 = grp_fu_3969_p1;

assign grp_fu_45334_p_opcode = grp_fu_3969_opcode;

assign i_real_2_fu_5615_p3 = ((icmp_ln1019_fu_5587_p2[0:0] == 1'b1) ? i_real_fu_5592_p2 : i_real_3_reg_9190);

assign i_real_fu_5592_p2 = (i_real_3_reg_9190 + 32'd1);

assign icmp_ln1019_fu_5587_p2 = ((k_real_5_reg_9198 == 32'd31) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_4040_p2 = (($signed(merge_1_1_fu_1026) < $signed(32'd31)) ? 1'b1 : 1'b0);

assign icmp_ln112_10_fu_5394_p2 = ((tmp_41_fu_5368_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_11_fu_5400_p2 = ((trunc_ln112_5_fu_5378_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_12_fu_5459_p2 = ((tmp_45_fu_5428_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_13_fu_5465_p2 = ((trunc_ln112_6_fu_5438_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_14_fu_5477_p2 = ((tmp_46_fu_5445_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_15_fu_5483_p2 = ((trunc_ln112_7_fu_5455_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_16_fu_5540_p2 = ((tmp_50_fu_5509_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_17_fu_5546_p2 = ((trunc_ln112_8_fu_5519_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_18_fu_5558_p2 = ((tmp_51_fu_5526_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_19_fu_5564_p2 = ((trunc_ln112_9_fu_5536_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_1_fu_5234_p2 = ((trunc_ln112_fu_5207_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_2_fu_5240_p2 = ((tmp_31_fu_5214_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_3_fu_5246_p2 = ((trunc_ln112_1_fu_5224_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_4_fu_5286_p2 = ((tmp_35_fu_5255_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_5_fu_5292_p2 = ((trunc_ln112_2_fu_5265_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_6_fu_5298_p2 = ((tmp_36_fu_5272_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_7_fu_5304_p2 = ((trunc_ln112_3_fu_5282_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_8_fu_5382_p2 = ((tmp_40_fu_5351_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_9_fu_5388_p2 = ((trunc_ln112_4_fu_5361_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_fu_5228_p2 = ((tmp_30_fu_5197_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_1_fu_5682_p2 = ((trunc_ln116_fu_5672_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_2_fu_5723_p2 = ((tmp_38_fu_5709_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_3_fu_5729_p2 = ((trunc_ln116_1_fu_5719_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_4_fu_5777_p2 = ((tmp_43_fu_5763_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_5_fu_5783_p2 = ((trunc_ln116_2_fu_5773_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_6_fu_5824_p2 = ((tmp_48_fu_5810_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_7_fu_5830_p2 = ((trunc_ln116_3_fu_5820_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_8_fu_5871_p2 = ((tmp_53_fu_5857_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_9_fu_5877_p2 = ((trunc_ln116_4_fu_5867_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_5676_p2 = ((tmp_33_fu_5662_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln122_1_fu_5924_p2 = ((trunc_ln122_fu_5914_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_5918_p2 = ((tmp_55_fu_5904_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_1_fu_6008_p2 = ((tmp_57_fu_5977_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_2_fu_6014_p2 = ((trunc_ln130_fu_5987_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_3_fu_6026_p2 = ((tmp_58_fu_5994_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_4_fu_6032_p2 = ((trunc_ln130_1_fu_6004_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_fu_5968_p2 = ((tmp_other_fu_1038 == 32'd4294967295) ? 1'b1 : 1'b0);

assign icmp_ln139_1_fu_6163_p2 = ((trunc_ln139_fu_6136_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln139_2_fu_6175_p2 = ((tmp_61_fu_6143_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln139_3_fu_6181_p2 = ((trunc_ln139_1_fu_6153_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln139_fu_6157_p2 = ((tmp_60_fu_6126_p4 != 8'd255) ? 1'b1 : 1'b0);

assign k_real_2_fu_5602_p2 = (k_real_5_reg_9198 + 32'd1);

assign k_real_3_fu_5607_p3 = ((icmp_ln1019_fu_5587_p2[0:0] == 1'b1) ? k_real_fu_5597_p2 : k_real_2_fu_5602_p2);

assign k_real_fu_5597_p2 = (i_real_3_reg_9190 + 32'd2);

assign merge_1_6_fu_6222_p3 = ((or_ln139_fu_6204_p2[0:0] == 1'b1) ? i_real_3_reg_9190_pp0_iter8_reg : merge_1_4_reg_9830);

assign merge_1_7_fu_6240_p3 = ((icmp_ln1019_reg_9509_pp0_iter8_reg[0:0] == 1'b1) ? merge_1_6_fu_6222_p3 : merge_1_4_reg_9830);

assign merge_1_out = merge_1_fu_1014[4:0];

assign merge_2_5_fu_6216_p3 = ((or_ln139_fu_6204_p2[0:0] == 1'b1) ? tmp_other_4_reg_9808 : merge_2_1_reg_9837);

assign merge_2_6_fu_6234_p3 = ((icmp_ln1019_reg_9509_pp0_iter8_reg[0:0] == 1'b1) ? merge_2_5_fu_6216_p3 : merge_2_1_reg_9837);

assign merge_2_out = merge_2_fu_1018[4:0];

assign or_ln112_1_fu_5314_p2 = (icmp_ln112_3_reg_9414 | icmp_ln112_2_reg_9409);

assign or_ln112_2_fu_5329_p2 = (icmp_ln112_5_reg_9429 | icmp_ln112_4_reg_9424);

assign or_ln112_3_fu_5333_p2 = (icmp_ln112_7_reg_9439 | icmp_ln112_6_reg_9434);

assign or_ln112_4_fu_5406_p2 = (icmp_ln112_9_reg_9464 | icmp_ln112_8_reg_9459);

assign or_ln112_5_fu_5410_p2 = (icmp_ln112_11_reg_9474 | icmp_ln112_10_reg_9469);

assign or_ln112_6_fu_5471_p2 = (icmp_ln112_13_fu_5465_p2 | icmp_ln112_12_fu_5459_p2);

assign or_ln112_7_fu_5489_p2 = (icmp_ln112_15_fu_5483_p2 | icmp_ln112_14_fu_5477_p2);

assign or_ln112_8_fu_5552_p2 = (icmp_ln112_17_fu_5546_p2 | icmp_ln112_16_fu_5540_p2);

assign or_ln112_9_fu_5570_p2 = (icmp_ln112_19_fu_5564_p2 | icmp_ln112_18_fu_5558_p2);

assign or_ln112_fu_5310_p2 = (icmp_ln112_reg_9399 | icmp_ln112_1_reg_9404);

assign or_ln116_1_fu_5735_p2 = (icmp_ln116_3_fu_5729_p2 | icmp_ln116_2_fu_5723_p2);

assign or_ln116_2_fu_5789_p2 = (icmp_ln116_5_fu_5783_p2 | icmp_ln116_4_fu_5777_p2);

assign or_ln116_3_fu_5836_p2 = (icmp_ln116_7_fu_5830_p2 | icmp_ln116_6_fu_5824_p2);

assign or_ln116_4_fu_5883_p2 = (icmp_ln116_9_fu_5877_p2 | icmp_ln116_8_fu_5871_p2);

assign or_ln116_fu_5688_p2 = (icmp_ln116_fu_5676_p2 | icmp_ln116_1_fu_5682_p2);

assign or_ln122_fu_5930_p2 = (icmp_ln122_fu_5918_p2 | icmp_ln122_1_fu_5924_p2);

assign or_ln130_1_fu_6020_p2 = (icmp_ln130_2_fu_6014_p2 | icmp_ln130_1_fu_6008_p2);

assign or_ln130_2_fu_6038_p2 = (icmp_ln130_4_fu_6032_p2 | icmp_ln130_3_fu_6026_p2);

assign or_ln130_fu_6055_p2 = (icmp_ln130_fu_5968_p2 | and_ln130_1_fu_6050_p2);

assign or_ln139_1_fu_6169_p2 = (icmp_ln139_fu_6157_p2 | icmp_ln139_1_fu_6163_p2);

assign or_ln139_2_fu_6187_p2 = (icmp_ln139_3_fu_6181_p2 | icmp_ln139_2_fu_6175_p2);

assign or_ln139_fu_6204_p2 = (tmp_fu_6116_p3 | and_ln139_1_fu_6199_p2);

assign ov_10_fu_5645_p3 = ((and_ln112_5_reg_9489_pp0_iter2_reg[0:0] == 1'b1) ? reg_3975 : reg_3975);

assign ov_11_fu_5800_p3 = ((and_ln116_2_fu_5795_p2[0:0] == 1'b1) ? 32'd0 : ov_10_reg_9681);

assign ov_14_fu_5652_p3 = ((and_ln112_7_reg_9494_pp0_iter2_reg[0:0] == 1'b1) ? reg_3991 : reg_3991);

assign ov_15_fu_5847_p3 = ((and_ln116_3_fu_5842_p2[0:0] == 1'b1) ? 32'd0 : ov_14_reg_9688);

assign ov_18_fu_5753_p3 = ((and_ln112_9_reg_9504_pp0_iter2_reg[0:0] == 1'b1) ? reg_3991 : reg_3991);

assign ov_19_fu_5894_p3 = ((and_ln116_4_fu_5889_p2[0:0] == 1'b1) ? 32'd0 : ov_18_reg_9705);

assign ov_20_fu_5699_p3 = ((and_ln116_fu_5694_p2[0:0] == 1'b1) ? 32'd0 : ov_2_reg_9657);

assign ov_2_fu_5632_p3 = ((and_ln112_1_reg_9449_pp0_iter2_reg[0:0] == 1'b1) ? ov_reg_9642 : reg_3991);

assign ov_6_fu_5638_p3 = ((and_ln112_3_reg_9454_pp0_iter2_reg[0:0] == 1'b1) ? reg_3995 : reg_3995);

assign ov_7_fu_5746_p3 = ((and_ln116_1_fu_5741_p2[0:0] == 1'b1) ? 32'd0 : ov_6_reg_9664);

assign sc_2_fu_5954_p3 = ((and_ln122_fu_5936_p2[0:0] == 1'b1) ? overlap_4_reg_9767_pp0_iter6_reg : sc_fu_5950_p1);

assign sc_fu_5950_p1 = xor_ln126_fu_5944_p2;

assign score_2_fu_6210_p3 = ((or_ln139_fu_6204_p2[0:0] == 1'b1) ? tmp_score_4_reg_9814 : score_load_reg_9822);

assign score_3_fu_6228_p3 = ((icmp_ln1019_reg_9509_pp0_iter8_reg[0:0] == 1'b1) ? score_2_fu_6210_p3 : score_load_reg_9822);

assign tmp_30_fu_5197_p4 = {{bitcast_ln112_fu_5194_p1[30:23]}};

assign tmp_31_fu_5214_p4 = {{bitcast_ln112_1_fu_5211_p1[30:23]}};

assign tmp_33_fu_5662_p4 = {{bitcast_ln116_fu_5659_p1[30:23]}};

assign tmp_35_fu_5255_p4 = {{bitcast_ln112_2_fu_5252_p1[30:23]}};

assign tmp_36_fu_5272_p4 = {{bitcast_ln112_3_fu_5269_p1[30:23]}};

assign tmp_38_fu_5709_p4 = {{bitcast_ln116_1_fu_5706_p1[30:23]}};

assign tmp_40_fu_5351_p4 = {{bitcast_ln112_4_fu_5348_p1[30:23]}};

assign tmp_41_fu_5368_p4 = {{bitcast_ln112_5_fu_5365_p1[30:23]}};

assign tmp_43_fu_5763_p4 = {{bitcast_ln116_2_fu_5760_p1[30:23]}};

assign tmp_45_fu_5428_p4 = {{bitcast_ln112_6_fu_5425_p1[30:23]}};

assign tmp_46_fu_5445_p4 = {{bitcast_ln112_7_fu_5442_p1[30:23]}};

assign tmp_48_fu_5810_p4 = {{bitcast_ln116_3_fu_5807_p1[30:23]}};

assign tmp_50_fu_5509_p4 = {{bitcast_ln112_8_fu_5506_p1[30:23]}};

assign tmp_51_fu_5526_p4 = {{bitcast_ln112_9_fu_5523_p1[30:23]}};

assign tmp_53_fu_5857_p4 = {{bitcast_ln116_4_fu_5854_p1[30:23]}};

assign tmp_55_fu_5904_p4 = {{bitcast_ln122_fu_5901_p1[30:23]}};

assign tmp_57_fu_5977_p4 = {{bitcast_ln130_fu_5974_p1[30:23]}};

assign tmp_58_fu_5994_p4 = {{bitcast_ln130_1_fu_5991_p1[30:23]}};

assign tmp_60_fu_6126_p4 = {{bitcast_ln139_fu_6123_p1[30:23]}};

assign tmp_61_fu_6143_p4 = {{bitcast_ln139_1_fu_6140_p1[30:23]}};

assign tmp_fu_6116_p3 = merge_1_4_reg_9830[32'd31];

assign tmp_other_3_fu_6078_p3 = ((icmp_ln1019_reg_9509_pp0_iter7_reg[0:0] == 1'b1) ? 32'd4294967295 : tmp_other_4_reg_9808);

assign tmp_other_4_fu_6061_p3 = ((or_ln130_fu_6055_p2[0:0] == 1'b1) ? k_real_5_reg_9198_pp0_iter7_reg : tmp_other_fu_1038);

assign tmp_score_3_fu_6084_p3 = ((icmp_ln1019_reg_9509_pp0_iter7_reg[0:0] == 1'b1) ? 32'd0 : tmp_score_4_reg_9814);

assign tmp_score_4_fu_6068_p3 = ((or_ln130_fu_6055_p2[0:0] == 1'b1) ? sc_2_reg_9789 : tmp_score_load_reg_9796);

assign trunc_ln104_1_fu_4088_p1 = k_real_4_fu_1030[4:0];

assign trunc_ln104_fu_4046_p1 = merge_1_1_fu_1026[4:0];

assign trunc_ln112_1_fu_5224_p1 = bitcast_ln112_1_fu_5211_p1[22:0];

assign trunc_ln112_2_fu_5265_p1 = bitcast_ln112_2_fu_5252_p1[22:0];

assign trunc_ln112_3_fu_5282_p1 = bitcast_ln112_3_fu_5269_p1[22:0];

assign trunc_ln112_4_fu_5361_p1 = bitcast_ln112_4_fu_5348_p1[22:0];

assign trunc_ln112_5_fu_5378_p1 = bitcast_ln112_5_fu_5365_p1[22:0];

assign trunc_ln112_6_fu_5438_p1 = bitcast_ln112_6_fu_5425_p1[22:0];

assign trunc_ln112_7_fu_5455_p1 = bitcast_ln112_7_fu_5442_p1[22:0];

assign trunc_ln112_8_fu_5519_p1 = bitcast_ln112_8_fu_5506_p1[22:0];

assign trunc_ln112_9_fu_5536_p1 = bitcast_ln112_9_fu_5523_p1[22:0];

assign trunc_ln112_fu_5207_p1 = bitcast_ln112_fu_5194_p1[22:0];

assign trunc_ln116_1_fu_5719_p1 = bitcast_ln116_1_fu_5706_p1[22:0];

assign trunc_ln116_2_fu_5773_p1 = bitcast_ln116_2_fu_5760_p1[22:0];

assign trunc_ln116_3_fu_5820_p1 = bitcast_ln116_3_fu_5807_p1[22:0];

assign trunc_ln116_4_fu_5867_p1 = bitcast_ln116_4_fu_5854_p1[22:0];

assign trunc_ln116_fu_5672_p1 = bitcast_ln116_fu_5659_p1[22:0];

assign trunc_ln122_fu_5914_p1 = bitcast_ln122_fu_5901_p1[22:0];

assign trunc_ln130_1_fu_6004_p1 = bitcast_ln130_1_fu_5991_p1[22:0];

assign trunc_ln130_fu_5987_p1 = bitcast_ln130_fu_5974_p1[22:0];

assign trunc_ln139_1_fu_6153_p1 = bitcast_ln139_1_fu_6140_p1[22:0];

assign trunc_ln139_fu_6136_p1 = bitcast_ln139_fu_6123_p1[22:0];

assign xor_ln126_fu_5944_p2 = (bitcast_ln126_fu_5941_p1 ^ 32'd2147483648);

endmodule //FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1
