-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    regions_center_0_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_8_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_9_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_10_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_11_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_12_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_13_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_14_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_15_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_8_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_9_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_10_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_11_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_12_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_13_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_14_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_15_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_8_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_9_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_10_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_11_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_12_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_13_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_14_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_15_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_8_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_9_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_10_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_11_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_12_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_13_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_14_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_15_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_8_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_9_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_10_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_11_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_12_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_13_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_14_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_15_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_8_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_9_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_10_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_11_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_12_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_13_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_14_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_15_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_8_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_9_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_10_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_11_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_12_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_13_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_14_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_15_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_8_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_9_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_10_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_11_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_12_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_13_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_14_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_15_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_8_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_9_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_10_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_11_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_12_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_13_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_14_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_15_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_8_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_9_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_10_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_11_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_12_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_13_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_14_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_15_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_8_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_9_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_10_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_11_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_12_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_13_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_14_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_15_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_8_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_9_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_10_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_11_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_12_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_13_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_14_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_15_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    merge_2_out : OUT STD_LOGIC_VECTOR (3 downto 0);
    merge_2_out_ap_vld : OUT STD_LOGIC;
    merge_1_out : OUT STD_LOGIC_VECTOR (3 downto 0);
    merge_1_out_ap_vld : OUT STD_LOGIC;
    grp_fu_12156_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12156_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12156_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_12156_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12156_p_ce : OUT STD_LOGIC;
    grp_fu_12162_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12162_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12162_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12162_p_ce : OUT STD_LOGIC;
    grp_fu_12167_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12167_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12167_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_12167_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_12167_p_ce : OUT STD_LOGIC;
    grp_fu_12172_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12172_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_12172_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_12172_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_12172_p_ce : OUT STD_LOGIC );
end;


architecture behav of FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state24_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_state32_pp0_stage7_iter3 : BOOLEAN;
    signal ap_block_state40_pp0_stage7_iter4 : BOOLEAN;
    signal ap_block_state48_pp0_stage7_iter5 : BOOLEAN;
    signal ap_block_state56_pp0_stage7_iter6 : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal icmp_ln1027_reg_4421 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage7 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal reg_1665 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state34_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state42_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state50_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state58_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state23_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_state31_pp0_stage6_iter3 : BOOLEAN;
    signal ap_block_state39_pp0_stage6_iter4 : BOOLEAN;
    signal ap_block_state47_pp0_stage6_iter5 : BOOLEAN;
    signal ap_block_state55_pp0_stage6_iter6 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal icmp_ln1027_reg_4421_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_1_reg_4607 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_1_reg_4607_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state49_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state57_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal and_ln112_7_reg_4632 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_7_reg_4632_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_1671 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state22_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_state30_pp0_stage5_iter3 : BOOLEAN;
    signal ap_block_state38_pp0_stage5_iter4 : BOOLEAN;
    signal ap_block_state46_pp0_stage5_iter5 : BOOLEAN;
    signal ap_block_state54_pp0_stage5_iter6 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal icmp_ln1027_reg_4421_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1638_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1677 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln112_3_reg_4612 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_3_reg_4612_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal and_ln112_5_reg_4627 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_5_reg_4627_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_real_3_reg_4406 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_4406_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_4406_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_4406_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_4406_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_4406_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_4406_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_4406_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_4414 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_4414_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_4414_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_4414_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_4414_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_4414_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_4414_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1027_fu_1722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_4421_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_4421_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_4421_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_4421_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_4421_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_1732_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_4425 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_1758_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_4430 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_1780_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_4435 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_1802_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_4440 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_1824_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_4449 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_1846_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_4454 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1868_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_4463 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1890_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_4468 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1912_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_4473 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1934_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_4478 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_1956_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_reg_4487 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_1978_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_reg_4492 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_2000_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_reg_4501 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_2022_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_reg_4506 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_2044_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_reg_4511 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_2066_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_reg_4516 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_2088_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_reg_4525 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_2110_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_reg_4530 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_2132_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_reg_4539 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_2154_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_reg_4544 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_2176_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_reg_4549 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_2198_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_reg_4554 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_2220_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_reg_4563 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_2242_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_reg_4568 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln112_fu_2298_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_reg_4577 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state28_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state36_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state44_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state52_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state60_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal icmp_ln112_1_fu_2304_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_1_reg_4582 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_2_fu_2310_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_2_reg_4587 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_3_fu_2316_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_3_reg_4592 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_4597 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_4602 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_1_fu_2335_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state21_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state29_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state37_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state45_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_state53_pp0_stage4_iter6 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal and_ln112_1_reg_4607_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_3_fu_2416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_3_reg_4612_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_reg_4617 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_reg_4622 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_5_fu_2498_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_5_reg_4627_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_7_fu_2579_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_7_reg_4632_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_fu_2584_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_4637 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_4637_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_4637_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_4637_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_4637_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_4637_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_4637_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal d1_reg_4646 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1642_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_reg_4651 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1646_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_1_reg_4656 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_reg_4662 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state35_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state43_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state51_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state59_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal sub2_reg_4667 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_1_reg_4672 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_1_reg_4677 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub75_1_reg_4682 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub87_1_reg_4687 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_2_reg_4692 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_2_reg_4697 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_2_reg_4702 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub75_2_reg_4708 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub87_2_reg_4713 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_3_reg_4718 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_4723 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub87_3_reg_4728 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_4733 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_4733_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal d_3_reg_4738 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_4744 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_4744_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_4744_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_4749 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_4749_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_4749_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_reg_4754 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_2_fu_2629_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_2_reg_4759 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_6_fu_2636_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_6_reg_4766 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_10_fu_2643_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_10_reg_4773 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_reg_4780 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_reg_4785 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_14_fu_2650_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_14_reg_4790 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_16_fu_2697_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_16_reg_4797 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_7_fu_2744_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_7_reg_4802 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_reg_4807 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_11_fu_2791_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_11_reg_4812 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_reg_4817 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_15_fu_2838_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_15_reg_4822 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_1_reg_4827 : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_1_reg_4832 : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_2_reg_4837 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_2_reg_4842 : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_3_reg_4847 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_reg_4854 : STD_LOGIC_VECTOR (0 downto 0);
    signal distance_3_reg_4859 : STD_LOGIC_VECTOR (31 downto 0);
    signal sc_2_fu_2898_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sc_2_reg_4864 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_load_reg_4871 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_reg_4878 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_other_4_fu_3005_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_other_4_reg_4883 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_4_fu_3012_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_4_reg_4889 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_load_reg_4897 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_1_4_reg_4905 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_2_1_reg_4912 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_reg_4918 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter7_stage2 : STD_LOGIC;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal merge_1_fu_440 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_1_7_fu_3184_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal merge_2_fu_444 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_2_6_fu_3178_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_fu_448 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_3_fu_3172_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal merge_1_1_fu_452 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_2_fu_2612_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_4_fu_456 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_3_fu_2604_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_fu_460 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_3_fu_3024_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal tmp_other_fu_464 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_other_3_fu_3018_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_fu_1634_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1634_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal grp_fu_1638_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1638_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1642_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1642_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1646_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1646_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1651_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1651_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1655_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1655_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1659_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1659_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln104_fu_1728_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln104_1_fu_1754_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal bitcast_ln112_fu_2264_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_1_fu_2281_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_2267_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_fu_2277_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_25_fu_2284_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_1_fu_2294_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln112_1_fu_2326_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_fu_2330_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_fu_2322_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln112_2_fu_2341_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_3_fu_2358_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_2344_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_2_fu_2354_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_5_fu_2381_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_4_fu_2375_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_2361_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_3_fu_2371_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_7_fu_2399_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_6_fu_2393_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_3_fu_2405_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_2_fu_2411_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_2_fu_2387_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln112_4_fu_2422_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_5_fu_2439_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_2425_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_4_fu_2435_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_9_fu_2462_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_8_fu_2456_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_2442_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_5_fu_2452_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_11_fu_2480_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_10_fu_2474_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_4_fu_2468_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_5_fu_2486_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_4_fu_2492_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln112_6_fu_2503_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_7_fu_2520_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_2506_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_6_fu_2516_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_13_fu_2543_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_12_fu_2537_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_2523_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_7_fu_2533_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_15_fu_2561_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_14_fu_2555_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_6_fu_2549_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_7_fu_2567_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_6_fu_2573_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_real_fu_2594_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_2_fu_2599_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_fu_2589_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln116_fu_2657_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_2660_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_fu_2670_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_1_fu_2680_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_fu_2674_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_fu_2686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_fu_2692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_1_fu_2704_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_2707_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_1_fu_2717_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_3_fu_2727_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_2_fu_2721_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_1_fu_2733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_1_fu_2739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_2_fu_2751_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_fu_2754_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_2_fu_2764_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_5_fu_2774_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_4_fu_2768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_2_fu_2780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_2_fu_2786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_3_fu_2798_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_fu_2801_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_3_fu_2811_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_7_fu_2821_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_6_fu_2815_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_3_fu_2827_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_3_fu_2833_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln122_fu_2845_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_fu_2848_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln122_fu_2858_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln122_1_fu_2868_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln122_fu_2862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln122_fu_2874_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln126_fu_2885_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln126_fu_2888_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln122_fu_2880_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sc_fu_2894_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln130_fu_2918_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln130_1_fu_2935_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_2921_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln130_fu_2931_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln130_2_fu_2958_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_1_fu_2952_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_2938_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln130_1_fu_2948_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln130_4_fu_2976_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_3_fu_2970_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_1_fu_2964_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_2_fu_2982_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln130_fu_2988_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_fu_2912_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln130_1_fu_2994_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_fu_2999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln139_fu_3067_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln139_1_fu_3084_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_fu_3070_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln139_fu_3080_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln139_1_fu_3107_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln139_fu_3101_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_3087_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln139_1_fu_3097_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln139_3_fu_3125_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln139_2_fu_3119_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln139_1_fu_3113_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln139_2_fu_3131_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln139_fu_3137_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_3060_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln139_1_fu_3143_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln139_fu_3148_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal score_2_fu_3154_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_2_5_fu_3160_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_1_6_fu_3166_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp0_stage5_00001 : BOOLEAN;
    signal ap_block_pp0_stage6_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage7_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal grp_fu_1638_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1642_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1655_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1659_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_idle_pp0_0to6 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to7 : STD_LOGIC;
    signal ap_done_pending_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component FaultDetector_mux_164_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    faddfsub_32ns_32ns_32_8_full_dsp_1_U11 : component FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1638_p0,
        din1 => grp_fu_1638_p1,
        opcode => grp_fu_1638_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_1638_p2);

    faddfsub_32ns_32ns_32_8_full_dsp_1_U12 : component FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1642_p0,
        din1 => grp_fu_1642_p1,
        opcode => grp_fu_1642_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_1642_p2);

    fsub_32ns_32ns_32_8_full_dsp_1_U13 : component FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1646_p0,
        din1 => grp_fu_1646_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1646_p2);

    mux_164_32_1_1_U17 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_0_0,
        din1 => regions_center_1_0_0,
        din2 => regions_center_2_0_0,
        din3 => regions_center_3_0_0,
        din4 => regions_center_4_0_0,
        din5 => regions_center_5_0_0,
        din6 => regions_center_6_0_0,
        din7 => regions_center_7_0_0,
        din8 => regions_center_8_0_0,
        din9 => regions_center_9_0_0,
        din10 => regions_center_10_0_0,
        din11 => regions_center_11_0_0,
        din12 => regions_center_12_0_0,
        din13 => regions_center_13_0_0,
        din14 => regions_center_14_0_0,
        din15 => regions_center_15_0_0,
        din16 => trunc_ln104_fu_1728_p1,
        dout => tmp_s_fu_1732_p18);

    mux_164_32_1_1_U18 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_0_0,
        din1 => regions_center_1_0_0,
        din2 => regions_center_2_0_0,
        din3 => regions_center_3_0_0,
        din4 => regions_center_4_0_0,
        din5 => regions_center_5_0_0,
        din6 => regions_center_6_0_0,
        din7 => regions_center_7_0_0,
        din8 => regions_center_8_0_0,
        din9 => regions_center_9_0_0,
        din10 => regions_center_10_0_0,
        din11 => regions_center_11_0_0,
        din12 => regions_center_12_0_0,
        din13 => regions_center_13_0_0,
        din14 => regions_center_14_0_0,
        din15 => regions_center_15_0_0,
        din16 => trunc_ln104_1_fu_1754_p1,
        dout => tmp_1_fu_1758_p18);

    mux_164_32_1_1_U19 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_0_0,
        din1 => regions_max_1_0_0,
        din2 => regions_max_2_0_0,
        din3 => regions_max_3_0_0,
        din4 => regions_max_4_0_0,
        din5 => regions_max_5_0_0,
        din6 => regions_max_6_0_0,
        din7 => regions_max_7_0_0,
        din8 => regions_max_8_0_0,
        din9 => regions_max_9_0_0,
        din10 => regions_max_10_0_0,
        din11 => regions_max_11_0_0,
        din12 => regions_max_12_0_0,
        din13 => regions_max_13_0_0,
        din14 => regions_max_14_0_0,
        din15 => regions_max_15_0_0,
        din16 => trunc_ln104_fu_1728_p1,
        dout => tmp_2_fu_1780_p18);

    mux_164_32_1_1_U20 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_0_0,
        din1 => regions_min_1_0_0,
        din2 => regions_min_2_0_0,
        din3 => regions_min_3_0_0,
        din4 => regions_min_4_0_0,
        din5 => regions_min_5_0_0,
        din6 => regions_min_6_0_0,
        din7 => regions_min_7_0_0,
        din8 => regions_min_8_0_0,
        din9 => regions_min_9_0_0,
        din10 => regions_min_10_0_0,
        din11 => regions_min_11_0_0,
        din12 => regions_min_12_0_0,
        din13 => regions_min_13_0_0,
        din14 => regions_min_14_0_0,
        din15 => regions_min_15_0_0,
        din16 => trunc_ln104_fu_1728_p1,
        dout => tmp_3_fu_1802_p18);

    mux_164_32_1_1_U21 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_0_0,
        din1 => regions_max_1_0_0,
        din2 => regions_max_2_0_0,
        din3 => regions_max_3_0_0,
        din4 => regions_max_4_0_0,
        din5 => regions_max_5_0_0,
        din6 => regions_max_6_0_0,
        din7 => regions_max_7_0_0,
        din8 => regions_max_8_0_0,
        din9 => regions_max_9_0_0,
        din10 => regions_max_10_0_0,
        din11 => regions_max_11_0_0,
        din12 => regions_max_12_0_0,
        din13 => regions_max_13_0_0,
        din14 => regions_max_14_0_0,
        din15 => regions_max_15_0_0,
        din16 => trunc_ln104_1_fu_1754_p1,
        dout => tmp_4_fu_1824_p18);

    mux_164_32_1_1_U22 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_0_0,
        din1 => regions_min_1_0_0,
        din2 => regions_min_2_0_0,
        din3 => regions_min_3_0_0,
        din4 => regions_min_4_0_0,
        din5 => regions_min_5_0_0,
        din6 => regions_min_6_0_0,
        din7 => regions_min_7_0_0,
        din8 => regions_min_8_0_0,
        din9 => regions_min_9_0_0,
        din10 => regions_min_10_0_0,
        din11 => regions_min_11_0_0,
        din12 => regions_min_12_0_0,
        din13 => regions_min_13_0_0,
        din14 => regions_min_14_0_0,
        din15 => regions_min_15_0_0,
        din16 => trunc_ln104_1_fu_1754_p1,
        dout => tmp_5_fu_1846_p18);

    mux_164_32_1_1_U23 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_1_0,
        din1 => regions_center_1_1_0,
        din2 => regions_center_2_1_0,
        din3 => regions_center_3_1_0,
        din4 => regions_center_4_1_0,
        din5 => regions_center_5_1_0,
        din6 => regions_center_6_1_0,
        din7 => regions_center_7_1_0,
        din8 => regions_center_8_1_0,
        din9 => regions_center_9_1_0,
        din10 => regions_center_10_1_0,
        din11 => regions_center_11_1_0,
        din12 => regions_center_12_1_0,
        din13 => regions_center_13_1_0,
        din14 => regions_center_14_1_0,
        din15 => regions_center_15_1_0,
        din16 => trunc_ln104_fu_1728_p1,
        dout => tmp_6_fu_1868_p18);

    mux_164_32_1_1_U24 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_1_0,
        din1 => regions_center_1_1_0,
        din2 => regions_center_2_1_0,
        din3 => regions_center_3_1_0,
        din4 => regions_center_4_1_0,
        din5 => regions_center_5_1_0,
        din6 => regions_center_6_1_0,
        din7 => regions_center_7_1_0,
        din8 => regions_center_8_1_0,
        din9 => regions_center_9_1_0,
        din10 => regions_center_10_1_0,
        din11 => regions_center_11_1_0,
        din12 => regions_center_12_1_0,
        din13 => regions_center_13_1_0,
        din14 => regions_center_14_1_0,
        din15 => regions_center_15_1_0,
        din16 => trunc_ln104_1_fu_1754_p1,
        dout => tmp_7_fu_1890_p18);

    mux_164_32_1_1_U25 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_1_0,
        din1 => regions_max_1_1_0,
        din2 => regions_max_2_1_0,
        din3 => regions_max_3_1_0,
        din4 => regions_max_4_1_0,
        din5 => regions_max_5_1_0,
        din6 => regions_max_6_1_0,
        din7 => regions_max_7_1_0,
        din8 => regions_max_8_1_0,
        din9 => regions_max_9_1_0,
        din10 => regions_max_10_1_0,
        din11 => regions_max_11_1_0,
        din12 => regions_max_12_1_0,
        din13 => regions_max_13_1_0,
        din14 => regions_max_14_1_0,
        din15 => regions_max_15_1_0,
        din16 => trunc_ln104_fu_1728_p1,
        dout => tmp_8_fu_1912_p18);

    mux_164_32_1_1_U26 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_1_0,
        din1 => regions_min_1_1_0,
        din2 => regions_min_2_1_0,
        din3 => regions_min_3_1_0,
        din4 => regions_min_4_1_0,
        din5 => regions_min_5_1_0,
        din6 => regions_min_6_1_0,
        din7 => regions_min_7_1_0,
        din8 => regions_min_8_1_0,
        din9 => regions_min_9_1_0,
        din10 => regions_min_10_1_0,
        din11 => regions_min_11_1_0,
        din12 => regions_min_12_1_0,
        din13 => regions_min_13_1_0,
        din14 => regions_min_14_1_0,
        din15 => regions_min_15_1_0,
        din16 => trunc_ln104_fu_1728_p1,
        dout => tmp_9_fu_1934_p18);

    mux_164_32_1_1_U27 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_1_0,
        din1 => regions_max_1_1_0,
        din2 => regions_max_2_1_0,
        din3 => regions_max_3_1_0,
        din4 => regions_max_4_1_0,
        din5 => regions_max_5_1_0,
        din6 => regions_max_6_1_0,
        din7 => regions_max_7_1_0,
        din8 => regions_max_8_1_0,
        din9 => regions_max_9_1_0,
        din10 => regions_max_10_1_0,
        din11 => regions_max_11_1_0,
        din12 => regions_max_12_1_0,
        din13 => regions_max_13_1_0,
        din14 => regions_max_14_1_0,
        din15 => regions_max_15_1_0,
        din16 => trunc_ln104_1_fu_1754_p1,
        dout => tmp_10_fu_1956_p18);

    mux_164_32_1_1_U28 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_1_0,
        din1 => regions_min_1_1_0,
        din2 => regions_min_2_1_0,
        din3 => regions_min_3_1_0,
        din4 => regions_min_4_1_0,
        din5 => regions_min_5_1_0,
        din6 => regions_min_6_1_0,
        din7 => regions_min_7_1_0,
        din8 => regions_min_8_1_0,
        din9 => regions_min_9_1_0,
        din10 => regions_min_10_1_0,
        din11 => regions_min_11_1_0,
        din12 => regions_min_12_1_0,
        din13 => regions_min_13_1_0,
        din14 => regions_min_14_1_0,
        din15 => regions_min_15_1_0,
        din16 => trunc_ln104_1_fu_1754_p1,
        dout => tmp_11_fu_1978_p18);

    mux_164_32_1_1_U29 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_2_0,
        din1 => regions_center_1_2_0,
        din2 => regions_center_2_2_0,
        din3 => regions_center_3_2_0,
        din4 => regions_center_4_2_0,
        din5 => regions_center_5_2_0,
        din6 => regions_center_6_2_0,
        din7 => regions_center_7_2_0,
        din8 => regions_center_8_2_0,
        din9 => regions_center_9_2_0,
        din10 => regions_center_10_2_0,
        din11 => regions_center_11_2_0,
        din12 => regions_center_12_2_0,
        din13 => regions_center_13_2_0,
        din14 => regions_center_14_2_0,
        din15 => regions_center_15_2_0,
        din16 => trunc_ln104_fu_1728_p1,
        dout => tmp_12_fu_2000_p18);

    mux_164_32_1_1_U30 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_2_0,
        din1 => regions_center_1_2_0,
        din2 => regions_center_2_2_0,
        din3 => regions_center_3_2_0,
        din4 => regions_center_4_2_0,
        din5 => regions_center_5_2_0,
        din6 => regions_center_6_2_0,
        din7 => regions_center_7_2_0,
        din8 => regions_center_8_2_0,
        din9 => regions_center_9_2_0,
        din10 => regions_center_10_2_0,
        din11 => regions_center_11_2_0,
        din12 => regions_center_12_2_0,
        din13 => regions_center_13_2_0,
        din14 => regions_center_14_2_0,
        din15 => regions_center_15_2_0,
        din16 => trunc_ln104_1_fu_1754_p1,
        dout => tmp_13_fu_2022_p18);

    mux_164_32_1_1_U31 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_2_0,
        din1 => regions_max_1_2_0,
        din2 => regions_max_2_2_0,
        din3 => regions_max_3_2_0,
        din4 => regions_max_4_2_0,
        din5 => regions_max_5_2_0,
        din6 => regions_max_6_2_0,
        din7 => regions_max_7_2_0,
        din8 => regions_max_8_2_0,
        din9 => regions_max_9_2_0,
        din10 => regions_max_10_2_0,
        din11 => regions_max_11_2_0,
        din12 => regions_max_12_2_0,
        din13 => regions_max_13_2_0,
        din14 => regions_max_14_2_0,
        din15 => regions_max_15_2_0,
        din16 => trunc_ln104_fu_1728_p1,
        dout => tmp_14_fu_2044_p18);

    mux_164_32_1_1_U32 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_2_0,
        din1 => regions_min_1_2_0,
        din2 => regions_min_2_2_0,
        din3 => regions_min_3_2_0,
        din4 => regions_min_4_2_0,
        din5 => regions_min_5_2_0,
        din6 => regions_min_6_2_0,
        din7 => regions_min_7_2_0,
        din8 => regions_min_8_2_0,
        din9 => regions_min_9_2_0,
        din10 => regions_min_10_2_0,
        din11 => regions_min_11_2_0,
        din12 => regions_min_12_2_0,
        din13 => regions_min_13_2_0,
        din14 => regions_min_14_2_0,
        din15 => regions_min_15_2_0,
        din16 => trunc_ln104_fu_1728_p1,
        dout => tmp_15_fu_2066_p18);

    mux_164_32_1_1_U33 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_2_0,
        din1 => regions_max_1_2_0,
        din2 => regions_max_2_2_0,
        din3 => regions_max_3_2_0,
        din4 => regions_max_4_2_0,
        din5 => regions_max_5_2_0,
        din6 => regions_max_6_2_0,
        din7 => regions_max_7_2_0,
        din8 => regions_max_8_2_0,
        din9 => regions_max_9_2_0,
        din10 => regions_max_10_2_0,
        din11 => regions_max_11_2_0,
        din12 => regions_max_12_2_0,
        din13 => regions_max_13_2_0,
        din14 => regions_max_14_2_0,
        din15 => regions_max_15_2_0,
        din16 => trunc_ln104_1_fu_1754_p1,
        dout => tmp_16_fu_2088_p18);

    mux_164_32_1_1_U34 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_2_0,
        din1 => regions_min_1_2_0,
        din2 => regions_min_2_2_0,
        din3 => regions_min_3_2_0,
        din4 => regions_min_4_2_0,
        din5 => regions_min_5_2_0,
        din6 => regions_min_6_2_0,
        din7 => regions_min_7_2_0,
        din8 => regions_min_8_2_0,
        din9 => regions_min_9_2_0,
        din10 => regions_min_10_2_0,
        din11 => regions_min_11_2_0,
        din12 => regions_min_12_2_0,
        din13 => regions_min_13_2_0,
        din14 => regions_min_14_2_0,
        din15 => regions_min_15_2_0,
        din16 => trunc_ln104_1_fu_1754_p1,
        dout => tmp_17_fu_2110_p18);

    mux_164_32_1_1_U35 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_3_0,
        din1 => regions_center_1_3_0,
        din2 => regions_center_2_3_0,
        din3 => regions_center_3_3_0,
        din4 => regions_center_4_3_0,
        din5 => regions_center_5_3_0,
        din6 => regions_center_6_3_0,
        din7 => regions_center_7_3_0,
        din8 => regions_center_8_3_0,
        din9 => regions_center_9_3_0,
        din10 => regions_center_10_3_0,
        din11 => regions_center_11_3_0,
        din12 => regions_center_12_3_0,
        din13 => regions_center_13_3_0,
        din14 => regions_center_14_3_0,
        din15 => regions_center_15_3_0,
        din16 => trunc_ln104_fu_1728_p1,
        dout => tmp_18_fu_2132_p18);

    mux_164_32_1_1_U36 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_3_0,
        din1 => regions_center_1_3_0,
        din2 => regions_center_2_3_0,
        din3 => regions_center_3_3_0,
        din4 => regions_center_4_3_0,
        din5 => regions_center_5_3_0,
        din6 => regions_center_6_3_0,
        din7 => regions_center_7_3_0,
        din8 => regions_center_8_3_0,
        din9 => regions_center_9_3_0,
        din10 => regions_center_10_3_0,
        din11 => regions_center_11_3_0,
        din12 => regions_center_12_3_0,
        din13 => regions_center_13_3_0,
        din14 => regions_center_14_3_0,
        din15 => regions_center_15_3_0,
        din16 => trunc_ln104_1_fu_1754_p1,
        dout => tmp_19_fu_2154_p18);

    mux_164_32_1_1_U37 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_3_0,
        din1 => regions_max_1_3_0,
        din2 => regions_max_2_3_0,
        din3 => regions_max_3_3_0,
        din4 => regions_max_4_3_0,
        din5 => regions_max_5_3_0,
        din6 => regions_max_6_3_0,
        din7 => regions_max_7_3_0,
        din8 => regions_max_8_3_0,
        din9 => regions_max_9_3_0,
        din10 => regions_max_10_3_0,
        din11 => regions_max_11_3_0,
        din12 => regions_max_12_3_0,
        din13 => regions_max_13_3_0,
        din14 => regions_max_14_3_0,
        din15 => regions_max_15_3_0,
        din16 => trunc_ln104_fu_1728_p1,
        dout => tmp_20_fu_2176_p18);

    mux_164_32_1_1_U38 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_3_0,
        din1 => regions_min_1_3_0,
        din2 => regions_min_2_3_0,
        din3 => regions_min_3_3_0,
        din4 => regions_min_4_3_0,
        din5 => regions_min_5_3_0,
        din6 => regions_min_6_3_0,
        din7 => regions_min_7_3_0,
        din8 => regions_min_8_3_0,
        din9 => regions_min_9_3_0,
        din10 => regions_min_10_3_0,
        din11 => regions_min_11_3_0,
        din12 => regions_min_12_3_0,
        din13 => regions_min_13_3_0,
        din14 => regions_min_14_3_0,
        din15 => regions_min_15_3_0,
        din16 => trunc_ln104_fu_1728_p1,
        dout => tmp_21_fu_2198_p18);

    mux_164_32_1_1_U39 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_3_0,
        din1 => regions_max_1_3_0,
        din2 => regions_max_2_3_0,
        din3 => regions_max_3_3_0,
        din4 => regions_max_4_3_0,
        din5 => regions_max_5_3_0,
        din6 => regions_max_6_3_0,
        din7 => regions_max_7_3_0,
        din8 => regions_max_8_3_0,
        din9 => regions_max_9_3_0,
        din10 => regions_max_10_3_0,
        din11 => regions_max_11_3_0,
        din12 => regions_max_12_3_0,
        din13 => regions_max_13_3_0,
        din14 => regions_max_14_3_0,
        din15 => regions_max_15_3_0,
        din16 => trunc_ln104_1_fu_1754_p1,
        dout => tmp_22_fu_2220_p18);

    mux_164_32_1_1_U40 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_3_0,
        din1 => regions_min_1_3_0,
        din2 => regions_min_2_3_0,
        din3 => regions_min_3_3_0,
        din4 => regions_min_4_3_0,
        din5 => regions_min_5_3_0,
        din6 => regions_min_6_3_0,
        din7 => regions_min_7_3_0,
        din8 => regions_min_8_3_0,
        din9 => regions_min_9_3_0,
        din10 => regions_min_10_3_0,
        din11 => regions_min_11_3_0,
        din12 => regions_min_12_3_0,
        din13 => regions_min_13_3_0,
        din14 => regions_min_14_3_0,
        din15 => regions_min_15_3_0,
        din16 => trunc_ln104_1_fu_1754_p1,
        dout => tmp_23_fu_2242_p18);

    flow_control_loop_pipe_sequential_init_U : component FaultDetector_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage7,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2) or ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    k_real_4_fu_456_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    k_real_4_fu_456 <= ap_const_lv32_1;
                elsif (((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    k_real_4_fu_456 <= k_real_3_fu_2604_p3;
                end if;
            end if; 
        end if;
    end process;

    merge_1_1_fu_452_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    merge_1_1_fu_452 <= ap_const_lv32_0;
                elsif (((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    merge_1_1_fu_452 <= i_real_2_fu_2612_p3;
                end if;
            end if; 
        end if;
    end process;

    merge_1_fu_440_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                merge_1_fu_440 <= ap_const_lv32_FFFFFFFF;
            elsif (((icmp_ln1027_reg_4421_pp0_iter7_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                merge_1_fu_440 <= merge_1_7_fu_3184_p3;
            end if; 
        end if;
    end process;

    merge_2_fu_444_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                merge_2_fu_444 <= ap_const_lv32_FFFFFFFF;
            elsif (((icmp_ln1027_reg_4421_pp0_iter7_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                merge_2_fu_444 <= merge_2_6_fu_3178_p3;
            end if; 
        end if;
    end process;

    score_fu_448_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                score_fu_448 <= ap_const_lv32_0;
            elsif (((icmp_ln1027_reg_4421_pp0_iter7_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                score_fu_448 <= score_3_fu_3172_p3;
            end if; 
        end if;
    end process;

    tmp_other_fu_464_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    tmp_other_fu_464 <= ap_const_lv32_FFFFFFFF;
                elsif (((icmp_ln1027_reg_4421_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
                    tmp_other_fu_464 <= tmp_other_3_fu_3018_p3;
                end if;
            end if; 
        end if;
    end process;

    tmp_score_fu_460_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    tmp_score_fu_460 <= ap_const_lv32_0;
                elsif (((icmp_ln1027_reg_4421_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
                    tmp_score_fu_460 <= tmp_score_3_fu_3024_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                and_ln112_1_reg_4607 <= and_ln112_1_fu_2335_p2;
                and_ln112_3_reg_4612 <= and_ln112_3_fu_2416_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                and_ln112_1_reg_4607_pp0_iter1_reg <= and_ln112_1_reg_4607;
                and_ln112_1_reg_4607_pp0_iter2_reg <= and_ln112_1_reg_4607_pp0_iter1_reg;
                and_ln112_3_reg_4612_pp0_iter1_reg <= and_ln112_3_reg_4612;
                and_ln112_3_reg_4612_pp0_iter2_reg <= and_ln112_3_reg_4612_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                and_ln112_5_reg_4627 <= and_ln112_5_fu_2498_p2;
                and_ln112_7_reg_4632 <= and_ln112_7_fu_2579_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                and_ln112_5_reg_4627_pp0_iter1_reg <= and_ln112_5_reg_4627;
                and_ln112_5_reg_4627_pp0_iter2_reg <= and_ln112_5_reg_4627_pp0_iter1_reg;
                and_ln112_7_reg_4632_pp0_iter1_reg <= and_ln112_7_reg_4632;
                and_ln112_7_reg_4632_pp0_iter2_reg <= and_ln112_7_reg_4632_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                d1_1_reg_4672 <= grp_fu_1642_p2;
                d2_1_reg_4677 <= grp_fu_1646_p2;
                sub2_reg_4667 <= grp_fu_1638_p2;
                sub_reg_4662 <= grp_fu_12156_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                d1_2_reg_4692 <= grp_fu_1642_p2;
                d2_2_reg_4697 <= grp_fu_1646_p2;
                sub75_1_reg_4682 <= grp_fu_12156_p_dout0;
                sub87_1_reg_4687 <= grp_fu_1638_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                d1_3_reg_4718 <= grp_fu_1646_p2;
                d_2_reg_4702 <= grp_fu_12156_p_dout0;
                sub75_2_reg_4708 <= grp_fu_1638_p2;
                sub87_2_reg_4713 <= grp_fu_1642_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                d1_reg_4646 <= grp_fu_1638_p2;
                d2_reg_4651 <= grp_fu_1642_p2;
                d_1_reg_4656 <= grp_fu_1646_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                d_3_reg_4738 <= grp_fu_12156_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                distance_1_reg_4827 <= grp_fu_1642_p2;
                overlap_1_reg_4832 <= grp_fu_12162_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                distance_2_reg_4842 <= grp_fu_1638_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                distance_3_reg_4859 <= grp_fu_1642_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_4421_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                distance_reg_4754 <= grp_fu_1642_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                i_real_3_reg_4406 <= merge_1_1_fu_452;
                i_real_3_reg_4406_pp0_iter1_reg <= i_real_3_reg_4406;
                i_real_3_reg_4406_pp0_iter2_reg <= i_real_3_reg_4406_pp0_iter1_reg;
                i_real_3_reg_4406_pp0_iter3_reg <= i_real_3_reg_4406_pp0_iter2_reg;
                i_real_3_reg_4406_pp0_iter4_reg <= i_real_3_reg_4406_pp0_iter3_reg;
                i_real_3_reg_4406_pp0_iter5_reg <= i_real_3_reg_4406_pp0_iter4_reg;
                i_real_3_reg_4406_pp0_iter6_reg <= i_real_3_reg_4406_pp0_iter5_reg;
                i_real_3_reg_4406_pp0_iter7_reg <= i_real_3_reg_4406_pp0_iter6_reg;
                icmp_ln1027_reg_4421 <= icmp_ln1027_fu_1722_p2;
                icmp_ln1027_reg_4421_pp0_iter1_reg <= icmp_ln1027_reg_4421;
                icmp_ln1027_reg_4421_pp0_iter2_reg <= icmp_ln1027_reg_4421_pp0_iter1_reg;
                icmp_ln1027_reg_4421_pp0_iter3_reg <= icmp_ln1027_reg_4421_pp0_iter2_reg;
                icmp_ln1027_reg_4421_pp0_iter4_reg <= icmp_ln1027_reg_4421_pp0_iter3_reg;
                icmp_ln1027_reg_4421_pp0_iter5_reg <= icmp_ln1027_reg_4421_pp0_iter4_reg;
                icmp_ln1027_reg_4421_pp0_iter6_reg <= icmp_ln1027_reg_4421_pp0_iter5_reg;
                icmp_ln1027_reg_4421_pp0_iter7_reg <= icmp_ln1027_reg_4421_pp0_iter6_reg;
                k_real_5_reg_4414 <= k_real_4_fu_456;
                k_real_5_reg_4414_pp0_iter1_reg <= k_real_5_reg_4414;
                k_real_5_reg_4414_pp0_iter2_reg <= k_real_5_reg_4414_pp0_iter1_reg;
                k_real_5_reg_4414_pp0_iter3_reg <= k_real_5_reg_4414_pp0_iter2_reg;
                k_real_5_reg_4414_pp0_iter4_reg <= k_real_5_reg_4414_pp0_iter3_reg;
                k_real_5_reg_4414_pp0_iter5_reg <= k_real_5_reg_4414_pp0_iter4_reg;
                k_real_5_reg_4414_pp0_iter6_reg <= k_real_5_reg_4414_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1019_reg_4637 <= icmp_ln1019_fu_2584_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1019_reg_4637_pp0_iter2_reg <= icmp_ln1019_reg_4637;
                icmp_ln1019_reg_4637_pp0_iter3_reg <= icmp_ln1019_reg_4637_pp0_iter2_reg;
                icmp_ln1019_reg_4637_pp0_iter4_reg <= icmp_ln1019_reg_4637_pp0_iter3_reg;
                icmp_ln1019_reg_4637_pp0_iter5_reg <= icmp_ln1019_reg_4637_pp0_iter4_reg;
                icmp_ln1019_reg_4637_pp0_iter6_reg <= icmp_ln1019_reg_4637_pp0_iter5_reg;
                icmp_ln1019_reg_4637_pp0_iter7_reg <= icmp_ln1019_reg_4637_pp0_iter6_reg;
                mul_2_reg_4744_pp0_iter3_reg <= mul_2_reg_4744;
                mul_2_reg_4744_pp0_iter4_reg <= mul_2_reg_4744_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                icmp_ln112_1_reg_4582 <= icmp_ln112_1_fu_2304_p2;
                icmp_ln112_2_reg_4587 <= icmp_ln112_2_fu_2310_p2;
                icmp_ln112_3_reg_4592 <= icmp_ln112_3_fu_2316_p2;
                icmp_ln112_reg_4577 <= icmp_ln112_fu_2298_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                merge_1_4_reg_4905 <= merge_1_fu_440;
                merge_2_1_reg_4912 <= merge_2_fu_444;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                mul_1_reg_4733 <= grp_fu_12162_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                mul_1_reg_4733_pp0_iter2_reg <= mul_1_reg_4733;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_2_reg_4744 <= grp_fu_12162_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_4421_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul_3_reg_4749 <= grp_fu_12162_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul_3_reg_4749_pp0_iter3_reg <= mul_3_reg_4749;
                mul_3_reg_4749_pp0_iter4_reg <= mul_3_reg_4749_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                mul_reg_4723 <= grp_fu_12162_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_4421_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ov_10_reg_4773 <= ov_10_fu_2643_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ov_11_reg_4812 <= ov_11_fu_2791_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1027_reg_4421_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                ov_14_reg_4790 <= ov_14_fu_2650_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                ov_15_reg_4822 <= ov_15_fu_2838_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                ov_16_reg_4797 <= ov_16_fu_2697_p3;
                ov_7_reg_4802 <= ov_7_fu_2744_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_4421_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                ov_2_reg_4759 <= ov_2_fu_2629_p3;
                ov_6_reg_4766 <= ov_6_fu_2636_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                overlap_2_reg_4837 <= grp_fu_12162_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                overlap_3_reg_4847 <= grp_fu_12162_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_7_reg_4632_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_4421_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_4421_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_7_reg_4632_pp0_iter2_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_0 = and_ln112_1_reg_4607_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_4421_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_4421_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_1_reg_4607_pp0_iter2_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_1665 <= grp_fu_12156_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_7_reg_4632) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_7_reg_4632) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then
                reg_1671 <= grp_fu_12156_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_5_reg_4627_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_4421_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_4421_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_5_reg_4627_pp0_iter2_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_lv1_0 = and_ln112_3_reg_4612_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_4421_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_4421_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_3_reg_4612_pp0_iter2_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_1677 <= grp_fu_1638_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                sc_2_reg_4864 <= sc_2_fu_2898_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                score_load_reg_4897 <= score_fu_448;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln112_7_reg_4632) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                sub87_3_reg_4728 <= grp_fu_1638_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_fu_1722_p2 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_10_reg_4487 <= tmp_10_fu_1956_p18;
                tmp_11_reg_4492 <= tmp_11_fu_1978_p18;
                tmp_12_reg_4501 <= tmp_12_fu_2000_p18;
                tmp_13_reg_4506 <= tmp_13_fu_2022_p18;
                tmp_14_reg_4511 <= tmp_14_fu_2044_p18;
                tmp_15_reg_4516 <= tmp_15_fu_2066_p18;
                tmp_16_reg_4525 <= tmp_16_fu_2088_p18;
                tmp_17_reg_4530 <= tmp_17_fu_2110_p18;
                tmp_18_reg_4539 <= tmp_18_fu_2132_p18;
                tmp_19_reg_4544 <= tmp_19_fu_2154_p18;
                tmp_1_reg_4430 <= tmp_1_fu_1758_p18;
                tmp_20_reg_4549 <= tmp_20_fu_2176_p18;
                tmp_21_reg_4554 <= tmp_21_fu_2198_p18;
                tmp_22_reg_4563 <= tmp_22_fu_2220_p18;
                tmp_23_reg_4568 <= tmp_23_fu_2242_p18;
                tmp_2_reg_4435 <= tmp_2_fu_1780_p18;
                tmp_3_reg_4440 <= tmp_3_fu_1802_p18;
                tmp_4_reg_4449 <= tmp_4_fu_1824_p18;
                tmp_5_reg_4454 <= tmp_5_fu_1846_p18;
                tmp_6_reg_4463 <= tmp_6_fu_1868_p18;
                tmp_7_reg_4468 <= tmp_7_fu_1890_p18;
                tmp_8_reg_4473 <= tmp_8_fu_1912_p18;
                tmp_9_reg_4478 <= tmp_9_fu_1934_p18;
                tmp_s_reg_4425 <= tmp_s_fu_1732_p18;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_26_reg_4597 <= grp_fu_12167_p_dout0;
                tmp_31_reg_4602 <= grp_fu_12172_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_4421_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_28_reg_4780 <= grp_fu_12167_p_dout0;
                tmp_33_reg_4785 <= grp_fu_12172_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                tmp_36_reg_4617 <= grp_fu_12167_p_dout0;
                tmp_41_reg_4622 <= grp_fu_12172_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_38_reg_4807 <= grp_fu_12167_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_43_reg_4817 <= grp_fu_12167_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_45_reg_4854 <= grp_fu_12172_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_48_reg_4878 <= grp_fu_12167_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421_pp0_iter7_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_51_reg_4918 <= grp_fu_12172_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                tmp_other_4_reg_4883 <= tmp_other_4_fu_3005_p3;
                tmp_score_4_reg_4889 <= tmp_score_4_fu_3012_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_4421_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_score_load_reg_4871 <= tmp_score_fu_460;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage7_subdone, ap_block_pp0_stage2_subdone, ap_condition_exit_pp0_iter7_stage2, ap_block_pp0_stage3_subdone, ap_idle_pp0_0to6, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to7, ap_done_pending_pp0, ap_block_pp0_stage1_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_done_pending_pp0 = ap_const_logic_0) and (ap_idle_pp0_1to7 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    and_ln112_1_fu_2335_p2 <= (or_ln112_fu_2322_p2 and and_ln112_fu_2330_p2);
    and_ln112_2_fu_2411_p2 <= (tmp_31_reg_4602 and or_ln112_3_fu_2405_p2);
    and_ln112_3_fu_2416_p2 <= (or_ln112_2_fu_2387_p2 and and_ln112_2_fu_2411_p2);
    and_ln112_4_fu_2492_p2 <= (or_ln112_5_fu_2486_p2 and or_ln112_4_fu_2468_p2);
    and_ln112_5_fu_2498_p2 <= (tmp_36_reg_4617 and and_ln112_4_fu_2492_p2);
    and_ln112_6_fu_2573_p2 <= (or_ln112_7_fu_2567_p2 and or_ln112_6_fu_2549_p2);
    and_ln112_7_fu_2579_p2 <= (tmp_41_reg_4622 and and_ln112_6_fu_2573_p2);
    and_ln112_fu_2330_p2 <= (tmp_26_reg_4597 and or_ln112_1_fu_2326_p2);
    and_ln116_1_fu_2739_p2 <= (tmp_33_reg_4785 and or_ln116_1_fu_2733_p2);
    and_ln116_2_fu_2786_p2 <= (tmp_38_reg_4807 and or_ln116_2_fu_2780_p2);
    and_ln116_3_fu_2833_p2 <= (tmp_43_reg_4817 and or_ln116_3_fu_2827_p2);
    and_ln116_fu_2692_p2 <= (tmp_28_reg_4780 and or_ln116_fu_2686_p2);
    and_ln122_fu_2880_p2 <= (tmp_45_reg_4854 and or_ln122_fu_2874_p2);
    and_ln130_1_fu_2994_p2 <= (tmp_48_reg_4878 and and_ln130_fu_2988_p2);
    and_ln130_fu_2988_p2 <= (or_ln130_2_fu_2982_p2 and or_ln130_1_fu_2964_p2);
    and_ln139_1_fu_3143_p2 <= (tmp_51_reg_4918 and and_ln139_fu_3137_p2);
    and_ln139_fu_3137_p2 <= (or_ln139_2_fu_3131_p2 and or_ln139_1_fu_3113_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage7_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage6_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage7_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage6_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage7_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage5_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage6_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage7_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage7_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone, icmp_ln1027_reg_4421)
    begin
        if (((icmp_ln1027_reg_4421 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter7_stage2_assign_proc : process(ap_enable_reg_pp0_iter7, icmp_ln1027_reg_4421_pp0_iter7_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone)
    begin
        if (((icmp_ln1027_reg_4421_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_condition_exit_pp0_iter7_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter7_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_done_pending_pp0_assign_proc : process(ap_loop_exit_ready, ap_loop_exit_ready_pp0_iter1_reg, ap_loop_exit_ready_pp0_iter2_reg, ap_loop_exit_ready_pp0_iter3_reg, ap_loop_exit_ready_pp0_iter4_reg, ap_loop_exit_ready_pp0_iter5_reg, ap_loop_exit_ready_pp0_iter6_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (not(((ap_loop_exit_ready = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_0)))) then 
            ap_done_pending_pp0 <= ap_const_logic_1;
        else 
            ap_done_pending_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to6_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to6 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to7_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to7 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to7 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage7;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln112_1_fu_2281_p1 <= tmp_5_reg_4454;
    bitcast_ln112_2_fu_2341_p1 <= tmp_9_reg_4478;
    bitcast_ln112_3_fu_2358_p1 <= tmp_11_reg_4492;
    bitcast_ln112_4_fu_2422_p1 <= tmp_15_reg_4516;
    bitcast_ln112_5_fu_2439_p1 <= tmp_17_reg_4530;
    bitcast_ln112_6_fu_2503_p1 <= tmp_21_reg_4554;
    bitcast_ln112_7_fu_2520_p1 <= tmp_23_reg_4568;
    bitcast_ln112_fu_2264_p1 <= tmp_3_reg_4440;
    bitcast_ln116_1_fu_2704_p1 <= ov_6_reg_4766;
    bitcast_ln116_2_fu_2751_p1 <= ov_10_reg_4773;
    bitcast_ln116_3_fu_2798_p1 <= ov_14_reg_4790;
    bitcast_ln116_fu_2657_p1 <= ov_2_reg_4759;
    bitcast_ln122_fu_2845_p1 <= overlap_3_reg_4847;
    bitcast_ln126_fu_2885_p1 <= distance_3_reg_4859;
    bitcast_ln130_1_fu_2935_p1 <= tmp_score_load_reg_4871;
    bitcast_ln130_fu_2918_p1 <= sc_2_reg_4864;
    bitcast_ln139_1_fu_3084_p1 <= score_load_reg_4897;
    bitcast_ln139_fu_3067_p1 <= tmp_score_4_reg_4889;
    grp_fu_12156_p_ce <= ap_const_logic_1;
    grp_fu_12156_p_din0 <= grp_fu_1634_p0;
    grp_fu_12156_p_din1 <= grp_fu_1634_p1;
    grp_fu_12156_p_opcode <= ap_const_lv2_1(1 - 1 downto 0);
    grp_fu_12162_p_ce <= ap_const_logic_1;
    grp_fu_12162_p_din0 <= grp_fu_1651_p0;
    grp_fu_12162_p_din1 <= grp_fu_1651_p1;
    grp_fu_12167_p_ce <= ap_const_logic_1;
    grp_fu_12167_p_din0 <= grp_fu_1655_p0;
    grp_fu_12167_p_din1 <= grp_fu_1655_p1;
    grp_fu_12167_p_opcode <= grp_fu_1655_opcode;
    grp_fu_12172_p_ce <= ap_const_logic_1;
    grp_fu_12172_p_din0 <= grp_fu_1659_p0;
    grp_fu_12172_p_din1 <= grp_fu_1659_p1;
    grp_fu_12172_p_opcode <= grp_fu_1659_opcode;

    grp_fu_1634_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_4421, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, and_ln112_7_reg_4632, reg_1671, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_4421_pp0_iter1_reg, tmp_s_reg_4425, tmp_5_reg_4454, tmp_11_reg_4492, tmp_12_reg_4501, tmp_18_reg_4539, tmp_22_reg_4563, tmp_23_reg_4568, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, and_ln112_1_reg_4607_pp0_iter1_reg, and_ln112_7_reg_4632_pp0_iter1_reg, d1_reg_4646, d2_reg_4651, ap_CS_fsm_pp0_stage2, d1_3_reg_4718, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_lv1_0 = and_ln112_7_reg_4632_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1634_p0 <= reg_1671;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_7_reg_4632_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1634_p0 <= d1_3_reg_4718;
        elsif (((ap_const_lv1_0 = and_ln112_1_reg_4607_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1634_p0 <= d2_reg_4651;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_1_reg_4607_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1634_p0 <= d1_reg_4646;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1634_p0 <= tmp_18_reg_4539;
        elsif (((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_lv1_1 = and_ln112_7_reg_4632) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1634_p0 <= tmp_23_reg_4568;
        elsif (((ap_const_lv1_0 = and_ln112_7_reg_4632) and (icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1634_p0 <= tmp_22_reg_4563;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1634_p0 <= tmp_12_reg_4501;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1634_p0 <= tmp_11_reg_4492;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1634_p0 <= tmp_5_reg_4454;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1634_p0 <= tmp_s_reg_4425;
        else 
            grp_fu_1634_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1634_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_4421, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, and_ln112_7_reg_4632, reg_1671, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_4421_pp0_iter1_reg, tmp_1_reg_4430, tmp_3_reg_4440, tmp_9_reg_4478, tmp_13_reg_4506, tmp_19_reg_4544, tmp_21_reg_4554, tmp_23_reg_4568, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, and_ln112_1_reg_4607_pp0_iter1_reg, and_ln112_7_reg_4632_pp0_iter1_reg, sub_reg_4662, ap_CS_fsm_pp0_stage2, sub2_reg_4667, sub87_3_reg_4728, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_lv1_0 = and_ln112_7_reg_4632_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1634_p1 <= sub87_3_reg_4728;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_7_reg_4632_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1634_p1 <= reg_1671;
        elsif (((ap_const_lv1_0 = and_ln112_1_reg_4607_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1634_p1 <= sub2_reg_4667;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_1_reg_4607_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1634_p1 <= sub_reg_4662;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1634_p1 <= tmp_19_reg_4544;
        elsif (((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_lv1_1 = and_ln112_7_reg_4632) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1634_p1 <= tmp_21_reg_4554;
        elsif (((ap_const_lv1_0 = and_ln112_7_reg_4632) and (icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1634_p1 <= tmp_23_reg_4568;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1634_p1 <= tmp_13_reg_4506;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1634_p1 <= tmp_9_reg_4478;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1634_p1 <= tmp_3_reg_4440;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1634_p1 <= tmp_1_reg_4430;
        else 
            grp_fu_1634_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1638_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_4421, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, and_ln112_7_reg_4632, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_4421_pp0_iter1_reg, icmp_ln1027_reg_4421_pp0_iter3_reg, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, and_ln112_3_reg_4612_pp0_iter1_reg, and_ln112_5_reg_4627_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage6_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage7_00001, ap_block_pp0_stage1_00001)
    begin
        if ((((ap_const_lv1_0 = and_ln112_7_reg_4632) and (icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_3_reg_4612_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_5_reg_4627_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_0 = and_ln112_5_reg_4627_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_0 = and_ln112_3_reg_4612_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_1638_opcode <= ap_const_lv2_1;
        elsif (((icmp_ln1027_reg_4421_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1638_opcode <= ap_const_lv2_0;
        else 
            grp_fu_1638_opcode <= "XX";
        end if; 
    end process;


    grp_fu_1638_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_4421_pp0_iter1_reg, tmp_2_reg_4435, tmp_3_reg_4440, tmp_9_reg_4478, tmp_17_reg_4530, tmp_21_reg_4554, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, and_ln112_3_reg_4612_pp0_iter1_reg, and_ln112_5_reg_4627_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, d1_1_reg_4672, d2_1_reg_4677, d1_2_reg_4692, d2_2_reg_4697, distance_1_reg_4827, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1638_p0 <= distance_1_reg_4827;
        elsif (((ap_const_lv1_0 = and_ln112_5_reg_4627_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1638_p0 <= d2_2_reg_4697;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_5_reg_4627_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1638_p0 <= d1_2_reg_4692;
        elsif (((ap_const_lv1_0 = and_ln112_3_reg_4612_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1638_p0 <= d2_1_reg_4677;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_3_reg_4612_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1638_p0 <= d1_1_reg_4672;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1638_p0 <= tmp_21_reg_4554;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1638_p0 <= tmp_17_reg_4530;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1638_p0 <= tmp_9_reg_4478;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1638_p0 <= tmp_3_reg_4440;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1638_p0 <= tmp_2_reg_4435;
        else 
            grp_fu_1638_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1638_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_4421_pp0_iter1_reg, tmp_3_reg_4440, tmp_5_reg_4454, tmp_11_reg_4492, tmp_15_reg_4516, tmp_23_reg_4568, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, and_ln112_3_reg_4612_pp0_iter1_reg, and_ln112_5_reg_4627_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, sub75_1_reg_4682, sub87_1_reg_4687, sub75_2_reg_4708, sub87_2_reg_4713, mul_2_reg_4744_pp0_iter4_reg, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1638_p1 <= mul_2_reg_4744_pp0_iter4_reg;
        elsif (((ap_const_lv1_0 = and_ln112_5_reg_4627_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1638_p1 <= sub87_2_reg_4713;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_5_reg_4627_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1638_p1 <= sub75_2_reg_4708;
        elsif (((ap_const_lv1_0 = and_ln112_3_reg_4612_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1638_p1 <= sub87_1_reg_4687;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_3_reg_4612_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1638_p1 <= sub75_1_reg_4682;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1638_p1 <= tmp_23_reg_4568;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1638_p1 <= tmp_15_reg_4516;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1638_p1 <= tmp_11_reg_4492;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1638_p1 <= tmp_5_reg_4454;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1638_p1 <= tmp_3_reg_4440;
        else 
            grp_fu_1638_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1642_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, icmp_ln1027_reg_4421, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_4421_pp0_iter2_reg, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_4421_pp0_iter1_reg, icmp_ln1027_reg_4421_pp0_iter4_reg, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage6_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001)
    begin
        if ((((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_1642_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_4421_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (icmp_ln1027_reg_4421_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln1027_reg_4421_pp0_iter4_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1642_opcode <= ap_const_lv2_0;
        else 
            grp_fu_1642_opcode <= "XX";
        end if; 
    end process;


    grp_fu_1642_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, tmp_4_reg_4449, tmp_8_reg_4473, tmp_14_reg_4511, tmp_15_reg_4516, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, mul_reg_4723, distance_reg_4754, distance_2_reg_4842, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1642_p0 <= distance_2_reg_4842;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1642_p0 <= distance_reg_4754;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1642_p0 <= mul_reg_4723;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1642_p0 <= tmp_15_reg_4516;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1642_p0 <= tmp_14_reg_4511;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1642_p0 <= tmp_8_reg_4473;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1642_p0 <= tmp_4_reg_4449;
        else 
            grp_fu_1642_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1642_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, tmp_5_reg_4454, tmp_9_reg_4478, tmp_15_reg_4516, tmp_17_reg_4530, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, mul_1_reg_4733_pp0_iter2_reg, mul_3_reg_4749_pp0_iter4_reg, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1642_p1 <= mul_3_reg_4749_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1642_p1 <= mul_1_reg_4733_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1642_p1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1642_p1 <= tmp_17_reg_4530;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1642_p1 <= tmp_15_reg_4516;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1642_p1 <= tmp_9_reg_4478;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1642_p1 <= tmp_5_reg_4454;
        else 
            grp_fu_1642_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1646_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, tmp_6_reg_4463, tmp_10_reg_4487, tmp_16_reg_4525, tmp_20_reg_4549, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_1646_p0 <= tmp_20_reg_4549;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_1646_p0 <= tmp_16_reg_4525;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_1646_p0 <= tmp_10_reg_4487;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_1646_p0 <= tmp_6_reg_4463;
            else 
                grp_fu_1646_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_1646_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1646_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, tmp_7_reg_4468, tmp_11_reg_4492, tmp_17_reg_4530, tmp_21_reg_4554, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_1646_p1 <= tmp_21_reg_4554;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_1646_p1 <= tmp_17_reg_4530;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_1646_p1 <= tmp_11_reg_4492;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_1646_p1 <= tmp_7_reg_4468;
            else 
                grp_fu_1646_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_1646_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1651_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, reg_1665, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, d_1_reg_4656, ap_CS_fsm_pp0_stage2, d_2_reg_4702, d_3_reg_4738, ov_16_reg_4797, overlap_1_reg_4832, overlap_2_reg_4837, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1651_p0 <= overlap_2_reg_4837;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1651_p0 <= overlap_1_reg_4832;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1651_p0 <= ov_16_reg_4797;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1651_p0 <= d_3_reg_4738;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1651_p0 <= d_2_reg_4702;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1651_p0 <= d_1_reg_4656;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1651_p0 <= reg_1665;
        else 
            grp_fu_1651_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1651_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, reg_1665, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, d_1_reg_4656, ap_CS_fsm_pp0_stage2, d_2_reg_4702, d_3_reg_4738, ov_7_reg_4802, ov_11_reg_4812, ov_15_reg_4822, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1651_p1 <= ov_15_reg_4822;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1651_p1 <= ov_11_reg_4812;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1651_p1 <= ov_7_reg_4802;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1651_p1 <= d_3_reg_4738;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1651_p1 <= d_2_reg_4702;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1651_p1 <= d_1_reg_4656;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1651_p1 <= reg_1665;
        else 
            grp_fu_1651_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1655_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, icmp_ln1027_reg_4421, ap_CS_fsm_pp0_stage1, icmp_ln1027_reg_4421_pp0_iter2_reg, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_4421_pp0_iter3_reg, icmp_ln1027_reg_4421_pp0_iter6_reg, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001)
    begin
        if (((icmp_ln1027_reg_4421_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1655_opcode <= ap_const_lv5_2;
        elsif ((((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_4421_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_4421_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((icmp_ln1027_reg_4421_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_1655_opcode <= ap_const_lv5_4;
        else 
            grp_fu_1655_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_1655_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, tmp_3_reg_4440, tmp_15_reg_4516, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ov_2_reg_4759, ov_10_reg_4773, ov_14_reg_4790, sc_2_reg_4864, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1655_p0 <= sc_2_reg_4864;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1655_p0 <= ov_14_reg_4790;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1655_p0 <= ov_10_reg_4773;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1655_p0 <= ov_2_reg_4759;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1655_p0 <= tmp_15_reg_4516;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1655_p0 <= tmp_3_reg_4440;
        else 
            grp_fu_1655_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1655_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, tmp_5_reg_4454, tmp_17_reg_4530, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage1, tmp_score_fu_460, ap_block_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1655_p1 <= tmp_score_fu_460;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1655_p1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1655_p1 <= tmp_17_reg_4530;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1655_p1 <= tmp_5_reg_4454;
        else 
            grp_fu_1655_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1659_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, icmp_ln1027_reg_4421, ap_CS_fsm_pp0_stage1, icmp_ln1027_reg_4421_pp0_iter2_reg, icmp_ln1027_reg_4421_pp0_iter5_reg, icmp_ln1027_reg_4421_pp0_iter6_reg, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001)
    begin
        if ((((icmp_ln1027_reg_4421_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln1027_reg_4421_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_1659_opcode <= ap_const_lv5_2;
        elsif ((((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_4421 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_4421_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1659_opcode <= ap_const_lv5_4;
        else 
            grp_fu_1659_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_1659_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, tmp_9_reg_4478, tmp_21_reg_4554, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ov_6_reg_4766, overlap_3_reg_4847, tmp_score_4_reg_4889, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1659_p0 <= tmp_score_4_reg_4889;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1659_p0 <= overlap_3_reg_4847;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1659_p0 <= ov_6_reg_4766;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1659_p0 <= tmp_21_reg_4554;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1659_p0 <= tmp_9_reg_4478;
        else 
            grp_fu_1659_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1659_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, tmp_11_reg_4492, tmp_23_reg_4568, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, score_fu_448, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1659_p1 <= score_fu_448;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1659_p1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1659_p1 <= tmp_23_reg_4568;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1659_p1 <= tmp_11_reg_4492;
        else 
            grp_fu_1659_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_real_2_fu_2612_p3 <= 
        i_real_fu_2589_p2 when (icmp_ln1019_fu_2584_p2(0) = '1') else 
        i_real_3_reg_4406;
    i_real_fu_2589_p2 <= std_logic_vector(unsigned(i_real_3_reg_4406) + unsigned(ap_const_lv32_1));
    icmp_ln1019_fu_2584_p2 <= "1" when (k_real_5_reg_4414 = ap_const_lv32_F) else "0";
    icmp_ln1027_fu_1722_p2 <= "1" when (signed(merge_1_1_fu_452) < signed(ap_const_lv32_F)) else "0";
    icmp_ln112_10_fu_2474_p2 <= "0" when (tmp_35_fu_2442_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_11_fu_2480_p2 <= "1" when (trunc_ln112_5_fu_2452_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_12_fu_2537_p2 <= "0" when (tmp_39_fu_2506_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_13_fu_2543_p2 <= "1" when (trunc_ln112_6_fu_2516_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_14_fu_2555_p2 <= "0" when (tmp_40_fu_2523_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_15_fu_2561_p2 <= "1" when (trunc_ln112_7_fu_2533_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_1_fu_2304_p2 <= "1" when (trunc_ln112_fu_2277_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_2_fu_2310_p2 <= "0" when (tmp_25_fu_2284_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_3_fu_2316_p2 <= "1" when (trunc_ln112_1_fu_2294_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_4_fu_2375_p2 <= "0" when (tmp_29_fu_2344_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_5_fu_2381_p2 <= "1" when (trunc_ln112_2_fu_2354_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_6_fu_2393_p2 <= "0" when (tmp_30_fu_2361_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_7_fu_2399_p2 <= "1" when (trunc_ln112_3_fu_2371_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_8_fu_2456_p2 <= "0" when (tmp_34_fu_2425_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_9_fu_2462_p2 <= "1" when (trunc_ln112_4_fu_2435_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_fu_2298_p2 <= "0" when (tmp_24_fu_2267_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_1_fu_2680_p2 <= "1" when (trunc_ln116_fu_2670_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_2_fu_2721_p2 <= "0" when (tmp_32_fu_2707_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_3_fu_2727_p2 <= "1" when (trunc_ln116_1_fu_2717_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_4_fu_2768_p2 <= "0" when (tmp_37_fu_2754_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_5_fu_2774_p2 <= "1" when (trunc_ln116_2_fu_2764_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_6_fu_2815_p2 <= "0" when (tmp_42_fu_2801_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_7_fu_2821_p2 <= "1" when (trunc_ln116_3_fu_2811_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_fu_2674_p2 <= "0" when (tmp_27_fu_2660_p4 = ap_const_lv8_FF) else "1";
    icmp_ln122_1_fu_2868_p2 <= "1" when (trunc_ln122_fu_2858_p1 = ap_const_lv23_0) else "0";
    icmp_ln122_fu_2862_p2 <= "0" when (tmp_44_fu_2848_p4 = ap_const_lv8_FF) else "1";
    icmp_ln130_1_fu_2952_p2 <= "0" when (tmp_46_fu_2921_p4 = ap_const_lv8_FF) else "1";
    icmp_ln130_2_fu_2958_p2 <= "1" when (trunc_ln130_fu_2931_p1 = ap_const_lv23_0) else "0";
    icmp_ln130_3_fu_2970_p2 <= "0" when (tmp_47_fu_2938_p4 = ap_const_lv8_FF) else "1";
    icmp_ln130_4_fu_2976_p2 <= "1" when (trunc_ln130_1_fu_2948_p1 = ap_const_lv23_0) else "0";
    icmp_ln130_fu_2912_p2 <= "1" when (tmp_other_fu_464 = ap_const_lv32_FFFFFFFF) else "0";
    icmp_ln139_1_fu_3107_p2 <= "1" when (trunc_ln139_fu_3080_p1 = ap_const_lv23_0) else "0";
    icmp_ln139_2_fu_3119_p2 <= "0" when (tmp_50_fu_3087_p4 = ap_const_lv8_FF) else "1";
    icmp_ln139_3_fu_3125_p2 <= "1" when (trunc_ln139_1_fu_3097_p1 = ap_const_lv23_0) else "0";
    icmp_ln139_fu_3101_p2 <= "0" when (tmp_49_fu_3070_p4 = ap_const_lv8_FF) else "1";
    k_real_2_fu_2599_p2 <= std_logic_vector(unsigned(k_real_5_reg_4414) + unsigned(ap_const_lv32_1));
    k_real_3_fu_2604_p3 <= 
        k_real_fu_2594_p2 when (icmp_ln1019_fu_2584_p2(0) = '1') else 
        k_real_2_fu_2599_p2;
    k_real_fu_2594_p2 <= std_logic_vector(unsigned(i_real_3_reg_4406) + unsigned(ap_const_lv32_2));
    merge_1_6_fu_3166_p3 <= 
        i_real_3_reg_4406_pp0_iter7_reg when (or_ln139_fu_3148_p2(0) = '1') else 
        merge_1_4_reg_4905;
    merge_1_7_fu_3184_p3 <= 
        merge_1_6_fu_3166_p3 when (icmp_ln1019_reg_4637_pp0_iter7_reg(0) = '1') else 
        merge_1_4_reg_4905;
    merge_1_out <= merge_1_fu_440(4 - 1 downto 0);

    merge_1_out_ap_vld_assign_proc : process(icmp_ln1027_reg_4421_pp0_iter7_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((icmp_ln1027_reg_4421_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            merge_1_out_ap_vld <= ap_const_logic_1;
        else 
            merge_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    merge_2_5_fu_3160_p3 <= 
        tmp_other_4_reg_4883 when (or_ln139_fu_3148_p2(0) = '1') else 
        merge_2_1_reg_4912;
    merge_2_6_fu_3178_p3 <= 
        merge_2_5_fu_3160_p3 when (icmp_ln1019_reg_4637_pp0_iter7_reg(0) = '1') else 
        merge_2_1_reg_4912;
    merge_2_out <= merge_2_fu_444(4 - 1 downto 0);

    merge_2_out_ap_vld_assign_proc : process(icmp_ln1027_reg_4421_pp0_iter7_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((icmp_ln1027_reg_4421_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            merge_2_out_ap_vld <= ap_const_logic_1;
        else 
            merge_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    or_ln112_1_fu_2326_p2 <= (icmp_ln112_3_reg_4592 or icmp_ln112_2_reg_4587);
    or_ln112_2_fu_2387_p2 <= (icmp_ln112_5_fu_2381_p2 or icmp_ln112_4_fu_2375_p2);
    or_ln112_3_fu_2405_p2 <= (icmp_ln112_7_fu_2399_p2 or icmp_ln112_6_fu_2393_p2);
    or_ln112_4_fu_2468_p2 <= (icmp_ln112_9_fu_2462_p2 or icmp_ln112_8_fu_2456_p2);
    or_ln112_5_fu_2486_p2 <= (icmp_ln112_11_fu_2480_p2 or icmp_ln112_10_fu_2474_p2);
    or_ln112_6_fu_2549_p2 <= (icmp_ln112_13_fu_2543_p2 or icmp_ln112_12_fu_2537_p2);
    or_ln112_7_fu_2567_p2 <= (icmp_ln112_15_fu_2561_p2 or icmp_ln112_14_fu_2555_p2);
    or_ln112_fu_2322_p2 <= (icmp_ln112_reg_4577 or icmp_ln112_1_reg_4582);
    or_ln116_1_fu_2733_p2 <= (icmp_ln116_3_fu_2727_p2 or icmp_ln116_2_fu_2721_p2);
    or_ln116_2_fu_2780_p2 <= (icmp_ln116_5_fu_2774_p2 or icmp_ln116_4_fu_2768_p2);
    or_ln116_3_fu_2827_p2 <= (icmp_ln116_7_fu_2821_p2 or icmp_ln116_6_fu_2815_p2);
    or_ln116_fu_2686_p2 <= (icmp_ln116_fu_2674_p2 or icmp_ln116_1_fu_2680_p2);
    or_ln122_fu_2874_p2 <= (icmp_ln122_fu_2862_p2 or icmp_ln122_1_fu_2868_p2);
    or_ln130_1_fu_2964_p2 <= (icmp_ln130_2_fu_2958_p2 or icmp_ln130_1_fu_2952_p2);
    or_ln130_2_fu_2982_p2 <= (icmp_ln130_4_fu_2976_p2 or icmp_ln130_3_fu_2970_p2);
    or_ln130_fu_2999_p2 <= (icmp_ln130_fu_2912_p2 or and_ln130_1_fu_2994_p2);
    or_ln139_1_fu_3113_p2 <= (icmp_ln139_fu_3101_p2 or icmp_ln139_1_fu_3107_p2);
    or_ln139_2_fu_3131_p2 <= (icmp_ln139_3_fu_3125_p2 or icmp_ln139_2_fu_3119_p2);
    or_ln139_fu_3148_p2 <= (tmp_fu_3060_p3 or and_ln139_1_fu_3143_p2);
    ov_10_fu_2643_p3 <= 
        reg_1677 when (and_ln112_5_reg_4627_pp0_iter2_reg(0) = '1') else 
        reg_1677;
    ov_11_fu_2791_p3 <= 
        ap_const_lv32_0 when (and_ln116_2_fu_2786_p2(0) = '1') else 
        ov_10_reg_4773;
    ov_14_fu_2650_p3 <= 
        reg_1665 when (and_ln112_7_reg_4632_pp0_iter2_reg(0) = '1') else 
        reg_1665;
    ov_15_fu_2838_p3 <= 
        ap_const_lv32_0 when (and_ln116_3_fu_2833_p2(0) = '1') else 
        ov_14_reg_4790;
    ov_16_fu_2697_p3 <= 
        ap_const_lv32_0 when (and_ln116_fu_2692_p2(0) = '1') else 
        ov_2_reg_4759;
    ov_2_fu_2629_p3 <= 
        reg_1665 when (and_ln112_1_reg_4607_pp0_iter2_reg(0) = '1') else 
        reg_1665;
    ov_6_fu_2636_p3 <= 
        reg_1677 when (and_ln112_3_reg_4612_pp0_iter2_reg(0) = '1') else 
        reg_1677;
    ov_7_fu_2744_p3 <= 
        ap_const_lv32_0 when (and_ln116_1_fu_2739_p2(0) = '1') else 
        ov_6_reg_4766;
    sc_2_fu_2898_p3 <= 
        overlap_3_reg_4847 when (and_ln122_fu_2880_p2(0) = '1') else 
        sc_fu_2894_p1;
    sc_fu_2894_p1 <= xor_ln126_fu_2888_p2;
    score_2_fu_3154_p3 <= 
        tmp_score_4_reg_4889 when (or_ln139_fu_3148_p2(0) = '1') else 
        score_load_reg_4897;
    score_3_fu_3172_p3 <= 
        score_2_fu_3154_p3 when (icmp_ln1019_reg_4637_pp0_iter7_reg(0) = '1') else 
        score_load_reg_4897;
    tmp_24_fu_2267_p4 <= bitcast_ln112_fu_2264_p1(30 downto 23);
    tmp_25_fu_2284_p4 <= bitcast_ln112_1_fu_2281_p1(30 downto 23);
    tmp_27_fu_2660_p4 <= bitcast_ln116_fu_2657_p1(30 downto 23);
    tmp_29_fu_2344_p4 <= bitcast_ln112_2_fu_2341_p1(30 downto 23);
    tmp_30_fu_2361_p4 <= bitcast_ln112_3_fu_2358_p1(30 downto 23);
    tmp_32_fu_2707_p4 <= bitcast_ln116_1_fu_2704_p1(30 downto 23);
    tmp_34_fu_2425_p4 <= bitcast_ln112_4_fu_2422_p1(30 downto 23);
    tmp_35_fu_2442_p4 <= bitcast_ln112_5_fu_2439_p1(30 downto 23);
    tmp_37_fu_2754_p4 <= bitcast_ln116_2_fu_2751_p1(30 downto 23);
    tmp_39_fu_2506_p4 <= bitcast_ln112_6_fu_2503_p1(30 downto 23);
    tmp_40_fu_2523_p4 <= bitcast_ln112_7_fu_2520_p1(30 downto 23);
    tmp_42_fu_2801_p4 <= bitcast_ln116_3_fu_2798_p1(30 downto 23);
    tmp_44_fu_2848_p4 <= bitcast_ln122_fu_2845_p1(30 downto 23);
    tmp_46_fu_2921_p4 <= bitcast_ln130_fu_2918_p1(30 downto 23);
    tmp_47_fu_2938_p4 <= bitcast_ln130_1_fu_2935_p1(30 downto 23);
    tmp_49_fu_3070_p4 <= bitcast_ln139_fu_3067_p1(30 downto 23);
    tmp_50_fu_3087_p4 <= bitcast_ln139_1_fu_3084_p1(30 downto 23);
    tmp_fu_3060_p3 <= merge_1_4_reg_4905(31 downto 31);
    tmp_other_3_fu_3018_p3 <= 
        ap_const_lv32_FFFFFFFF when (icmp_ln1019_reg_4637_pp0_iter6_reg(0) = '1') else 
        tmp_other_4_reg_4883;
    tmp_other_4_fu_3005_p3 <= 
        k_real_5_reg_4414_pp0_iter6_reg when (or_ln130_fu_2999_p2(0) = '1') else 
        tmp_other_fu_464;
    tmp_score_3_fu_3024_p3 <= 
        ap_const_lv32_0 when (icmp_ln1019_reg_4637_pp0_iter6_reg(0) = '1') else 
        tmp_score_4_reg_4889;
    tmp_score_4_fu_3012_p3 <= 
        sc_2_reg_4864 when (or_ln130_fu_2999_p2(0) = '1') else 
        tmp_score_load_reg_4871;
    trunc_ln104_1_fu_1754_p1 <= k_real_4_fu_456(4 - 1 downto 0);
    trunc_ln104_fu_1728_p1 <= merge_1_1_fu_452(4 - 1 downto 0);
    trunc_ln112_1_fu_2294_p1 <= bitcast_ln112_1_fu_2281_p1(23 - 1 downto 0);
    trunc_ln112_2_fu_2354_p1 <= bitcast_ln112_2_fu_2341_p1(23 - 1 downto 0);
    trunc_ln112_3_fu_2371_p1 <= bitcast_ln112_3_fu_2358_p1(23 - 1 downto 0);
    trunc_ln112_4_fu_2435_p1 <= bitcast_ln112_4_fu_2422_p1(23 - 1 downto 0);
    trunc_ln112_5_fu_2452_p1 <= bitcast_ln112_5_fu_2439_p1(23 - 1 downto 0);
    trunc_ln112_6_fu_2516_p1 <= bitcast_ln112_6_fu_2503_p1(23 - 1 downto 0);
    trunc_ln112_7_fu_2533_p1 <= bitcast_ln112_7_fu_2520_p1(23 - 1 downto 0);
    trunc_ln112_fu_2277_p1 <= bitcast_ln112_fu_2264_p1(23 - 1 downto 0);
    trunc_ln116_1_fu_2717_p1 <= bitcast_ln116_1_fu_2704_p1(23 - 1 downto 0);
    trunc_ln116_2_fu_2764_p1 <= bitcast_ln116_2_fu_2751_p1(23 - 1 downto 0);
    trunc_ln116_3_fu_2811_p1 <= bitcast_ln116_3_fu_2798_p1(23 - 1 downto 0);
    trunc_ln116_fu_2670_p1 <= bitcast_ln116_fu_2657_p1(23 - 1 downto 0);
    trunc_ln122_fu_2858_p1 <= bitcast_ln122_fu_2845_p1(23 - 1 downto 0);
    trunc_ln130_1_fu_2948_p1 <= bitcast_ln130_1_fu_2935_p1(23 - 1 downto 0);
    trunc_ln130_fu_2931_p1 <= bitcast_ln130_fu_2918_p1(23 - 1 downto 0);
    trunc_ln139_1_fu_3097_p1 <= bitcast_ln139_1_fu_3084_p1(23 - 1 downto 0);
    trunc_ln139_fu_3080_p1 <= bitcast_ln139_fu_3067_p1(23 - 1 downto 0);
    xor_ln126_fu_2888_p2 <= (bitcast_ln126_fu_2885_p1 xor ap_const_lv32_80000000);
end behav;
