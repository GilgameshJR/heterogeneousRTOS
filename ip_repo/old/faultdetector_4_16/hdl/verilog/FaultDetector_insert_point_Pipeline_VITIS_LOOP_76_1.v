// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        regions_center_0_0_0,
        regions_center_1_0_0,
        regions_center_2_0_0,
        regions_center_3_0_0,
        regions_center_4_0_0,
        regions_center_5_0_0,
        regions_center_6_0_0,
        regions_center_7_0_0,
        regions_center_8_0_0,
        regions_center_9_0_0,
        regions_center_10_0_0,
        regions_center_11_0_0,
        regions_center_12_0_0,
        regions_center_13_0_0,
        regions_center_14_0_0,
        regions_center_15_0_0,
        regions_max_0_0_0,
        regions_max_1_0_0,
        regions_max_2_0_0,
        regions_max_3_0_0,
        regions_max_4_0_0,
        regions_max_5_0_0,
        regions_max_6_0_0,
        regions_max_7_0_0,
        regions_max_8_0_0,
        regions_max_9_0_0,
        regions_max_10_0_0,
        regions_max_11_0_0,
        regions_max_12_0_0,
        regions_max_13_0_0,
        regions_max_14_0_0,
        regions_max_15_0_0,
        regions_min_0_0_0,
        regions_min_1_0_0,
        regions_min_2_0_0,
        regions_min_3_0_0,
        regions_min_4_0_0,
        regions_min_5_0_0,
        regions_min_6_0_0,
        regions_min_7_0_0,
        regions_min_8_0_0,
        regions_min_9_0_0,
        regions_min_10_0_0,
        regions_min_11_0_0,
        regions_min_12_0_0,
        regions_min_13_0_0,
        regions_min_14_0_0,
        regions_min_15_0_0,
        regions_center_0_1_0,
        regions_center_1_1_0,
        regions_center_2_1_0,
        regions_center_3_1_0,
        regions_center_4_1_0,
        regions_center_5_1_0,
        regions_center_6_1_0,
        regions_center_7_1_0,
        regions_center_8_1_0,
        regions_center_9_1_0,
        regions_center_10_1_0,
        regions_center_11_1_0,
        regions_center_12_1_0,
        regions_center_13_1_0,
        regions_center_14_1_0,
        regions_center_15_1_0,
        regions_max_0_1_0,
        regions_max_1_1_0,
        regions_max_2_1_0,
        regions_max_3_1_0,
        regions_max_4_1_0,
        regions_max_5_1_0,
        regions_max_6_1_0,
        regions_max_7_1_0,
        regions_max_8_1_0,
        regions_max_9_1_0,
        regions_max_10_1_0,
        regions_max_11_1_0,
        regions_max_12_1_0,
        regions_max_13_1_0,
        regions_max_14_1_0,
        regions_max_15_1_0,
        regions_min_0_1_0,
        regions_min_1_1_0,
        regions_min_2_1_0,
        regions_min_3_1_0,
        regions_min_4_1_0,
        regions_min_5_1_0,
        regions_min_6_1_0,
        regions_min_7_1_0,
        regions_min_8_1_0,
        regions_min_9_1_0,
        regions_min_10_1_0,
        regions_min_11_1_0,
        regions_min_12_1_0,
        regions_min_13_1_0,
        regions_min_14_1_0,
        regions_min_15_1_0,
        regions_center_0_2_0,
        regions_center_1_2_0,
        regions_center_2_2_0,
        regions_center_3_2_0,
        regions_center_4_2_0,
        regions_center_5_2_0,
        regions_center_6_2_0,
        regions_center_7_2_0,
        regions_center_8_2_0,
        regions_center_9_2_0,
        regions_center_10_2_0,
        regions_center_11_2_0,
        regions_center_12_2_0,
        regions_center_13_2_0,
        regions_center_14_2_0,
        regions_center_15_2_0,
        regions_max_0_2_0,
        regions_max_1_2_0,
        regions_max_2_2_0,
        regions_max_3_2_0,
        regions_max_4_2_0,
        regions_max_5_2_0,
        regions_max_6_2_0,
        regions_max_7_2_0,
        regions_max_8_2_0,
        regions_max_9_2_0,
        regions_max_10_2_0,
        regions_max_11_2_0,
        regions_max_12_2_0,
        regions_max_13_2_0,
        regions_max_14_2_0,
        regions_max_15_2_0,
        regions_min_0_2_0,
        regions_min_1_2_0,
        regions_min_2_2_0,
        regions_min_3_2_0,
        regions_min_4_2_0,
        regions_min_5_2_0,
        regions_min_6_2_0,
        regions_min_7_2_0,
        regions_min_8_2_0,
        regions_min_9_2_0,
        regions_min_10_2_0,
        regions_min_11_2_0,
        regions_min_12_2_0,
        regions_min_13_2_0,
        regions_min_14_2_0,
        regions_min_15_2_0,
        regions_center_0_3_0,
        regions_center_1_3_0,
        regions_center_2_3_0,
        regions_center_3_3_0,
        regions_center_4_3_0,
        regions_center_5_3_0,
        regions_center_6_3_0,
        regions_center_7_3_0,
        regions_center_8_3_0,
        regions_center_9_3_0,
        regions_center_10_3_0,
        regions_center_11_3_0,
        regions_center_12_3_0,
        regions_center_13_3_0,
        regions_center_14_3_0,
        regions_center_15_3_0,
        regions_max_0_3_0,
        regions_max_1_3_0,
        regions_max_2_3_0,
        regions_max_3_3_0,
        regions_max_4_3_0,
        regions_max_5_3_0,
        regions_max_6_3_0,
        regions_max_7_3_0,
        regions_max_8_3_0,
        regions_max_9_3_0,
        regions_max_10_3_0,
        regions_max_11_3_0,
        regions_max_12_3_0,
        regions_max_13_3_0,
        regions_max_14_3_0,
        regions_max_15_3_0,
        regions_min_0_3_0,
        regions_min_1_3_0,
        regions_min_2_3_0,
        regions_min_3_3_0,
        regions_min_4_3_0,
        regions_min_5_3_0,
        regions_min_6_3_0,
        regions_min_7_3_0,
        regions_min_8_3_0,
        regions_min_9_3_0,
        regions_min_10_3_0,
        regions_min_11_3_0,
        regions_min_12_3_0,
        regions_min_13_3_0,
        regions_min_14_3_0,
        regions_min_15_3_0,
        merge_2_out,
        merge_2_out_ap_vld,
        merge_1_out,
        merge_1_out_ap_vld,
        grp_fu_12156_p_din0,
        grp_fu_12156_p_din1,
        grp_fu_12156_p_opcode,
        grp_fu_12156_p_dout0,
        grp_fu_12156_p_ce,
        grp_fu_12162_p_din0,
        grp_fu_12162_p_din1,
        grp_fu_12162_p_dout0,
        grp_fu_12162_p_ce,
        grp_fu_12167_p_din0,
        grp_fu_12167_p_din1,
        grp_fu_12167_p_opcode,
        grp_fu_12167_p_dout0,
        grp_fu_12167_p_ce,
        grp_fu_12172_p_din0,
        grp_fu_12172_p_din1,
        grp_fu_12172_p_opcode,
        grp_fu_12172_p_dout0,
        grp_fu_12172_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] regions_center_0_0_0;
input  [31:0] regions_center_1_0_0;
input  [31:0] regions_center_2_0_0;
input  [31:0] regions_center_3_0_0;
input  [31:0] regions_center_4_0_0;
input  [31:0] regions_center_5_0_0;
input  [31:0] regions_center_6_0_0;
input  [31:0] regions_center_7_0_0;
input  [31:0] regions_center_8_0_0;
input  [31:0] regions_center_9_0_0;
input  [31:0] regions_center_10_0_0;
input  [31:0] regions_center_11_0_0;
input  [31:0] regions_center_12_0_0;
input  [31:0] regions_center_13_0_0;
input  [31:0] regions_center_14_0_0;
input  [31:0] regions_center_15_0_0;
input  [31:0] regions_max_0_0_0;
input  [31:0] regions_max_1_0_0;
input  [31:0] regions_max_2_0_0;
input  [31:0] regions_max_3_0_0;
input  [31:0] regions_max_4_0_0;
input  [31:0] regions_max_5_0_0;
input  [31:0] regions_max_6_0_0;
input  [31:0] regions_max_7_0_0;
input  [31:0] regions_max_8_0_0;
input  [31:0] regions_max_9_0_0;
input  [31:0] regions_max_10_0_0;
input  [31:0] regions_max_11_0_0;
input  [31:0] regions_max_12_0_0;
input  [31:0] regions_max_13_0_0;
input  [31:0] regions_max_14_0_0;
input  [31:0] regions_max_15_0_0;
input  [31:0] regions_min_0_0_0;
input  [31:0] regions_min_1_0_0;
input  [31:0] regions_min_2_0_0;
input  [31:0] regions_min_3_0_0;
input  [31:0] regions_min_4_0_0;
input  [31:0] regions_min_5_0_0;
input  [31:0] regions_min_6_0_0;
input  [31:0] regions_min_7_0_0;
input  [31:0] regions_min_8_0_0;
input  [31:0] regions_min_9_0_0;
input  [31:0] regions_min_10_0_0;
input  [31:0] regions_min_11_0_0;
input  [31:0] regions_min_12_0_0;
input  [31:0] regions_min_13_0_0;
input  [31:0] regions_min_14_0_0;
input  [31:0] regions_min_15_0_0;
input  [31:0] regions_center_0_1_0;
input  [31:0] regions_center_1_1_0;
input  [31:0] regions_center_2_1_0;
input  [31:0] regions_center_3_1_0;
input  [31:0] regions_center_4_1_0;
input  [31:0] regions_center_5_1_0;
input  [31:0] regions_center_6_1_0;
input  [31:0] regions_center_7_1_0;
input  [31:0] regions_center_8_1_0;
input  [31:0] regions_center_9_1_0;
input  [31:0] regions_center_10_1_0;
input  [31:0] regions_center_11_1_0;
input  [31:0] regions_center_12_1_0;
input  [31:0] regions_center_13_1_0;
input  [31:0] regions_center_14_1_0;
input  [31:0] regions_center_15_1_0;
input  [31:0] regions_max_0_1_0;
input  [31:0] regions_max_1_1_0;
input  [31:0] regions_max_2_1_0;
input  [31:0] regions_max_3_1_0;
input  [31:0] regions_max_4_1_0;
input  [31:0] regions_max_5_1_0;
input  [31:0] regions_max_6_1_0;
input  [31:0] regions_max_7_1_0;
input  [31:0] regions_max_8_1_0;
input  [31:0] regions_max_9_1_0;
input  [31:0] regions_max_10_1_0;
input  [31:0] regions_max_11_1_0;
input  [31:0] regions_max_12_1_0;
input  [31:0] regions_max_13_1_0;
input  [31:0] regions_max_14_1_0;
input  [31:0] regions_max_15_1_0;
input  [31:0] regions_min_0_1_0;
input  [31:0] regions_min_1_1_0;
input  [31:0] regions_min_2_1_0;
input  [31:0] regions_min_3_1_0;
input  [31:0] regions_min_4_1_0;
input  [31:0] regions_min_5_1_0;
input  [31:0] regions_min_6_1_0;
input  [31:0] regions_min_7_1_0;
input  [31:0] regions_min_8_1_0;
input  [31:0] regions_min_9_1_0;
input  [31:0] regions_min_10_1_0;
input  [31:0] regions_min_11_1_0;
input  [31:0] regions_min_12_1_0;
input  [31:0] regions_min_13_1_0;
input  [31:0] regions_min_14_1_0;
input  [31:0] regions_min_15_1_0;
input  [31:0] regions_center_0_2_0;
input  [31:0] regions_center_1_2_0;
input  [31:0] regions_center_2_2_0;
input  [31:0] regions_center_3_2_0;
input  [31:0] regions_center_4_2_0;
input  [31:0] regions_center_5_2_0;
input  [31:0] regions_center_6_2_0;
input  [31:0] regions_center_7_2_0;
input  [31:0] regions_center_8_2_0;
input  [31:0] regions_center_9_2_0;
input  [31:0] regions_center_10_2_0;
input  [31:0] regions_center_11_2_0;
input  [31:0] regions_center_12_2_0;
input  [31:0] regions_center_13_2_0;
input  [31:0] regions_center_14_2_0;
input  [31:0] regions_center_15_2_0;
input  [31:0] regions_max_0_2_0;
input  [31:0] regions_max_1_2_0;
input  [31:0] regions_max_2_2_0;
input  [31:0] regions_max_3_2_0;
input  [31:0] regions_max_4_2_0;
input  [31:0] regions_max_5_2_0;
input  [31:0] regions_max_6_2_0;
input  [31:0] regions_max_7_2_0;
input  [31:0] regions_max_8_2_0;
input  [31:0] regions_max_9_2_0;
input  [31:0] regions_max_10_2_0;
input  [31:0] regions_max_11_2_0;
input  [31:0] regions_max_12_2_0;
input  [31:0] regions_max_13_2_0;
input  [31:0] regions_max_14_2_0;
input  [31:0] regions_max_15_2_0;
input  [31:0] regions_min_0_2_0;
input  [31:0] regions_min_1_2_0;
input  [31:0] regions_min_2_2_0;
input  [31:0] regions_min_3_2_0;
input  [31:0] regions_min_4_2_0;
input  [31:0] regions_min_5_2_0;
input  [31:0] regions_min_6_2_0;
input  [31:0] regions_min_7_2_0;
input  [31:0] regions_min_8_2_0;
input  [31:0] regions_min_9_2_0;
input  [31:0] regions_min_10_2_0;
input  [31:0] regions_min_11_2_0;
input  [31:0] regions_min_12_2_0;
input  [31:0] regions_min_13_2_0;
input  [31:0] regions_min_14_2_0;
input  [31:0] regions_min_15_2_0;
input  [31:0] regions_center_0_3_0;
input  [31:0] regions_center_1_3_0;
input  [31:0] regions_center_2_3_0;
input  [31:0] regions_center_3_3_0;
input  [31:0] regions_center_4_3_0;
input  [31:0] regions_center_5_3_0;
input  [31:0] regions_center_6_3_0;
input  [31:0] regions_center_7_3_0;
input  [31:0] regions_center_8_3_0;
input  [31:0] regions_center_9_3_0;
input  [31:0] regions_center_10_3_0;
input  [31:0] regions_center_11_3_0;
input  [31:0] regions_center_12_3_0;
input  [31:0] regions_center_13_3_0;
input  [31:0] regions_center_14_3_0;
input  [31:0] regions_center_15_3_0;
input  [31:0] regions_max_0_3_0;
input  [31:0] regions_max_1_3_0;
input  [31:0] regions_max_2_3_0;
input  [31:0] regions_max_3_3_0;
input  [31:0] regions_max_4_3_0;
input  [31:0] regions_max_5_3_0;
input  [31:0] regions_max_6_3_0;
input  [31:0] regions_max_7_3_0;
input  [31:0] regions_max_8_3_0;
input  [31:0] regions_max_9_3_0;
input  [31:0] regions_max_10_3_0;
input  [31:0] regions_max_11_3_0;
input  [31:0] regions_max_12_3_0;
input  [31:0] regions_max_13_3_0;
input  [31:0] regions_max_14_3_0;
input  [31:0] regions_max_15_3_0;
input  [31:0] regions_min_0_3_0;
input  [31:0] regions_min_1_3_0;
input  [31:0] regions_min_2_3_0;
input  [31:0] regions_min_3_3_0;
input  [31:0] regions_min_4_3_0;
input  [31:0] regions_min_5_3_0;
input  [31:0] regions_min_6_3_0;
input  [31:0] regions_min_7_3_0;
input  [31:0] regions_min_8_3_0;
input  [31:0] regions_min_9_3_0;
input  [31:0] regions_min_10_3_0;
input  [31:0] regions_min_11_3_0;
input  [31:0] regions_min_12_3_0;
input  [31:0] regions_min_13_3_0;
input  [31:0] regions_min_14_3_0;
input  [31:0] regions_min_15_3_0;
output  [3:0] merge_2_out;
output   merge_2_out_ap_vld;
output  [3:0] merge_1_out;
output   merge_1_out_ap_vld;
output  [31:0] grp_fu_12156_p_din0;
output  [31:0] grp_fu_12156_p_din1;
output  [0:0] grp_fu_12156_p_opcode;
input  [31:0] grp_fu_12156_p_dout0;
output   grp_fu_12156_p_ce;
output  [31:0] grp_fu_12162_p_din0;
output  [31:0] grp_fu_12162_p_din1;
input  [31:0] grp_fu_12162_p_dout0;
output   grp_fu_12162_p_ce;
output  [31:0] grp_fu_12167_p_din0;
output  [31:0] grp_fu_12167_p_din1;
output  [4:0] grp_fu_12167_p_opcode;
input  [0:0] grp_fu_12167_p_dout0;
output   grp_fu_12167_p_ce;
output  [31:0] grp_fu_12172_p_din0;
output  [31:0] grp_fu_12172_p_din1;
output  [4:0] grp_fu_12172_p_opcode;
input  [0:0] grp_fu_12172_p_dout0;
output   grp_fu_12172_p_ce;

reg ap_idle;
reg merge_2_out_ap_vld;
reg merge_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state16_pp0_stage7_iter1;
wire    ap_block_state24_pp0_stage7_iter2;
wire    ap_block_state32_pp0_stage7_iter3;
wire    ap_block_state40_pp0_stage7_iter4;
wire    ap_block_state48_pp0_stage7_iter5;
wire    ap_block_state56_pp0_stage7_iter6;
wire    ap_block_pp0_stage7_subdone;
reg   [0:0] icmp_ln1027_reg_4421;
reg    ap_condition_exit_pp0_iter0_stage7;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_1665;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state10_pp0_stage1_iter1;
wire    ap_block_state18_pp0_stage1_iter2;
wire    ap_block_state26_pp0_stage1_iter3;
wire    ap_block_state34_pp0_stage1_iter4;
wire    ap_block_state42_pp0_stage1_iter5;
wire    ap_block_state50_pp0_stage1_iter6;
wire    ap_block_state58_pp0_stage1_iter7;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state15_pp0_stage6_iter1;
wire    ap_block_state23_pp0_stage6_iter2;
wire    ap_block_state31_pp0_stage6_iter3;
wire    ap_block_state39_pp0_stage6_iter4;
wire    ap_block_state47_pp0_stage6_iter5;
wire    ap_block_state55_pp0_stage6_iter6;
wire    ap_block_pp0_stage6_11001;
reg   [0:0] icmp_ln1027_reg_4421_pp0_iter2_reg;
reg   [0:0] and_ln112_1_reg_4607;
reg   [0:0] and_ln112_1_reg_4607_pp0_iter2_reg;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_state17_pp0_stage0_iter2;
wire    ap_block_state25_pp0_stage0_iter3;
wire    ap_block_state33_pp0_stage0_iter4;
wire    ap_block_state41_pp0_stage0_iter5;
wire    ap_block_state49_pp0_stage0_iter6;
wire    ap_block_state57_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] and_ln112_7_reg_4632;
reg   [0:0] and_ln112_7_reg_4632_pp0_iter2_reg;
reg   [31:0] reg_1671;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state14_pp0_stage5_iter1;
wire    ap_block_state22_pp0_stage5_iter2;
wire    ap_block_state30_pp0_stage5_iter3;
wire    ap_block_state38_pp0_stage5_iter4;
wire    ap_block_state46_pp0_stage5_iter5;
wire    ap_block_state54_pp0_stage5_iter6;
wire    ap_block_pp0_stage5_11001;
reg   [0:0] icmp_ln1027_reg_4421_pp0_iter1_reg;
wire   [31:0] grp_fu_1638_p2;
reg   [31:0] reg_1677;
reg   [0:0] and_ln112_3_reg_4612;
reg   [0:0] and_ln112_3_reg_4612_pp0_iter2_reg;
wire    ap_block_pp0_stage7_11001;
reg   [0:0] and_ln112_5_reg_4627;
reg   [0:0] and_ln112_5_reg_4627_pp0_iter2_reg;
reg   [31:0] i_real_3_reg_4406;
reg   [31:0] i_real_3_reg_4406_pp0_iter1_reg;
reg   [31:0] i_real_3_reg_4406_pp0_iter2_reg;
reg   [31:0] i_real_3_reg_4406_pp0_iter3_reg;
reg   [31:0] i_real_3_reg_4406_pp0_iter4_reg;
reg   [31:0] i_real_3_reg_4406_pp0_iter5_reg;
reg   [31:0] i_real_3_reg_4406_pp0_iter6_reg;
reg   [31:0] i_real_3_reg_4406_pp0_iter7_reg;
reg   [31:0] k_real_5_reg_4414;
reg   [31:0] k_real_5_reg_4414_pp0_iter1_reg;
reg   [31:0] k_real_5_reg_4414_pp0_iter2_reg;
reg   [31:0] k_real_5_reg_4414_pp0_iter3_reg;
reg   [31:0] k_real_5_reg_4414_pp0_iter4_reg;
reg   [31:0] k_real_5_reg_4414_pp0_iter5_reg;
reg   [31:0] k_real_5_reg_4414_pp0_iter6_reg;
wire   [0:0] icmp_ln1027_fu_1722_p2;
reg   [0:0] icmp_ln1027_reg_4421_pp0_iter3_reg;
reg   [0:0] icmp_ln1027_reg_4421_pp0_iter4_reg;
reg   [0:0] icmp_ln1027_reg_4421_pp0_iter5_reg;
reg   [0:0] icmp_ln1027_reg_4421_pp0_iter6_reg;
reg   [0:0] icmp_ln1027_reg_4421_pp0_iter7_reg;
wire   [31:0] tmp_s_fu_1732_p18;
reg   [31:0] tmp_s_reg_4425;
wire   [31:0] tmp_1_fu_1758_p18;
reg   [31:0] tmp_1_reg_4430;
wire   [31:0] tmp_2_fu_1780_p18;
reg   [31:0] tmp_2_reg_4435;
wire   [31:0] tmp_3_fu_1802_p18;
reg   [31:0] tmp_3_reg_4440;
wire   [31:0] tmp_4_fu_1824_p18;
reg   [31:0] tmp_4_reg_4449;
wire   [31:0] tmp_5_fu_1846_p18;
reg   [31:0] tmp_5_reg_4454;
wire   [31:0] tmp_6_fu_1868_p18;
reg   [31:0] tmp_6_reg_4463;
wire   [31:0] tmp_7_fu_1890_p18;
reg   [31:0] tmp_7_reg_4468;
wire   [31:0] tmp_8_fu_1912_p18;
reg   [31:0] tmp_8_reg_4473;
wire   [31:0] tmp_9_fu_1934_p18;
reg   [31:0] tmp_9_reg_4478;
wire   [31:0] tmp_10_fu_1956_p18;
reg   [31:0] tmp_10_reg_4487;
wire   [31:0] tmp_11_fu_1978_p18;
reg   [31:0] tmp_11_reg_4492;
wire   [31:0] tmp_12_fu_2000_p18;
reg   [31:0] tmp_12_reg_4501;
wire   [31:0] tmp_13_fu_2022_p18;
reg   [31:0] tmp_13_reg_4506;
wire   [31:0] tmp_14_fu_2044_p18;
reg   [31:0] tmp_14_reg_4511;
wire   [31:0] tmp_15_fu_2066_p18;
reg   [31:0] tmp_15_reg_4516;
wire   [31:0] tmp_16_fu_2088_p18;
reg   [31:0] tmp_16_reg_4525;
wire   [31:0] tmp_17_fu_2110_p18;
reg   [31:0] tmp_17_reg_4530;
wire   [31:0] tmp_18_fu_2132_p18;
reg   [31:0] tmp_18_reg_4539;
wire   [31:0] tmp_19_fu_2154_p18;
reg   [31:0] tmp_19_reg_4544;
wire   [31:0] tmp_20_fu_2176_p18;
reg   [31:0] tmp_20_reg_4549;
wire   [31:0] tmp_21_fu_2198_p18;
reg   [31:0] tmp_21_reg_4554;
wire   [31:0] tmp_22_fu_2220_p18;
reg   [31:0] tmp_22_reg_4563;
wire   [31:0] tmp_23_fu_2242_p18;
reg   [31:0] tmp_23_reg_4568;
wire   [0:0] icmp_ln112_fu_2298_p2;
reg   [0:0] icmp_ln112_reg_4577;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state12_pp0_stage3_iter1;
wire    ap_block_state20_pp0_stage3_iter2;
wire    ap_block_state28_pp0_stage3_iter3;
wire    ap_block_state36_pp0_stage3_iter4;
wire    ap_block_state44_pp0_stage3_iter5;
wire    ap_block_state52_pp0_stage3_iter6;
wire    ap_block_state60_pp0_stage3_iter7;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] icmp_ln112_1_fu_2304_p2;
reg   [0:0] icmp_ln112_1_reg_4582;
wire   [0:0] icmp_ln112_2_fu_2310_p2;
reg   [0:0] icmp_ln112_2_reg_4587;
wire   [0:0] icmp_ln112_3_fu_2316_p2;
reg   [0:0] icmp_ln112_3_reg_4592;
reg   [0:0] tmp_26_reg_4597;
reg   [0:0] tmp_31_reg_4602;
wire   [0:0] and_ln112_1_fu_2335_p2;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state13_pp0_stage4_iter1;
wire    ap_block_state21_pp0_stage4_iter2;
wire    ap_block_state29_pp0_stage4_iter3;
wire    ap_block_state37_pp0_stage4_iter4;
wire    ap_block_state45_pp0_stage4_iter5;
wire    ap_block_state53_pp0_stage4_iter6;
wire    ap_block_pp0_stage4_11001;
reg   [0:0] and_ln112_1_reg_4607_pp0_iter1_reg;
wire   [0:0] and_ln112_3_fu_2416_p2;
reg   [0:0] and_ln112_3_reg_4612_pp0_iter1_reg;
reg   [0:0] tmp_36_reg_4617;
reg   [0:0] tmp_41_reg_4622;
wire   [0:0] and_ln112_5_fu_2498_p2;
reg   [0:0] and_ln112_5_reg_4627_pp0_iter1_reg;
wire   [0:0] and_ln112_7_fu_2579_p2;
reg   [0:0] and_ln112_7_reg_4632_pp0_iter1_reg;
wire   [0:0] icmp_ln1019_fu_2584_p2;
reg   [0:0] icmp_ln1019_reg_4637;
reg   [0:0] icmp_ln1019_reg_4637_pp0_iter2_reg;
reg   [0:0] icmp_ln1019_reg_4637_pp0_iter3_reg;
reg   [0:0] icmp_ln1019_reg_4637_pp0_iter4_reg;
reg   [0:0] icmp_ln1019_reg_4637_pp0_iter5_reg;
reg   [0:0] icmp_ln1019_reg_4637_pp0_iter6_reg;
reg   [0:0] icmp_ln1019_reg_4637_pp0_iter7_reg;
reg   [31:0] d1_reg_4646;
wire   [31:0] grp_fu_1642_p2;
reg   [31:0] d2_reg_4651;
wire   [31:0] grp_fu_1646_p2;
reg   [31:0] d_1_reg_4656;
reg   [31:0] sub_reg_4662;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state11_pp0_stage2_iter1;
wire    ap_block_state19_pp0_stage2_iter2;
wire    ap_block_state27_pp0_stage2_iter3;
wire    ap_block_state35_pp0_stage2_iter4;
wire    ap_block_state43_pp0_stage2_iter5;
wire    ap_block_state51_pp0_stage2_iter6;
wire    ap_block_state59_pp0_stage2_iter7;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] sub2_reg_4667;
reg   [31:0] d1_1_reg_4672;
reg   [31:0] d2_1_reg_4677;
reg   [31:0] sub75_1_reg_4682;
reg   [31:0] sub87_1_reg_4687;
reg   [31:0] d1_2_reg_4692;
reg   [31:0] d2_2_reg_4697;
reg   [31:0] d_2_reg_4702;
reg   [31:0] sub75_2_reg_4708;
reg   [31:0] sub87_2_reg_4713;
reg   [31:0] d1_3_reg_4718;
reg   [31:0] mul_reg_4723;
reg   [31:0] sub87_3_reg_4728;
reg   [31:0] mul_1_reg_4733;
reg   [31:0] mul_1_reg_4733_pp0_iter2_reg;
reg   [31:0] d_3_reg_4738;
reg   [31:0] mul_2_reg_4744;
reg   [31:0] mul_2_reg_4744_pp0_iter3_reg;
reg   [31:0] mul_2_reg_4744_pp0_iter4_reg;
reg   [31:0] mul_3_reg_4749;
reg   [31:0] mul_3_reg_4749_pp0_iter3_reg;
reg   [31:0] mul_3_reg_4749_pp0_iter4_reg;
reg   [31:0] distance_reg_4754;
wire   [31:0] ov_2_fu_2629_p3;
reg   [31:0] ov_2_reg_4759;
wire   [31:0] ov_6_fu_2636_p3;
reg   [31:0] ov_6_reg_4766;
wire   [31:0] ov_10_fu_2643_p3;
reg   [31:0] ov_10_reg_4773;
reg   [0:0] tmp_28_reg_4780;
reg   [0:0] tmp_33_reg_4785;
wire   [31:0] ov_14_fu_2650_p3;
reg   [31:0] ov_14_reg_4790;
wire   [31:0] ov_16_fu_2697_p3;
reg   [31:0] ov_16_reg_4797;
wire   [31:0] ov_7_fu_2744_p3;
reg   [31:0] ov_7_reg_4802;
reg   [0:0] tmp_38_reg_4807;
wire   [31:0] ov_11_fu_2791_p3;
reg   [31:0] ov_11_reg_4812;
reg   [0:0] tmp_43_reg_4817;
wire   [31:0] ov_15_fu_2838_p3;
reg   [31:0] ov_15_reg_4822;
reg   [31:0] distance_1_reg_4827;
reg   [31:0] overlap_1_reg_4832;
reg   [31:0] overlap_2_reg_4837;
reg   [31:0] distance_2_reg_4842;
reg   [31:0] overlap_3_reg_4847;
reg   [0:0] tmp_45_reg_4854;
reg   [31:0] distance_3_reg_4859;
wire   [31:0] sc_2_fu_2898_p3;
reg   [31:0] sc_2_reg_4864;
reg   [31:0] tmp_score_load_reg_4871;
reg   [0:0] tmp_48_reg_4878;
wire   [31:0] tmp_other_4_fu_3005_p3;
reg   [31:0] tmp_other_4_reg_4883;
wire   [31:0] tmp_score_4_fu_3012_p3;
reg   [31:0] tmp_score_4_reg_4889;
reg   [31:0] score_load_reg_4897;
reg   [31:0] merge_1_4_reg_4905;
reg   [31:0] merge_2_1_reg_4912;
reg   [0:0] tmp_51_reg_4918;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage2_subdone;
reg    ap_condition_exit_pp0_iter7_stage2;
wire    ap_block_pp0_stage3_subdone;
reg   [31:0] merge_1_fu_440;
wire   [31:0] merge_1_7_fu_3184_p3;
wire    ap_loop_init;
wire    ap_block_pp0_stage2;
reg   [31:0] merge_2_fu_444;
wire   [31:0] merge_2_6_fu_3178_p3;
reg   [31:0] score_fu_448;
wire   [31:0] score_3_fu_3172_p3;
wire    ap_block_pp0_stage1;
reg   [31:0] merge_1_1_fu_452;
wire   [31:0] i_real_2_fu_2612_p3;
reg   [31:0] k_real_4_fu_456;
wire   [31:0] k_real_3_fu_2604_p3;
reg   [31:0] tmp_score_fu_460;
wire   [31:0] tmp_score_3_fu_3024_p3;
wire    ap_block_pp0_stage5;
reg   [31:0] tmp_other_fu_464;
wire   [31:0] tmp_other_3_fu_3018_p3;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage2_01001;
wire    ap_block_pp0_stage0;
reg   [31:0] grp_fu_1634_p0;
reg   [31:0] grp_fu_1634_p1;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage6;
reg   [31:0] grp_fu_1638_p0;
reg   [31:0] grp_fu_1638_p1;
reg   [31:0] grp_fu_1642_p0;
reg   [31:0] grp_fu_1642_p1;
reg   [31:0] grp_fu_1646_p0;
reg   [31:0] grp_fu_1646_p1;
reg   [31:0] grp_fu_1651_p0;
reg   [31:0] grp_fu_1651_p1;
reg   [31:0] grp_fu_1655_p0;
reg   [31:0] grp_fu_1655_p1;
reg   [31:0] grp_fu_1659_p0;
reg   [31:0] grp_fu_1659_p1;
wire   [3:0] trunc_ln104_fu_1728_p1;
wire   [3:0] trunc_ln104_1_fu_1754_p1;
wire   [31:0] bitcast_ln112_fu_2264_p1;
wire   [31:0] bitcast_ln112_1_fu_2281_p1;
wire   [7:0] tmp_24_fu_2267_p4;
wire   [22:0] trunc_ln112_fu_2277_p1;
wire   [7:0] tmp_25_fu_2284_p4;
wire   [22:0] trunc_ln112_1_fu_2294_p1;
wire   [0:0] or_ln112_1_fu_2326_p2;
wire   [0:0] and_ln112_fu_2330_p2;
wire   [0:0] or_ln112_fu_2322_p2;
wire   [31:0] bitcast_ln112_2_fu_2341_p1;
wire   [31:0] bitcast_ln112_3_fu_2358_p1;
wire   [7:0] tmp_29_fu_2344_p4;
wire   [22:0] trunc_ln112_2_fu_2354_p1;
wire   [0:0] icmp_ln112_5_fu_2381_p2;
wire   [0:0] icmp_ln112_4_fu_2375_p2;
wire   [7:0] tmp_30_fu_2361_p4;
wire   [22:0] trunc_ln112_3_fu_2371_p1;
wire   [0:0] icmp_ln112_7_fu_2399_p2;
wire   [0:0] icmp_ln112_6_fu_2393_p2;
wire   [0:0] or_ln112_3_fu_2405_p2;
wire   [0:0] and_ln112_2_fu_2411_p2;
wire   [0:0] or_ln112_2_fu_2387_p2;
wire   [31:0] bitcast_ln112_4_fu_2422_p1;
wire   [31:0] bitcast_ln112_5_fu_2439_p1;
wire   [7:0] tmp_34_fu_2425_p4;
wire   [22:0] trunc_ln112_4_fu_2435_p1;
wire   [0:0] icmp_ln112_9_fu_2462_p2;
wire   [0:0] icmp_ln112_8_fu_2456_p2;
wire   [7:0] tmp_35_fu_2442_p4;
wire   [22:0] trunc_ln112_5_fu_2452_p1;
wire   [0:0] icmp_ln112_11_fu_2480_p2;
wire   [0:0] icmp_ln112_10_fu_2474_p2;
wire   [0:0] or_ln112_4_fu_2468_p2;
wire   [0:0] or_ln112_5_fu_2486_p2;
wire   [0:0] and_ln112_4_fu_2492_p2;
wire   [31:0] bitcast_ln112_6_fu_2503_p1;
wire   [31:0] bitcast_ln112_7_fu_2520_p1;
wire   [7:0] tmp_39_fu_2506_p4;
wire   [22:0] trunc_ln112_6_fu_2516_p1;
wire   [0:0] icmp_ln112_13_fu_2543_p2;
wire   [0:0] icmp_ln112_12_fu_2537_p2;
wire   [7:0] tmp_40_fu_2523_p4;
wire   [22:0] trunc_ln112_7_fu_2533_p1;
wire   [0:0] icmp_ln112_15_fu_2561_p2;
wire   [0:0] icmp_ln112_14_fu_2555_p2;
wire   [0:0] or_ln112_6_fu_2549_p2;
wire   [0:0] or_ln112_7_fu_2567_p2;
wire   [0:0] and_ln112_6_fu_2573_p2;
wire   [31:0] k_real_fu_2594_p2;
wire   [31:0] k_real_2_fu_2599_p2;
wire   [31:0] i_real_fu_2589_p2;
wire   [31:0] bitcast_ln116_fu_2657_p1;
wire   [7:0] tmp_27_fu_2660_p4;
wire   [22:0] trunc_ln116_fu_2670_p1;
wire   [0:0] icmp_ln116_1_fu_2680_p2;
wire   [0:0] icmp_ln116_fu_2674_p2;
wire   [0:0] or_ln116_fu_2686_p2;
wire   [0:0] and_ln116_fu_2692_p2;
wire   [31:0] bitcast_ln116_1_fu_2704_p1;
wire   [7:0] tmp_32_fu_2707_p4;
wire   [22:0] trunc_ln116_1_fu_2717_p1;
wire   [0:0] icmp_ln116_3_fu_2727_p2;
wire   [0:0] icmp_ln116_2_fu_2721_p2;
wire   [0:0] or_ln116_1_fu_2733_p2;
wire   [0:0] and_ln116_1_fu_2739_p2;
wire   [31:0] bitcast_ln116_2_fu_2751_p1;
wire   [7:0] tmp_37_fu_2754_p4;
wire   [22:0] trunc_ln116_2_fu_2764_p1;
wire   [0:0] icmp_ln116_5_fu_2774_p2;
wire   [0:0] icmp_ln116_4_fu_2768_p2;
wire   [0:0] or_ln116_2_fu_2780_p2;
wire   [0:0] and_ln116_2_fu_2786_p2;
wire   [31:0] bitcast_ln116_3_fu_2798_p1;
wire   [7:0] tmp_42_fu_2801_p4;
wire   [22:0] trunc_ln116_3_fu_2811_p1;
wire   [0:0] icmp_ln116_7_fu_2821_p2;
wire   [0:0] icmp_ln116_6_fu_2815_p2;
wire   [0:0] or_ln116_3_fu_2827_p2;
wire   [0:0] and_ln116_3_fu_2833_p2;
wire   [31:0] bitcast_ln122_fu_2845_p1;
wire   [7:0] tmp_44_fu_2848_p4;
wire   [22:0] trunc_ln122_fu_2858_p1;
wire   [0:0] icmp_ln122_1_fu_2868_p2;
wire   [0:0] icmp_ln122_fu_2862_p2;
wire   [0:0] or_ln122_fu_2874_p2;
wire   [31:0] bitcast_ln126_fu_2885_p1;
wire   [31:0] xor_ln126_fu_2888_p2;
wire   [0:0] and_ln122_fu_2880_p2;
wire   [31:0] sc_fu_2894_p1;
wire   [31:0] bitcast_ln130_fu_2918_p1;
wire   [31:0] bitcast_ln130_1_fu_2935_p1;
wire   [7:0] tmp_46_fu_2921_p4;
wire   [22:0] trunc_ln130_fu_2931_p1;
wire   [0:0] icmp_ln130_2_fu_2958_p2;
wire   [0:0] icmp_ln130_1_fu_2952_p2;
wire   [7:0] tmp_47_fu_2938_p4;
wire   [22:0] trunc_ln130_1_fu_2948_p1;
wire   [0:0] icmp_ln130_4_fu_2976_p2;
wire   [0:0] icmp_ln130_3_fu_2970_p2;
wire   [0:0] or_ln130_1_fu_2964_p2;
wire   [0:0] or_ln130_2_fu_2982_p2;
wire   [0:0] and_ln130_fu_2988_p2;
wire   [0:0] icmp_ln130_fu_2912_p2;
wire   [0:0] and_ln130_1_fu_2994_p2;
wire   [0:0] or_ln130_fu_2999_p2;
wire   [31:0] bitcast_ln139_fu_3067_p1;
wire   [31:0] bitcast_ln139_1_fu_3084_p1;
wire   [7:0] tmp_49_fu_3070_p4;
wire   [22:0] trunc_ln139_fu_3080_p1;
wire   [0:0] icmp_ln139_1_fu_3107_p2;
wire   [0:0] icmp_ln139_fu_3101_p2;
wire   [7:0] tmp_50_fu_3087_p4;
wire   [22:0] trunc_ln139_1_fu_3097_p1;
wire   [0:0] icmp_ln139_3_fu_3125_p2;
wire   [0:0] icmp_ln139_2_fu_3119_p2;
wire   [0:0] or_ln139_1_fu_3113_p2;
wire   [0:0] or_ln139_2_fu_3131_p2;
wire   [0:0] and_ln139_fu_3137_p2;
wire   [0:0] tmp_fu_3060_p3;
wire   [0:0] and_ln139_1_fu_3143_p2;
wire   [0:0] or_ln139_fu_3148_p2;
wire   [31:0] score_2_fu_3154_p3;
wire   [31:0] merge_2_5_fu_3160_p3;
wire   [31:0] merge_1_6_fu_3166_p3;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage5_00001;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage7_00001;
wire    ap_block_pp0_stage1_00001;
reg   [1:0] grp_fu_1638_opcode;
reg   [1:0] grp_fu_1642_opcode;
reg   [4:0] grp_fu_1655_opcode;
reg   [4:0] grp_fu_1659_opcode;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_idle_pp0_0to6;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [7:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to7;
reg    ap_done_pending_pp0;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_8_full_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1638_p0),
    .din1(grp_fu_1638_p1),
    .opcode(grp_fu_1638_opcode),
    .ce(1'b1),
    .dout(grp_fu_1638_p2)
);

FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_8_full_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1642_p0),
    .din1(grp_fu_1642_p1),
    .opcode(grp_fu_1642_opcode),
    .ce(1'b1),
    .dout(grp_fu_1642_p2)
);

FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_8_full_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1646_p0),
    .din1(grp_fu_1646_p1),
    .ce(1'b1),
    .dout(grp_fu_1646_p2)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U17(
    .din0(regions_center_0_0_0),
    .din1(regions_center_1_0_0),
    .din2(regions_center_2_0_0),
    .din3(regions_center_3_0_0),
    .din4(regions_center_4_0_0),
    .din5(regions_center_5_0_0),
    .din6(regions_center_6_0_0),
    .din7(regions_center_7_0_0),
    .din8(regions_center_8_0_0),
    .din9(regions_center_9_0_0),
    .din10(regions_center_10_0_0),
    .din11(regions_center_11_0_0),
    .din12(regions_center_12_0_0),
    .din13(regions_center_13_0_0),
    .din14(regions_center_14_0_0),
    .din15(regions_center_15_0_0),
    .din16(trunc_ln104_fu_1728_p1),
    .dout(tmp_s_fu_1732_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U18(
    .din0(regions_center_0_0_0),
    .din1(regions_center_1_0_0),
    .din2(regions_center_2_0_0),
    .din3(regions_center_3_0_0),
    .din4(regions_center_4_0_0),
    .din5(regions_center_5_0_0),
    .din6(regions_center_6_0_0),
    .din7(regions_center_7_0_0),
    .din8(regions_center_8_0_0),
    .din9(regions_center_9_0_0),
    .din10(regions_center_10_0_0),
    .din11(regions_center_11_0_0),
    .din12(regions_center_12_0_0),
    .din13(regions_center_13_0_0),
    .din14(regions_center_14_0_0),
    .din15(regions_center_15_0_0),
    .din16(trunc_ln104_1_fu_1754_p1),
    .dout(tmp_1_fu_1758_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U19(
    .din0(regions_max_0_0_0),
    .din1(regions_max_1_0_0),
    .din2(regions_max_2_0_0),
    .din3(regions_max_3_0_0),
    .din4(regions_max_4_0_0),
    .din5(regions_max_5_0_0),
    .din6(regions_max_6_0_0),
    .din7(regions_max_7_0_0),
    .din8(regions_max_8_0_0),
    .din9(regions_max_9_0_0),
    .din10(regions_max_10_0_0),
    .din11(regions_max_11_0_0),
    .din12(regions_max_12_0_0),
    .din13(regions_max_13_0_0),
    .din14(regions_max_14_0_0),
    .din15(regions_max_15_0_0),
    .din16(trunc_ln104_fu_1728_p1),
    .dout(tmp_2_fu_1780_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U20(
    .din0(regions_min_0_0_0),
    .din1(regions_min_1_0_0),
    .din2(regions_min_2_0_0),
    .din3(regions_min_3_0_0),
    .din4(regions_min_4_0_0),
    .din5(regions_min_5_0_0),
    .din6(regions_min_6_0_0),
    .din7(regions_min_7_0_0),
    .din8(regions_min_8_0_0),
    .din9(regions_min_9_0_0),
    .din10(regions_min_10_0_0),
    .din11(regions_min_11_0_0),
    .din12(regions_min_12_0_0),
    .din13(regions_min_13_0_0),
    .din14(regions_min_14_0_0),
    .din15(regions_min_15_0_0),
    .din16(trunc_ln104_fu_1728_p1),
    .dout(tmp_3_fu_1802_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U21(
    .din0(regions_max_0_0_0),
    .din1(regions_max_1_0_0),
    .din2(regions_max_2_0_0),
    .din3(regions_max_3_0_0),
    .din4(regions_max_4_0_0),
    .din5(regions_max_5_0_0),
    .din6(regions_max_6_0_0),
    .din7(regions_max_7_0_0),
    .din8(regions_max_8_0_0),
    .din9(regions_max_9_0_0),
    .din10(regions_max_10_0_0),
    .din11(regions_max_11_0_0),
    .din12(regions_max_12_0_0),
    .din13(regions_max_13_0_0),
    .din14(regions_max_14_0_0),
    .din15(regions_max_15_0_0),
    .din16(trunc_ln104_1_fu_1754_p1),
    .dout(tmp_4_fu_1824_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U22(
    .din0(regions_min_0_0_0),
    .din1(regions_min_1_0_0),
    .din2(regions_min_2_0_0),
    .din3(regions_min_3_0_0),
    .din4(regions_min_4_0_0),
    .din5(regions_min_5_0_0),
    .din6(regions_min_6_0_0),
    .din7(regions_min_7_0_0),
    .din8(regions_min_8_0_0),
    .din9(regions_min_9_0_0),
    .din10(regions_min_10_0_0),
    .din11(regions_min_11_0_0),
    .din12(regions_min_12_0_0),
    .din13(regions_min_13_0_0),
    .din14(regions_min_14_0_0),
    .din15(regions_min_15_0_0),
    .din16(trunc_ln104_1_fu_1754_p1),
    .dout(tmp_5_fu_1846_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U23(
    .din0(regions_center_0_1_0),
    .din1(regions_center_1_1_0),
    .din2(regions_center_2_1_0),
    .din3(regions_center_3_1_0),
    .din4(regions_center_4_1_0),
    .din5(regions_center_5_1_0),
    .din6(regions_center_6_1_0),
    .din7(regions_center_7_1_0),
    .din8(regions_center_8_1_0),
    .din9(regions_center_9_1_0),
    .din10(regions_center_10_1_0),
    .din11(regions_center_11_1_0),
    .din12(regions_center_12_1_0),
    .din13(regions_center_13_1_0),
    .din14(regions_center_14_1_0),
    .din15(regions_center_15_1_0),
    .din16(trunc_ln104_fu_1728_p1),
    .dout(tmp_6_fu_1868_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U24(
    .din0(regions_center_0_1_0),
    .din1(regions_center_1_1_0),
    .din2(regions_center_2_1_0),
    .din3(regions_center_3_1_0),
    .din4(regions_center_4_1_0),
    .din5(regions_center_5_1_0),
    .din6(regions_center_6_1_0),
    .din7(regions_center_7_1_0),
    .din8(regions_center_8_1_0),
    .din9(regions_center_9_1_0),
    .din10(regions_center_10_1_0),
    .din11(regions_center_11_1_0),
    .din12(regions_center_12_1_0),
    .din13(regions_center_13_1_0),
    .din14(regions_center_14_1_0),
    .din15(regions_center_15_1_0),
    .din16(trunc_ln104_1_fu_1754_p1),
    .dout(tmp_7_fu_1890_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U25(
    .din0(regions_max_0_1_0),
    .din1(regions_max_1_1_0),
    .din2(regions_max_2_1_0),
    .din3(regions_max_3_1_0),
    .din4(regions_max_4_1_0),
    .din5(regions_max_5_1_0),
    .din6(regions_max_6_1_0),
    .din7(regions_max_7_1_0),
    .din8(regions_max_8_1_0),
    .din9(regions_max_9_1_0),
    .din10(regions_max_10_1_0),
    .din11(regions_max_11_1_0),
    .din12(regions_max_12_1_0),
    .din13(regions_max_13_1_0),
    .din14(regions_max_14_1_0),
    .din15(regions_max_15_1_0),
    .din16(trunc_ln104_fu_1728_p1),
    .dout(tmp_8_fu_1912_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U26(
    .din0(regions_min_0_1_0),
    .din1(regions_min_1_1_0),
    .din2(regions_min_2_1_0),
    .din3(regions_min_3_1_0),
    .din4(regions_min_4_1_0),
    .din5(regions_min_5_1_0),
    .din6(regions_min_6_1_0),
    .din7(regions_min_7_1_0),
    .din8(regions_min_8_1_0),
    .din9(regions_min_9_1_0),
    .din10(regions_min_10_1_0),
    .din11(regions_min_11_1_0),
    .din12(regions_min_12_1_0),
    .din13(regions_min_13_1_0),
    .din14(regions_min_14_1_0),
    .din15(regions_min_15_1_0),
    .din16(trunc_ln104_fu_1728_p1),
    .dout(tmp_9_fu_1934_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U27(
    .din0(regions_max_0_1_0),
    .din1(regions_max_1_1_0),
    .din2(regions_max_2_1_0),
    .din3(regions_max_3_1_0),
    .din4(regions_max_4_1_0),
    .din5(regions_max_5_1_0),
    .din6(regions_max_6_1_0),
    .din7(regions_max_7_1_0),
    .din8(regions_max_8_1_0),
    .din9(regions_max_9_1_0),
    .din10(regions_max_10_1_0),
    .din11(regions_max_11_1_0),
    .din12(regions_max_12_1_0),
    .din13(regions_max_13_1_0),
    .din14(regions_max_14_1_0),
    .din15(regions_max_15_1_0),
    .din16(trunc_ln104_1_fu_1754_p1),
    .dout(tmp_10_fu_1956_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U28(
    .din0(regions_min_0_1_0),
    .din1(regions_min_1_1_0),
    .din2(regions_min_2_1_0),
    .din3(regions_min_3_1_0),
    .din4(regions_min_4_1_0),
    .din5(regions_min_5_1_0),
    .din6(regions_min_6_1_0),
    .din7(regions_min_7_1_0),
    .din8(regions_min_8_1_0),
    .din9(regions_min_9_1_0),
    .din10(regions_min_10_1_0),
    .din11(regions_min_11_1_0),
    .din12(regions_min_12_1_0),
    .din13(regions_min_13_1_0),
    .din14(regions_min_14_1_0),
    .din15(regions_min_15_1_0),
    .din16(trunc_ln104_1_fu_1754_p1),
    .dout(tmp_11_fu_1978_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U29(
    .din0(regions_center_0_2_0),
    .din1(regions_center_1_2_0),
    .din2(regions_center_2_2_0),
    .din3(regions_center_3_2_0),
    .din4(regions_center_4_2_0),
    .din5(regions_center_5_2_0),
    .din6(regions_center_6_2_0),
    .din7(regions_center_7_2_0),
    .din8(regions_center_8_2_0),
    .din9(regions_center_9_2_0),
    .din10(regions_center_10_2_0),
    .din11(regions_center_11_2_0),
    .din12(regions_center_12_2_0),
    .din13(regions_center_13_2_0),
    .din14(regions_center_14_2_0),
    .din15(regions_center_15_2_0),
    .din16(trunc_ln104_fu_1728_p1),
    .dout(tmp_12_fu_2000_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U30(
    .din0(regions_center_0_2_0),
    .din1(regions_center_1_2_0),
    .din2(regions_center_2_2_0),
    .din3(regions_center_3_2_0),
    .din4(regions_center_4_2_0),
    .din5(regions_center_5_2_0),
    .din6(regions_center_6_2_0),
    .din7(regions_center_7_2_0),
    .din8(regions_center_8_2_0),
    .din9(regions_center_9_2_0),
    .din10(regions_center_10_2_0),
    .din11(regions_center_11_2_0),
    .din12(regions_center_12_2_0),
    .din13(regions_center_13_2_0),
    .din14(regions_center_14_2_0),
    .din15(regions_center_15_2_0),
    .din16(trunc_ln104_1_fu_1754_p1),
    .dout(tmp_13_fu_2022_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U31(
    .din0(regions_max_0_2_0),
    .din1(regions_max_1_2_0),
    .din2(regions_max_2_2_0),
    .din3(regions_max_3_2_0),
    .din4(regions_max_4_2_0),
    .din5(regions_max_5_2_0),
    .din6(regions_max_6_2_0),
    .din7(regions_max_7_2_0),
    .din8(regions_max_8_2_0),
    .din9(regions_max_9_2_0),
    .din10(regions_max_10_2_0),
    .din11(regions_max_11_2_0),
    .din12(regions_max_12_2_0),
    .din13(regions_max_13_2_0),
    .din14(regions_max_14_2_0),
    .din15(regions_max_15_2_0),
    .din16(trunc_ln104_fu_1728_p1),
    .dout(tmp_14_fu_2044_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U32(
    .din0(regions_min_0_2_0),
    .din1(regions_min_1_2_0),
    .din2(regions_min_2_2_0),
    .din3(regions_min_3_2_0),
    .din4(regions_min_4_2_0),
    .din5(regions_min_5_2_0),
    .din6(regions_min_6_2_0),
    .din7(regions_min_7_2_0),
    .din8(regions_min_8_2_0),
    .din9(regions_min_9_2_0),
    .din10(regions_min_10_2_0),
    .din11(regions_min_11_2_0),
    .din12(regions_min_12_2_0),
    .din13(regions_min_13_2_0),
    .din14(regions_min_14_2_0),
    .din15(regions_min_15_2_0),
    .din16(trunc_ln104_fu_1728_p1),
    .dout(tmp_15_fu_2066_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U33(
    .din0(regions_max_0_2_0),
    .din1(regions_max_1_2_0),
    .din2(regions_max_2_2_0),
    .din3(regions_max_3_2_0),
    .din4(regions_max_4_2_0),
    .din5(regions_max_5_2_0),
    .din6(regions_max_6_2_0),
    .din7(regions_max_7_2_0),
    .din8(regions_max_8_2_0),
    .din9(regions_max_9_2_0),
    .din10(regions_max_10_2_0),
    .din11(regions_max_11_2_0),
    .din12(regions_max_12_2_0),
    .din13(regions_max_13_2_0),
    .din14(regions_max_14_2_0),
    .din15(regions_max_15_2_0),
    .din16(trunc_ln104_1_fu_1754_p1),
    .dout(tmp_16_fu_2088_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U34(
    .din0(regions_min_0_2_0),
    .din1(regions_min_1_2_0),
    .din2(regions_min_2_2_0),
    .din3(regions_min_3_2_0),
    .din4(regions_min_4_2_0),
    .din5(regions_min_5_2_0),
    .din6(regions_min_6_2_0),
    .din7(regions_min_7_2_0),
    .din8(regions_min_8_2_0),
    .din9(regions_min_9_2_0),
    .din10(regions_min_10_2_0),
    .din11(regions_min_11_2_0),
    .din12(regions_min_12_2_0),
    .din13(regions_min_13_2_0),
    .din14(regions_min_14_2_0),
    .din15(regions_min_15_2_0),
    .din16(trunc_ln104_1_fu_1754_p1),
    .dout(tmp_17_fu_2110_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U35(
    .din0(regions_center_0_3_0),
    .din1(regions_center_1_3_0),
    .din2(regions_center_2_3_0),
    .din3(regions_center_3_3_0),
    .din4(regions_center_4_3_0),
    .din5(regions_center_5_3_0),
    .din6(regions_center_6_3_0),
    .din7(regions_center_7_3_0),
    .din8(regions_center_8_3_0),
    .din9(regions_center_9_3_0),
    .din10(regions_center_10_3_0),
    .din11(regions_center_11_3_0),
    .din12(regions_center_12_3_0),
    .din13(regions_center_13_3_0),
    .din14(regions_center_14_3_0),
    .din15(regions_center_15_3_0),
    .din16(trunc_ln104_fu_1728_p1),
    .dout(tmp_18_fu_2132_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U36(
    .din0(regions_center_0_3_0),
    .din1(regions_center_1_3_0),
    .din2(regions_center_2_3_0),
    .din3(regions_center_3_3_0),
    .din4(regions_center_4_3_0),
    .din5(regions_center_5_3_0),
    .din6(regions_center_6_3_0),
    .din7(regions_center_7_3_0),
    .din8(regions_center_8_3_0),
    .din9(regions_center_9_3_0),
    .din10(regions_center_10_3_0),
    .din11(regions_center_11_3_0),
    .din12(regions_center_12_3_0),
    .din13(regions_center_13_3_0),
    .din14(regions_center_14_3_0),
    .din15(regions_center_15_3_0),
    .din16(trunc_ln104_1_fu_1754_p1),
    .dout(tmp_19_fu_2154_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U37(
    .din0(regions_max_0_3_0),
    .din1(regions_max_1_3_0),
    .din2(regions_max_2_3_0),
    .din3(regions_max_3_3_0),
    .din4(regions_max_4_3_0),
    .din5(regions_max_5_3_0),
    .din6(regions_max_6_3_0),
    .din7(regions_max_7_3_0),
    .din8(regions_max_8_3_0),
    .din9(regions_max_9_3_0),
    .din10(regions_max_10_3_0),
    .din11(regions_max_11_3_0),
    .din12(regions_max_12_3_0),
    .din13(regions_max_13_3_0),
    .din14(regions_max_14_3_0),
    .din15(regions_max_15_3_0),
    .din16(trunc_ln104_fu_1728_p1),
    .dout(tmp_20_fu_2176_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U38(
    .din0(regions_min_0_3_0),
    .din1(regions_min_1_3_0),
    .din2(regions_min_2_3_0),
    .din3(regions_min_3_3_0),
    .din4(regions_min_4_3_0),
    .din5(regions_min_5_3_0),
    .din6(regions_min_6_3_0),
    .din7(regions_min_7_3_0),
    .din8(regions_min_8_3_0),
    .din9(regions_min_9_3_0),
    .din10(regions_min_10_3_0),
    .din11(regions_min_11_3_0),
    .din12(regions_min_12_3_0),
    .din13(regions_min_13_3_0),
    .din14(regions_min_14_3_0),
    .din15(regions_min_15_3_0),
    .din16(trunc_ln104_fu_1728_p1),
    .dout(tmp_21_fu_2198_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U39(
    .din0(regions_max_0_3_0),
    .din1(regions_max_1_3_0),
    .din2(regions_max_2_3_0),
    .din3(regions_max_3_3_0),
    .din4(regions_max_4_3_0),
    .din5(regions_max_5_3_0),
    .din6(regions_max_6_3_0),
    .din7(regions_max_7_3_0),
    .din8(regions_max_8_3_0),
    .din9(regions_max_9_3_0),
    .din10(regions_max_10_3_0),
    .din11(regions_max_11_3_0),
    .din12(regions_max_12_3_0),
    .din13(regions_max_13_3_0),
    .din14(regions_max_14_3_0),
    .din15(regions_max_15_3_0),
    .din16(trunc_ln104_1_fu_1754_p1),
    .dout(tmp_22_fu_2220_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U40(
    .din0(regions_min_0_3_0),
    .din1(regions_min_1_3_0),
    .din2(regions_min_2_3_0),
    .din3(regions_min_3_3_0),
    .din4(regions_min_4_3_0),
    .din5(regions_min_5_3_0),
    .din6(regions_min_6_3_0),
    .din7(regions_min_7_3_0),
    .din8(regions_min_8_3_0),
    .din9(regions_min_9_3_0),
    .din10(regions_min_10_3_0),
    .din11(regions_min_11_3_0),
    .din12(regions_min_12_3_0),
    .din13(regions_min_13_3_0),
    .din14(regions_min_14_3_0),
    .din15(regions_min_15_3_0),
    .din16(trunc_ln104_1_fu_1754_p1),
    .dout(tmp_23_fu_2242_p18)
);

FaultDetector_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage7),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter7_stage2) | ((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage2))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage2))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage2))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage2))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage2)) | ((1'b0 == ap_block_pp0_stage3_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_real_4_fu_456 <= 32'd1;
        end else if (((icmp_ln1027_reg_4421 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            k_real_4_fu_456 <= k_real_3_fu_2604_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            merge_1_1_fu_452 <= 32'd0;
        end else if (((icmp_ln1027_reg_4421 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            merge_1_1_fu_452 <= i_real_2_fu_2612_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        merge_1_fu_440 <= 32'd4294967295;
    end else if (((icmp_ln1027_reg_4421_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        merge_1_fu_440 <= merge_1_7_fu_3184_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        merge_2_fu_444 <= 32'd4294967295;
    end else if (((icmp_ln1027_reg_4421_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        merge_2_fu_444 <= merge_2_6_fu_3178_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        score_fu_448 <= 32'd0;
    end else if (((icmp_ln1027_reg_4421_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        score_fu_448 <= score_3_fu_3172_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_other_fu_464 <= 32'd4294967295;
        end else if (((icmp_ln1027_reg_4421_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
            tmp_other_fu_464 <= tmp_other_3_fu_3018_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_score_fu_460 <= 32'd0;
        end else if (((icmp_ln1027_reg_4421_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1))) begin
            tmp_score_fu_460 <= tmp_score_3_fu_3024_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln112_1_reg_4607 <= and_ln112_1_fu_2335_p2;
        and_ln112_3_reg_4612 <= and_ln112_3_fu_2416_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln112_1_reg_4607_pp0_iter1_reg <= and_ln112_1_reg_4607;
        and_ln112_1_reg_4607_pp0_iter2_reg <= and_ln112_1_reg_4607_pp0_iter1_reg;
        and_ln112_3_reg_4612_pp0_iter1_reg <= and_ln112_3_reg_4612;
        and_ln112_3_reg_4612_pp0_iter2_reg <= and_ln112_3_reg_4612_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        and_ln112_5_reg_4627 <= and_ln112_5_fu_2498_p2;
        and_ln112_7_reg_4632 <= and_ln112_7_fu_2579_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        and_ln112_5_reg_4627_pp0_iter1_reg <= and_ln112_5_reg_4627;
        and_ln112_5_reg_4627_pp0_iter2_reg <= and_ln112_5_reg_4627_pp0_iter1_reg;
        and_ln112_7_reg_4632_pp0_iter1_reg <= and_ln112_7_reg_4632;
        and_ln112_7_reg_4632_pp0_iter2_reg <= and_ln112_7_reg_4632_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        d1_1_reg_4672 <= grp_fu_1642_p2;
        d2_1_reg_4677 <= grp_fu_1646_p2;
        sub2_reg_4667 <= grp_fu_1638_p2;
        sub_reg_4662 <= grp_fu_12156_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        d1_2_reg_4692 <= grp_fu_1642_p2;
        d2_2_reg_4697 <= grp_fu_1646_p2;
        sub75_1_reg_4682 <= grp_fu_12156_p_dout0;
        sub87_1_reg_4687 <= grp_fu_1638_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        d1_3_reg_4718 <= grp_fu_1646_p2;
        d_2_reg_4702 <= grp_fu_12156_p_dout0;
        sub75_2_reg_4708 <= grp_fu_1638_p2;
        sub87_2_reg_4713 <= grp_fu_1642_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        d1_reg_4646 <= grp_fu_1638_p2;
        d2_reg_4651 <= grp_fu_1642_p2;
        d_1_reg_4656 <= grp_fu_1646_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        d_3_reg_4738 <= grp_fu_12156_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        distance_1_reg_4827 <= grp_fu_1642_p2;
        overlap_1_reg_4832 <= grp_fu_12162_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        distance_2_reg_4842 <= grp_fu_1638_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421_pp0_iter5_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        distance_3_reg_4859 <= grp_fu_1642_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_4421_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        distance_reg_4754 <= grp_fu_1642_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_real_3_reg_4406 <= merge_1_1_fu_452;
        i_real_3_reg_4406_pp0_iter1_reg <= i_real_3_reg_4406;
        i_real_3_reg_4406_pp0_iter2_reg <= i_real_3_reg_4406_pp0_iter1_reg;
        i_real_3_reg_4406_pp0_iter3_reg <= i_real_3_reg_4406_pp0_iter2_reg;
        i_real_3_reg_4406_pp0_iter4_reg <= i_real_3_reg_4406_pp0_iter3_reg;
        i_real_3_reg_4406_pp0_iter5_reg <= i_real_3_reg_4406_pp0_iter4_reg;
        i_real_3_reg_4406_pp0_iter6_reg <= i_real_3_reg_4406_pp0_iter5_reg;
        i_real_3_reg_4406_pp0_iter7_reg <= i_real_3_reg_4406_pp0_iter6_reg;
        icmp_ln1027_reg_4421 <= icmp_ln1027_fu_1722_p2;
        icmp_ln1027_reg_4421_pp0_iter1_reg <= icmp_ln1027_reg_4421;
        icmp_ln1027_reg_4421_pp0_iter2_reg <= icmp_ln1027_reg_4421_pp0_iter1_reg;
        icmp_ln1027_reg_4421_pp0_iter3_reg <= icmp_ln1027_reg_4421_pp0_iter2_reg;
        icmp_ln1027_reg_4421_pp0_iter4_reg <= icmp_ln1027_reg_4421_pp0_iter3_reg;
        icmp_ln1027_reg_4421_pp0_iter5_reg <= icmp_ln1027_reg_4421_pp0_iter4_reg;
        icmp_ln1027_reg_4421_pp0_iter6_reg <= icmp_ln1027_reg_4421_pp0_iter5_reg;
        icmp_ln1027_reg_4421_pp0_iter7_reg <= icmp_ln1027_reg_4421_pp0_iter6_reg;
        k_real_5_reg_4414 <= k_real_4_fu_456;
        k_real_5_reg_4414_pp0_iter1_reg <= k_real_5_reg_4414;
        k_real_5_reg_4414_pp0_iter2_reg <= k_real_5_reg_4414_pp0_iter1_reg;
        k_real_5_reg_4414_pp0_iter3_reg <= k_real_5_reg_4414_pp0_iter2_reg;
        k_real_5_reg_4414_pp0_iter4_reg <= k_real_5_reg_4414_pp0_iter3_reg;
        k_real_5_reg_4414_pp0_iter5_reg <= k_real_5_reg_4414_pp0_iter4_reg;
        k_real_5_reg_4414_pp0_iter6_reg <= k_real_5_reg_4414_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1019_reg_4637 <= icmp_ln1019_fu_2584_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1019_reg_4637_pp0_iter2_reg <= icmp_ln1019_reg_4637;
        icmp_ln1019_reg_4637_pp0_iter3_reg <= icmp_ln1019_reg_4637_pp0_iter2_reg;
        icmp_ln1019_reg_4637_pp0_iter4_reg <= icmp_ln1019_reg_4637_pp0_iter3_reg;
        icmp_ln1019_reg_4637_pp0_iter5_reg <= icmp_ln1019_reg_4637_pp0_iter4_reg;
        icmp_ln1019_reg_4637_pp0_iter6_reg <= icmp_ln1019_reg_4637_pp0_iter5_reg;
        icmp_ln1019_reg_4637_pp0_iter7_reg <= icmp_ln1019_reg_4637_pp0_iter6_reg;
        mul_2_reg_4744_pp0_iter3_reg <= mul_2_reg_4744;
        mul_2_reg_4744_pp0_iter4_reg <= mul_2_reg_4744_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        icmp_ln112_1_reg_4582 <= icmp_ln112_1_fu_2304_p2;
        icmp_ln112_2_reg_4587 <= icmp_ln112_2_fu_2310_p2;
        icmp_ln112_3_reg_4592 <= icmp_ln112_3_fu_2316_p2;
        icmp_ln112_reg_4577 <= icmp_ln112_fu_2298_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        merge_1_4_reg_4905 <= merge_1_fu_440;
        merge_2_1_reg_4912 <= merge_2_fu_444;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul_1_reg_4733 <= grp_fu_12162_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul_1_reg_4733_pp0_iter2_reg <= mul_1_reg_4733;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_2_reg_4744 <= grp_fu_12162_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_4421_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_3_reg_4749 <= grp_fu_12162_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_3_reg_4749_pp0_iter3_reg <= mul_3_reg_4749;
        mul_3_reg_4749_pp0_iter4_reg <= mul_3_reg_4749_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul_reg_4723 <= grp_fu_12162_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_4421_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ov_10_reg_4773 <= ov_10_fu_2643_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ov_11_reg_4812 <= ov_11_fu_2791_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_4421_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ov_14_reg_4790 <= ov_14_fu_2650_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ov_15_reg_4822 <= ov_15_fu_2838_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ov_16_reg_4797 <= ov_16_fu_2697_p3;
        ov_7_reg_4802 <= ov_7_fu_2744_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_4421_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ov_2_reg_4759 <= ov_2_fu_2629_p3;
        ov_6_reg_4766 <= ov_6_fu_2636_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        overlap_2_reg_4837 <= grp_fu_12162_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        overlap_3_reg_4847 <= grp_fu_12162_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_7_reg_4632_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_4421_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_4421_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_7_reg_4632_pp0_iter2_reg) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln112_1_reg_4607_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_4421_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_4421_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_1_reg_4607_pp0_iter2_reg) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_1665 <= grp_fu_12156_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_7_reg_4632) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'd1 == and_ln112_7_reg_4632) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_1671 <= grp_fu_12156_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_5_reg_4627_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_4421_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_4421_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_5_reg_4627_pp0_iter2_reg) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'd0 == and_ln112_3_reg_4612_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_4421_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_4421_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_3_reg_4612_pp0_iter2_reg) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_1677 <= grp_fu_1638_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421_pp0_iter5_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sc_2_reg_4864 <= sc_2_fu_2898_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421_pp0_iter6_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        score_load_reg_4897 <= score_fu_448;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln112_7_reg_4632) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        sub87_3_reg_4728 <= grp_fu_1638_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_fu_1722_p2 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_10_reg_4487 <= tmp_10_fu_1956_p18;
        tmp_11_reg_4492 <= tmp_11_fu_1978_p18;
        tmp_12_reg_4501 <= tmp_12_fu_2000_p18;
        tmp_13_reg_4506 <= tmp_13_fu_2022_p18;
        tmp_14_reg_4511 <= tmp_14_fu_2044_p18;
        tmp_15_reg_4516 <= tmp_15_fu_2066_p18;
        tmp_16_reg_4525 <= tmp_16_fu_2088_p18;
        tmp_17_reg_4530 <= tmp_17_fu_2110_p18;
        tmp_18_reg_4539 <= tmp_18_fu_2132_p18;
        tmp_19_reg_4544 <= tmp_19_fu_2154_p18;
        tmp_1_reg_4430 <= tmp_1_fu_1758_p18;
        tmp_20_reg_4549 <= tmp_20_fu_2176_p18;
        tmp_21_reg_4554 <= tmp_21_fu_2198_p18;
        tmp_22_reg_4563 <= tmp_22_fu_2220_p18;
        tmp_23_reg_4568 <= tmp_23_fu_2242_p18;
        tmp_2_reg_4435 <= tmp_2_fu_1780_p18;
        tmp_3_reg_4440 <= tmp_3_fu_1802_p18;
        tmp_4_reg_4449 <= tmp_4_fu_1824_p18;
        tmp_5_reg_4454 <= tmp_5_fu_1846_p18;
        tmp_6_reg_4463 <= tmp_6_fu_1868_p18;
        tmp_7_reg_4468 <= tmp_7_fu_1890_p18;
        tmp_8_reg_4473 <= tmp_8_fu_1912_p18;
        tmp_9_reg_4478 <= tmp_9_fu_1934_p18;
        tmp_s_reg_4425 <= tmp_s_fu_1732_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_26_reg_4597 <= grp_fu_12167_p_dout0;
        tmp_31_reg_4602 <= grp_fu_12172_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_4421_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_28_reg_4780 <= grp_fu_12167_p_dout0;
        tmp_33_reg_4785 <= grp_fu_12172_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_36_reg_4617 <= grp_fu_12167_p_dout0;
        tmp_41_reg_4622 <= grp_fu_12172_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_38_reg_4807 <= grp_fu_12167_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_43_reg_4817 <= grp_fu_12167_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421_pp0_iter5_reg == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_45_reg_4854 <= grp_fu_12172_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421_pp0_iter6_reg == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_48_reg_4878 <= grp_fu_12167_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421_pp0_iter7_reg == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_51_reg_4918 <= grp_fu_12172_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421_pp0_iter6_reg == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_other_4_reg_4883 <= tmp_other_4_fu_3005_p3;
        tmp_score_4_reg_4889 <= tmp_score_4_fu_3012_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_4421_pp0_iter6_reg == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_score_load_reg_4871 <= tmp_score_fu_460;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_4421 == 1'd0) & (1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_4421_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_condition_exit_pp0_iter7_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter7_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to6 = 1'b1;
    end else begin
        ap_idle_pp0_0to6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to7 = 1'b1;
    end else begin
        ap_idle_pp0_1to7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln112_7_reg_4632_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1634_p0 = reg_1671;
    end else if (((1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'd1 == and_ln112_7_reg_4632_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1634_p0 = d1_3_reg_4718;
    end else if (((1'd0 == and_ln112_1_reg_4607_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1634_p0 = d2_reg_4651;
    end else if (((1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'd1 == and_ln112_1_reg_4607_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1634_p0 = d1_reg_4646;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1634_p0 = tmp_18_reg_4539;
    end else if (((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage6) & (1'd1 == and_ln112_7_reg_4632) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1634_p0 = tmp_23_reg_4568;
    end else if (((1'd0 == and_ln112_7_reg_4632) & (icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1634_p0 = tmp_22_reg_4563;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1634_p0 = tmp_12_reg_4501;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1634_p0 = tmp_11_reg_4492;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1634_p0 = tmp_5_reg_4454;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1634_p0 = tmp_s_reg_4425;
    end else begin
        grp_fu_1634_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln112_7_reg_4632_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1634_p1 = sub87_3_reg_4728;
    end else if (((1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'd1 == and_ln112_7_reg_4632_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1634_p1 = reg_1671;
    end else if (((1'd0 == and_ln112_1_reg_4607_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1634_p1 = sub2_reg_4667;
    end else if (((1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'd1 == and_ln112_1_reg_4607_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1634_p1 = sub_reg_4662;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1634_p1 = tmp_19_reg_4544;
    end else if (((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage6) & (1'd1 == and_ln112_7_reg_4632) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1634_p1 = tmp_21_reg_4554;
    end else if (((1'd0 == and_ln112_7_reg_4632) & (icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1634_p1 = tmp_23_reg_4568;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1634_p1 = tmp_13_reg_4506;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1634_p1 = tmp_9_reg_4478;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1634_p1 = tmp_3_reg_4440;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1634_p1 = tmp_1_reg_4430;
    end else begin
        grp_fu_1634_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_7_reg_4632) & (icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage6_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage7_00001) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'd1 == and_ln112_3_reg_4612_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage0_00001) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'd1 == and_ln112_5_reg_4627_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln112_5_reg_4627_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0_00001) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln112_3_reg_4612_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage7_00001) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        grp_fu_1638_opcode = 2'd1;
    end else if (((icmp_ln1027_reg_4421_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1638_opcode = 2'd0;
    end else begin
        grp_fu_1638_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1638_p0 = distance_1_reg_4827;
    end else if (((1'd0 == and_ln112_5_reg_4627_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1638_p0 = d2_2_reg_4697;
    end else if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'd1 == and_ln112_5_reg_4627_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1638_p0 = d1_2_reg_4692;
    end else if (((1'd0 == and_ln112_3_reg_4612_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1638_p0 = d2_1_reg_4677;
    end else if (((1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'd1 == and_ln112_3_reg_4612_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1638_p0 = d1_1_reg_4672;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1638_p0 = tmp_21_reg_4554;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1638_p0 = tmp_17_reg_4530;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1638_p0 = tmp_9_reg_4478;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1638_p0 = tmp_3_reg_4440;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1638_p0 = tmp_2_reg_4435;
    end else begin
        grp_fu_1638_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1638_p1 = mul_2_reg_4744_pp0_iter4_reg;
    end else if (((1'd0 == and_ln112_5_reg_4627_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1638_p1 = sub87_2_reg_4713;
    end else if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'd1 == and_ln112_5_reg_4627_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1638_p1 = sub75_2_reg_4708;
    end else if (((1'd0 == and_ln112_3_reg_4612_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1638_p1 = sub87_1_reg_4687;
    end else if (((1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'd1 == and_ln112_3_reg_4612_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1638_p1 = sub75_1_reg_4682;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1638_p1 = tmp_23_reg_4568;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1638_p1 = tmp_15_reg_4516;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1638_p1 = tmp_11_reg_4492;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1638_p1 = tmp_5_reg_4454;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1638_p1 = tmp_3_reg_4440;
    end else begin
        grp_fu_1638_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_1642_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_4421_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_4421_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln1027_reg_4421_pp0_iter4_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_1642_opcode = 2'd0;
    end else begin
        grp_fu_1642_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1642_p0 = distance_2_reg_4842;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1642_p0 = distance_reg_4754;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1642_p0 = mul_reg_4723;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1642_p0 = tmp_15_reg_4516;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1642_p0 = tmp_14_reg_4511;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1642_p0 = tmp_8_reg_4473;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1642_p0 = tmp_4_reg_4449;
    end else begin
        grp_fu_1642_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1642_p1 = mul_3_reg_4749_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1642_p1 = mul_1_reg_4733_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1642_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1642_p1 = tmp_17_reg_4530;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1642_p1 = tmp_15_reg_4516;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1642_p1 = tmp_9_reg_4478;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1642_p1 = tmp_5_reg_4454;
    end else begin
        grp_fu_1642_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_fu_1646_p0 = tmp_20_reg_4549;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_1646_p0 = tmp_16_reg_4525;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_1646_p0 = tmp_10_reg_4487;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_1646_p0 = tmp_6_reg_4463;
        end else begin
            grp_fu_1646_p0 = 'bx;
        end
    end else begin
        grp_fu_1646_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_fu_1646_p1 = tmp_21_reg_4554;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_1646_p1 = tmp_17_reg_4530;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_1646_p1 = tmp_11_reg_4492;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_1646_p1 = tmp_7_reg_4468;
        end else begin
            grp_fu_1646_p1 = 'bx;
        end
    end else begin
        grp_fu_1646_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1651_p0 = overlap_2_reg_4837;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1651_p0 = overlap_1_reg_4832;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1651_p0 = ov_16_reg_4797;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1651_p0 = d_3_reg_4738;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1651_p0 = d_2_reg_4702;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1651_p0 = d_1_reg_4656;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1651_p0 = reg_1665;
    end else begin
        grp_fu_1651_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1651_p1 = ov_15_reg_4822;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1651_p1 = ov_11_reg_4812;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1651_p1 = ov_7_reg_4802;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1651_p1 = d_3_reg_4738;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1651_p1 = d_2_reg_4702;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1651_p1 = d_1_reg_4656;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1651_p1 = reg_1665;
    end else begin
        grp_fu_1651_p1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_4421_pp0_iter6_reg == 1'd1) & (1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1655_opcode = 5'd2;
    end else if ((((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_4421_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_4421_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln1027_reg_4421_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_1655_opcode = 5'd4;
    end else begin
        grp_fu_1655_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1655_p0 = sc_2_reg_4864;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1655_p0 = ov_14_reg_4790;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1655_p0 = ov_10_reg_4773;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1655_p0 = ov_2_reg_4759;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1655_p0 = tmp_15_reg_4516;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1655_p0 = tmp_3_reg_4440;
    end else begin
        grp_fu_1655_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1655_p1 = tmp_score_fu_460;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_1655_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1655_p1 = tmp_17_reg_4530;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1655_p1 = tmp_5_reg_4454;
    end else begin
        grp_fu_1655_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1027_reg_4421_pp0_iter6_reg == 1'd1) & (1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln1027_reg_4421_pp0_iter5_reg == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_1659_opcode = 5'd2;
    end else if ((((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_4421 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_4421_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1659_opcode = 5'd4;
    end else begin
        grp_fu_1659_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1659_p0 = tmp_score_4_reg_4889;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1659_p0 = overlap_3_reg_4847;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1659_p0 = ov_6_reg_4766;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1659_p0 = tmp_21_reg_4554;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1659_p0 = tmp_9_reg_4478;
    end else begin
        grp_fu_1659_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1659_p1 = score_fu_448;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1659_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1659_p1 = tmp_23_reg_4568;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1659_p1 = tmp_11_reg_4492;
    end else begin
        grp_fu_1659_p1 = 'bx;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_4421_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        merge_1_out_ap_vld = 1'b1;
    end else begin
        merge_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_4421_pp0_iter7_reg == 1'd0) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        merge_2_out_ap_vld = 1'b1;
    end else begin
        merge_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to7 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln112_1_fu_2335_p2 = (or_ln112_fu_2322_p2 & and_ln112_fu_2330_p2);

assign and_ln112_2_fu_2411_p2 = (tmp_31_reg_4602 & or_ln112_3_fu_2405_p2);

assign and_ln112_3_fu_2416_p2 = (or_ln112_2_fu_2387_p2 & and_ln112_2_fu_2411_p2);

assign and_ln112_4_fu_2492_p2 = (or_ln112_5_fu_2486_p2 & or_ln112_4_fu_2468_p2);

assign and_ln112_5_fu_2498_p2 = (tmp_36_reg_4617 & and_ln112_4_fu_2492_p2);

assign and_ln112_6_fu_2573_p2 = (or_ln112_7_fu_2567_p2 & or_ln112_6_fu_2549_p2);

assign and_ln112_7_fu_2579_p2 = (tmp_41_reg_4622 & and_ln112_6_fu_2573_p2);

assign and_ln112_fu_2330_p2 = (tmp_26_reg_4597 & or_ln112_1_fu_2326_p2);

assign and_ln116_1_fu_2739_p2 = (tmp_33_reg_4785 & or_ln116_1_fu_2733_p2);

assign and_ln116_2_fu_2786_p2 = (tmp_38_reg_4807 & or_ln116_2_fu_2780_p2);

assign and_ln116_3_fu_2833_p2 = (tmp_43_reg_4817 & or_ln116_3_fu_2827_p2);

assign and_ln116_fu_2692_p2 = (tmp_28_reg_4780 & or_ln116_fu_2686_p2);

assign and_ln122_fu_2880_p2 = (tmp_45_reg_4854 & or_ln122_fu_2874_p2);

assign and_ln130_1_fu_2994_p2 = (tmp_48_reg_4878 & and_ln130_fu_2988_p2);

assign and_ln130_fu_2988_p2 = (or_ln130_2_fu_2982_p2 & or_ln130_1_fu_2964_p2);

assign and_ln139_1_fu_3143_p2 = (tmp_51_reg_4918 & and_ln139_fu_3137_p2);

assign and_ln139_fu_3137_p2 = (or_ln139_2_fu_3131_p2 & or_ln139_1_fu_3113_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage7;

assign bitcast_ln112_1_fu_2281_p1 = tmp_5_reg_4454;

assign bitcast_ln112_2_fu_2341_p1 = tmp_9_reg_4478;

assign bitcast_ln112_3_fu_2358_p1 = tmp_11_reg_4492;

assign bitcast_ln112_4_fu_2422_p1 = tmp_15_reg_4516;

assign bitcast_ln112_5_fu_2439_p1 = tmp_17_reg_4530;

assign bitcast_ln112_6_fu_2503_p1 = tmp_21_reg_4554;

assign bitcast_ln112_7_fu_2520_p1 = tmp_23_reg_4568;

assign bitcast_ln112_fu_2264_p1 = tmp_3_reg_4440;

assign bitcast_ln116_1_fu_2704_p1 = ov_6_reg_4766;

assign bitcast_ln116_2_fu_2751_p1 = ov_10_reg_4773;

assign bitcast_ln116_3_fu_2798_p1 = ov_14_reg_4790;

assign bitcast_ln116_fu_2657_p1 = ov_2_reg_4759;

assign bitcast_ln122_fu_2845_p1 = overlap_3_reg_4847;

assign bitcast_ln126_fu_2885_p1 = distance_3_reg_4859;

assign bitcast_ln130_1_fu_2935_p1 = tmp_score_load_reg_4871;

assign bitcast_ln130_fu_2918_p1 = sc_2_reg_4864;

assign bitcast_ln139_1_fu_3084_p1 = score_load_reg_4897;

assign bitcast_ln139_fu_3067_p1 = tmp_score_4_reg_4889;

assign grp_fu_12156_p_ce = 1'b1;

assign grp_fu_12156_p_din0 = grp_fu_1634_p0;

assign grp_fu_12156_p_din1 = grp_fu_1634_p1;

assign grp_fu_12156_p_opcode = 2'd1;

assign grp_fu_12162_p_ce = 1'b1;

assign grp_fu_12162_p_din0 = grp_fu_1651_p0;

assign grp_fu_12162_p_din1 = grp_fu_1651_p1;

assign grp_fu_12167_p_ce = 1'b1;

assign grp_fu_12167_p_din0 = grp_fu_1655_p0;

assign grp_fu_12167_p_din1 = grp_fu_1655_p1;

assign grp_fu_12167_p_opcode = grp_fu_1655_opcode;

assign grp_fu_12172_p_ce = 1'b1;

assign grp_fu_12172_p_din0 = grp_fu_1659_p0;

assign grp_fu_12172_p_din1 = grp_fu_1659_p1;

assign grp_fu_12172_p_opcode = grp_fu_1659_opcode;

assign i_real_2_fu_2612_p3 = ((icmp_ln1019_fu_2584_p2[0:0] == 1'b1) ? i_real_fu_2589_p2 : i_real_3_reg_4406);

assign i_real_fu_2589_p2 = (i_real_3_reg_4406 + 32'd1);

assign icmp_ln1019_fu_2584_p2 = ((k_real_5_reg_4414 == 32'd15) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_1722_p2 = (($signed(merge_1_1_fu_452) < $signed(32'd15)) ? 1'b1 : 1'b0);

assign icmp_ln112_10_fu_2474_p2 = ((tmp_35_fu_2442_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_11_fu_2480_p2 = ((trunc_ln112_5_fu_2452_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_12_fu_2537_p2 = ((tmp_39_fu_2506_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_13_fu_2543_p2 = ((trunc_ln112_6_fu_2516_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_14_fu_2555_p2 = ((tmp_40_fu_2523_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_15_fu_2561_p2 = ((trunc_ln112_7_fu_2533_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_1_fu_2304_p2 = ((trunc_ln112_fu_2277_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_2_fu_2310_p2 = ((tmp_25_fu_2284_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_3_fu_2316_p2 = ((trunc_ln112_1_fu_2294_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_4_fu_2375_p2 = ((tmp_29_fu_2344_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_5_fu_2381_p2 = ((trunc_ln112_2_fu_2354_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_6_fu_2393_p2 = ((tmp_30_fu_2361_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_7_fu_2399_p2 = ((trunc_ln112_3_fu_2371_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_8_fu_2456_p2 = ((tmp_34_fu_2425_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_9_fu_2462_p2 = ((trunc_ln112_4_fu_2435_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_fu_2298_p2 = ((tmp_24_fu_2267_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_1_fu_2680_p2 = ((trunc_ln116_fu_2670_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_2_fu_2721_p2 = ((tmp_32_fu_2707_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_3_fu_2727_p2 = ((trunc_ln116_1_fu_2717_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_4_fu_2768_p2 = ((tmp_37_fu_2754_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_5_fu_2774_p2 = ((trunc_ln116_2_fu_2764_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_6_fu_2815_p2 = ((tmp_42_fu_2801_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_7_fu_2821_p2 = ((trunc_ln116_3_fu_2811_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_2674_p2 = ((tmp_27_fu_2660_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln122_1_fu_2868_p2 = ((trunc_ln122_fu_2858_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_2862_p2 = ((tmp_44_fu_2848_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_1_fu_2952_p2 = ((tmp_46_fu_2921_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_2_fu_2958_p2 = ((trunc_ln130_fu_2931_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_3_fu_2970_p2 = ((tmp_47_fu_2938_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_4_fu_2976_p2 = ((trunc_ln130_1_fu_2948_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_fu_2912_p2 = ((tmp_other_fu_464 == 32'd4294967295) ? 1'b1 : 1'b0);

assign icmp_ln139_1_fu_3107_p2 = ((trunc_ln139_fu_3080_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln139_2_fu_3119_p2 = ((tmp_50_fu_3087_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln139_3_fu_3125_p2 = ((trunc_ln139_1_fu_3097_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln139_fu_3101_p2 = ((tmp_49_fu_3070_p4 != 8'd255) ? 1'b1 : 1'b0);

assign k_real_2_fu_2599_p2 = (k_real_5_reg_4414 + 32'd1);

assign k_real_3_fu_2604_p3 = ((icmp_ln1019_fu_2584_p2[0:0] == 1'b1) ? k_real_fu_2594_p2 : k_real_2_fu_2599_p2);

assign k_real_fu_2594_p2 = (i_real_3_reg_4406 + 32'd2);

assign merge_1_6_fu_3166_p3 = ((or_ln139_fu_3148_p2[0:0] == 1'b1) ? i_real_3_reg_4406_pp0_iter7_reg : merge_1_4_reg_4905);

assign merge_1_7_fu_3184_p3 = ((icmp_ln1019_reg_4637_pp0_iter7_reg[0:0] == 1'b1) ? merge_1_6_fu_3166_p3 : merge_1_4_reg_4905);

assign merge_1_out = merge_1_fu_440[3:0];

assign merge_2_5_fu_3160_p3 = ((or_ln139_fu_3148_p2[0:0] == 1'b1) ? tmp_other_4_reg_4883 : merge_2_1_reg_4912);

assign merge_2_6_fu_3178_p3 = ((icmp_ln1019_reg_4637_pp0_iter7_reg[0:0] == 1'b1) ? merge_2_5_fu_3160_p3 : merge_2_1_reg_4912);

assign merge_2_out = merge_2_fu_444[3:0];

assign or_ln112_1_fu_2326_p2 = (icmp_ln112_3_reg_4592 | icmp_ln112_2_reg_4587);

assign or_ln112_2_fu_2387_p2 = (icmp_ln112_5_fu_2381_p2 | icmp_ln112_4_fu_2375_p2);

assign or_ln112_3_fu_2405_p2 = (icmp_ln112_7_fu_2399_p2 | icmp_ln112_6_fu_2393_p2);

assign or_ln112_4_fu_2468_p2 = (icmp_ln112_9_fu_2462_p2 | icmp_ln112_8_fu_2456_p2);

assign or_ln112_5_fu_2486_p2 = (icmp_ln112_11_fu_2480_p2 | icmp_ln112_10_fu_2474_p2);

assign or_ln112_6_fu_2549_p2 = (icmp_ln112_13_fu_2543_p2 | icmp_ln112_12_fu_2537_p2);

assign or_ln112_7_fu_2567_p2 = (icmp_ln112_15_fu_2561_p2 | icmp_ln112_14_fu_2555_p2);

assign or_ln112_fu_2322_p2 = (icmp_ln112_reg_4577 | icmp_ln112_1_reg_4582);

assign or_ln116_1_fu_2733_p2 = (icmp_ln116_3_fu_2727_p2 | icmp_ln116_2_fu_2721_p2);

assign or_ln116_2_fu_2780_p2 = (icmp_ln116_5_fu_2774_p2 | icmp_ln116_4_fu_2768_p2);

assign or_ln116_3_fu_2827_p2 = (icmp_ln116_7_fu_2821_p2 | icmp_ln116_6_fu_2815_p2);

assign or_ln116_fu_2686_p2 = (icmp_ln116_fu_2674_p2 | icmp_ln116_1_fu_2680_p2);

assign or_ln122_fu_2874_p2 = (icmp_ln122_fu_2862_p2 | icmp_ln122_1_fu_2868_p2);

assign or_ln130_1_fu_2964_p2 = (icmp_ln130_2_fu_2958_p2 | icmp_ln130_1_fu_2952_p2);

assign or_ln130_2_fu_2982_p2 = (icmp_ln130_4_fu_2976_p2 | icmp_ln130_3_fu_2970_p2);

assign or_ln130_fu_2999_p2 = (icmp_ln130_fu_2912_p2 | and_ln130_1_fu_2994_p2);

assign or_ln139_1_fu_3113_p2 = (icmp_ln139_fu_3101_p2 | icmp_ln139_1_fu_3107_p2);

assign or_ln139_2_fu_3131_p2 = (icmp_ln139_3_fu_3125_p2 | icmp_ln139_2_fu_3119_p2);

assign or_ln139_fu_3148_p2 = (tmp_fu_3060_p3 | and_ln139_1_fu_3143_p2);

assign ov_10_fu_2643_p3 = ((and_ln112_5_reg_4627_pp0_iter2_reg[0:0] == 1'b1) ? reg_1677 : reg_1677);

assign ov_11_fu_2791_p3 = ((and_ln116_2_fu_2786_p2[0:0] == 1'b1) ? 32'd0 : ov_10_reg_4773);

assign ov_14_fu_2650_p3 = ((and_ln112_7_reg_4632_pp0_iter2_reg[0:0] == 1'b1) ? reg_1665 : reg_1665);

assign ov_15_fu_2838_p3 = ((and_ln116_3_fu_2833_p2[0:0] == 1'b1) ? 32'd0 : ov_14_reg_4790);

assign ov_16_fu_2697_p3 = ((and_ln116_fu_2692_p2[0:0] == 1'b1) ? 32'd0 : ov_2_reg_4759);

assign ov_2_fu_2629_p3 = ((and_ln112_1_reg_4607_pp0_iter2_reg[0:0] == 1'b1) ? reg_1665 : reg_1665);

assign ov_6_fu_2636_p3 = ((and_ln112_3_reg_4612_pp0_iter2_reg[0:0] == 1'b1) ? reg_1677 : reg_1677);

assign ov_7_fu_2744_p3 = ((and_ln116_1_fu_2739_p2[0:0] == 1'b1) ? 32'd0 : ov_6_reg_4766);

assign sc_2_fu_2898_p3 = ((and_ln122_fu_2880_p2[0:0] == 1'b1) ? overlap_3_reg_4847 : sc_fu_2894_p1);

assign sc_fu_2894_p1 = xor_ln126_fu_2888_p2;

assign score_2_fu_3154_p3 = ((or_ln139_fu_3148_p2[0:0] == 1'b1) ? tmp_score_4_reg_4889 : score_load_reg_4897);

assign score_3_fu_3172_p3 = ((icmp_ln1019_reg_4637_pp0_iter7_reg[0:0] == 1'b1) ? score_2_fu_3154_p3 : score_load_reg_4897);

assign tmp_24_fu_2267_p4 = {{bitcast_ln112_fu_2264_p1[30:23]}};

assign tmp_25_fu_2284_p4 = {{bitcast_ln112_1_fu_2281_p1[30:23]}};

assign tmp_27_fu_2660_p4 = {{bitcast_ln116_fu_2657_p1[30:23]}};

assign tmp_29_fu_2344_p4 = {{bitcast_ln112_2_fu_2341_p1[30:23]}};

assign tmp_30_fu_2361_p4 = {{bitcast_ln112_3_fu_2358_p1[30:23]}};

assign tmp_32_fu_2707_p4 = {{bitcast_ln116_1_fu_2704_p1[30:23]}};

assign tmp_34_fu_2425_p4 = {{bitcast_ln112_4_fu_2422_p1[30:23]}};

assign tmp_35_fu_2442_p4 = {{bitcast_ln112_5_fu_2439_p1[30:23]}};

assign tmp_37_fu_2754_p4 = {{bitcast_ln116_2_fu_2751_p1[30:23]}};

assign tmp_39_fu_2506_p4 = {{bitcast_ln112_6_fu_2503_p1[30:23]}};

assign tmp_40_fu_2523_p4 = {{bitcast_ln112_7_fu_2520_p1[30:23]}};

assign tmp_42_fu_2801_p4 = {{bitcast_ln116_3_fu_2798_p1[30:23]}};

assign tmp_44_fu_2848_p4 = {{bitcast_ln122_fu_2845_p1[30:23]}};

assign tmp_46_fu_2921_p4 = {{bitcast_ln130_fu_2918_p1[30:23]}};

assign tmp_47_fu_2938_p4 = {{bitcast_ln130_1_fu_2935_p1[30:23]}};

assign tmp_49_fu_3070_p4 = {{bitcast_ln139_fu_3067_p1[30:23]}};

assign tmp_50_fu_3087_p4 = {{bitcast_ln139_1_fu_3084_p1[30:23]}};

assign tmp_fu_3060_p3 = merge_1_4_reg_4905[32'd31];

assign tmp_other_3_fu_3018_p3 = ((icmp_ln1019_reg_4637_pp0_iter6_reg[0:0] == 1'b1) ? 32'd4294967295 : tmp_other_4_reg_4883);

assign tmp_other_4_fu_3005_p3 = ((or_ln130_fu_2999_p2[0:0] == 1'b1) ? k_real_5_reg_4414_pp0_iter6_reg : tmp_other_fu_464);

assign tmp_score_3_fu_3024_p3 = ((icmp_ln1019_reg_4637_pp0_iter6_reg[0:0] == 1'b1) ? 32'd0 : tmp_score_4_reg_4889);

assign tmp_score_4_fu_3012_p3 = ((or_ln130_fu_2999_p2[0:0] == 1'b1) ? sc_2_reg_4864 : tmp_score_load_reg_4871);

assign trunc_ln104_1_fu_1754_p1 = k_real_4_fu_456[3:0];

assign trunc_ln104_fu_1728_p1 = merge_1_1_fu_452[3:0];

assign trunc_ln112_1_fu_2294_p1 = bitcast_ln112_1_fu_2281_p1[22:0];

assign trunc_ln112_2_fu_2354_p1 = bitcast_ln112_2_fu_2341_p1[22:0];

assign trunc_ln112_3_fu_2371_p1 = bitcast_ln112_3_fu_2358_p1[22:0];

assign trunc_ln112_4_fu_2435_p1 = bitcast_ln112_4_fu_2422_p1[22:0];

assign trunc_ln112_5_fu_2452_p1 = bitcast_ln112_5_fu_2439_p1[22:0];

assign trunc_ln112_6_fu_2516_p1 = bitcast_ln112_6_fu_2503_p1[22:0];

assign trunc_ln112_7_fu_2533_p1 = bitcast_ln112_7_fu_2520_p1[22:0];

assign trunc_ln112_fu_2277_p1 = bitcast_ln112_fu_2264_p1[22:0];

assign trunc_ln116_1_fu_2717_p1 = bitcast_ln116_1_fu_2704_p1[22:0];

assign trunc_ln116_2_fu_2764_p1 = bitcast_ln116_2_fu_2751_p1[22:0];

assign trunc_ln116_3_fu_2811_p1 = bitcast_ln116_3_fu_2798_p1[22:0];

assign trunc_ln116_fu_2670_p1 = bitcast_ln116_fu_2657_p1[22:0];

assign trunc_ln122_fu_2858_p1 = bitcast_ln122_fu_2845_p1[22:0];

assign trunc_ln130_1_fu_2948_p1 = bitcast_ln130_1_fu_2935_p1[22:0];

assign trunc_ln130_fu_2931_p1 = bitcast_ln130_fu_2918_p1[22:0];

assign trunc_ln139_1_fu_3097_p1 = bitcast_ln139_1_fu_3084_p1[22:0];

assign trunc_ln139_fu_3080_p1 = bitcast_ln139_fu_3067_p1[22:0];

assign xor_ln126_fu_2888_p2 = (bitcast_ln126_fu_2885_p1 ^ 32'd2147483648);

endmodule //FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1
