// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        regions_center_0_0_0,
        regions_center_1_0_0,
        regions_center_2_0_0,
        regions_center_3_0_0,
        regions_center_4_0_0,
        regions_center_5_0_0,
        regions_center_6_0_0,
        regions_center_7_0_0,
        regions_center_8_0_0,
        regions_center_9_0_0,
        regions_center_10_0_0,
        regions_center_11_0_0,
        regions_center_12_0_0,
        regions_center_13_0_0,
        regions_center_14_0_0,
        regions_center_15_0_0,
        regions_max_0_0_0,
        regions_max_1_0_0,
        regions_max_2_0_0,
        regions_max_3_0_0,
        regions_max_4_0_0,
        regions_max_5_0_0,
        regions_max_6_0_0,
        regions_max_7_0_0,
        regions_max_8_0_0,
        regions_max_9_0_0,
        regions_max_10_0_0,
        regions_max_11_0_0,
        regions_max_12_0_0,
        regions_max_13_0_0,
        regions_max_14_0_0,
        regions_max_15_0_0,
        regions_min_0_0_0,
        regions_min_1_0_0,
        regions_min_2_0_0,
        regions_min_3_0_0,
        regions_min_4_0_0,
        regions_min_5_0_0,
        regions_min_6_0_0,
        regions_min_7_0_0,
        regions_min_8_0_0,
        regions_min_9_0_0,
        regions_min_10_0_0,
        regions_min_11_0_0,
        regions_min_12_0_0,
        regions_min_13_0_0,
        regions_min_14_0_0,
        regions_min_15_0_0,
        regions_center_0_1_0,
        regions_center_1_1_0,
        regions_center_2_1_0,
        regions_center_3_1_0,
        regions_center_4_1_0,
        regions_center_5_1_0,
        regions_center_6_1_0,
        regions_center_7_1_0,
        regions_center_8_1_0,
        regions_center_9_1_0,
        regions_center_10_1_0,
        regions_center_11_1_0,
        regions_center_12_1_0,
        regions_center_13_1_0,
        regions_center_14_1_0,
        regions_center_15_1_0,
        regions_max_0_1_0,
        regions_max_1_1_0,
        regions_max_2_1_0,
        regions_max_3_1_0,
        regions_max_4_1_0,
        regions_max_5_1_0,
        regions_max_6_1_0,
        regions_max_7_1_0,
        regions_max_8_1_0,
        regions_max_9_1_0,
        regions_max_10_1_0,
        regions_max_11_1_0,
        regions_max_12_1_0,
        regions_max_13_1_0,
        regions_max_14_1_0,
        regions_max_15_1_0,
        regions_min_0_1_0,
        regions_min_1_1_0,
        regions_min_2_1_0,
        regions_min_3_1_0,
        regions_min_4_1_0,
        regions_min_5_1_0,
        regions_min_6_1_0,
        regions_min_7_1_0,
        regions_min_8_1_0,
        regions_min_9_1_0,
        regions_min_10_1_0,
        regions_min_11_1_0,
        regions_min_12_1_0,
        regions_min_13_1_0,
        regions_min_14_1_0,
        regions_min_15_1_0,
        regions_center_0_2_0,
        regions_center_1_2_0,
        regions_center_2_2_0,
        regions_center_3_2_0,
        regions_center_4_2_0,
        regions_center_5_2_0,
        regions_center_6_2_0,
        regions_center_7_2_0,
        regions_center_8_2_0,
        regions_center_9_2_0,
        regions_center_10_2_0,
        regions_center_11_2_0,
        regions_center_12_2_0,
        regions_center_13_2_0,
        regions_center_14_2_0,
        regions_center_15_2_0,
        regions_max_0_2_0,
        regions_max_1_2_0,
        regions_max_2_2_0,
        regions_max_3_2_0,
        regions_max_4_2_0,
        regions_max_5_2_0,
        regions_max_6_2_0,
        regions_max_7_2_0,
        regions_max_8_2_0,
        regions_max_9_2_0,
        regions_max_10_2_0,
        regions_max_11_2_0,
        regions_max_12_2_0,
        regions_max_13_2_0,
        regions_max_14_2_0,
        regions_max_15_2_0,
        regions_min_0_2_0,
        regions_min_1_2_0,
        regions_min_2_2_0,
        regions_min_3_2_0,
        regions_min_4_2_0,
        regions_min_5_2_0,
        regions_min_6_2_0,
        regions_min_7_2_0,
        regions_min_8_2_0,
        regions_min_9_2_0,
        regions_min_10_2_0,
        regions_min_11_2_0,
        regions_min_12_2_0,
        regions_min_13_2_0,
        regions_min_14_2_0,
        regions_min_15_2_0,
        regions_center_0_3_0,
        regions_center_1_3_0,
        regions_center_2_3_0,
        regions_center_3_3_0,
        regions_center_4_3_0,
        regions_center_5_3_0,
        regions_center_6_3_0,
        regions_center_7_3_0,
        regions_center_8_3_0,
        regions_center_9_3_0,
        regions_center_10_3_0,
        regions_center_11_3_0,
        regions_center_12_3_0,
        regions_center_13_3_0,
        regions_center_14_3_0,
        regions_center_15_3_0,
        regions_max_0_3_0,
        regions_max_1_3_0,
        regions_max_2_3_0,
        regions_max_3_3_0,
        regions_max_4_3_0,
        regions_max_5_3_0,
        regions_max_6_3_0,
        regions_max_7_3_0,
        regions_max_8_3_0,
        regions_max_9_3_0,
        regions_max_10_3_0,
        regions_max_11_3_0,
        regions_max_12_3_0,
        regions_max_13_3_0,
        regions_max_14_3_0,
        regions_max_15_3_0,
        regions_min_0_3_0,
        regions_min_1_3_0,
        regions_min_2_3_0,
        regions_min_3_3_0,
        regions_min_4_3_0,
        regions_min_5_3_0,
        regions_min_6_3_0,
        regions_min_7_3_0,
        regions_min_8_3_0,
        regions_min_9_3_0,
        regions_min_10_3_0,
        regions_min_11_3_0,
        regions_min_12_3_0,
        regions_min_13_3_0,
        regions_min_14_3_0,
        regions_min_15_3_0,
        regions_center_0_4_0,
        regions_center_1_4_0,
        regions_center_2_4_0,
        regions_center_3_4_0,
        regions_center_4_4_0,
        regions_center_5_4_0,
        regions_center_6_4_0,
        regions_center_7_4_0,
        regions_center_8_4_0,
        regions_center_9_4_0,
        regions_center_10_4_0,
        regions_center_11_4_0,
        regions_center_12_4_0,
        regions_center_13_4_0,
        regions_center_14_4_0,
        regions_center_15_4_0,
        regions_max_0_4_0,
        regions_max_1_4_0,
        regions_max_2_4_0,
        regions_max_3_4_0,
        regions_max_4_4_0,
        regions_max_5_4_0,
        regions_max_6_4_0,
        regions_max_7_4_0,
        regions_max_8_4_0,
        regions_max_9_4_0,
        regions_max_10_4_0,
        regions_max_11_4_0,
        regions_max_12_4_0,
        regions_max_13_4_0,
        regions_max_14_4_0,
        regions_max_15_4_0,
        regions_min_0_4_0,
        regions_min_1_4_0,
        regions_min_2_4_0,
        regions_min_3_4_0,
        regions_min_4_4_0,
        regions_min_5_4_0,
        regions_min_6_4_0,
        regions_min_7_4_0,
        regions_min_8_4_0,
        regions_min_9_4_0,
        regions_min_10_4_0,
        regions_min_11_4_0,
        regions_min_12_4_0,
        regions_min_13_4_0,
        regions_min_14_4_0,
        regions_min_15_4_0,
        regions_center_0_5_0,
        regions_center_1_5_0,
        regions_center_2_5_0,
        regions_center_3_5_0,
        regions_center_4_5_0,
        regions_center_5_5_0,
        regions_center_6_5_0,
        regions_center_7_5_0,
        regions_center_8_5_0,
        regions_center_9_5_0,
        regions_center_10_5_0,
        regions_center_11_5_0,
        regions_center_12_5_0,
        regions_center_13_5_0,
        regions_center_14_5_0,
        regions_center_15_5_0,
        regions_max_0_5_0,
        regions_max_1_5_0,
        regions_max_2_5_0,
        regions_max_3_5_0,
        regions_max_4_5_0,
        regions_max_5_5_0,
        regions_max_6_5_0,
        regions_max_7_5_0,
        regions_max_8_5_0,
        regions_max_9_5_0,
        regions_max_10_5_0,
        regions_max_11_5_0,
        regions_max_12_5_0,
        regions_max_13_5_0,
        regions_max_14_5_0,
        regions_max_15_5_0,
        regions_min_0_5_0,
        regions_min_1_5_0,
        regions_min_2_5_0,
        regions_min_3_5_0,
        regions_min_4_5_0,
        regions_min_5_5_0,
        regions_min_6_5_0,
        regions_min_7_5_0,
        regions_min_8_5_0,
        regions_min_9_5_0,
        regions_min_10_5_0,
        regions_min_11_5_0,
        regions_min_12_5_0,
        regions_min_13_5_0,
        regions_min_14_5_0,
        regions_min_15_5_0,
        regions_center_0_6_0,
        regions_center_1_6_0,
        regions_center_2_6_0,
        regions_center_3_6_0,
        regions_center_4_6_0,
        regions_center_5_6_0,
        regions_center_6_6_0,
        regions_center_7_6_0,
        regions_center_8_6_0,
        regions_center_9_6_0,
        regions_center_10_6_0,
        regions_center_11_6_0,
        regions_center_12_6_0,
        regions_center_13_6_0,
        regions_center_14_6_0,
        regions_center_15_6_0,
        regions_max_0_6_0,
        regions_max_1_6_0,
        regions_max_2_6_0,
        regions_max_3_6_0,
        regions_max_4_6_0,
        regions_max_5_6_0,
        regions_max_6_6_0,
        regions_max_7_6_0,
        regions_max_8_6_0,
        regions_max_9_6_0,
        regions_max_10_6_0,
        regions_max_11_6_0,
        regions_max_12_6_0,
        regions_max_13_6_0,
        regions_max_14_6_0,
        regions_max_15_6_0,
        regions_min_0_6_0,
        regions_min_1_6_0,
        regions_min_2_6_0,
        regions_min_3_6_0,
        regions_min_4_6_0,
        regions_min_5_6_0,
        regions_min_6_6_0,
        regions_min_7_6_0,
        regions_min_8_6_0,
        regions_min_9_6_0,
        regions_min_10_6_0,
        regions_min_11_6_0,
        regions_min_12_6_0,
        regions_min_13_6_0,
        regions_min_14_6_0,
        regions_min_15_6_0,
        regions_center_0_7_0,
        regions_center_1_7_0,
        regions_center_2_7_0,
        regions_center_3_7_0,
        regions_center_4_7_0,
        regions_center_5_7_0,
        regions_center_6_7_0,
        regions_center_7_7_0,
        regions_center_8_7_0,
        regions_center_9_7_0,
        regions_center_10_7_0,
        regions_center_11_7_0,
        regions_center_12_7_0,
        regions_center_13_7_0,
        regions_center_14_7_0,
        regions_center_15_7_0,
        regions_max_0_7_0,
        regions_max_1_7_0,
        regions_max_2_7_0,
        regions_max_3_7_0,
        regions_max_4_7_0,
        regions_max_5_7_0,
        regions_max_6_7_0,
        regions_max_7_7_0,
        regions_max_8_7_0,
        regions_max_9_7_0,
        regions_max_10_7_0,
        regions_max_11_7_0,
        regions_max_12_7_0,
        regions_max_13_7_0,
        regions_max_14_7_0,
        regions_max_15_7_0,
        regions_min_0_7_0,
        regions_min_1_7_0,
        regions_min_2_7_0,
        regions_min_3_7_0,
        regions_min_4_7_0,
        regions_min_5_7_0,
        regions_min_6_7_0,
        regions_min_7_7_0,
        regions_min_8_7_0,
        regions_min_9_7_0,
        regions_min_10_7_0,
        regions_min_11_7_0,
        regions_min_12_7_0,
        regions_min_13_7_0,
        regions_min_14_7_0,
        regions_min_15_7_0,
        merge_2_out,
        merge_2_out_ap_vld,
        merge_1_out,
        merge_1_out_ap_vld,
        grp_fu_24082_p_din0,
        grp_fu_24082_p_din1,
        grp_fu_24082_p_opcode,
        grp_fu_24082_p_dout0,
        grp_fu_24082_p_ce,
        grp_fu_24088_p_din0,
        grp_fu_24088_p_din1,
        grp_fu_24088_p_dout0,
        grp_fu_24088_p_ce,
        grp_fu_24093_p_din0,
        grp_fu_24093_p_din1,
        grp_fu_24093_p_opcode,
        grp_fu_24093_p_dout0,
        grp_fu_24093_p_ce,
        grp_fu_24098_p_din0,
        grp_fu_24098_p_din1,
        grp_fu_24098_p_opcode,
        grp_fu_24098_p_dout0,
        grp_fu_24098_p_ce,
        grp_fu_24103_p_din0,
        grp_fu_24103_p_din1,
        grp_fu_24103_p_opcode,
        grp_fu_24103_p_dout0,
        grp_fu_24103_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] regions_center_0_0_0;
input  [31:0] regions_center_1_0_0;
input  [31:0] regions_center_2_0_0;
input  [31:0] regions_center_3_0_0;
input  [31:0] regions_center_4_0_0;
input  [31:0] regions_center_5_0_0;
input  [31:0] regions_center_6_0_0;
input  [31:0] regions_center_7_0_0;
input  [31:0] regions_center_8_0_0;
input  [31:0] regions_center_9_0_0;
input  [31:0] regions_center_10_0_0;
input  [31:0] regions_center_11_0_0;
input  [31:0] regions_center_12_0_0;
input  [31:0] regions_center_13_0_0;
input  [31:0] regions_center_14_0_0;
input  [31:0] regions_center_15_0_0;
input  [31:0] regions_max_0_0_0;
input  [31:0] regions_max_1_0_0;
input  [31:0] regions_max_2_0_0;
input  [31:0] regions_max_3_0_0;
input  [31:0] regions_max_4_0_0;
input  [31:0] regions_max_5_0_0;
input  [31:0] regions_max_6_0_0;
input  [31:0] regions_max_7_0_0;
input  [31:0] regions_max_8_0_0;
input  [31:0] regions_max_9_0_0;
input  [31:0] regions_max_10_0_0;
input  [31:0] regions_max_11_0_0;
input  [31:0] regions_max_12_0_0;
input  [31:0] regions_max_13_0_0;
input  [31:0] regions_max_14_0_0;
input  [31:0] regions_max_15_0_0;
input  [31:0] regions_min_0_0_0;
input  [31:0] regions_min_1_0_0;
input  [31:0] regions_min_2_0_0;
input  [31:0] regions_min_3_0_0;
input  [31:0] regions_min_4_0_0;
input  [31:0] regions_min_5_0_0;
input  [31:0] regions_min_6_0_0;
input  [31:0] regions_min_7_0_0;
input  [31:0] regions_min_8_0_0;
input  [31:0] regions_min_9_0_0;
input  [31:0] regions_min_10_0_0;
input  [31:0] regions_min_11_0_0;
input  [31:0] regions_min_12_0_0;
input  [31:0] regions_min_13_0_0;
input  [31:0] regions_min_14_0_0;
input  [31:0] regions_min_15_0_0;
input  [31:0] regions_center_0_1_0;
input  [31:0] regions_center_1_1_0;
input  [31:0] regions_center_2_1_0;
input  [31:0] regions_center_3_1_0;
input  [31:0] regions_center_4_1_0;
input  [31:0] regions_center_5_1_0;
input  [31:0] regions_center_6_1_0;
input  [31:0] regions_center_7_1_0;
input  [31:0] regions_center_8_1_0;
input  [31:0] regions_center_9_1_0;
input  [31:0] regions_center_10_1_0;
input  [31:0] regions_center_11_1_0;
input  [31:0] regions_center_12_1_0;
input  [31:0] regions_center_13_1_0;
input  [31:0] regions_center_14_1_0;
input  [31:0] regions_center_15_1_0;
input  [31:0] regions_max_0_1_0;
input  [31:0] regions_max_1_1_0;
input  [31:0] regions_max_2_1_0;
input  [31:0] regions_max_3_1_0;
input  [31:0] regions_max_4_1_0;
input  [31:0] regions_max_5_1_0;
input  [31:0] regions_max_6_1_0;
input  [31:0] regions_max_7_1_0;
input  [31:0] regions_max_8_1_0;
input  [31:0] regions_max_9_1_0;
input  [31:0] regions_max_10_1_0;
input  [31:0] regions_max_11_1_0;
input  [31:0] regions_max_12_1_0;
input  [31:0] regions_max_13_1_0;
input  [31:0] regions_max_14_1_0;
input  [31:0] regions_max_15_1_0;
input  [31:0] regions_min_0_1_0;
input  [31:0] regions_min_1_1_0;
input  [31:0] regions_min_2_1_0;
input  [31:0] regions_min_3_1_0;
input  [31:0] regions_min_4_1_0;
input  [31:0] regions_min_5_1_0;
input  [31:0] regions_min_6_1_0;
input  [31:0] regions_min_7_1_0;
input  [31:0] regions_min_8_1_0;
input  [31:0] regions_min_9_1_0;
input  [31:0] regions_min_10_1_0;
input  [31:0] regions_min_11_1_0;
input  [31:0] regions_min_12_1_0;
input  [31:0] regions_min_13_1_0;
input  [31:0] regions_min_14_1_0;
input  [31:0] regions_min_15_1_0;
input  [31:0] regions_center_0_2_0;
input  [31:0] regions_center_1_2_0;
input  [31:0] regions_center_2_2_0;
input  [31:0] regions_center_3_2_0;
input  [31:0] regions_center_4_2_0;
input  [31:0] regions_center_5_2_0;
input  [31:0] regions_center_6_2_0;
input  [31:0] regions_center_7_2_0;
input  [31:0] regions_center_8_2_0;
input  [31:0] regions_center_9_2_0;
input  [31:0] regions_center_10_2_0;
input  [31:0] regions_center_11_2_0;
input  [31:0] regions_center_12_2_0;
input  [31:0] regions_center_13_2_0;
input  [31:0] regions_center_14_2_0;
input  [31:0] regions_center_15_2_0;
input  [31:0] regions_max_0_2_0;
input  [31:0] regions_max_1_2_0;
input  [31:0] regions_max_2_2_0;
input  [31:0] regions_max_3_2_0;
input  [31:0] regions_max_4_2_0;
input  [31:0] regions_max_5_2_0;
input  [31:0] regions_max_6_2_0;
input  [31:0] regions_max_7_2_0;
input  [31:0] regions_max_8_2_0;
input  [31:0] regions_max_9_2_0;
input  [31:0] regions_max_10_2_0;
input  [31:0] regions_max_11_2_0;
input  [31:0] regions_max_12_2_0;
input  [31:0] regions_max_13_2_0;
input  [31:0] regions_max_14_2_0;
input  [31:0] regions_max_15_2_0;
input  [31:0] regions_min_0_2_0;
input  [31:0] regions_min_1_2_0;
input  [31:0] regions_min_2_2_0;
input  [31:0] regions_min_3_2_0;
input  [31:0] regions_min_4_2_0;
input  [31:0] regions_min_5_2_0;
input  [31:0] regions_min_6_2_0;
input  [31:0] regions_min_7_2_0;
input  [31:0] regions_min_8_2_0;
input  [31:0] regions_min_9_2_0;
input  [31:0] regions_min_10_2_0;
input  [31:0] regions_min_11_2_0;
input  [31:0] regions_min_12_2_0;
input  [31:0] regions_min_13_2_0;
input  [31:0] regions_min_14_2_0;
input  [31:0] regions_min_15_2_0;
input  [31:0] regions_center_0_3_0;
input  [31:0] regions_center_1_3_0;
input  [31:0] regions_center_2_3_0;
input  [31:0] regions_center_3_3_0;
input  [31:0] regions_center_4_3_0;
input  [31:0] regions_center_5_3_0;
input  [31:0] regions_center_6_3_0;
input  [31:0] regions_center_7_3_0;
input  [31:0] regions_center_8_3_0;
input  [31:0] regions_center_9_3_0;
input  [31:0] regions_center_10_3_0;
input  [31:0] regions_center_11_3_0;
input  [31:0] regions_center_12_3_0;
input  [31:0] regions_center_13_3_0;
input  [31:0] regions_center_14_3_0;
input  [31:0] regions_center_15_3_0;
input  [31:0] regions_max_0_3_0;
input  [31:0] regions_max_1_3_0;
input  [31:0] regions_max_2_3_0;
input  [31:0] regions_max_3_3_0;
input  [31:0] regions_max_4_3_0;
input  [31:0] regions_max_5_3_0;
input  [31:0] regions_max_6_3_0;
input  [31:0] regions_max_7_3_0;
input  [31:0] regions_max_8_3_0;
input  [31:0] regions_max_9_3_0;
input  [31:0] regions_max_10_3_0;
input  [31:0] regions_max_11_3_0;
input  [31:0] regions_max_12_3_0;
input  [31:0] regions_max_13_3_0;
input  [31:0] regions_max_14_3_0;
input  [31:0] regions_max_15_3_0;
input  [31:0] regions_min_0_3_0;
input  [31:0] regions_min_1_3_0;
input  [31:0] regions_min_2_3_0;
input  [31:0] regions_min_3_3_0;
input  [31:0] regions_min_4_3_0;
input  [31:0] regions_min_5_3_0;
input  [31:0] regions_min_6_3_0;
input  [31:0] regions_min_7_3_0;
input  [31:0] regions_min_8_3_0;
input  [31:0] regions_min_9_3_0;
input  [31:0] regions_min_10_3_0;
input  [31:0] regions_min_11_3_0;
input  [31:0] regions_min_12_3_0;
input  [31:0] regions_min_13_3_0;
input  [31:0] regions_min_14_3_0;
input  [31:0] regions_min_15_3_0;
input  [31:0] regions_center_0_4_0;
input  [31:0] regions_center_1_4_0;
input  [31:0] regions_center_2_4_0;
input  [31:0] regions_center_3_4_0;
input  [31:0] regions_center_4_4_0;
input  [31:0] regions_center_5_4_0;
input  [31:0] regions_center_6_4_0;
input  [31:0] regions_center_7_4_0;
input  [31:0] regions_center_8_4_0;
input  [31:0] regions_center_9_4_0;
input  [31:0] regions_center_10_4_0;
input  [31:0] regions_center_11_4_0;
input  [31:0] regions_center_12_4_0;
input  [31:0] regions_center_13_4_0;
input  [31:0] regions_center_14_4_0;
input  [31:0] regions_center_15_4_0;
input  [31:0] regions_max_0_4_0;
input  [31:0] regions_max_1_4_0;
input  [31:0] regions_max_2_4_0;
input  [31:0] regions_max_3_4_0;
input  [31:0] regions_max_4_4_0;
input  [31:0] regions_max_5_4_0;
input  [31:0] regions_max_6_4_0;
input  [31:0] regions_max_7_4_0;
input  [31:0] regions_max_8_4_0;
input  [31:0] regions_max_9_4_0;
input  [31:0] regions_max_10_4_0;
input  [31:0] regions_max_11_4_0;
input  [31:0] regions_max_12_4_0;
input  [31:0] regions_max_13_4_0;
input  [31:0] regions_max_14_4_0;
input  [31:0] regions_max_15_4_0;
input  [31:0] regions_min_0_4_0;
input  [31:0] regions_min_1_4_0;
input  [31:0] regions_min_2_4_0;
input  [31:0] regions_min_3_4_0;
input  [31:0] regions_min_4_4_0;
input  [31:0] regions_min_5_4_0;
input  [31:0] regions_min_6_4_0;
input  [31:0] regions_min_7_4_0;
input  [31:0] regions_min_8_4_0;
input  [31:0] regions_min_9_4_0;
input  [31:0] regions_min_10_4_0;
input  [31:0] regions_min_11_4_0;
input  [31:0] regions_min_12_4_0;
input  [31:0] regions_min_13_4_0;
input  [31:0] regions_min_14_4_0;
input  [31:0] regions_min_15_4_0;
input  [31:0] regions_center_0_5_0;
input  [31:0] regions_center_1_5_0;
input  [31:0] regions_center_2_5_0;
input  [31:0] regions_center_3_5_0;
input  [31:0] regions_center_4_5_0;
input  [31:0] regions_center_5_5_0;
input  [31:0] regions_center_6_5_0;
input  [31:0] regions_center_7_5_0;
input  [31:0] regions_center_8_5_0;
input  [31:0] regions_center_9_5_0;
input  [31:0] regions_center_10_5_0;
input  [31:0] regions_center_11_5_0;
input  [31:0] regions_center_12_5_0;
input  [31:0] regions_center_13_5_0;
input  [31:0] regions_center_14_5_0;
input  [31:0] regions_center_15_5_0;
input  [31:0] regions_max_0_5_0;
input  [31:0] regions_max_1_5_0;
input  [31:0] regions_max_2_5_0;
input  [31:0] regions_max_3_5_0;
input  [31:0] regions_max_4_5_0;
input  [31:0] regions_max_5_5_0;
input  [31:0] regions_max_6_5_0;
input  [31:0] regions_max_7_5_0;
input  [31:0] regions_max_8_5_0;
input  [31:0] regions_max_9_5_0;
input  [31:0] regions_max_10_5_0;
input  [31:0] regions_max_11_5_0;
input  [31:0] regions_max_12_5_0;
input  [31:0] regions_max_13_5_0;
input  [31:0] regions_max_14_5_0;
input  [31:0] regions_max_15_5_0;
input  [31:0] regions_min_0_5_0;
input  [31:0] regions_min_1_5_0;
input  [31:0] regions_min_2_5_0;
input  [31:0] regions_min_3_5_0;
input  [31:0] regions_min_4_5_0;
input  [31:0] regions_min_5_5_0;
input  [31:0] regions_min_6_5_0;
input  [31:0] regions_min_7_5_0;
input  [31:0] regions_min_8_5_0;
input  [31:0] regions_min_9_5_0;
input  [31:0] regions_min_10_5_0;
input  [31:0] regions_min_11_5_0;
input  [31:0] regions_min_12_5_0;
input  [31:0] regions_min_13_5_0;
input  [31:0] regions_min_14_5_0;
input  [31:0] regions_min_15_5_0;
input  [31:0] regions_center_0_6_0;
input  [31:0] regions_center_1_6_0;
input  [31:0] regions_center_2_6_0;
input  [31:0] regions_center_3_6_0;
input  [31:0] regions_center_4_6_0;
input  [31:0] regions_center_5_6_0;
input  [31:0] regions_center_6_6_0;
input  [31:0] regions_center_7_6_0;
input  [31:0] regions_center_8_6_0;
input  [31:0] regions_center_9_6_0;
input  [31:0] regions_center_10_6_0;
input  [31:0] regions_center_11_6_0;
input  [31:0] regions_center_12_6_0;
input  [31:0] regions_center_13_6_0;
input  [31:0] regions_center_14_6_0;
input  [31:0] regions_center_15_6_0;
input  [31:0] regions_max_0_6_0;
input  [31:0] regions_max_1_6_0;
input  [31:0] regions_max_2_6_0;
input  [31:0] regions_max_3_6_0;
input  [31:0] regions_max_4_6_0;
input  [31:0] regions_max_5_6_0;
input  [31:0] regions_max_6_6_0;
input  [31:0] regions_max_7_6_0;
input  [31:0] regions_max_8_6_0;
input  [31:0] regions_max_9_6_0;
input  [31:0] regions_max_10_6_0;
input  [31:0] regions_max_11_6_0;
input  [31:0] regions_max_12_6_0;
input  [31:0] regions_max_13_6_0;
input  [31:0] regions_max_14_6_0;
input  [31:0] regions_max_15_6_0;
input  [31:0] regions_min_0_6_0;
input  [31:0] regions_min_1_6_0;
input  [31:0] regions_min_2_6_0;
input  [31:0] regions_min_3_6_0;
input  [31:0] regions_min_4_6_0;
input  [31:0] regions_min_5_6_0;
input  [31:0] regions_min_6_6_0;
input  [31:0] regions_min_7_6_0;
input  [31:0] regions_min_8_6_0;
input  [31:0] regions_min_9_6_0;
input  [31:0] regions_min_10_6_0;
input  [31:0] regions_min_11_6_0;
input  [31:0] regions_min_12_6_0;
input  [31:0] regions_min_13_6_0;
input  [31:0] regions_min_14_6_0;
input  [31:0] regions_min_15_6_0;
input  [31:0] regions_center_0_7_0;
input  [31:0] regions_center_1_7_0;
input  [31:0] regions_center_2_7_0;
input  [31:0] regions_center_3_7_0;
input  [31:0] regions_center_4_7_0;
input  [31:0] regions_center_5_7_0;
input  [31:0] regions_center_6_7_0;
input  [31:0] regions_center_7_7_0;
input  [31:0] regions_center_8_7_0;
input  [31:0] regions_center_9_7_0;
input  [31:0] regions_center_10_7_0;
input  [31:0] regions_center_11_7_0;
input  [31:0] regions_center_12_7_0;
input  [31:0] regions_center_13_7_0;
input  [31:0] regions_center_14_7_0;
input  [31:0] regions_center_15_7_0;
input  [31:0] regions_max_0_7_0;
input  [31:0] regions_max_1_7_0;
input  [31:0] regions_max_2_7_0;
input  [31:0] regions_max_3_7_0;
input  [31:0] regions_max_4_7_0;
input  [31:0] regions_max_5_7_0;
input  [31:0] regions_max_6_7_0;
input  [31:0] regions_max_7_7_0;
input  [31:0] regions_max_8_7_0;
input  [31:0] regions_max_9_7_0;
input  [31:0] regions_max_10_7_0;
input  [31:0] regions_max_11_7_0;
input  [31:0] regions_max_12_7_0;
input  [31:0] regions_max_13_7_0;
input  [31:0] regions_max_14_7_0;
input  [31:0] regions_max_15_7_0;
input  [31:0] regions_min_0_7_0;
input  [31:0] regions_min_1_7_0;
input  [31:0] regions_min_2_7_0;
input  [31:0] regions_min_3_7_0;
input  [31:0] regions_min_4_7_0;
input  [31:0] regions_min_5_7_0;
input  [31:0] regions_min_6_7_0;
input  [31:0] regions_min_7_7_0;
input  [31:0] regions_min_8_7_0;
input  [31:0] regions_min_9_7_0;
input  [31:0] regions_min_10_7_0;
input  [31:0] regions_min_11_7_0;
input  [31:0] regions_min_12_7_0;
input  [31:0] regions_min_13_7_0;
input  [31:0] regions_min_14_7_0;
input  [31:0] regions_min_15_7_0;
output  [3:0] merge_2_out;
output   merge_2_out_ap_vld;
output  [3:0] merge_1_out;
output   merge_1_out_ap_vld;
output  [31:0] grp_fu_24082_p_din0;
output  [31:0] grp_fu_24082_p_din1;
output  [0:0] grp_fu_24082_p_opcode;
input  [31:0] grp_fu_24082_p_dout0;
output   grp_fu_24082_p_ce;
output  [31:0] grp_fu_24088_p_din0;
output  [31:0] grp_fu_24088_p_din1;
input  [31:0] grp_fu_24088_p_dout0;
output   grp_fu_24088_p_ce;
output  [31:0] grp_fu_24093_p_din0;
output  [31:0] grp_fu_24093_p_din1;
output  [4:0] grp_fu_24093_p_opcode;
input  [0:0] grp_fu_24093_p_dout0;
output   grp_fu_24093_p_ce;
output  [31:0] grp_fu_24098_p_din0;
output  [31:0] grp_fu_24098_p_din1;
output  [4:0] grp_fu_24098_p_opcode;
input  [0:0] grp_fu_24098_p_dout0;
output   grp_fu_24098_p_ce;
output  [31:0] grp_fu_24103_p_din0;
output  [31:0] grp_fu_24103_p_din1;
output  [4:0] grp_fu_24103_p_opcode;
input  [0:0] grp_fu_24103_p_dout0;
output   grp_fu_24103_p_ce;

reg ap_idle;
reg merge_2_out_ap_vld;
reg merge_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_enable_reg_pp0_iter11;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state16_pp0_stage7_iter1;
wire    ap_block_state24_pp0_stage7_iter2;
wire    ap_block_state32_pp0_stage7_iter3;
wire    ap_block_state40_pp0_stage7_iter4;
wire    ap_block_state48_pp0_stage7_iter5;
wire    ap_block_state56_pp0_stage7_iter6;
wire    ap_block_state64_pp0_stage7_iter7;
wire    ap_block_state72_pp0_stage7_iter8;
wire    ap_block_state80_pp0_stage7_iter9;
wire    ap_block_state88_pp0_stage7_iter10;
wire    ap_block_pp0_stage7_subdone;
reg   [0:0] icmp_ln1027_reg_8198;
reg    ap_condition_exit_pp0_iter0_stage7;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [31:0] grp_fu_3190_p2;
reg   [31:0] reg_3226;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state10_pp0_stage1_iter1;
wire    ap_block_state18_pp0_stage1_iter2;
wire    ap_block_state26_pp0_stage1_iter3;
wire    ap_block_state34_pp0_stage1_iter4;
wire    ap_block_state42_pp0_stage1_iter5;
wire    ap_block_state50_pp0_stage1_iter6;
wire    ap_block_state58_pp0_stage1_iter7;
wire    ap_block_state66_pp0_stage1_iter8;
wire    ap_block_state74_pp0_stage1_iter9;
wire    ap_block_state82_pp0_stage1_iter10;
wire    ap_block_state90_pp0_stage1_iter11;
wire    ap_block_pp0_stage1_11001;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_state17_pp0_stage0_iter2;
wire    ap_block_state25_pp0_stage0_iter3;
wire    ap_block_state33_pp0_stage0_iter4;
wire    ap_block_state41_pp0_stage0_iter5;
wire    ap_block_state49_pp0_stage0_iter6;
wire    ap_block_state57_pp0_stage0_iter7;
wire    ap_block_state65_pp0_stage0_iter8;
wire    ap_block_state73_pp0_stage0_iter9;
wire    ap_block_state81_pp0_stage0_iter10;
wire    ap_block_state89_pp0_stage0_iter11;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln1027_reg_8198_pp0_iter9_reg;
wire   [31:0] grp_fu_3186_p2;
reg   [31:0] reg_3232;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state12_pp0_stage3_iter1;
wire    ap_block_state20_pp0_stage3_iter2;
wire    ap_block_state28_pp0_stage3_iter3;
wire    ap_block_state36_pp0_stage3_iter4;
wire    ap_block_state44_pp0_stage3_iter5;
wire    ap_block_state52_pp0_stage3_iter6;
wire    ap_block_state60_pp0_stage3_iter7;
wire    ap_block_state68_pp0_stage3_iter8;
wire    ap_block_state76_pp0_stage3_iter9;
wire    ap_block_state84_pp0_stage3_iter10;
wire    ap_block_state92_pp0_stage3_iter11;
wire    ap_block_pp0_stage3_11001;
reg   [0:0] icmp_ln1027_reg_8198_pp0_iter1_reg;
wire    ap_block_pp0_stage7_11001;
reg   [0:0] icmp_ln1027_reg_8198_pp0_iter2_reg;
reg   [0:0] and_ln112_11_reg_8641;
reg   [0:0] and_ln112_11_reg_8641_pp0_iter2_reg;
reg   [31:0] reg_3238;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state14_pp0_stage5_iter1;
wire    ap_block_state22_pp0_stage5_iter2;
wire    ap_block_state30_pp0_stage5_iter3;
wire    ap_block_state38_pp0_stage5_iter4;
wire    ap_block_state46_pp0_stage5_iter5;
wire    ap_block_state54_pp0_stage5_iter6;
wire    ap_block_state62_pp0_stage5_iter7;
wire    ap_block_state70_pp0_stage5_iter8;
wire    ap_block_state78_pp0_stage5_iter9;
wire    ap_block_state86_pp0_stage5_iter10;
wire    ap_block_pp0_stage5_11001;
wire   [31:0] grp_fu_3174_p2;
reg   [31:0] reg_3243;
reg   [31:0] reg_3248;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state15_pp0_stage6_iter1;
wire    ap_block_state23_pp0_stage6_iter2;
wire    ap_block_state31_pp0_stage6_iter3;
wire    ap_block_state39_pp0_stage6_iter4;
wire    ap_block_state47_pp0_stage6_iter5;
wire    ap_block_state55_pp0_stage6_iter6;
wire    ap_block_state63_pp0_stage6_iter7;
wire    ap_block_state71_pp0_stage6_iter8;
wire    ap_block_state79_pp0_stage6_iter9;
wire    ap_block_state87_pp0_stage6_iter10;
wire    ap_block_pp0_stage6_11001;
reg   [0:0] and_ln112_13_reg_8666;
reg   [31:0] reg_3253;
reg   [31:0] reg_3258;
reg   [0:0] and_ln112_15_reg_8691;
wire   [31:0] grp_fu_3178_p2;
reg   [31:0] reg_3263;
reg   [31:0] reg_3268;
reg   [0:0] and_ln112_1_reg_8551;
reg   [0:0] and_ln112_1_reg_8551_pp0_iter1_reg;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state13_pp0_stage4_iter1;
wire    ap_block_state21_pp0_stage4_iter2;
wire    ap_block_state29_pp0_stage4_iter3;
wire    ap_block_state37_pp0_stage4_iter4;
wire    ap_block_state45_pp0_stage4_iter5;
wire    ap_block_state53_pp0_stage4_iter6;
wire    ap_block_state61_pp0_stage4_iter7;
wire    ap_block_state69_pp0_stage4_iter8;
wire    ap_block_state77_pp0_stage4_iter9;
wire    ap_block_state85_pp0_stage4_iter10;
wire    ap_block_pp0_stage4_11001;
reg   [0:0] and_ln112_3_reg_8556;
reg   [0:0] and_ln112_3_reg_8556_pp0_iter1_reg;
wire   [31:0] grp_fu_3194_p2;
reg   [31:0] reg_3272;
reg   [0:0] and_ln112_5_reg_8561;
reg   [0:0] and_ln112_5_reg_8561_pp0_iter1_reg;
reg   [31:0] reg_3276;
reg   [0:0] and_ln112_7_reg_8621;
reg   [0:0] and_ln112_7_reg_8621_pp0_iter2_reg;
reg   [0:0] and_ln112_15_reg_8691_pp0_iter2_reg;
reg   [31:0] reg_3280;
reg   [0:0] and_ln112_13_reg_8666_pp0_iter2_reg;
reg   [31:0] i_real_3_reg_8183;
reg   [31:0] i_real_3_reg_8183_pp0_iter1_reg;
reg   [31:0] i_real_3_reg_8183_pp0_iter2_reg;
reg   [31:0] i_real_3_reg_8183_pp0_iter3_reg;
reg   [31:0] i_real_3_reg_8183_pp0_iter4_reg;
reg   [31:0] i_real_3_reg_8183_pp0_iter5_reg;
reg   [31:0] i_real_3_reg_8183_pp0_iter6_reg;
reg   [31:0] i_real_3_reg_8183_pp0_iter7_reg;
reg   [31:0] i_real_3_reg_8183_pp0_iter8_reg;
reg   [31:0] i_real_3_reg_8183_pp0_iter9_reg;
reg   [31:0] i_real_3_reg_8183_pp0_iter10_reg;
reg   [31:0] i_real_3_reg_8183_pp0_iter11_reg;
reg   [31:0] k_real_5_reg_8191;
reg   [31:0] k_real_5_reg_8191_pp0_iter1_reg;
reg   [31:0] k_real_5_reg_8191_pp0_iter2_reg;
reg   [31:0] k_real_5_reg_8191_pp0_iter3_reg;
reg   [31:0] k_real_5_reg_8191_pp0_iter4_reg;
reg   [31:0] k_real_5_reg_8191_pp0_iter5_reg;
reg   [31:0] k_real_5_reg_8191_pp0_iter6_reg;
reg   [31:0] k_real_5_reg_8191_pp0_iter7_reg;
reg   [31:0] k_real_5_reg_8191_pp0_iter8_reg;
reg   [31:0] k_real_5_reg_8191_pp0_iter9_reg;
reg   [31:0] k_real_5_reg_8191_pp0_iter10_reg;
wire   [0:0] icmp_ln1027_fu_3325_p2;
reg   [0:0] icmp_ln1027_reg_8198_pp0_iter3_reg;
reg   [0:0] icmp_ln1027_reg_8198_pp0_iter4_reg;
reg   [0:0] icmp_ln1027_reg_8198_pp0_iter5_reg;
reg   [0:0] icmp_ln1027_reg_8198_pp0_iter6_reg;
reg   [0:0] icmp_ln1027_reg_8198_pp0_iter7_reg;
reg   [0:0] icmp_ln1027_reg_8198_pp0_iter8_reg;
reg   [0:0] icmp_ln1027_reg_8198_pp0_iter10_reg;
reg   [0:0] icmp_ln1027_reg_8198_pp0_iter11_reg;
wire   [3:0] trunc_ln104_fu_3331_p1;
reg   [3:0] trunc_ln104_reg_8202;
wire   [31:0] tmp_s_fu_3335_p18;
reg   [31:0] tmp_s_reg_8222;
wire   [3:0] trunc_ln104_1_fu_3357_p1;
reg   [3:0] trunc_ln104_1_reg_8227;
wire   [31:0] tmp_5_fu_3361_p18;
reg   [31:0] tmp_5_reg_8247;
wire   [31:0] tmp_6_fu_3383_p18;
reg   [31:0] tmp_6_reg_8252;
wire   [31:0] tmp_7_fu_3405_p18;
reg   [31:0] tmp_7_reg_8257;
wire   [31:0] tmp_8_fu_3427_p18;
reg   [31:0] tmp_8_reg_8266;
wire   [31:0] tmp_9_fu_3449_p18;
reg   [31:0] tmp_9_reg_8271;
wire   [31:0] tmp_1_fu_3471_p18;
reg   [31:0] tmp_1_reg_8280;
wire   [31:0] tmp_2_fu_3493_p18;
reg   [31:0] tmp_2_reg_8285;
wire   [31:0] tmp_4_fu_3515_p18;
reg   [31:0] tmp_4_reg_8290;
wire   [31:0] tmp_11_fu_3537_p18;
reg   [31:0] tmp_11_reg_8299;
wire   [31:0] tmp_12_fu_3559_p18;
reg   [31:0] tmp_12_reg_8308;
wire   [31:0] tmp_13_fu_3581_p18;
reg   [31:0] tmp_13_reg_8313;
wire   [31:0] tmp_15_fu_3603_p18;
reg   [31:0] tmp_15_reg_8318;
wire   [31:0] tmp_17_fu_3625_p18;
reg   [31:0] tmp_17_reg_8327;
wire   [31:0] tmp_18_fu_3647_p18;
reg   [31:0] tmp_18_reg_8336;
wire   [31:0] tmp_19_fu_3669_p18;
reg   [31:0] tmp_19_reg_8341;
wire   [0:0] icmp_ln112_fu_3725_p2;
reg   [0:0] icmp_ln112_reg_8346;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state11_pp0_stage2_iter1;
wire    ap_block_state19_pp0_stage2_iter2;
wire    ap_block_state27_pp0_stage2_iter3;
wire    ap_block_state35_pp0_stage2_iter4;
wire    ap_block_state43_pp0_stage2_iter5;
wire    ap_block_state51_pp0_stage2_iter6;
wire    ap_block_state59_pp0_stage2_iter7;
wire    ap_block_state67_pp0_stage2_iter8;
wire    ap_block_state75_pp0_stage2_iter9;
wire    ap_block_state83_pp0_stage2_iter10;
wire    ap_block_state91_pp0_stage2_iter11;
wire    ap_block_pp0_stage2_11001;
wire   [0:0] icmp_ln112_1_fu_3731_p2;
reg   [0:0] icmp_ln112_1_reg_8351;
wire   [0:0] icmp_ln112_2_fu_3737_p2;
reg   [0:0] icmp_ln112_2_reg_8356;
wire   [0:0] icmp_ln112_3_fu_3743_p2;
reg   [0:0] icmp_ln112_3_reg_8361;
wire   [31:0] tmp_3_fu_3749_p18;
reg   [31:0] tmp_3_reg_8366;
wire   [31:0] tmp_10_fu_3770_p18;
reg   [31:0] tmp_10_reg_8371;
wire   [31:0] tmp_14_fu_3791_p18;
reg   [31:0] tmp_14_reg_8376;
wire   [31:0] tmp_16_fu_3812_p18;
reg   [31:0] tmp_16_reg_8381;
wire   [31:0] tmp_21_fu_3833_p18;
reg   [31:0] tmp_21_reg_8386;
wire   [31:0] tmp_23_fu_3854_p18;
reg   [31:0] tmp_23_reg_8395;
wire   [31:0] tmp_27_fu_3875_p18;
reg   [31:0] tmp_27_reg_8404;
wire   [31:0] tmp_29_fu_3896_p18;
reg   [31:0] tmp_29_reg_8413;
wire   [31:0] tmp_33_fu_3917_p18;
reg   [31:0] tmp_33_reg_8422;
wire   [31:0] tmp_35_fu_3938_p18;
reg   [31:0] tmp_35_reg_8431;
reg   [0:0] tmp_50_reg_8440;
wire   [0:0] icmp_ln112_4_fu_3993_p2;
reg   [0:0] icmp_ln112_4_reg_8445;
wire   [0:0] icmp_ln112_5_fu_3999_p2;
reg   [0:0] icmp_ln112_5_reg_8450;
wire   [0:0] icmp_ln112_6_fu_4005_p2;
reg   [0:0] icmp_ln112_6_reg_8455;
wire   [0:0] icmp_ln112_7_fu_4011_p2;
reg   [0:0] icmp_ln112_7_reg_8460;
reg   [0:0] tmp_55_reg_8465;
wire   [0:0] icmp_ln112_8_fu_4051_p2;
reg   [0:0] icmp_ln112_8_reg_8470;
wire   [0:0] icmp_ln112_9_fu_4057_p2;
reg   [0:0] icmp_ln112_9_reg_8475;
wire   [0:0] icmp_ln112_10_fu_4063_p2;
reg   [0:0] icmp_ln112_10_reg_8480;
wire   [0:0] icmp_ln112_11_fu_4069_p2;
reg   [0:0] icmp_ln112_11_reg_8485;
reg   [0:0] tmp_60_reg_8490;
wire   [31:0] tmp_20_fu_4075_p18;
reg   [31:0] tmp_20_reg_8495;
wire   [31:0] tmp_22_fu_4096_p18;
reg   [31:0] tmp_22_reg_8500;
wire   [31:0] tmp_24_fu_4117_p18;
reg   [31:0] tmp_24_reg_8505;
wire   [31:0] tmp_25_fu_4138_p18;
reg   [31:0] tmp_25_reg_8510;
wire   [31:0] tmp_39_fu_4159_p18;
reg   [31:0] tmp_39_reg_8515;
wire   [31:0] tmp_41_fu_4180_p18;
reg   [31:0] tmp_41_reg_8524;
wire   [31:0] tmp_45_fu_4201_p18;
reg   [31:0] tmp_45_reg_8533;
wire   [31:0] tmp_47_fu_4222_p18;
reg   [31:0] tmp_47_reg_8542;
wire   [0:0] and_ln112_1_fu_4256_p2;
wire   [0:0] and_ln112_3_fu_4275_p2;
reg   [0:0] and_ln112_3_reg_8556_pp0_iter2_reg;
wire   [0:0] and_ln112_5_fu_4295_p2;
reg   [0:0] and_ln112_5_reg_8561_pp0_iter2_reg;
wire   [0:0] icmp_ln112_12_fu_4334_p2;
reg   [0:0] icmp_ln112_12_reg_8566;
wire   [0:0] icmp_ln112_13_fu_4340_p2;
reg   [0:0] icmp_ln112_13_reg_8571;
wire   [0:0] icmp_ln112_14_fu_4346_p2;
reg   [0:0] icmp_ln112_14_reg_8576;
wire   [0:0] icmp_ln112_15_fu_4352_p2;
reg   [0:0] icmp_ln112_15_reg_8581;
reg   [0:0] tmp_65_reg_8586;
wire   [31:0] tmp_26_fu_4358_p18;
reg   [31:0] tmp_26_reg_8591;
wire   [31:0] tmp_28_fu_4379_p18;
reg   [31:0] tmp_28_reg_8596;
reg   [0:0] tmp_70_reg_8601;
wire   [31:0] tmp_30_fu_4400_p18;
reg   [31:0] tmp_30_reg_8606;
wire   [31:0] tmp_31_fu_4421_p18;
reg   [31:0] tmp_31_reg_8611;
reg   [0:0] tmp_75_reg_8616;
wire   [0:0] and_ln112_7_fu_4456_p2;
reg   [0:0] and_ln112_7_reg_8621_pp0_iter1_reg;
wire   [0:0] and_ln112_9_fu_4537_p2;
reg   [0:0] and_ln112_9_reg_8626;
reg   [0:0] and_ln112_9_reg_8626_pp0_iter1_reg;
reg   [0:0] and_ln112_9_reg_8626_pp0_iter2_reg;
wire   [31:0] tmp_32_fu_4542_p18;
reg   [31:0] tmp_32_reg_8631;
wire   [31:0] tmp_34_fu_4563_p18;
reg   [31:0] tmp_34_reg_8636;
wire   [0:0] and_ln112_11_fu_4660_p2;
reg   [0:0] and_ln112_11_reg_8641_pp0_iter1_reg;
reg   [0:0] tmp_80_reg_8646;
reg   [0:0] tmp_85_reg_8651;
wire   [31:0] tmp_38_fu_4665_p18;
reg   [31:0] tmp_38_reg_8656;
wire   [31:0] tmp_40_fu_4686_p18;
reg   [31:0] tmp_40_reg_8661;
wire   [0:0] and_ln112_13_fu_4783_p2;
reg   [0:0] and_ln112_13_reg_8666_pp0_iter1_reg;
wire   [31:0] tmp_36_fu_4788_p18;
reg   [31:0] tmp_36_reg_8671;
wire   [31:0] tmp_37_fu_4809_p18;
reg   [31:0] tmp_37_reg_8676;
wire   [31:0] tmp_44_fu_4830_p18;
reg   [31:0] tmp_44_reg_8681;
wire   [31:0] tmp_46_fu_4851_p18;
reg   [31:0] tmp_46_reg_8686;
wire   [0:0] and_ln112_15_fu_4948_p2;
reg   [0:0] and_ln112_15_reg_8691_pp0_iter1_reg;
wire   [31:0] tmp_42_fu_4953_p18;
reg   [31:0] tmp_42_reg_8696;
wire   [31:0] tmp_43_fu_4974_p18;
reg   [31:0] tmp_43_reg_8701;
wire   [0:0] icmp_ln1019_fu_4995_p2;
reg   [0:0] icmp_ln1019_reg_8706;
reg   [0:0] icmp_ln1019_reg_8706_pp0_iter2_reg;
reg   [0:0] icmp_ln1019_reg_8706_pp0_iter3_reg;
reg   [0:0] icmp_ln1019_reg_8706_pp0_iter4_reg;
reg   [0:0] icmp_ln1019_reg_8706_pp0_iter5_reg;
reg   [0:0] icmp_ln1019_reg_8706_pp0_iter6_reg;
reg   [0:0] icmp_ln1019_reg_8706_pp0_iter7_reg;
reg   [0:0] icmp_ln1019_reg_8706_pp0_iter8_reg;
reg   [0:0] icmp_ln1019_reg_8706_pp0_iter9_reg;
reg   [0:0] icmp_ln1019_reg_8706_pp0_iter10_reg;
reg   [0:0] icmp_ln1019_reg_8706_pp0_iter11_reg;
reg   [31:0] d_reg_8715;
reg   [31:0] d1_reg_8721;
reg   [31:0] d2_reg_8726;
wire   [31:0] grp_fu_3182_p2;
reg   [31:0] sub_reg_8731;
reg   [31:0] sub2_reg_8736;
reg   [31:0] d_2_reg_8741;
wire   [31:0] grp_fu_3198_p2;
reg   [31:0] d_3_reg_8747;
reg   [31:0] d1_1_reg_8753;
reg   [31:0] d2_1_reg_8758;
reg   [31:0] sub75_1_reg_8763;
reg   [31:0] sub87_1_reg_8768;
reg   [31:0] d1_2_reg_8773;
reg   [31:0] d2_2_reg_8778;
reg   [31:0] sub75_2_reg_8783;
reg   [31:0] sub87_2_reg_8788;
reg   [31:0] d1_3_reg_8793;
reg   [31:0] d2_3_reg_8798;
reg   [31:0] sub75_3_reg_8803;
reg   [31:0] sub87_3_reg_8808;
reg   [31:0] d1_4_reg_8813;
reg   [31:0] d2_4_reg_8818;
reg   [31:0] sub75_4_reg_8823;
reg   [31:0] sub87_4_reg_8828;
reg   [31:0] d_5_reg_8833;
reg   [31:0] mul_reg_8839;
wire   [31:0] grp_fu_3207_p2;
reg   [31:0] mul_1_reg_8844;
reg   [31:0] mul_1_reg_8844_pp0_iter2_reg;
reg   [31:0] mul_2_reg_8849;
reg   [31:0] mul_2_reg_8849_pp0_iter2_reg;
reg   [31:0] mul_3_reg_8854;
reg   [31:0] mul_3_reg_8854_pp0_iter2_reg;
reg   [31:0] mul_3_reg_8854_pp0_iter3_reg;
reg   [31:0] mul_4_reg_8859;
reg   [31:0] mul_4_reg_8859_pp0_iter2_reg;
reg   [31:0] mul_4_reg_8859_pp0_iter3_reg;
reg   [31:0] mul_4_reg_8859_pp0_iter4_reg;
reg   [31:0] d_6_reg_8864;
reg   [31:0] mul_5_reg_8870;
reg   [31:0] mul_5_reg_8870_pp0_iter3_reg;
reg   [31:0] mul_5_reg_8870_pp0_iter4_reg;
reg   [31:0] mul_5_reg_8870_pp0_iter5_reg;
reg   [31:0] mul_5_reg_8870_pp0_iter6_reg;
reg   [31:0] mul_5_reg_8870_pp0_iter7_reg;
reg   [31:0] d_7_reg_8875;
reg   [31:0] ov_4_reg_8881;
reg   [31:0] mul_6_reg_8886;
reg   [31:0] mul_6_reg_8886_pp0_iter3_reg;
reg   [31:0] mul_6_reg_8886_pp0_iter4_reg;
reg   [31:0] mul_6_reg_8886_pp0_iter5_reg;
reg   [31:0] mul_6_reg_8886_pp0_iter6_reg;
reg   [31:0] mul_6_reg_8886_pp0_iter7_reg;
wire   [31:0] ov_2_fu_5040_p3;
reg   [31:0] ov_2_reg_8891;
reg   [31:0] distance_reg_8898;
wire   [31:0] ov_6_fu_5047_p3;
reg   [31:0] ov_6_reg_8903;
wire   [31:0] ov_10_fu_5053_p3;
reg   [31:0] ov_10_reg_8910;
reg   [0:0] tmp_52_reg_8917;
reg   [31:0] ov_16_reg_8922;
wire   [31:0] ov_32_fu_5100_p3;
reg   [31:0] ov_32_reg_8927;
reg   [0:0] tmp_57_reg_8932;
reg   [0:0] tmp_62_reg_8937;
wire   [31:0] ov_14_fu_5107_p3;
reg   [31:0] ov_14_reg_8942;
reg   [31:0] ov_17_reg_8949;
wire   [31:0] ov_7_fu_5154_p3;
reg   [31:0] ov_7_reg_8954;
wire   [31:0] ov_11_fu_5201_p3;
reg   [31:0] ov_11_reg_8959;
wire   [31:0] ov_18_fu_5208_p3;
reg   [31:0] ov_18_reg_8964;
wire   [31:0] ov_22_fu_5213_p3;
reg   [31:0] ov_22_reg_8971;
reg   [0:0] tmp_67_reg_8978;
wire   [31:0] ov_26_fu_5220_p3;
reg   [31:0] ov_26_reg_8983;
reg   [31:0] mul_7_reg_8990;
reg   [31:0] mul_7_reg_8990_pp0_iter4_reg;
reg   [31:0] mul_7_reg_8990_pp0_iter5_reg;
reg   [31:0] mul_7_reg_8990_pp0_iter6_reg;
reg   [31:0] mul_7_reg_8990_pp0_iter7_reg;
reg   [31:0] mul_7_reg_8990_pp0_iter8_reg;
wire   [31:0] ov_30_fu_5227_p3;
reg   [31:0] ov_30_reg_8995;
wire   [31:0] ov_15_fu_5274_p3;
reg   [31:0] ov_15_reg_9002;
reg   [0:0] tmp_72_reg_9007;
reg   [0:0] tmp_77_reg_9012;
wire   [31:0] ov_19_fu_5321_p3;
reg   [31:0] ov_19_reg_9017;
reg   [31:0] ov_19_reg_9017_pp0_iter4_reg;
wire   [31:0] ov_23_fu_5368_p3;
reg   [31:0] ov_23_reg_9022;
reg   [31:0] ov_23_reg_9022_pp0_iter4_reg;
reg   [31:0] ov_23_reg_9022_pp0_iter5_reg;
reg   [31:0] overlap_1_reg_9027;
reg   [31:0] distance_1_reg_9032;
reg   [0:0] tmp_82_reg_9037;
wire   [31:0] ov_27_fu_5415_p3;
reg   [31:0] ov_27_reg_9042;
reg   [31:0] ov_27_reg_9042_pp0_iter4_reg;
reg   [31:0] ov_27_reg_9042_pp0_iter5_reg;
reg   [0:0] tmp_87_reg_9047;
wire   [31:0] ov_31_fu_5462_p3;
reg   [31:0] ov_31_reg_9052;
reg   [31:0] ov_31_reg_9052_pp0_iter4_reg;
reg   [31:0] ov_31_reg_9052_pp0_iter5_reg;
reg   [31:0] overlap_2_reg_9057;
reg   [31:0] overlap_3_reg_9062;
reg   [31:0] distance_2_reg_9067;
reg   [31:0] overlap_4_reg_9072;
reg   [31:0] distance_3_reg_9077;
reg   [31:0] overlap_5_reg_9082;
reg   [31:0] overlap_6_reg_9087;
reg   [31:0] distance_4_reg_9092;
reg   [31:0] overlap_7_reg_9097;
reg   [31:0] overlap_7_reg_9097_pp0_iter8_reg;
reg   [31:0] overlap_7_reg_9097_pp0_iter9_reg;
reg   [0:0] tmp_89_reg_9104;
reg   [0:0] tmp_89_reg_9104_pp0_iter8_reg;
reg   [0:0] tmp_89_reg_9104_pp0_iter9_reg;
reg   [31:0] distance_5_reg_9109;
reg   [31:0] distance_6_reg_9114;
wire   [31:0] sc_2_fu_5523_p3;
reg   [31:0] sc_2_reg_9119;
reg   [31:0] tmp_score_load_reg_9126;
reg   [0:0] tmp_92_reg_9133;
wire   [31:0] tmp_other_4_fu_5630_p3;
reg   [31:0] tmp_other_4_reg_9138;
wire   [31:0] tmp_score_4_fu_5637_p3;
reg   [31:0] tmp_score_4_reg_9144;
reg   [31:0] score_load_reg_9152;
reg   [31:0] merge_1_4_reg_9160;
reg   [31:0] merge_2_1_reg_9167;
reg   [0:0] tmp_95_reg_9173;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage2_subdone;
reg    ap_condition_exit_pp0_iter11_stage2;
wire    ap_block_pp0_stage3_subdone;
reg   [31:0] merge_1_fu_824;
wire   [31:0] merge_1_7_fu_5809_p3;
wire    ap_loop_init;
wire    ap_block_pp0_stage2;
reg   [31:0] merge_2_fu_828;
wire   [31:0] merge_2_6_fu_5803_p3;
reg   [31:0] score_fu_832;
wire   [31:0] score_3_fu_5797_p3;
wire    ap_block_pp0_stage1;
reg   [31:0] merge_1_1_fu_836;
wire   [31:0] i_real_2_fu_5023_p3;
reg   [31:0] k_real_4_fu_840;
wire   [31:0] k_real_3_fu_5015_p3;
reg   [31:0] tmp_score_fu_844;
wire   [31:0] tmp_score_3_fu_5653_p3;
wire    ap_block_pp0_stage6;
reg   [31:0] tmp_other_fu_848;
wire   [31:0] tmp_other_3_fu_5647_p3;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage2_01001;
reg   [31:0] grp_fu_3170_p0;
reg   [31:0] grp_fu_3170_p1;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage7;
reg   [31:0] grp_fu_3174_p0;
reg   [31:0] grp_fu_3174_p1;
reg   [31:0] grp_fu_3178_p0;
reg   [31:0] grp_fu_3178_p1;
reg   [31:0] grp_fu_3182_p0;
reg   [31:0] grp_fu_3182_p1;
reg   [31:0] grp_fu_3186_p0;
reg   [31:0] grp_fu_3186_p1;
reg   [31:0] grp_fu_3190_p0;
reg   [31:0] grp_fu_3190_p1;
reg   [31:0] grp_fu_3194_p0;
reg   [31:0] grp_fu_3194_p1;
reg   [31:0] grp_fu_3198_p0;
reg   [31:0] grp_fu_3198_p1;
reg   [31:0] grp_fu_3203_p0;
reg   [31:0] grp_fu_3203_p1;
reg   [31:0] grp_fu_3207_p0;
reg   [31:0] grp_fu_3207_p1;
reg   [31:0] grp_fu_3211_p0;
reg   [31:0] grp_fu_3211_p1;
reg   [31:0] grp_fu_3215_p0;
reg   [31:0] grp_fu_3215_p1;
reg   [31:0] grp_fu_3219_p0;
reg   [31:0] grp_fu_3219_p1;
wire   [31:0] bitcast_ln112_fu_3691_p1;
wire   [31:0] bitcast_ln112_1_fu_3708_p1;
wire   [7:0] tmp_48_fu_3694_p4;
wire   [22:0] trunc_ln112_fu_3704_p1;
wire   [7:0] tmp_49_fu_3711_p4;
wire   [22:0] trunc_ln112_1_fu_3721_p1;
wire   [31:0] bitcast_ln112_2_fu_3959_p1;
wire   [31:0] bitcast_ln112_3_fu_3976_p1;
wire   [7:0] tmp_53_fu_3962_p4;
wire   [22:0] trunc_ln112_2_fu_3972_p1;
wire   [7:0] tmp_54_fu_3979_p4;
wire   [22:0] trunc_ln112_3_fu_3989_p1;
wire   [31:0] bitcast_ln112_4_fu_4017_p1;
wire   [31:0] bitcast_ln112_5_fu_4034_p1;
wire   [7:0] tmp_58_fu_4020_p4;
wire   [22:0] trunc_ln112_4_fu_4030_p1;
wire   [7:0] tmp_59_fu_4037_p4;
wire   [22:0] trunc_ln112_5_fu_4047_p1;
wire   [0:0] or_ln112_1_fu_4247_p2;
wire   [0:0] and_ln112_fu_4251_p2;
wire   [0:0] or_ln112_fu_4243_p2;
wire   [0:0] or_ln112_3_fu_4266_p2;
wire   [0:0] and_ln112_2_fu_4270_p2;
wire   [0:0] or_ln112_2_fu_4262_p2;
wire   [0:0] or_ln112_4_fu_4281_p2;
wire   [0:0] or_ln112_5_fu_4285_p2;
wire   [0:0] and_ln112_4_fu_4289_p2;
wire   [31:0] bitcast_ln112_6_fu_4300_p1;
wire   [31:0] bitcast_ln112_7_fu_4317_p1;
wire   [7:0] tmp_63_fu_4303_p4;
wire   [22:0] trunc_ln112_6_fu_4313_p1;
wire   [7:0] tmp_64_fu_4320_p4;
wire   [22:0] trunc_ln112_7_fu_4330_p1;
wire   [0:0] or_ln112_6_fu_4442_p2;
wire   [0:0] or_ln112_7_fu_4446_p2;
wire   [0:0] and_ln112_6_fu_4450_p2;
wire   [31:0] bitcast_ln112_8_fu_4461_p1;
wire   [31:0] bitcast_ln112_9_fu_4478_p1;
wire   [7:0] tmp_68_fu_4464_p4;
wire   [22:0] trunc_ln112_8_fu_4474_p1;
wire   [0:0] icmp_ln112_17_fu_4501_p2;
wire   [0:0] icmp_ln112_16_fu_4495_p2;
wire   [7:0] tmp_69_fu_4481_p4;
wire   [22:0] trunc_ln112_9_fu_4491_p1;
wire   [0:0] icmp_ln112_19_fu_4519_p2;
wire   [0:0] icmp_ln112_18_fu_4513_p2;
wire   [0:0] or_ln112_8_fu_4507_p2;
wire   [0:0] or_ln112_9_fu_4525_p2;
wire   [0:0] and_ln112_8_fu_4531_p2;
wire   [31:0] bitcast_ln112_10_fu_4584_p1;
wire   [31:0] bitcast_ln112_11_fu_4601_p1;
wire   [7:0] tmp_73_fu_4587_p4;
wire   [22:0] trunc_ln112_10_fu_4597_p1;
wire   [0:0] icmp_ln112_21_fu_4624_p2;
wire   [0:0] icmp_ln112_20_fu_4618_p2;
wire   [7:0] tmp_74_fu_4604_p4;
wire   [22:0] trunc_ln112_11_fu_4614_p1;
wire   [0:0] icmp_ln112_23_fu_4642_p2;
wire   [0:0] icmp_ln112_22_fu_4636_p2;
wire   [0:0] or_ln112_10_fu_4630_p2;
wire   [0:0] or_ln112_11_fu_4648_p2;
wire   [0:0] and_ln112_10_fu_4654_p2;
wire   [31:0] bitcast_ln112_12_fu_4707_p1;
wire   [31:0] bitcast_ln112_13_fu_4724_p1;
wire   [7:0] tmp_78_fu_4710_p4;
wire   [22:0] trunc_ln112_12_fu_4720_p1;
wire   [0:0] icmp_ln112_25_fu_4747_p2;
wire   [0:0] icmp_ln112_24_fu_4741_p2;
wire   [7:0] tmp_79_fu_4727_p4;
wire   [22:0] trunc_ln112_13_fu_4737_p1;
wire   [0:0] icmp_ln112_27_fu_4765_p2;
wire   [0:0] icmp_ln112_26_fu_4759_p2;
wire   [0:0] or_ln112_12_fu_4753_p2;
wire   [0:0] or_ln112_13_fu_4771_p2;
wire   [0:0] and_ln112_12_fu_4777_p2;
wire   [31:0] bitcast_ln112_14_fu_4872_p1;
wire   [31:0] bitcast_ln112_15_fu_4889_p1;
wire   [7:0] tmp_83_fu_4875_p4;
wire   [22:0] trunc_ln112_14_fu_4885_p1;
wire   [0:0] icmp_ln112_29_fu_4912_p2;
wire   [0:0] icmp_ln112_28_fu_4906_p2;
wire   [7:0] tmp_84_fu_4892_p4;
wire   [22:0] trunc_ln112_15_fu_4902_p1;
wire   [0:0] icmp_ln112_31_fu_4930_p2;
wire   [0:0] icmp_ln112_30_fu_4924_p2;
wire   [0:0] or_ln112_14_fu_4918_p2;
wire   [0:0] or_ln112_15_fu_4936_p2;
wire   [0:0] and_ln112_14_fu_4942_p2;
wire   [31:0] k_real_fu_5005_p2;
wire   [31:0] k_real_2_fu_5010_p2;
wire   [31:0] i_real_fu_5000_p2;
wire   [31:0] bitcast_ln116_fu_5060_p1;
wire   [7:0] tmp_51_fu_5063_p4;
wire   [22:0] trunc_ln116_fu_5073_p1;
wire   [0:0] icmp_ln116_1_fu_5083_p2;
wire   [0:0] icmp_ln116_fu_5077_p2;
wire   [0:0] or_ln116_fu_5089_p2;
wire   [0:0] and_ln116_fu_5095_p2;
wire   [31:0] bitcast_ln116_1_fu_5114_p1;
wire   [7:0] tmp_56_fu_5117_p4;
wire   [22:0] trunc_ln116_1_fu_5127_p1;
wire   [0:0] icmp_ln116_3_fu_5137_p2;
wire   [0:0] icmp_ln116_2_fu_5131_p2;
wire   [0:0] or_ln116_1_fu_5143_p2;
wire   [0:0] and_ln116_1_fu_5149_p2;
wire   [31:0] bitcast_ln116_2_fu_5161_p1;
wire   [7:0] tmp_61_fu_5164_p4;
wire   [22:0] trunc_ln116_2_fu_5174_p1;
wire   [0:0] icmp_ln116_5_fu_5184_p2;
wire   [0:0] icmp_ln116_4_fu_5178_p2;
wire   [0:0] or_ln116_2_fu_5190_p2;
wire   [0:0] and_ln116_2_fu_5196_p2;
wire   [31:0] bitcast_ln116_3_fu_5234_p1;
wire   [7:0] tmp_66_fu_5237_p4;
wire   [22:0] trunc_ln116_3_fu_5247_p1;
wire   [0:0] icmp_ln116_7_fu_5257_p2;
wire   [0:0] icmp_ln116_6_fu_5251_p2;
wire   [0:0] or_ln116_3_fu_5263_p2;
wire   [0:0] and_ln116_3_fu_5269_p2;
wire   [31:0] bitcast_ln116_4_fu_5281_p1;
wire   [7:0] tmp_71_fu_5284_p4;
wire   [22:0] trunc_ln116_4_fu_5294_p1;
wire   [0:0] icmp_ln116_9_fu_5304_p2;
wire   [0:0] icmp_ln116_8_fu_5298_p2;
wire   [0:0] or_ln116_4_fu_5310_p2;
wire   [0:0] and_ln116_4_fu_5316_p2;
wire   [31:0] bitcast_ln116_5_fu_5328_p1;
wire   [7:0] tmp_76_fu_5331_p4;
wire   [22:0] trunc_ln116_5_fu_5341_p1;
wire   [0:0] icmp_ln116_11_fu_5351_p2;
wire   [0:0] icmp_ln116_10_fu_5345_p2;
wire   [0:0] or_ln116_5_fu_5357_p2;
wire   [0:0] and_ln116_5_fu_5363_p2;
wire   [31:0] bitcast_ln116_6_fu_5375_p1;
wire   [7:0] tmp_81_fu_5378_p4;
wire   [22:0] trunc_ln116_6_fu_5388_p1;
wire   [0:0] icmp_ln116_13_fu_5398_p2;
wire   [0:0] icmp_ln116_12_fu_5392_p2;
wire   [0:0] or_ln116_6_fu_5404_p2;
wire   [0:0] and_ln116_6_fu_5410_p2;
wire   [31:0] bitcast_ln116_7_fu_5422_p1;
wire   [7:0] tmp_86_fu_5425_p4;
wire   [22:0] trunc_ln116_7_fu_5435_p1;
wire   [0:0] icmp_ln116_15_fu_5445_p2;
wire   [0:0] icmp_ln116_14_fu_5439_p2;
wire   [0:0] or_ln116_7_fu_5451_p2;
wire   [0:0] and_ln116_7_fu_5457_p2;
wire   [31:0] bitcast_ln122_fu_5469_p1;
wire   [7:0] tmp_88_fu_5472_p4;
wire   [22:0] trunc_ln122_fu_5482_p1;
wire   [0:0] icmp_ln122_1_fu_5492_p2;
wire   [0:0] icmp_ln122_fu_5486_p2;
wire   [0:0] or_ln122_fu_5498_p2;
wire   [31:0] bitcast_ln126_fu_5509_p1;
wire   [31:0] xor_ln126_fu_5513_p2;
wire   [0:0] and_ln122_fu_5504_p2;
wire   [31:0] sc_fu_5519_p1;
wire   [31:0] bitcast_ln130_fu_5543_p1;
wire   [31:0] bitcast_ln130_1_fu_5560_p1;
wire   [7:0] tmp_90_fu_5546_p4;
wire   [22:0] trunc_ln130_fu_5556_p1;
wire   [0:0] icmp_ln130_2_fu_5583_p2;
wire   [0:0] icmp_ln130_1_fu_5577_p2;
wire   [7:0] tmp_91_fu_5563_p4;
wire   [22:0] trunc_ln130_1_fu_5573_p1;
wire   [0:0] icmp_ln130_4_fu_5601_p2;
wire   [0:0] icmp_ln130_3_fu_5595_p2;
wire   [0:0] or_ln130_1_fu_5589_p2;
wire   [0:0] or_ln130_2_fu_5607_p2;
wire   [0:0] and_ln130_fu_5613_p2;
wire   [0:0] icmp_ln130_fu_5537_p2;
wire   [0:0] and_ln130_1_fu_5619_p2;
wire   [0:0] or_ln130_fu_5624_p2;
wire   [31:0] bitcast_ln139_fu_5692_p1;
wire   [31:0] bitcast_ln139_1_fu_5709_p1;
wire   [7:0] tmp_93_fu_5695_p4;
wire   [22:0] trunc_ln139_fu_5705_p1;
wire   [0:0] icmp_ln139_1_fu_5732_p2;
wire   [0:0] icmp_ln139_fu_5726_p2;
wire   [7:0] tmp_94_fu_5712_p4;
wire   [22:0] trunc_ln139_1_fu_5722_p1;
wire   [0:0] icmp_ln139_3_fu_5750_p2;
wire   [0:0] icmp_ln139_2_fu_5744_p2;
wire   [0:0] or_ln139_1_fu_5738_p2;
wire   [0:0] or_ln139_2_fu_5756_p2;
wire   [0:0] and_ln139_fu_5762_p2;
wire   [0:0] tmp_fu_5685_p3;
wire   [0:0] and_ln139_1_fu_5768_p2;
wire   [0:0] or_ln139_fu_5773_p2;
wire   [31:0] score_2_fu_5779_p3;
wire   [31:0] merge_2_5_fu_5785_p3;
wire   [31:0] merge_1_6_fu_5791_p3;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage5_00001;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage7_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
reg   [1:0] grp_fu_3178_opcode;
reg   [1:0] grp_fu_3182_opcode;
reg   [1:0] grp_fu_3186_opcode;
reg   [1:0] grp_fu_3190_opcode;
reg   [4:0] grp_fu_3219_opcode;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_idle_pp0_0to10;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg    ap_loop_exit_ready_pp0_iter11_reg;
reg   [7:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to11;
reg    ap_done_pending_pp0;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter11 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_8_full_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3174_p0),
    .din1(grp_fu_3174_p1),
    .ce(1'b1),
    .dout(grp_fu_3174_p2)
);

FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_8_full_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3178_p0),
    .din1(grp_fu_3178_p1),
    .opcode(grp_fu_3178_opcode),
    .ce(1'b1),
    .dout(grp_fu_3178_p2)
);

FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_8_full_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3182_p0),
    .din1(grp_fu_3182_p1),
    .opcode(grp_fu_3182_opcode),
    .ce(1'b1),
    .dout(grp_fu_3182_p2)
);

FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_8_full_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3186_p0),
    .din1(grp_fu_3186_p1),
    .opcode(grp_fu_3186_opcode),
    .ce(1'b1),
    .dout(grp_fu_3186_p2)
);

FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_8_full_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3190_p0),
    .din1(grp_fu_3190_p1),
    .opcode(grp_fu_3190_opcode),
    .ce(1'b1),
    .dout(grp_fu_3190_p2)
);

FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_8_full_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3194_p0),
    .din1(grp_fu_3194_p1),
    .ce(1'b1),
    .dout(grp_fu_3194_p2)
);

FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_8_full_dsp_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3198_p0),
    .din1(grp_fu_3198_p1),
    .ce(1'b1),
    .dout(grp_fu_3198_p2)
);

FaultDetector_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3207_p0),
    .din1(grp_fu_3207_p1),
    .ce(1'b1),
    .dout(grp_fu_3207_p2)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U23(
    .din0(regions_center_0_0_0),
    .din1(regions_center_1_0_0),
    .din2(regions_center_2_0_0),
    .din3(regions_center_3_0_0),
    .din4(regions_center_4_0_0),
    .din5(regions_center_5_0_0),
    .din6(regions_center_6_0_0),
    .din7(regions_center_7_0_0),
    .din8(regions_center_8_0_0),
    .din9(regions_center_9_0_0),
    .din10(regions_center_10_0_0),
    .din11(regions_center_11_0_0),
    .din12(regions_center_12_0_0),
    .din13(regions_center_13_0_0),
    .din14(regions_center_14_0_0),
    .din15(regions_center_15_0_0),
    .din16(trunc_ln104_fu_3331_p1),
    .dout(tmp_s_fu_3335_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U24(
    .din0(regions_center_0_0_0),
    .din1(regions_center_1_0_0),
    .din2(regions_center_2_0_0),
    .din3(regions_center_3_0_0),
    .din4(regions_center_4_0_0),
    .din5(regions_center_5_0_0),
    .din6(regions_center_6_0_0),
    .din7(regions_center_7_0_0),
    .din8(regions_center_8_0_0),
    .din9(regions_center_9_0_0),
    .din10(regions_center_10_0_0),
    .din11(regions_center_11_0_0),
    .din12(regions_center_12_0_0),
    .din13(regions_center_13_0_0),
    .din14(regions_center_14_0_0),
    .din15(regions_center_15_0_0),
    .din16(trunc_ln104_1_fu_3357_p1),
    .dout(tmp_5_fu_3361_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U25(
    .din0(regions_max_0_0_0),
    .din1(regions_max_1_0_0),
    .din2(regions_max_2_0_0),
    .din3(regions_max_3_0_0),
    .din4(regions_max_4_0_0),
    .din5(regions_max_5_0_0),
    .din6(regions_max_6_0_0),
    .din7(regions_max_7_0_0),
    .din8(regions_max_8_0_0),
    .din9(regions_max_9_0_0),
    .din10(regions_max_10_0_0),
    .din11(regions_max_11_0_0),
    .din12(regions_max_12_0_0),
    .din13(regions_max_13_0_0),
    .din14(regions_max_14_0_0),
    .din15(regions_max_15_0_0),
    .din16(trunc_ln104_fu_3331_p1),
    .dout(tmp_6_fu_3383_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U26(
    .din0(regions_min_0_0_0),
    .din1(regions_min_1_0_0),
    .din2(regions_min_2_0_0),
    .din3(regions_min_3_0_0),
    .din4(regions_min_4_0_0),
    .din5(regions_min_5_0_0),
    .din6(regions_min_6_0_0),
    .din7(regions_min_7_0_0),
    .din8(regions_min_8_0_0),
    .din9(regions_min_9_0_0),
    .din10(regions_min_10_0_0),
    .din11(regions_min_11_0_0),
    .din12(regions_min_12_0_0),
    .din13(regions_min_13_0_0),
    .din14(regions_min_14_0_0),
    .din15(regions_min_15_0_0),
    .din16(trunc_ln104_fu_3331_p1),
    .dout(tmp_7_fu_3405_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U27(
    .din0(regions_max_0_0_0),
    .din1(regions_max_1_0_0),
    .din2(regions_max_2_0_0),
    .din3(regions_max_3_0_0),
    .din4(regions_max_4_0_0),
    .din5(regions_max_5_0_0),
    .din6(regions_max_6_0_0),
    .din7(regions_max_7_0_0),
    .din8(regions_max_8_0_0),
    .din9(regions_max_9_0_0),
    .din10(regions_max_10_0_0),
    .din11(regions_max_11_0_0),
    .din12(regions_max_12_0_0),
    .din13(regions_max_13_0_0),
    .din14(regions_max_14_0_0),
    .din15(regions_max_15_0_0),
    .din16(trunc_ln104_1_fu_3357_p1),
    .dout(tmp_8_fu_3427_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U28(
    .din0(regions_min_0_0_0),
    .din1(regions_min_1_0_0),
    .din2(regions_min_2_0_0),
    .din3(regions_min_3_0_0),
    .din4(regions_min_4_0_0),
    .din5(regions_min_5_0_0),
    .din6(regions_min_6_0_0),
    .din7(regions_min_7_0_0),
    .din8(regions_min_8_0_0),
    .din9(regions_min_9_0_0),
    .din10(regions_min_10_0_0),
    .din11(regions_min_11_0_0),
    .din12(regions_min_12_0_0),
    .din13(regions_min_13_0_0),
    .din14(regions_min_14_0_0),
    .din15(regions_min_15_0_0),
    .din16(trunc_ln104_1_fu_3357_p1),
    .dout(tmp_9_fu_3449_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U29(
    .din0(regions_center_0_1_0),
    .din1(regions_center_1_1_0),
    .din2(regions_center_2_1_0),
    .din3(regions_center_3_1_0),
    .din4(regions_center_4_1_0),
    .din5(regions_center_5_1_0),
    .din6(regions_center_6_1_0),
    .din7(regions_center_7_1_0),
    .din8(regions_center_8_1_0),
    .din9(regions_center_9_1_0),
    .din10(regions_center_10_1_0),
    .din11(regions_center_11_1_0),
    .din12(regions_center_12_1_0),
    .din13(regions_center_13_1_0),
    .din14(regions_center_14_1_0),
    .din15(regions_center_15_1_0),
    .din16(trunc_ln104_fu_3331_p1),
    .dout(tmp_1_fu_3471_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U30(
    .din0(regions_center_0_1_0),
    .din1(regions_center_1_1_0),
    .din2(regions_center_2_1_0),
    .din3(regions_center_3_1_0),
    .din4(regions_center_4_1_0),
    .din5(regions_center_5_1_0),
    .din6(regions_center_6_1_0),
    .din7(regions_center_7_1_0),
    .din8(regions_center_8_1_0),
    .din9(regions_center_9_1_0),
    .din10(regions_center_10_1_0),
    .din11(regions_center_11_1_0),
    .din12(regions_center_12_1_0),
    .din13(regions_center_13_1_0),
    .din14(regions_center_14_1_0),
    .din15(regions_center_15_1_0),
    .din16(trunc_ln104_1_fu_3357_p1),
    .dout(tmp_2_fu_3493_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U31(
    .din0(regions_min_0_1_0),
    .din1(regions_min_1_1_0),
    .din2(regions_min_2_1_0),
    .din3(regions_min_3_1_0),
    .din4(regions_min_4_1_0),
    .din5(regions_min_5_1_0),
    .din6(regions_min_6_1_0),
    .din7(regions_min_7_1_0),
    .din8(regions_min_8_1_0),
    .din9(regions_min_9_1_0),
    .din10(regions_min_10_1_0),
    .din11(regions_min_11_1_0),
    .din12(regions_min_12_1_0),
    .din13(regions_min_13_1_0),
    .din14(regions_min_14_1_0),
    .din15(regions_min_15_1_0),
    .din16(trunc_ln104_fu_3331_p1),
    .dout(tmp_4_fu_3515_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U32(
    .din0(regions_min_0_1_0),
    .din1(regions_min_1_1_0),
    .din2(regions_min_2_1_0),
    .din3(regions_min_3_1_0),
    .din4(regions_min_4_1_0),
    .din5(regions_min_5_1_0),
    .din6(regions_min_6_1_0),
    .din7(regions_min_7_1_0),
    .din8(regions_min_8_1_0),
    .din9(regions_min_9_1_0),
    .din10(regions_min_10_1_0),
    .din11(regions_min_11_1_0),
    .din12(regions_min_12_1_0),
    .din13(regions_min_13_1_0),
    .din14(regions_min_14_1_0),
    .din15(regions_min_15_1_0),
    .din16(trunc_ln104_1_fu_3357_p1),
    .dout(tmp_11_fu_3537_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U33(
    .din0(regions_center_0_2_0),
    .din1(regions_center_1_2_0),
    .din2(regions_center_2_2_0),
    .din3(regions_center_3_2_0),
    .din4(regions_center_4_2_0),
    .din5(regions_center_5_2_0),
    .din6(regions_center_6_2_0),
    .din7(regions_center_7_2_0),
    .din8(regions_center_8_2_0),
    .din9(regions_center_9_2_0),
    .din10(regions_center_10_2_0),
    .din11(regions_center_11_2_0),
    .din12(regions_center_12_2_0),
    .din13(regions_center_13_2_0),
    .din14(regions_center_14_2_0),
    .din15(regions_center_15_2_0),
    .din16(trunc_ln104_fu_3331_p1),
    .dout(tmp_12_fu_3559_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U34(
    .din0(regions_center_0_2_0),
    .din1(regions_center_1_2_0),
    .din2(regions_center_2_2_0),
    .din3(regions_center_3_2_0),
    .din4(regions_center_4_2_0),
    .din5(regions_center_5_2_0),
    .din6(regions_center_6_2_0),
    .din7(regions_center_7_2_0),
    .din8(regions_center_8_2_0),
    .din9(regions_center_9_2_0),
    .din10(regions_center_10_2_0),
    .din11(regions_center_11_2_0),
    .din12(regions_center_12_2_0),
    .din13(regions_center_13_2_0),
    .din14(regions_center_14_2_0),
    .din15(regions_center_15_2_0),
    .din16(trunc_ln104_1_fu_3357_p1),
    .dout(tmp_13_fu_3581_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U35(
    .din0(regions_min_0_2_0),
    .din1(regions_min_1_2_0),
    .din2(regions_min_2_2_0),
    .din3(regions_min_3_2_0),
    .din4(regions_min_4_2_0),
    .din5(regions_min_5_2_0),
    .din6(regions_min_6_2_0),
    .din7(regions_min_7_2_0),
    .din8(regions_min_8_2_0),
    .din9(regions_min_9_2_0),
    .din10(regions_min_10_2_0),
    .din11(regions_min_11_2_0),
    .din12(regions_min_12_2_0),
    .din13(regions_min_13_2_0),
    .din14(regions_min_14_2_0),
    .din15(regions_min_15_2_0),
    .din16(trunc_ln104_fu_3331_p1),
    .dout(tmp_15_fu_3603_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U36(
    .din0(regions_min_0_2_0),
    .din1(regions_min_1_2_0),
    .din2(regions_min_2_2_0),
    .din3(regions_min_3_2_0),
    .din4(regions_min_4_2_0),
    .din5(regions_min_5_2_0),
    .din6(regions_min_6_2_0),
    .din7(regions_min_7_2_0),
    .din8(regions_min_8_2_0),
    .din9(regions_min_9_2_0),
    .din10(regions_min_10_2_0),
    .din11(regions_min_11_2_0),
    .din12(regions_min_12_2_0),
    .din13(regions_min_13_2_0),
    .din14(regions_min_14_2_0),
    .din15(regions_min_15_2_0),
    .din16(trunc_ln104_1_fu_3357_p1),
    .dout(tmp_17_fu_3625_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U37(
    .din0(regions_center_0_3_0),
    .din1(regions_center_1_3_0),
    .din2(regions_center_2_3_0),
    .din3(regions_center_3_3_0),
    .din4(regions_center_4_3_0),
    .din5(regions_center_5_3_0),
    .din6(regions_center_6_3_0),
    .din7(regions_center_7_3_0),
    .din8(regions_center_8_3_0),
    .din9(regions_center_9_3_0),
    .din10(regions_center_10_3_0),
    .din11(regions_center_11_3_0),
    .din12(regions_center_12_3_0),
    .din13(regions_center_13_3_0),
    .din14(regions_center_14_3_0),
    .din15(regions_center_15_3_0),
    .din16(trunc_ln104_fu_3331_p1),
    .dout(tmp_18_fu_3647_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U38(
    .din0(regions_center_0_3_0),
    .din1(regions_center_1_3_0),
    .din2(regions_center_2_3_0),
    .din3(regions_center_3_3_0),
    .din4(regions_center_4_3_0),
    .din5(regions_center_5_3_0),
    .din6(regions_center_6_3_0),
    .din7(regions_center_7_3_0),
    .din8(regions_center_8_3_0),
    .din9(regions_center_9_3_0),
    .din10(regions_center_10_3_0),
    .din11(regions_center_11_3_0),
    .din12(regions_center_12_3_0),
    .din13(regions_center_13_3_0),
    .din14(regions_center_14_3_0),
    .din15(regions_center_15_3_0),
    .din16(trunc_ln104_1_fu_3357_p1),
    .dout(tmp_19_fu_3669_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U39(
    .din0(regions_max_0_1_0),
    .din1(regions_max_1_1_0),
    .din2(regions_max_2_1_0),
    .din3(regions_max_3_1_0),
    .din4(regions_max_4_1_0),
    .din5(regions_max_5_1_0),
    .din6(regions_max_6_1_0),
    .din7(regions_max_7_1_0),
    .din8(regions_max_8_1_0),
    .din9(regions_max_9_1_0),
    .din10(regions_max_10_1_0),
    .din11(regions_max_11_1_0),
    .din12(regions_max_12_1_0),
    .din13(regions_max_13_1_0),
    .din14(regions_max_14_1_0),
    .din15(regions_max_15_1_0),
    .din16(trunc_ln104_reg_8202),
    .dout(tmp_3_fu_3749_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U40(
    .din0(regions_max_0_1_0),
    .din1(regions_max_1_1_0),
    .din2(regions_max_2_1_0),
    .din3(regions_max_3_1_0),
    .din4(regions_max_4_1_0),
    .din5(regions_max_5_1_0),
    .din6(regions_max_6_1_0),
    .din7(regions_max_7_1_0),
    .din8(regions_max_8_1_0),
    .din9(regions_max_9_1_0),
    .din10(regions_max_10_1_0),
    .din11(regions_max_11_1_0),
    .din12(regions_max_12_1_0),
    .din13(regions_max_13_1_0),
    .din14(regions_max_14_1_0),
    .din15(regions_max_15_1_0),
    .din16(trunc_ln104_1_reg_8227),
    .dout(tmp_10_fu_3770_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U41(
    .din0(regions_max_0_2_0),
    .din1(regions_max_1_2_0),
    .din2(regions_max_2_2_0),
    .din3(regions_max_3_2_0),
    .din4(regions_max_4_2_0),
    .din5(regions_max_5_2_0),
    .din6(regions_max_6_2_0),
    .din7(regions_max_7_2_0),
    .din8(regions_max_8_2_0),
    .din9(regions_max_9_2_0),
    .din10(regions_max_10_2_0),
    .din11(regions_max_11_2_0),
    .din12(regions_max_12_2_0),
    .din13(regions_max_13_2_0),
    .din14(regions_max_14_2_0),
    .din15(regions_max_15_2_0),
    .din16(trunc_ln104_reg_8202),
    .dout(tmp_14_fu_3791_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U42(
    .din0(regions_max_0_2_0),
    .din1(regions_max_1_2_0),
    .din2(regions_max_2_2_0),
    .din3(regions_max_3_2_0),
    .din4(regions_max_4_2_0),
    .din5(regions_max_5_2_0),
    .din6(regions_max_6_2_0),
    .din7(regions_max_7_2_0),
    .din8(regions_max_8_2_0),
    .din9(regions_max_9_2_0),
    .din10(regions_max_10_2_0),
    .din11(regions_max_11_2_0),
    .din12(regions_max_12_2_0),
    .din13(regions_max_13_2_0),
    .din14(regions_max_14_2_0),
    .din15(regions_max_15_2_0),
    .din16(trunc_ln104_1_reg_8227),
    .dout(tmp_16_fu_3812_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U43(
    .din0(regions_min_0_3_0),
    .din1(regions_min_1_3_0),
    .din2(regions_min_2_3_0),
    .din3(regions_min_3_3_0),
    .din4(regions_min_4_3_0),
    .din5(regions_min_5_3_0),
    .din6(regions_min_6_3_0),
    .din7(regions_min_7_3_0),
    .din8(regions_min_8_3_0),
    .din9(regions_min_9_3_0),
    .din10(regions_min_10_3_0),
    .din11(regions_min_11_3_0),
    .din12(regions_min_12_3_0),
    .din13(regions_min_13_3_0),
    .din14(regions_min_14_3_0),
    .din15(regions_min_15_3_0),
    .din16(trunc_ln104_reg_8202),
    .dout(tmp_21_fu_3833_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U44(
    .din0(regions_min_0_3_0),
    .din1(regions_min_1_3_0),
    .din2(regions_min_2_3_0),
    .din3(regions_min_3_3_0),
    .din4(regions_min_4_3_0),
    .din5(regions_min_5_3_0),
    .din6(regions_min_6_3_0),
    .din7(regions_min_7_3_0),
    .din8(regions_min_8_3_0),
    .din9(regions_min_9_3_0),
    .din10(regions_min_10_3_0),
    .din11(regions_min_11_3_0),
    .din12(regions_min_12_3_0),
    .din13(regions_min_13_3_0),
    .din14(regions_min_14_3_0),
    .din15(regions_min_15_3_0),
    .din16(trunc_ln104_1_reg_8227),
    .dout(tmp_23_fu_3854_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U45(
    .din0(regions_min_0_4_0),
    .din1(regions_min_1_4_0),
    .din2(regions_min_2_4_0),
    .din3(regions_min_3_4_0),
    .din4(regions_min_4_4_0),
    .din5(regions_min_5_4_0),
    .din6(regions_min_6_4_0),
    .din7(regions_min_7_4_0),
    .din8(regions_min_8_4_0),
    .din9(regions_min_9_4_0),
    .din10(regions_min_10_4_0),
    .din11(regions_min_11_4_0),
    .din12(regions_min_12_4_0),
    .din13(regions_min_13_4_0),
    .din14(regions_min_14_4_0),
    .din15(regions_min_15_4_0),
    .din16(trunc_ln104_reg_8202),
    .dout(tmp_27_fu_3875_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U46(
    .din0(regions_min_0_4_0),
    .din1(regions_min_1_4_0),
    .din2(regions_min_2_4_0),
    .din3(regions_min_3_4_0),
    .din4(regions_min_4_4_0),
    .din5(regions_min_5_4_0),
    .din6(regions_min_6_4_0),
    .din7(regions_min_7_4_0),
    .din8(regions_min_8_4_0),
    .din9(regions_min_9_4_0),
    .din10(regions_min_10_4_0),
    .din11(regions_min_11_4_0),
    .din12(regions_min_12_4_0),
    .din13(regions_min_13_4_0),
    .din14(regions_min_14_4_0),
    .din15(regions_min_15_4_0),
    .din16(trunc_ln104_1_reg_8227),
    .dout(tmp_29_fu_3896_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U47(
    .din0(regions_min_0_5_0),
    .din1(regions_min_1_5_0),
    .din2(regions_min_2_5_0),
    .din3(regions_min_3_5_0),
    .din4(regions_min_4_5_0),
    .din5(regions_min_5_5_0),
    .din6(regions_min_6_5_0),
    .din7(regions_min_7_5_0),
    .din8(regions_min_8_5_0),
    .din9(regions_min_9_5_0),
    .din10(regions_min_10_5_0),
    .din11(regions_min_11_5_0),
    .din12(regions_min_12_5_0),
    .din13(regions_min_13_5_0),
    .din14(regions_min_14_5_0),
    .din15(regions_min_15_5_0),
    .din16(trunc_ln104_reg_8202),
    .dout(tmp_33_fu_3917_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U48(
    .din0(regions_min_0_5_0),
    .din1(regions_min_1_5_0),
    .din2(regions_min_2_5_0),
    .din3(regions_min_3_5_0),
    .din4(regions_min_4_5_0),
    .din5(regions_min_5_5_0),
    .din6(regions_min_6_5_0),
    .din7(regions_min_7_5_0),
    .din8(regions_min_8_5_0),
    .din9(regions_min_9_5_0),
    .din10(regions_min_10_5_0),
    .din11(regions_min_11_5_0),
    .din12(regions_min_12_5_0),
    .din13(regions_min_13_5_0),
    .din14(regions_min_14_5_0),
    .din15(regions_min_15_5_0),
    .din16(trunc_ln104_1_reg_8227),
    .dout(tmp_35_fu_3938_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U49(
    .din0(regions_max_0_3_0),
    .din1(regions_max_1_3_0),
    .din2(regions_max_2_3_0),
    .din3(regions_max_3_3_0),
    .din4(regions_max_4_3_0),
    .din5(regions_max_5_3_0),
    .din6(regions_max_6_3_0),
    .din7(regions_max_7_3_0),
    .din8(regions_max_8_3_0),
    .din9(regions_max_9_3_0),
    .din10(regions_max_10_3_0),
    .din11(regions_max_11_3_0),
    .din12(regions_max_12_3_0),
    .din13(regions_max_13_3_0),
    .din14(regions_max_14_3_0),
    .din15(regions_max_15_3_0),
    .din16(trunc_ln104_reg_8202),
    .dout(tmp_20_fu_4075_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U50(
    .din0(regions_max_0_3_0),
    .din1(regions_max_1_3_0),
    .din2(regions_max_2_3_0),
    .din3(regions_max_3_3_0),
    .din4(regions_max_4_3_0),
    .din5(regions_max_5_3_0),
    .din6(regions_max_6_3_0),
    .din7(regions_max_7_3_0),
    .din8(regions_max_8_3_0),
    .din9(regions_max_9_3_0),
    .din10(regions_max_10_3_0),
    .din11(regions_max_11_3_0),
    .din12(regions_max_12_3_0),
    .din13(regions_max_13_3_0),
    .din14(regions_max_14_3_0),
    .din15(regions_max_15_3_0),
    .din16(trunc_ln104_1_reg_8227),
    .dout(tmp_22_fu_4096_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U51(
    .din0(regions_center_0_4_0),
    .din1(regions_center_1_4_0),
    .din2(regions_center_2_4_0),
    .din3(regions_center_3_4_0),
    .din4(regions_center_4_4_0),
    .din5(regions_center_5_4_0),
    .din6(regions_center_6_4_0),
    .din7(regions_center_7_4_0),
    .din8(regions_center_8_4_0),
    .din9(regions_center_9_4_0),
    .din10(regions_center_10_4_0),
    .din11(regions_center_11_4_0),
    .din12(regions_center_12_4_0),
    .din13(regions_center_13_4_0),
    .din14(regions_center_14_4_0),
    .din15(regions_center_15_4_0),
    .din16(trunc_ln104_reg_8202),
    .dout(tmp_24_fu_4117_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U52(
    .din0(regions_center_0_4_0),
    .din1(regions_center_1_4_0),
    .din2(regions_center_2_4_0),
    .din3(regions_center_3_4_0),
    .din4(regions_center_4_4_0),
    .din5(regions_center_5_4_0),
    .din6(regions_center_6_4_0),
    .din7(regions_center_7_4_0),
    .din8(regions_center_8_4_0),
    .din9(regions_center_9_4_0),
    .din10(regions_center_10_4_0),
    .din11(regions_center_11_4_0),
    .din12(regions_center_12_4_0),
    .din13(regions_center_13_4_0),
    .din14(regions_center_14_4_0),
    .din15(regions_center_15_4_0),
    .din16(trunc_ln104_1_reg_8227),
    .dout(tmp_25_fu_4138_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U53(
    .din0(regions_min_0_6_0),
    .din1(regions_min_1_6_0),
    .din2(regions_min_2_6_0),
    .din3(regions_min_3_6_0),
    .din4(regions_min_4_6_0),
    .din5(regions_min_5_6_0),
    .din6(regions_min_6_6_0),
    .din7(regions_min_7_6_0),
    .din8(regions_min_8_6_0),
    .din9(regions_min_9_6_0),
    .din10(regions_min_10_6_0),
    .din11(regions_min_11_6_0),
    .din12(regions_min_12_6_0),
    .din13(regions_min_13_6_0),
    .din14(regions_min_14_6_0),
    .din15(regions_min_15_6_0),
    .din16(trunc_ln104_reg_8202),
    .dout(tmp_39_fu_4159_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U54(
    .din0(regions_min_0_6_0),
    .din1(regions_min_1_6_0),
    .din2(regions_min_2_6_0),
    .din3(regions_min_3_6_0),
    .din4(regions_min_4_6_0),
    .din5(regions_min_5_6_0),
    .din6(regions_min_6_6_0),
    .din7(regions_min_7_6_0),
    .din8(regions_min_8_6_0),
    .din9(regions_min_9_6_0),
    .din10(regions_min_10_6_0),
    .din11(regions_min_11_6_0),
    .din12(regions_min_12_6_0),
    .din13(regions_min_13_6_0),
    .din14(regions_min_14_6_0),
    .din15(regions_min_15_6_0),
    .din16(trunc_ln104_1_reg_8227),
    .dout(tmp_41_fu_4180_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U55(
    .din0(regions_min_0_7_0),
    .din1(regions_min_1_7_0),
    .din2(regions_min_2_7_0),
    .din3(regions_min_3_7_0),
    .din4(regions_min_4_7_0),
    .din5(regions_min_5_7_0),
    .din6(regions_min_6_7_0),
    .din7(regions_min_7_7_0),
    .din8(regions_min_8_7_0),
    .din9(regions_min_9_7_0),
    .din10(regions_min_10_7_0),
    .din11(regions_min_11_7_0),
    .din12(regions_min_12_7_0),
    .din13(regions_min_13_7_0),
    .din14(regions_min_14_7_0),
    .din15(regions_min_15_7_0),
    .din16(trunc_ln104_reg_8202),
    .dout(tmp_45_fu_4201_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U56(
    .din0(regions_min_0_7_0),
    .din1(regions_min_1_7_0),
    .din2(regions_min_2_7_0),
    .din3(regions_min_3_7_0),
    .din4(regions_min_4_7_0),
    .din5(regions_min_5_7_0),
    .din6(regions_min_6_7_0),
    .din7(regions_min_7_7_0),
    .din8(regions_min_8_7_0),
    .din9(regions_min_9_7_0),
    .din10(regions_min_10_7_0),
    .din11(regions_min_11_7_0),
    .din12(regions_min_12_7_0),
    .din13(regions_min_13_7_0),
    .din14(regions_min_14_7_0),
    .din15(regions_min_15_7_0),
    .din16(trunc_ln104_1_reg_8227),
    .dout(tmp_47_fu_4222_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U57(
    .din0(regions_max_0_4_0),
    .din1(regions_max_1_4_0),
    .din2(regions_max_2_4_0),
    .din3(regions_max_3_4_0),
    .din4(regions_max_4_4_0),
    .din5(regions_max_5_4_0),
    .din6(regions_max_6_4_0),
    .din7(regions_max_7_4_0),
    .din8(regions_max_8_4_0),
    .din9(regions_max_9_4_0),
    .din10(regions_max_10_4_0),
    .din11(regions_max_11_4_0),
    .din12(regions_max_12_4_0),
    .din13(regions_max_13_4_0),
    .din14(regions_max_14_4_0),
    .din15(regions_max_15_4_0),
    .din16(trunc_ln104_reg_8202),
    .dout(tmp_26_fu_4358_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U58(
    .din0(regions_max_0_4_0),
    .din1(regions_max_1_4_0),
    .din2(regions_max_2_4_0),
    .din3(regions_max_3_4_0),
    .din4(regions_max_4_4_0),
    .din5(regions_max_5_4_0),
    .din6(regions_max_6_4_0),
    .din7(regions_max_7_4_0),
    .din8(regions_max_8_4_0),
    .din9(regions_max_9_4_0),
    .din10(regions_max_10_4_0),
    .din11(regions_max_11_4_0),
    .din12(regions_max_12_4_0),
    .din13(regions_max_13_4_0),
    .din14(regions_max_14_4_0),
    .din15(regions_max_15_4_0),
    .din16(trunc_ln104_1_reg_8227),
    .dout(tmp_28_fu_4379_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U59(
    .din0(regions_center_0_5_0),
    .din1(regions_center_1_5_0),
    .din2(regions_center_2_5_0),
    .din3(regions_center_3_5_0),
    .din4(regions_center_4_5_0),
    .din5(regions_center_5_5_0),
    .din6(regions_center_6_5_0),
    .din7(regions_center_7_5_0),
    .din8(regions_center_8_5_0),
    .din9(regions_center_9_5_0),
    .din10(regions_center_10_5_0),
    .din11(regions_center_11_5_0),
    .din12(regions_center_12_5_0),
    .din13(regions_center_13_5_0),
    .din14(regions_center_14_5_0),
    .din15(regions_center_15_5_0),
    .din16(trunc_ln104_reg_8202),
    .dout(tmp_30_fu_4400_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U60(
    .din0(regions_center_0_5_0),
    .din1(regions_center_1_5_0),
    .din2(regions_center_2_5_0),
    .din3(regions_center_3_5_0),
    .din4(regions_center_4_5_0),
    .din5(regions_center_5_5_0),
    .din6(regions_center_6_5_0),
    .din7(regions_center_7_5_0),
    .din8(regions_center_8_5_0),
    .din9(regions_center_9_5_0),
    .din10(regions_center_10_5_0),
    .din11(regions_center_11_5_0),
    .din12(regions_center_12_5_0),
    .din13(regions_center_13_5_0),
    .din14(regions_center_14_5_0),
    .din15(regions_center_15_5_0),
    .din16(trunc_ln104_1_reg_8227),
    .dout(tmp_31_fu_4421_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U61(
    .din0(regions_max_0_5_0),
    .din1(regions_max_1_5_0),
    .din2(regions_max_2_5_0),
    .din3(regions_max_3_5_0),
    .din4(regions_max_4_5_0),
    .din5(regions_max_5_5_0),
    .din6(regions_max_6_5_0),
    .din7(regions_max_7_5_0),
    .din8(regions_max_8_5_0),
    .din9(regions_max_9_5_0),
    .din10(regions_max_10_5_0),
    .din11(regions_max_11_5_0),
    .din12(regions_max_12_5_0),
    .din13(regions_max_13_5_0),
    .din14(regions_max_14_5_0),
    .din15(regions_max_15_5_0),
    .din16(trunc_ln104_reg_8202),
    .dout(tmp_32_fu_4542_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U62(
    .din0(regions_max_0_5_0),
    .din1(regions_max_1_5_0),
    .din2(regions_max_2_5_0),
    .din3(regions_max_3_5_0),
    .din4(regions_max_4_5_0),
    .din5(regions_max_5_5_0),
    .din6(regions_max_6_5_0),
    .din7(regions_max_7_5_0),
    .din8(regions_max_8_5_0),
    .din9(regions_max_9_5_0),
    .din10(regions_max_10_5_0),
    .din11(regions_max_11_5_0),
    .din12(regions_max_12_5_0),
    .din13(regions_max_13_5_0),
    .din14(regions_max_14_5_0),
    .din15(regions_max_15_5_0),
    .din16(trunc_ln104_1_reg_8227),
    .dout(tmp_34_fu_4563_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U63(
    .din0(regions_max_0_6_0),
    .din1(regions_max_1_6_0),
    .din2(regions_max_2_6_0),
    .din3(regions_max_3_6_0),
    .din4(regions_max_4_6_0),
    .din5(regions_max_5_6_0),
    .din6(regions_max_6_6_0),
    .din7(regions_max_7_6_0),
    .din8(regions_max_8_6_0),
    .din9(regions_max_9_6_0),
    .din10(regions_max_10_6_0),
    .din11(regions_max_11_6_0),
    .din12(regions_max_12_6_0),
    .din13(regions_max_13_6_0),
    .din14(regions_max_14_6_0),
    .din15(regions_max_15_6_0),
    .din16(trunc_ln104_reg_8202),
    .dout(tmp_38_fu_4665_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U64(
    .din0(regions_max_0_6_0),
    .din1(regions_max_1_6_0),
    .din2(regions_max_2_6_0),
    .din3(regions_max_3_6_0),
    .din4(regions_max_4_6_0),
    .din5(regions_max_5_6_0),
    .din6(regions_max_6_6_0),
    .din7(regions_max_7_6_0),
    .din8(regions_max_8_6_0),
    .din9(regions_max_9_6_0),
    .din10(regions_max_10_6_0),
    .din11(regions_max_11_6_0),
    .din12(regions_max_12_6_0),
    .din13(regions_max_13_6_0),
    .din14(regions_max_14_6_0),
    .din15(regions_max_15_6_0),
    .din16(trunc_ln104_1_reg_8227),
    .dout(tmp_40_fu_4686_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U65(
    .din0(regions_center_0_6_0),
    .din1(regions_center_1_6_0),
    .din2(regions_center_2_6_0),
    .din3(regions_center_3_6_0),
    .din4(regions_center_4_6_0),
    .din5(regions_center_5_6_0),
    .din6(regions_center_6_6_0),
    .din7(regions_center_7_6_0),
    .din8(regions_center_8_6_0),
    .din9(regions_center_9_6_0),
    .din10(regions_center_10_6_0),
    .din11(regions_center_11_6_0),
    .din12(regions_center_12_6_0),
    .din13(regions_center_13_6_0),
    .din14(regions_center_14_6_0),
    .din15(regions_center_15_6_0),
    .din16(trunc_ln104_reg_8202),
    .dout(tmp_36_fu_4788_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U66(
    .din0(regions_center_0_6_0),
    .din1(regions_center_1_6_0),
    .din2(regions_center_2_6_0),
    .din3(regions_center_3_6_0),
    .din4(regions_center_4_6_0),
    .din5(regions_center_5_6_0),
    .din6(regions_center_6_6_0),
    .din7(regions_center_7_6_0),
    .din8(regions_center_8_6_0),
    .din9(regions_center_9_6_0),
    .din10(regions_center_10_6_0),
    .din11(regions_center_11_6_0),
    .din12(regions_center_12_6_0),
    .din13(regions_center_13_6_0),
    .din14(regions_center_14_6_0),
    .din15(regions_center_15_6_0),
    .din16(trunc_ln104_1_reg_8227),
    .dout(tmp_37_fu_4809_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U67(
    .din0(regions_max_0_7_0),
    .din1(regions_max_1_7_0),
    .din2(regions_max_2_7_0),
    .din3(regions_max_3_7_0),
    .din4(regions_max_4_7_0),
    .din5(regions_max_5_7_0),
    .din6(regions_max_6_7_0),
    .din7(regions_max_7_7_0),
    .din8(regions_max_8_7_0),
    .din9(regions_max_9_7_0),
    .din10(regions_max_10_7_0),
    .din11(regions_max_11_7_0),
    .din12(regions_max_12_7_0),
    .din13(regions_max_13_7_0),
    .din14(regions_max_14_7_0),
    .din15(regions_max_15_7_0),
    .din16(trunc_ln104_reg_8202),
    .dout(tmp_44_fu_4830_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U68(
    .din0(regions_max_0_7_0),
    .din1(regions_max_1_7_0),
    .din2(regions_max_2_7_0),
    .din3(regions_max_3_7_0),
    .din4(regions_max_4_7_0),
    .din5(regions_max_5_7_0),
    .din6(regions_max_6_7_0),
    .din7(regions_max_7_7_0),
    .din8(regions_max_8_7_0),
    .din9(regions_max_9_7_0),
    .din10(regions_max_10_7_0),
    .din11(regions_max_11_7_0),
    .din12(regions_max_12_7_0),
    .din13(regions_max_13_7_0),
    .din14(regions_max_14_7_0),
    .din15(regions_max_15_7_0),
    .din16(trunc_ln104_1_reg_8227),
    .dout(tmp_46_fu_4851_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U69(
    .din0(regions_center_0_7_0),
    .din1(regions_center_1_7_0),
    .din2(regions_center_2_7_0),
    .din3(regions_center_3_7_0),
    .din4(regions_center_4_7_0),
    .din5(regions_center_5_7_0),
    .din6(regions_center_6_7_0),
    .din7(regions_center_7_7_0),
    .din8(regions_center_8_7_0),
    .din9(regions_center_9_7_0),
    .din10(regions_center_10_7_0),
    .din11(regions_center_11_7_0),
    .din12(regions_center_12_7_0),
    .din13(regions_center_13_7_0),
    .din14(regions_center_14_7_0),
    .din15(regions_center_15_7_0),
    .din16(trunc_ln104_reg_8202),
    .dout(tmp_42_fu_4953_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U70(
    .din0(regions_center_0_7_0),
    .din1(regions_center_1_7_0),
    .din2(regions_center_2_7_0),
    .din3(regions_center_3_7_0),
    .din4(regions_center_4_7_0),
    .din5(regions_center_5_7_0),
    .din6(regions_center_6_7_0),
    .din7(regions_center_7_7_0),
    .din8(regions_center_8_7_0),
    .din9(regions_center_9_7_0),
    .din10(regions_center_10_7_0),
    .din11(regions_center_11_7_0),
    .din12(regions_center_12_7_0),
    .din13(regions_center_13_7_0),
    .din14(regions_center_14_7_0),
    .din15(regions_center_15_7_0),
    .din16(trunc_ln104_1_reg_8227),
    .dout(tmp_43_fu_4974_p18)
);

FaultDetector_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage7),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter11 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter11_stage2) | ((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
            ap_enable_reg_pp0_iter11 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter11 <= ap_enable_reg_pp0_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage2))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage2)) | ((1'b0 == ap_block_pp0_stage3_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter11_reg <= ap_loop_exit_ready_pp0_iter10_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage2))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage2))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage2))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage2))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage2))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage2))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage2))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_real_4_fu_840 <= 32'd1;
        end else if (((icmp_ln1027_reg_8198 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            k_real_4_fu_840 <= k_real_3_fu_5015_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            merge_1_1_fu_836 <= 32'd0;
        end else if (((icmp_ln1027_reg_8198 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            merge_1_1_fu_836 <= i_real_2_fu_5023_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        merge_1_fu_824 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln1027_reg_8198_pp0_iter11_reg == 1'd1))) begin
        merge_1_fu_824 <= merge_1_7_fu_5809_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        merge_2_fu_828 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln1027_reg_8198_pp0_iter11_reg == 1'd1))) begin
        merge_2_fu_828 <= merge_2_6_fu_5803_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        score_fu_832 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln1027_reg_8198_pp0_iter11_reg == 1'd1))) begin
        score_fu_832 <= score_3_fu_5797_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_other_fu_848 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_8198_pp0_iter10_reg == 1'd1))) begin
        tmp_other_fu_848 <= tmp_other_3_fu_5647_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_score_fu_844 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_8198_pp0_iter10_reg == 1'd1))) begin
        tmp_score_fu_844 <= tmp_score_3_fu_5653_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        and_ln112_11_reg_8641 <= and_ln112_11_fu_4660_p2;
        and_ln112_7_reg_8621 <= and_ln112_7_fu_4456_p2;
        and_ln112_9_reg_8626 <= and_ln112_9_fu_4537_p2;
        tmp_32_reg_8631 <= tmp_32_fu_4542_p18;
        tmp_34_reg_8636 <= tmp_34_fu_4563_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        and_ln112_11_reg_8641_pp0_iter1_reg <= and_ln112_11_reg_8641;
        and_ln112_11_reg_8641_pp0_iter2_reg <= and_ln112_11_reg_8641_pp0_iter1_reg;
        and_ln112_7_reg_8621_pp0_iter1_reg <= and_ln112_7_reg_8621;
        and_ln112_7_reg_8621_pp0_iter2_reg <= and_ln112_7_reg_8621_pp0_iter1_reg;
        and_ln112_9_reg_8626_pp0_iter1_reg <= and_ln112_9_reg_8626;
        and_ln112_9_reg_8626_pp0_iter2_reg <= and_ln112_9_reg_8626_pp0_iter1_reg;
        mul_1_reg_8844_pp0_iter2_reg <= mul_1_reg_8844;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        and_ln112_13_reg_8666 <= and_ln112_13_fu_4783_p2;
        tmp_38_reg_8656 <= tmp_38_fu_4665_p18;
        tmp_40_reg_8661 <= tmp_40_fu_4686_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        and_ln112_13_reg_8666_pp0_iter1_reg <= and_ln112_13_reg_8666;
        and_ln112_13_reg_8666_pp0_iter2_reg <= and_ln112_13_reg_8666_pp0_iter1_reg;
        mul_2_reg_8849_pp0_iter2_reg <= mul_2_reg_8849;
        mul_3_reg_8854_pp0_iter2_reg <= mul_3_reg_8854;
        mul_3_reg_8854_pp0_iter3_reg <= mul_3_reg_8854_pp0_iter2_reg;
        ov_27_reg_9042_pp0_iter4_reg <= ov_27_reg_9042;
        ov_27_reg_9042_pp0_iter5_reg <= ov_27_reg_9042_pp0_iter4_reg;
        tmp_89_reg_9104_pp0_iter8_reg <= tmp_89_reg_9104;
        tmp_89_reg_9104_pp0_iter9_reg <= tmp_89_reg_9104_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        and_ln112_15_reg_8691 <= and_ln112_15_fu_4948_p2;
        tmp_36_reg_8671 <= tmp_36_fu_4788_p18;
        tmp_37_reg_8676 <= tmp_37_fu_4809_p18;
        tmp_44_reg_8681 <= tmp_44_fu_4830_p18;
        tmp_46_reg_8686 <= tmp_46_fu_4851_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        and_ln112_15_reg_8691_pp0_iter1_reg <= and_ln112_15_reg_8691;
        and_ln112_15_reg_8691_pp0_iter2_reg <= and_ln112_15_reg_8691_pp0_iter1_reg;
        mul_4_reg_8859_pp0_iter2_reg <= mul_4_reg_8859;
        mul_4_reg_8859_pp0_iter3_reg <= mul_4_reg_8859_pp0_iter2_reg;
        mul_4_reg_8859_pp0_iter4_reg <= mul_4_reg_8859_pp0_iter3_reg;
        ov_31_reg_9052_pp0_iter4_reg <= ov_31_reg_9052;
        ov_31_reg_9052_pp0_iter5_reg <= ov_31_reg_9052_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln112_1_reg_8551 <= and_ln112_1_fu_4256_p2;
        and_ln112_3_reg_8556 <= and_ln112_3_fu_4275_p2;
        and_ln112_5_reg_8561 <= and_ln112_5_fu_4295_p2;
        icmp_ln112_12_reg_8566 <= icmp_ln112_12_fu_4334_p2;
        icmp_ln112_13_reg_8571 <= icmp_ln112_13_fu_4340_p2;
        icmp_ln112_14_reg_8576 <= icmp_ln112_14_fu_4346_p2;
        icmp_ln112_15_reg_8581 <= icmp_ln112_15_fu_4352_p2;
        tmp_26_reg_8591 <= tmp_26_fu_4358_p18;
        tmp_28_reg_8596 <= tmp_28_fu_4379_p18;
        tmp_30_reg_8606 <= tmp_30_fu_4400_p18;
        tmp_31_reg_8611 <= tmp_31_fu_4421_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln112_1_reg_8551_pp0_iter1_reg <= and_ln112_1_reg_8551;
        and_ln112_3_reg_8556_pp0_iter1_reg <= and_ln112_3_reg_8556;
        and_ln112_3_reg_8556_pp0_iter2_reg <= and_ln112_3_reg_8556_pp0_iter1_reg;
        and_ln112_5_reg_8561_pp0_iter1_reg <= and_ln112_5_reg_8561;
        and_ln112_5_reg_8561_pp0_iter2_reg <= and_ln112_5_reg_8561_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        d1_1_reg_8753 <= grp_fu_24082_p_dout0;
        d1_2_reg_8773 <= grp_fu_3186_p2;
        d2_1_reg_8758 <= grp_fu_3174_p2;
        d2_2_reg_8778 <= grp_fu_3190_p2;
        sub75_1_reg_8763 <= grp_fu_3178_p2;
        sub75_2_reg_8783 <= grp_fu_3194_p2;
        sub87_1_reg_8768 <= grp_fu_3182_p2;
        sub87_2_reg_8788 <= grp_fu_3198_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        d1_3_reg_8793 <= grp_fu_24082_p_dout0;
        d2_3_reg_8798 <= grp_fu_3174_p2;
        sub75_3_reg_8803 <= grp_fu_3178_p2;
        sub87_3_reg_8808 <= grp_fu_3182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        d1_4_reg_8813 <= grp_fu_24082_p_dout0;
        d2_4_reg_8818 <= grp_fu_3174_p2;
        d_5_reg_8833 <= grp_fu_3186_p2;
        sub75_4_reg_8823 <= grp_fu_3178_p2;
        sub87_4_reg_8828 <= grp_fu_3182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        d1_reg_8721 <= grp_fu_3174_p2;
        d2_reg_8726 <= grp_fu_3178_p2;
        d_2_reg_8741 <= grp_fu_3194_p2;
        d_3_reg_8747 <= grp_fu_3198_p2;
        d_reg_8715 <= grp_fu_24082_p_dout0;
        sub2_reg_8736 <= grp_fu_3186_p2;
        sub_reg_8731 <= grp_fu_3182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        d_6_reg_8864 <= grp_fu_24082_p_dout0;
        mul_4_reg_8859 <= grp_fu_24088_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        d_7_reg_8875 <= grp_fu_24082_p_dout0;
        mul_5_reg_8870 <= grp_fu_24088_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln1027_reg_8198_pp0_iter3_reg == 1'd1))) begin
        distance_1_reg_9032 <= grp_fu_3182_p2;
        tmp_82_reg_9037 <= grp_fu_24103_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln1027_reg_8198_pp0_iter4_reg == 1'd1))) begin
        distance_2_reg_9067 <= grp_fu_3186_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln1027_reg_8198_pp0_iter5_reg == 1'd1))) begin
        distance_3_reg_9077 <= grp_fu_3190_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln1027_reg_8198_pp0_iter6_reg == 1'd1))) begin
        distance_4_reg_9092 <= grp_fu_3186_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_8198_pp0_iter7_reg == 1'd1))) begin
        distance_5_reg_9109 <= grp_fu_3182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_8198_pp0_iter8_reg == 1'd1))) begin
        distance_6_reg_9114 <= grp_fu_3186_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        distance_reg_8898 <= grp_fu_3178_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_real_3_reg_8183 <= merge_1_1_fu_836;
        i_real_3_reg_8183_pp0_iter10_reg <= i_real_3_reg_8183_pp0_iter9_reg;
        i_real_3_reg_8183_pp0_iter11_reg <= i_real_3_reg_8183_pp0_iter10_reg;
        i_real_3_reg_8183_pp0_iter1_reg <= i_real_3_reg_8183;
        i_real_3_reg_8183_pp0_iter2_reg <= i_real_3_reg_8183_pp0_iter1_reg;
        i_real_3_reg_8183_pp0_iter3_reg <= i_real_3_reg_8183_pp0_iter2_reg;
        i_real_3_reg_8183_pp0_iter4_reg <= i_real_3_reg_8183_pp0_iter3_reg;
        i_real_3_reg_8183_pp0_iter5_reg <= i_real_3_reg_8183_pp0_iter4_reg;
        i_real_3_reg_8183_pp0_iter6_reg <= i_real_3_reg_8183_pp0_iter5_reg;
        i_real_3_reg_8183_pp0_iter7_reg <= i_real_3_reg_8183_pp0_iter6_reg;
        i_real_3_reg_8183_pp0_iter8_reg <= i_real_3_reg_8183_pp0_iter7_reg;
        i_real_3_reg_8183_pp0_iter9_reg <= i_real_3_reg_8183_pp0_iter8_reg;
        icmp_ln1027_reg_8198 <= icmp_ln1027_fu_3325_p2;
        icmp_ln1027_reg_8198_pp0_iter10_reg <= icmp_ln1027_reg_8198_pp0_iter9_reg;
        icmp_ln1027_reg_8198_pp0_iter11_reg <= icmp_ln1027_reg_8198_pp0_iter10_reg;
        icmp_ln1027_reg_8198_pp0_iter1_reg <= icmp_ln1027_reg_8198;
        icmp_ln1027_reg_8198_pp0_iter2_reg <= icmp_ln1027_reg_8198_pp0_iter1_reg;
        icmp_ln1027_reg_8198_pp0_iter3_reg <= icmp_ln1027_reg_8198_pp0_iter2_reg;
        icmp_ln1027_reg_8198_pp0_iter4_reg <= icmp_ln1027_reg_8198_pp0_iter3_reg;
        icmp_ln1027_reg_8198_pp0_iter5_reg <= icmp_ln1027_reg_8198_pp0_iter4_reg;
        icmp_ln1027_reg_8198_pp0_iter6_reg <= icmp_ln1027_reg_8198_pp0_iter5_reg;
        icmp_ln1027_reg_8198_pp0_iter7_reg <= icmp_ln1027_reg_8198_pp0_iter6_reg;
        icmp_ln1027_reg_8198_pp0_iter8_reg <= icmp_ln1027_reg_8198_pp0_iter7_reg;
        icmp_ln1027_reg_8198_pp0_iter9_reg <= icmp_ln1027_reg_8198_pp0_iter8_reg;
        k_real_5_reg_8191 <= k_real_4_fu_840;
        k_real_5_reg_8191_pp0_iter10_reg <= k_real_5_reg_8191_pp0_iter9_reg;
        k_real_5_reg_8191_pp0_iter1_reg <= k_real_5_reg_8191;
        k_real_5_reg_8191_pp0_iter2_reg <= k_real_5_reg_8191_pp0_iter1_reg;
        k_real_5_reg_8191_pp0_iter3_reg <= k_real_5_reg_8191_pp0_iter2_reg;
        k_real_5_reg_8191_pp0_iter4_reg <= k_real_5_reg_8191_pp0_iter3_reg;
        k_real_5_reg_8191_pp0_iter5_reg <= k_real_5_reg_8191_pp0_iter4_reg;
        k_real_5_reg_8191_pp0_iter6_reg <= k_real_5_reg_8191_pp0_iter5_reg;
        k_real_5_reg_8191_pp0_iter7_reg <= k_real_5_reg_8191_pp0_iter6_reg;
        k_real_5_reg_8191_pp0_iter8_reg <= k_real_5_reg_8191_pp0_iter7_reg;
        k_real_5_reg_8191_pp0_iter9_reg <= k_real_5_reg_8191_pp0_iter8_reg;
        mul_7_reg_8990_pp0_iter4_reg <= mul_7_reg_8990;
        mul_7_reg_8990_pp0_iter5_reg <= mul_7_reg_8990_pp0_iter4_reg;
        mul_7_reg_8990_pp0_iter6_reg <= mul_7_reg_8990_pp0_iter5_reg;
        mul_7_reg_8990_pp0_iter7_reg <= mul_7_reg_8990_pp0_iter6_reg;
        mul_7_reg_8990_pp0_iter8_reg <= mul_7_reg_8990_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1019_reg_8706 <= icmp_ln1019_fu_4995_p2;
        tmp_42_reg_8696 <= tmp_42_fu_4953_p18;
        tmp_43_reg_8701 <= tmp_43_fu_4974_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1019_reg_8706_pp0_iter10_reg <= icmp_ln1019_reg_8706_pp0_iter9_reg;
        icmp_ln1019_reg_8706_pp0_iter11_reg <= icmp_ln1019_reg_8706_pp0_iter10_reg;
        icmp_ln1019_reg_8706_pp0_iter2_reg <= icmp_ln1019_reg_8706;
        icmp_ln1019_reg_8706_pp0_iter3_reg <= icmp_ln1019_reg_8706_pp0_iter2_reg;
        icmp_ln1019_reg_8706_pp0_iter4_reg <= icmp_ln1019_reg_8706_pp0_iter3_reg;
        icmp_ln1019_reg_8706_pp0_iter5_reg <= icmp_ln1019_reg_8706_pp0_iter4_reg;
        icmp_ln1019_reg_8706_pp0_iter6_reg <= icmp_ln1019_reg_8706_pp0_iter5_reg;
        icmp_ln1019_reg_8706_pp0_iter7_reg <= icmp_ln1019_reg_8706_pp0_iter6_reg;
        icmp_ln1019_reg_8706_pp0_iter8_reg <= icmp_ln1019_reg_8706_pp0_iter7_reg;
        icmp_ln1019_reg_8706_pp0_iter9_reg <= icmp_ln1019_reg_8706_pp0_iter8_reg;
        mul_5_reg_8870_pp0_iter3_reg <= mul_5_reg_8870;
        mul_5_reg_8870_pp0_iter4_reg <= mul_5_reg_8870_pp0_iter3_reg;
        mul_5_reg_8870_pp0_iter5_reg <= mul_5_reg_8870_pp0_iter4_reg;
        mul_5_reg_8870_pp0_iter6_reg <= mul_5_reg_8870_pp0_iter5_reg;
        mul_5_reg_8870_pp0_iter7_reg <= mul_5_reg_8870_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        icmp_ln112_10_reg_8480 <= icmp_ln112_10_fu_4063_p2;
        icmp_ln112_11_reg_8485 <= icmp_ln112_11_fu_4069_p2;
        icmp_ln112_4_reg_8445 <= icmp_ln112_4_fu_3993_p2;
        icmp_ln112_5_reg_8450 <= icmp_ln112_5_fu_3999_p2;
        icmp_ln112_6_reg_8455 <= icmp_ln112_6_fu_4005_p2;
        icmp_ln112_7_reg_8460 <= icmp_ln112_7_fu_4011_p2;
        icmp_ln112_8_reg_8470 <= icmp_ln112_8_fu_4051_p2;
        icmp_ln112_9_reg_8475 <= icmp_ln112_9_fu_4057_p2;
        tmp_20_reg_8495 <= tmp_20_fu_4075_p18;
        tmp_22_reg_8500 <= tmp_22_fu_4096_p18;
        tmp_24_reg_8505 <= tmp_24_fu_4117_p18;
        tmp_25_reg_8510 <= tmp_25_fu_4138_p18;
        tmp_39_reg_8515 <= tmp_39_fu_4159_p18;
        tmp_41_reg_8524 <= tmp_41_fu_4180_p18;
        tmp_45_reg_8533 <= tmp_45_fu_4201_p18;
        tmp_47_reg_8542 <= tmp_47_fu_4222_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        icmp_ln112_1_reg_8351 <= icmp_ln112_1_fu_3731_p2;
        icmp_ln112_2_reg_8356 <= icmp_ln112_2_fu_3737_p2;
        icmp_ln112_3_reg_8361 <= icmp_ln112_3_fu_3743_p2;
        icmp_ln112_reg_8346 <= icmp_ln112_fu_3725_p2;
        tmp_10_reg_8371 <= tmp_10_fu_3770_p18;
        tmp_14_reg_8376 <= tmp_14_fu_3791_p18;
        tmp_16_reg_8381 <= tmp_16_fu_3812_p18;
        tmp_21_reg_8386 <= tmp_21_fu_3833_p18;
        tmp_23_reg_8395 <= tmp_23_fu_3854_p18;
        tmp_27_reg_8404 <= tmp_27_fu_3875_p18;
        tmp_29_reg_8413 <= tmp_29_fu_3896_p18;
        tmp_33_reg_8422 <= tmp_33_fu_3917_p18;
        tmp_35_reg_8431 <= tmp_35_fu_3938_p18;
        tmp_3_reg_8366 <= tmp_3_fu_3749_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        merge_1_4_reg_9160 <= merge_1_fu_824;
        merge_2_1_reg_9167 <= merge_2_fu_828;
        overlap_7_reg_9097_pp0_iter8_reg <= overlap_7_reg_9097;
        overlap_7_reg_9097_pp0_iter9_reg <= overlap_7_reg_9097_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul_1_reg_8844 <= grp_fu_3207_p2;
        mul_reg_8839 <= grp_fu_24088_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul_2_reg_8849 <= grp_fu_24088_p_dout0;
        mul_3_reg_8854 <= grp_fu_3207_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_6_reg_8886 <= grp_fu_24088_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_6_reg_8886_pp0_iter3_reg <= mul_6_reg_8886;
        mul_6_reg_8886_pp0_iter4_reg <= mul_6_reg_8886_pp0_iter3_reg;
        mul_6_reg_8886_pp0_iter5_reg <= mul_6_reg_8886_pp0_iter4_reg;
        mul_6_reg_8886_pp0_iter6_reg <= mul_6_reg_8886_pp0_iter5_reg;
        mul_6_reg_8886_pp0_iter7_reg <= mul_6_reg_8886_pp0_iter6_reg;
        ov_19_reg_9017_pp0_iter4_reg <= ov_19_reg_9017;
        ov_23_reg_9022_pp0_iter4_reg <= ov_23_reg_9022;
        ov_23_reg_9022_pp0_iter5_reg <= ov_23_reg_9022_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_7_reg_8990 <= grp_fu_24088_p_dout0;
        tmp_67_reg_8978 <= grp_fu_24093_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ov_10_reg_8910 <= ov_10_fu_5053_p3;
        ov_6_reg_8903 <= ov_6_fu_5047_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ov_11_reg_8959 <= ov_11_fu_5201_p3;
        ov_18_reg_8964 <= ov_18_fu_5208_p3;
        ov_22_reg_8971 <= ov_22_fu_5213_p3;
        ov_7_reg_8954 <= ov_7_fu_5154_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ov_14_reg_8942 <= ov_14_fu_5107_p3;
        ov_32_reg_8927 <= ov_32_fu_5100_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_8198_pp0_iter3_reg == 1'd1))) begin
        ov_15_reg_9002 <= ov_15_fu_5274_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_9_reg_8626_pp0_iter2_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ov_16_reg_8922 <= grp_fu_3182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln112_9_reg_8626_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ov_17_reg_8949 <= grp_fu_3182_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln1027_reg_8198_pp0_iter3_reg == 1'd1))) begin
        ov_19_reg_9017 <= ov_19_fu_5321_p3;
        ov_23_reg_9022 <= ov_23_fu_5368_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ov_26_reg_8983 <= ov_26_fu_5220_p3;
        ov_30_reg_8995 <= ov_30_fu_5227_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln1027_reg_8198_pp0_iter3_reg == 1'd1))) begin
        ov_27_reg_9042 <= ov_27_fu_5415_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ov_2_reg_8891 <= ov_2_fu_5040_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln1027_reg_8198_pp0_iter3_reg == 1'd1))) begin
        ov_31_reg_9052 <= ov_31_fu_5462_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_3_reg_8556_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ov_4_reg_8881 <= grp_fu_3194_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln1027_reg_8198_pp0_iter3_reg == 1'd1))) begin
        overlap_1_reg_9027 <= grp_fu_24088_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_8198_pp0_iter3_reg == 1'd1))) begin
        overlap_2_reg_9057 <= grp_fu_3207_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln1027_reg_8198_pp0_iter4_reg == 1'd1))) begin
        overlap_3_reg_9062 <= grp_fu_3207_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_8198_pp0_iter4_reg == 1'd1))) begin
        overlap_4_reg_9072 <= grp_fu_3207_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln1027_reg_8198_pp0_iter5_reg == 1'd1))) begin
        overlap_5_reg_9082 <= grp_fu_3207_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln1027_reg_8198_pp0_iter6_reg == 1'd1))) begin
        overlap_6_reg_9087 <= grp_fu_3207_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_8198_pp0_iter7_reg == 1'd1))) begin
        overlap_7_reg_9097 <= grp_fu_24088_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln1027_reg_8198_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_3226 <= grp_fu_3190_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_11_reg_8641_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_11_reg_8641_pp0_iter2_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_3232 <= grp_fu_3186_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_11_reg_8641) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_11_reg_8641) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_3238 <= grp_fu_24082_p_dout0;
        reg_3243 <= grp_fu_3174_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_13_reg_8666) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_13_reg_8666) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_3248 <= grp_fu_24082_p_dout0;
        reg_3253 <= grp_fu_3174_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_15_reg_8691) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_15_reg_8691) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        reg_3258 <= grp_fu_3174_p2;
        reg_3263 <= grp_fu_3178_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_3_reg_8556_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'd0 == and_ln112_1_reg_8551_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_1_reg_8551_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        reg_3268 <= grp_fu_3190_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_5_reg_8561_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_5_reg_8561_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_3272 <= grp_fu_3194_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_15_reg_8691_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln112_7_reg_8621_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_7_reg_8621_pp0_iter2_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_15_reg_8691_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_3276 <= grp_fu_3178_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_13_reg_8666_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_13_reg_8666_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_3280 <= grp_fu_3174_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_8198_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sc_2_reg_9119 <= sc_2_fu_5523_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_8198_pp0_iter10_reg == 1'd1))) begin
        score_load_reg_9152 <= score_fu_832;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_fu_3325_p2 == 1'd1))) begin
        tmp_11_reg_8299 <= tmp_11_fu_3537_p18;
        tmp_12_reg_8308 <= tmp_12_fu_3559_p18;
        tmp_13_reg_8313 <= tmp_13_fu_3581_p18;
        tmp_15_reg_8318 <= tmp_15_fu_3603_p18;
        tmp_17_reg_8327 <= tmp_17_fu_3625_p18;
        tmp_18_reg_8336 <= tmp_18_fu_3647_p18;
        tmp_19_reg_8341 <= tmp_19_fu_3669_p18;
        tmp_1_reg_8280 <= tmp_1_fu_3471_p18;
        tmp_2_reg_8285 <= tmp_2_fu_3493_p18;
        tmp_4_reg_8290 <= tmp_4_fu_3515_p18;
        tmp_5_reg_8247 <= tmp_5_fu_3361_p18;
        tmp_6_reg_8252 <= tmp_6_fu_3383_p18;
        tmp_7_reg_8257 <= tmp_7_fu_3405_p18;
        tmp_8_reg_8266 <= tmp_8_fu_3427_p18;
        tmp_9_reg_8271 <= tmp_9_fu_3449_p18;
        tmp_s_reg_8222 <= tmp_s_fu_3335_p18;
        trunc_ln104_1_reg_8227 <= trunc_ln104_1_fu_3357_p1;
        trunc_ln104_reg_8202 <= trunc_ln104_fu_3331_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_50_reg_8440 <= grp_fu_24093_p_dout0;
        tmp_55_reg_8465 <= grp_fu_24098_p_dout0;
        tmp_60_reg_8490 <= grp_fu_24103_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_52_reg_8917 <= grp_fu_24093_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_57_reg_8932 <= grp_fu_24093_p_dout0;
        tmp_62_reg_8937 <= grp_fu_24098_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_65_reg_8586 <= grp_fu_24093_p_dout0;
        tmp_70_reg_8601 <= grp_fu_24098_p_dout0;
        tmp_75_reg_8616 <= grp_fu_24103_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_8198_pp0_iter3_reg == 1'd1))) begin
        tmp_72_reg_9007 <= grp_fu_24093_p_dout0;
        tmp_77_reg_9012 <= grp_fu_24098_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_80_reg_8646 <= grp_fu_24093_p_dout0;
        tmp_85_reg_8651 <= grp_fu_24098_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln1027_reg_8198_pp0_iter3_reg == 1'd1))) begin
        tmp_87_reg_9047 <= grp_fu_24098_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln1027_reg_8198_pp0_iter7_reg == 1'd1))) begin
        tmp_89_reg_9104 <= grp_fu_24103_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln1027_reg_8198_pp0_iter10_reg == 1'd1))) begin
        tmp_92_reg_9133 <= grp_fu_24103_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_8198_pp0_iter11_reg == 1'd1))) begin
        tmp_95_reg_9173 <= grp_fu_24103_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_8198_pp0_iter10_reg == 1'd1))) begin
        tmp_other_4_reg_9138 <= tmp_other_4_fu_5630_p3;
        tmp_score_4_reg_9144 <= tmp_score_4_fu_5637_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln1027_reg_8198_pp0_iter10_reg == 1'd1))) begin
        tmp_score_load_reg_9126 <= tmp_score_fu_844;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_8198 == 1'd0) & (1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_8198_pp0_iter11_reg == 1'd0))) begin
        ap_condition_exit_pp0_iter11_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter11_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter11_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to10 = 1'b1;
    end else begin
        ap_idle_pp0_0to10 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter11 == 1'b0) & (ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to11 = 1'b1;
    end else begin
        ap_idle_pp0_1to11 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3170_p0 = tmp_42_reg_8696;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3170_p0 = tmp_36_reg_8671;
    end else if (((1'd0 == and_ln112_13_reg_8666) & (icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3170_p0 = tmp_40_reg_8661;
    end else if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (1'd1 == and_ln112_13_reg_8666) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3170_p0 = tmp_38_reg_8656;
    end else if (((1'd0 == and_ln112_11_reg_8641) & (icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3170_p0 = tmp_34_reg_8636;
    end else if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage6) & (1'd1 == and_ln112_11_reg_8641) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3170_p0 = tmp_32_reg_8631;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3170_p0 = tmp_26_reg_8591;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3170_p0 = tmp_20_reg_8495;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3170_p0 = tmp_3_reg_8366;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3170_p0 = tmp_s_reg_8222;
    end else begin
        grp_fu_3170_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3170_p1 = tmp_43_reg_8701;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3170_p1 = tmp_37_reg_8676;
    end else if (((1'd0 == and_ln112_13_reg_8666) & (icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3170_p1 = tmp_41_reg_8524;
    end else if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (1'd1 == and_ln112_13_reg_8666) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3170_p1 = tmp_39_reg_8515;
    end else if (((1'd0 == and_ln112_11_reg_8641) & (icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3170_p1 = tmp_35_reg_8431;
    end else if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage6) & (1'd1 == and_ln112_11_reg_8641) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3170_p1 = tmp_33_reg_8422;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3170_p1 = tmp_27_reg_8404;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3170_p1 = tmp_21_reg_8386;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3170_p1 = tmp_4_reg_8290;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3170_p1 = tmp_5_reg_8247;
    end else begin
        grp_fu_3170_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_13_reg_8666_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_13_reg_8666_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_3174_p0 = reg_3248;
    end else if (((1'd0 == and_ln112_15_reg_8691) & (icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3174_p0 = tmp_46_reg_8686;
    end else if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'd1 == and_ln112_15_reg_8691) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3174_p0 = tmp_44_reg_8681;
    end else if (((1'd0 == and_ln112_13_reg_8666) & (icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3174_p0 = tmp_39_reg_8515;
    end else if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (1'd1 == and_ln112_13_reg_8666) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3174_p0 = tmp_41_reg_8524;
    end else if (((1'd0 == and_ln112_11_reg_8641) & (icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3174_p0 = tmp_33_reg_8422;
    end else if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage6) & (1'd1 == and_ln112_11_reg_8641) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3174_p0 = tmp_35_reg_8431;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3174_p0 = tmp_28_reg_8596;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3174_p0 = tmp_22_reg_8500;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3174_p0 = tmp_10_reg_8371;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3174_p0 = tmp_6_reg_8252;
    end else begin
        grp_fu_3174_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_13_reg_8666_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_13_reg_8666_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_3174_p1 = reg_3253;
    end else if (((1'd0 == and_ln112_15_reg_8691) & (icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3174_p1 = tmp_47_reg_8542;
    end else if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'd1 == and_ln112_15_reg_8691) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3174_p1 = tmp_45_reg_8533;
    end else if (((1'd0 == and_ln112_13_reg_8666) & (icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3174_p1 = tmp_41_reg_8524;
    end else if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (1'd1 == and_ln112_13_reg_8666) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3174_p1 = tmp_39_reg_8515;
    end else if (((1'd0 == and_ln112_11_reg_8641) & (icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3174_p1 = tmp_35_reg_8431;
    end else if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage6) & (1'd1 == and_ln112_11_reg_8641) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3174_p1 = tmp_33_reg_8422;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3174_p1 = tmp_29_reg_8413;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3174_p1 = tmp_23_reg_8395;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3174_p1 = tmp_11_reg_8299;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3174_p1 = tmp_7_reg_8257;
    end else begin
        grp_fu_3174_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_15_reg_8691) & (icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage0_00001) & (1'd1 == and_ln112_15_reg_8691) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_00001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_15_reg_8691_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage7_00001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_7_reg_8621_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'd0 == and_ln112_15_reg_8691_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage1_00001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'd0 == and_ln112_7_reg_8621_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage7_00001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        grp_fu_3178_opcode = 2'd1;
    end else if (((1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3178_opcode = 2'd0;
    end else begin
        grp_fu_3178_opcode = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_15_reg_8691_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_15_reg_8691_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_3178_p0 = reg_3258;
    end else if (((1'd0 == and_ln112_7_reg_8621_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3178_p0 = d2_3_reg_8798;
    end else if (((1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_7_reg_8621_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3178_p0 = d1_3_reg_8793;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3178_p0 = mul_reg_8839;
    end else if (((1'd0 == and_ln112_15_reg_8691) & (icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3178_p0 = tmp_45_reg_8533;
    end else if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'd1 == and_ln112_15_reg_8691) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3178_p0 = tmp_47_reg_8542;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3178_p0 = tmp_29_reg_8413;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3178_p0 = tmp_23_reg_8395;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3178_p0 = tmp_11_reg_8299;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3178_p0 = tmp_8_reg_8266;
    end else begin
        grp_fu_3178_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_15_reg_8691_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_15_reg_8691_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_3178_p1 = reg_3263;
    end else if (((1'd0 == and_ln112_7_reg_8621_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3178_p1 = sub87_3_reg_8808;
    end else if (((1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_7_reg_8621_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3178_p1 = sub75_3_reg_8803;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3178_p1 = 32'd0;
    end else if (((1'd0 == and_ln112_15_reg_8691) & (icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3178_p1 = tmp_47_reg_8542;
    end else if (((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'd1 == and_ln112_15_reg_8691) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3178_p1 = tmp_45_reg_8533;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3178_p1 = tmp_27_reg_8404;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3178_p1 = tmp_21_reg_8386;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3178_p1 = tmp_4_reg_8290;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3178_p1 = tmp_9_reg_8271;
    end else begin
        grp_fu_3178_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'd0 == and_ln112_9_reg_8626_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0_00001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_00001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_9_reg_8626_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        grp_fu_3182_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_8198_pp0_iter6_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_8198_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_3182_opcode = 2'd0;
    end else begin
        grp_fu_3182_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3182_p0 = distance_4_reg_9092;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3182_p0 = distance_reg_8898;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3182_p0 = d2_4_reg_8818;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3182_p0 = d1_4_reg_8813;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3182_p0 = tmp_27_reg_8404;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3182_p0 = tmp_21_reg_8386;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3182_p0 = tmp_4_reg_8290;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3182_p0 = tmp_9_reg_8271;
    end else begin
        grp_fu_3182_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3182_p1 = mul_5_reg_8870_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3182_p1 = mul_1_reg_8844_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3182_p1 = sub87_4_reg_8828;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3182_p1 = sub75_4_reg_8823;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3182_p1 = tmp_29_reg_8413;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3182_p1 = tmp_23_reg_8395;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3182_p1 = tmp_11_reg_8299;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3182_p1 = tmp_7_reg_8257;
    end else begin
        grp_fu_3182_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_00001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_11_reg_8641_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln112_11_reg_8641_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0_00001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_3186_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_8198_pp0_iter7_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage7_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln1027_reg_8198_pp0_iter5_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage6_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln1027_reg_8198_pp0_iter3_reg == 1'd1)))) begin
        grp_fu_3186_opcode = 2'd0;
    end else begin
        grp_fu_3186_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3186_p0 = distance_5_reg_9109;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3186_p0 = distance_3_reg_9077;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3186_p0 = distance_1_reg_9032;
    end else if ((((1'd0 == and_ln112_11_reg_8641_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_11_reg_8641_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_3186_p0 = reg_3238;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3186_p0 = tmp_30_reg_8606;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3186_p0 = tmp_24_reg_8505;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3186_p0 = tmp_14_reg_8376;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3186_p0 = tmp_7_reg_8257;
    end else begin
        grp_fu_3186_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3186_p1 = mul_6_reg_8886_pp0_iter7_reg;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3186_p1 = mul_4_reg_8859_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3186_p1 = mul_2_reg_8849_pp0_iter2_reg;
    end else if ((((1'd0 == and_ln112_11_reg_8641_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_11_reg_8641_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_3186_p1 = reg_3243;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3186_p1 = tmp_31_reg_8611;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3186_p1 = tmp_25_reg_8510;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3186_p1 = tmp_15_reg_8318;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3186_p1 = tmp_9_reg_8271;
    end else begin
        grp_fu_3186_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_3_reg_8556_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage5_00001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_00001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_1_reg_8551) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'd0 == and_ln112_1_reg_8551) & (1'b0 == ap_block_pp0_stage4_00001) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_3190_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_8198_pp0_iter8_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage6_00001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln1027_reg_8198_pp0_iter4_reg == 1'd1)))) begin
        grp_fu_3190_opcode = 2'd0;
    end else begin
        grp_fu_3190_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3190_p0 = distance_6_reg_9114;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3190_p0 = distance_2_reg_9067;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3190_p0 = d2_1_reg_8758;
    end else if (((1'd0 == and_ln112_1_reg_8551) & (1'b0 == ap_block_pp0_stage4) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3190_p0 = d2_reg_8726;
    end else if (((1'b0 == ap_block_pp0_stage4) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_1_reg_8551) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3190_p0 = d1_reg_8721;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3190_p0 = tmp_16_reg_8381;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3190_p0 = tmp_1_reg_8280;
    end else begin
        grp_fu_3190_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3190_p1 = mul_7_reg_8990_pp0_iter8_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3190_p1 = mul_3_reg_8854_pp0_iter3_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3190_p1 = sub87_1_reg_8768;
    end else if (((1'd0 == and_ln112_1_reg_8551) & (1'b0 == ap_block_pp0_stage4) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3190_p1 = sub2_reg_8736;
    end else if (((1'b0 == ap_block_pp0_stage4) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_1_reg_8551) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3190_p1 = sub_reg_8731;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3190_p1 = tmp_17_reg_8327;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3190_p1 = tmp_2_reg_8285;
    end else begin
        grp_fu_3190_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln112_5_reg_8561_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3194_p0 = d2_2_reg_8778;
    end else if (((1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_5_reg_8561_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3194_p0 = d1_2_reg_8773;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3194_p0 = d1_1_reg_8753;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3194_p0 = tmp_17_reg_8327;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3194_p0 = tmp_12_reg_8308;
    end else begin
        grp_fu_3194_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln112_5_reg_8561_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3194_p1 = sub87_2_reg_8788;
    end else if (((1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_8198_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_5_reg_8561_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3194_p1 = sub75_2_reg_8783;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3194_p1 = sub75_1_reg_8763;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3194_p1 = tmp_15_reg_8318;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3194_p1 = tmp_13_reg_8313;
    end else begin
        grp_fu_3194_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_3198_p0 = tmp_15_reg_8318;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_3198_p0 = tmp_18_reg_8336;
        end else begin
            grp_fu_3198_p0 = 'bx;
        end
    end else begin
        grp_fu_3198_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_3198_p1 = tmp_17_reg_8327;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_3198_p1 = tmp_19_reg_8341;
        end else begin
            grp_fu_3198_p1 = 'bx;
        end
    end else begin
        grp_fu_3198_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3203_p0 = overlap_6_reg_9087;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3203_p0 = ov_32_reg_8927;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3203_p0 = d_7_reg_8875;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3203_p0 = d_6_reg_8864;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3203_p0 = d_5_reg_8833;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3203_p0 = reg_3232;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3203_p0 = d_2_reg_8741;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3203_p0 = d_reg_8715;
    end else begin
        grp_fu_3203_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3203_p1 = ov_31_reg_9052_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3203_p1 = ov_7_reg_8954;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3203_p1 = d_7_reg_8875;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3203_p1 = d_6_reg_8864;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3203_p1 = d_5_reg_8833;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3203_p1 = reg_3232;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3203_p1 = d_2_reg_8741;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3203_p1 = d_reg_8715;
    end else begin
        grp_fu_3203_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3207_p0 = overlap_5_reg_9082;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3207_p0 = overlap_4_reg_9072;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3207_p0 = overlap_3_reg_9062;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3207_p0 = overlap_2_reg_9057;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3207_p0 = overlap_1_reg_9027;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3207_p0 = d_3_reg_8747;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3207_p0 = reg_3226;
    end else begin
        grp_fu_3207_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3207_p1 = ov_27_reg_9042_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3207_p1 = ov_23_reg_9022_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3207_p1 = ov_19_reg_9017_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3207_p1 = ov_15_reg_9002;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3207_p1 = ov_11_reg_8959;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3207_p1 = d_3_reg_8747;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3207_p1 = reg_3226;
    end else begin
        grp_fu_3207_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3211_p0 = ov_18_reg_8964;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3211_p0 = ov_14_reg_8942;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3211_p0 = ov_6_reg_8903;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3211_p0 = ov_2_reg_8891;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3211_p0 = tmp_39_reg_8515;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3211_p0 = tmp_21_reg_8386;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3211_p0 = tmp_7_reg_8257;
    end else begin
        grp_fu_3211_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_3211_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3211_p1 = tmp_41_reg_8524;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3211_p1 = tmp_23_reg_8395;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3211_p1 = tmp_9_reg_8271;
    end else begin
        grp_fu_3211_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3215_p0 = ov_30_reg_8995;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3215_p0 = ov_22_reg_8971;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3215_p0 = ov_10_reg_8910;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3215_p0 = tmp_45_reg_8533;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3215_p0 = tmp_27_reg_8404;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3215_p0 = tmp_4_reg_8290;
    end else begin
        grp_fu_3215_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_3215_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3215_p1 = tmp_47_reg_8542;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3215_p1 = tmp_29_reg_8413;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3215_p1 = tmp_11_reg_8299;
    end else begin
        grp_fu_3215_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_8198_pp0_iter10_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage6_00001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln1027_reg_8198_pp0_iter10_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln1027_reg_8198_pp0_iter7_reg == 1'd1)))) begin
        grp_fu_3219_opcode = 5'd2;
    end else if ((((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_8198 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln1027_reg_8198_pp0_iter3_reg == 1'd1)))) begin
        grp_fu_3219_opcode = 5'd4;
    end else begin
        grp_fu_3219_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3219_p0 = tmp_score_4_reg_9144;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3219_p0 = sc_2_reg_9119;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3219_p0 = overlap_7_reg_9097;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3219_p0 = ov_26_reg_8983;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3219_p0 = tmp_33_reg_8422;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3219_p0 = tmp_15_reg_8318;
    end else begin
        grp_fu_3219_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter11 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3219_p1 = score_fu_832;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3219_p1 = tmp_score_fu_844;
    end else if ((((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_3219_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3219_p1 = tmp_35_reg_8431;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3219_p1 = tmp_17_reg_8327;
    end else begin
        grp_fu_3219_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_8198_pp0_iter11_reg == 1'd0))) begin
        merge_1_out_ap_vld = 1'b1;
    end else begin
        merge_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_8198_pp0_iter11_reg == 1'd0))) begin
        merge_2_out_ap_vld = 1'b1;
    end else begin
        merge_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to11 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (((ap_idle_pp0_0to10 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter11_stage2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln112_10_fu_4654_p2 = (or_ln112_11_fu_4648_p2 & or_ln112_10_fu_4630_p2);

assign and_ln112_11_fu_4660_p2 = (tmp_75_reg_8616 & and_ln112_10_fu_4654_p2);

assign and_ln112_12_fu_4777_p2 = (or_ln112_13_fu_4771_p2 & or_ln112_12_fu_4753_p2);

assign and_ln112_13_fu_4783_p2 = (tmp_80_reg_8646 & and_ln112_12_fu_4777_p2);

assign and_ln112_14_fu_4942_p2 = (or_ln112_15_fu_4936_p2 & or_ln112_14_fu_4918_p2);

assign and_ln112_15_fu_4948_p2 = (tmp_85_reg_8651 & and_ln112_14_fu_4942_p2);

assign and_ln112_1_fu_4256_p2 = (or_ln112_fu_4243_p2 & and_ln112_fu_4251_p2);

assign and_ln112_2_fu_4270_p2 = (tmp_55_reg_8465 & or_ln112_3_fu_4266_p2);

assign and_ln112_3_fu_4275_p2 = (or_ln112_2_fu_4262_p2 & and_ln112_2_fu_4270_p2);

assign and_ln112_4_fu_4289_p2 = (or_ln112_5_fu_4285_p2 & or_ln112_4_fu_4281_p2);

assign and_ln112_5_fu_4295_p2 = (tmp_60_reg_8490 & and_ln112_4_fu_4289_p2);

assign and_ln112_6_fu_4450_p2 = (or_ln112_7_fu_4446_p2 & or_ln112_6_fu_4442_p2);

assign and_ln112_7_fu_4456_p2 = (tmp_65_reg_8586 & and_ln112_6_fu_4450_p2);

assign and_ln112_8_fu_4531_p2 = (or_ln112_9_fu_4525_p2 & or_ln112_8_fu_4507_p2);

assign and_ln112_9_fu_4537_p2 = (tmp_70_reg_8601 & and_ln112_8_fu_4531_p2);

assign and_ln112_fu_4251_p2 = (tmp_50_reg_8440 & or_ln112_1_fu_4247_p2);

assign and_ln116_1_fu_5149_p2 = (tmp_57_reg_8932 & or_ln116_1_fu_5143_p2);

assign and_ln116_2_fu_5196_p2 = (tmp_62_reg_8937 & or_ln116_2_fu_5190_p2);

assign and_ln116_3_fu_5269_p2 = (tmp_67_reg_8978 & or_ln116_3_fu_5263_p2);

assign and_ln116_4_fu_5316_p2 = (tmp_72_reg_9007 & or_ln116_4_fu_5310_p2);

assign and_ln116_5_fu_5363_p2 = (tmp_77_reg_9012 & or_ln116_5_fu_5357_p2);

assign and_ln116_6_fu_5410_p2 = (tmp_82_reg_9037 & or_ln116_6_fu_5404_p2);

assign and_ln116_7_fu_5457_p2 = (tmp_87_reg_9047 & or_ln116_7_fu_5451_p2);

assign and_ln116_fu_5095_p2 = (tmp_52_reg_8917 & or_ln116_fu_5089_p2);

assign and_ln122_fu_5504_p2 = (tmp_89_reg_9104_pp0_iter9_reg & or_ln122_fu_5498_p2);

assign and_ln130_1_fu_5619_p2 = (tmp_92_reg_9133 & and_ln130_fu_5613_p2);

assign and_ln130_fu_5613_p2 = (or_ln130_2_fu_5607_p2 & or_ln130_1_fu_5589_p2);

assign and_ln139_1_fu_5768_p2 = (tmp_95_reg_9173 & and_ln139_fu_5762_p2);

assign and_ln139_fu_5762_p2 = (or_ln139_2_fu_5756_p2 & or_ln139_1_fu_5738_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage5_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage6_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage7_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage5_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage6_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage7_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage4_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage5_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage6_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage7_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state83_pp0_stage2_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state84_pp0_stage3_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state85_pp0_stage4_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state86_pp0_stage5_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state87_pp0_stage6_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state88_pp0_stage7_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state89_pp0_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state90_pp0_stage1_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state91_pp0_stage2_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state92_pp0_stage3_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage7;

assign bitcast_ln112_10_fu_4584_p1 = tmp_33_reg_8422;

assign bitcast_ln112_11_fu_4601_p1 = tmp_35_reg_8431;

assign bitcast_ln112_12_fu_4707_p1 = tmp_39_reg_8515;

assign bitcast_ln112_13_fu_4724_p1 = tmp_41_reg_8524;

assign bitcast_ln112_14_fu_4872_p1 = tmp_45_reg_8533;

assign bitcast_ln112_15_fu_4889_p1 = tmp_47_reg_8542;

assign bitcast_ln112_1_fu_3708_p1 = tmp_9_reg_8271;

assign bitcast_ln112_2_fu_3959_p1 = tmp_4_reg_8290;

assign bitcast_ln112_3_fu_3976_p1 = tmp_11_reg_8299;

assign bitcast_ln112_4_fu_4017_p1 = tmp_15_reg_8318;

assign bitcast_ln112_5_fu_4034_p1 = tmp_17_reg_8327;

assign bitcast_ln112_6_fu_4300_p1 = tmp_21_reg_8386;

assign bitcast_ln112_7_fu_4317_p1 = tmp_23_reg_8395;

assign bitcast_ln112_8_fu_4461_p1 = tmp_27_reg_8404;

assign bitcast_ln112_9_fu_4478_p1 = tmp_29_reg_8413;

assign bitcast_ln112_fu_3691_p1 = tmp_7_reg_8257;

assign bitcast_ln116_1_fu_5114_p1 = ov_6_reg_8903;

assign bitcast_ln116_2_fu_5161_p1 = ov_10_reg_8910;

assign bitcast_ln116_3_fu_5234_p1 = ov_14_reg_8942;

assign bitcast_ln116_4_fu_5281_p1 = ov_18_reg_8964;

assign bitcast_ln116_5_fu_5328_p1 = ov_22_reg_8971;

assign bitcast_ln116_6_fu_5375_p1 = ov_26_reg_8983;

assign bitcast_ln116_7_fu_5422_p1 = ov_30_reg_8995;

assign bitcast_ln116_fu_5060_p1 = ov_2_reg_8891;

assign bitcast_ln122_fu_5469_p1 = overlap_7_reg_9097_pp0_iter9_reg;

assign bitcast_ln126_fu_5509_p1 = reg_3226;

assign bitcast_ln130_1_fu_5560_p1 = tmp_score_load_reg_9126;

assign bitcast_ln130_fu_5543_p1 = sc_2_reg_9119;

assign bitcast_ln139_1_fu_5709_p1 = score_load_reg_9152;

assign bitcast_ln139_fu_5692_p1 = tmp_score_4_reg_9144;

assign grp_fu_24082_p_ce = 1'b1;

assign grp_fu_24082_p_din0 = grp_fu_3170_p0;

assign grp_fu_24082_p_din1 = grp_fu_3170_p1;

assign grp_fu_24082_p_opcode = 2'd1;

assign grp_fu_24088_p_ce = 1'b1;

assign grp_fu_24088_p_din0 = grp_fu_3203_p0;

assign grp_fu_24088_p_din1 = grp_fu_3203_p1;

assign grp_fu_24093_p_ce = 1'b1;

assign grp_fu_24093_p_din0 = grp_fu_3211_p0;

assign grp_fu_24093_p_din1 = grp_fu_3211_p1;

assign grp_fu_24093_p_opcode = 5'd4;

assign grp_fu_24098_p_ce = 1'b1;

assign grp_fu_24098_p_din0 = grp_fu_3215_p0;

assign grp_fu_24098_p_din1 = grp_fu_3215_p1;

assign grp_fu_24098_p_opcode = 5'd4;

assign grp_fu_24103_p_ce = 1'b1;

assign grp_fu_24103_p_din0 = grp_fu_3219_p0;

assign grp_fu_24103_p_din1 = grp_fu_3219_p1;

assign grp_fu_24103_p_opcode = grp_fu_3219_opcode;

assign i_real_2_fu_5023_p3 = ((icmp_ln1019_fu_4995_p2[0:0] == 1'b1) ? i_real_fu_5000_p2 : i_real_3_reg_8183);

assign i_real_fu_5000_p2 = (i_real_3_reg_8183 + 32'd1);

assign icmp_ln1019_fu_4995_p2 = ((k_real_5_reg_8191 == 32'd15) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_3325_p2 = (($signed(merge_1_1_fu_836) < $signed(32'd15)) ? 1'b1 : 1'b0);

assign icmp_ln112_10_fu_4063_p2 = ((tmp_59_fu_4037_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_11_fu_4069_p2 = ((trunc_ln112_5_fu_4047_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_12_fu_4334_p2 = ((tmp_63_fu_4303_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_13_fu_4340_p2 = ((trunc_ln112_6_fu_4313_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_14_fu_4346_p2 = ((tmp_64_fu_4320_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_15_fu_4352_p2 = ((trunc_ln112_7_fu_4330_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_16_fu_4495_p2 = ((tmp_68_fu_4464_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_17_fu_4501_p2 = ((trunc_ln112_8_fu_4474_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_18_fu_4513_p2 = ((tmp_69_fu_4481_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_19_fu_4519_p2 = ((trunc_ln112_9_fu_4491_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_1_fu_3731_p2 = ((trunc_ln112_fu_3704_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_20_fu_4618_p2 = ((tmp_73_fu_4587_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_21_fu_4624_p2 = ((trunc_ln112_10_fu_4597_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_22_fu_4636_p2 = ((tmp_74_fu_4604_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_23_fu_4642_p2 = ((trunc_ln112_11_fu_4614_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_24_fu_4741_p2 = ((tmp_78_fu_4710_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_25_fu_4747_p2 = ((trunc_ln112_12_fu_4720_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_26_fu_4759_p2 = ((tmp_79_fu_4727_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_27_fu_4765_p2 = ((trunc_ln112_13_fu_4737_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_28_fu_4906_p2 = ((tmp_83_fu_4875_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_29_fu_4912_p2 = ((trunc_ln112_14_fu_4885_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_2_fu_3737_p2 = ((tmp_49_fu_3711_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_30_fu_4924_p2 = ((tmp_84_fu_4892_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_31_fu_4930_p2 = ((trunc_ln112_15_fu_4902_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_3_fu_3743_p2 = ((trunc_ln112_1_fu_3721_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_4_fu_3993_p2 = ((tmp_53_fu_3962_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_5_fu_3999_p2 = ((trunc_ln112_2_fu_3972_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_6_fu_4005_p2 = ((tmp_54_fu_3979_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_7_fu_4011_p2 = ((trunc_ln112_3_fu_3989_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_8_fu_4051_p2 = ((tmp_58_fu_4020_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_9_fu_4057_p2 = ((trunc_ln112_4_fu_4030_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_fu_3725_p2 = ((tmp_48_fu_3694_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_10_fu_5345_p2 = ((tmp_76_fu_5331_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_11_fu_5351_p2 = ((trunc_ln116_5_fu_5341_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_12_fu_5392_p2 = ((tmp_81_fu_5378_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_13_fu_5398_p2 = ((trunc_ln116_6_fu_5388_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_14_fu_5439_p2 = ((tmp_86_fu_5425_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_15_fu_5445_p2 = ((trunc_ln116_7_fu_5435_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_1_fu_5083_p2 = ((trunc_ln116_fu_5073_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_2_fu_5131_p2 = ((tmp_56_fu_5117_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_3_fu_5137_p2 = ((trunc_ln116_1_fu_5127_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_4_fu_5178_p2 = ((tmp_61_fu_5164_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_5_fu_5184_p2 = ((trunc_ln116_2_fu_5174_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_6_fu_5251_p2 = ((tmp_66_fu_5237_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_7_fu_5257_p2 = ((trunc_ln116_3_fu_5247_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_8_fu_5298_p2 = ((tmp_71_fu_5284_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_9_fu_5304_p2 = ((trunc_ln116_4_fu_5294_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_5077_p2 = ((tmp_51_fu_5063_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln122_1_fu_5492_p2 = ((trunc_ln122_fu_5482_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_5486_p2 = ((tmp_88_fu_5472_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_1_fu_5577_p2 = ((tmp_90_fu_5546_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_2_fu_5583_p2 = ((trunc_ln130_fu_5556_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_3_fu_5595_p2 = ((tmp_91_fu_5563_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_4_fu_5601_p2 = ((trunc_ln130_1_fu_5573_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_fu_5537_p2 = ((tmp_other_fu_848 == 32'd4294967295) ? 1'b1 : 1'b0);

assign icmp_ln139_1_fu_5732_p2 = ((trunc_ln139_fu_5705_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln139_2_fu_5744_p2 = ((tmp_94_fu_5712_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln139_3_fu_5750_p2 = ((trunc_ln139_1_fu_5722_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln139_fu_5726_p2 = ((tmp_93_fu_5695_p4 != 8'd255) ? 1'b1 : 1'b0);

assign k_real_2_fu_5010_p2 = (k_real_5_reg_8191 + 32'd1);

assign k_real_3_fu_5015_p3 = ((icmp_ln1019_fu_4995_p2[0:0] == 1'b1) ? k_real_fu_5005_p2 : k_real_2_fu_5010_p2);

assign k_real_fu_5005_p2 = (i_real_3_reg_8183 + 32'd2);

assign merge_1_6_fu_5791_p3 = ((or_ln139_fu_5773_p2[0:0] == 1'b1) ? i_real_3_reg_8183_pp0_iter11_reg : merge_1_4_reg_9160);

assign merge_1_7_fu_5809_p3 = ((icmp_ln1019_reg_8706_pp0_iter11_reg[0:0] == 1'b1) ? merge_1_6_fu_5791_p3 : merge_1_4_reg_9160);

assign merge_1_out = merge_1_fu_824[3:0];

assign merge_2_5_fu_5785_p3 = ((or_ln139_fu_5773_p2[0:0] == 1'b1) ? tmp_other_4_reg_9138 : merge_2_1_reg_9167);

assign merge_2_6_fu_5803_p3 = ((icmp_ln1019_reg_8706_pp0_iter11_reg[0:0] == 1'b1) ? merge_2_5_fu_5785_p3 : merge_2_1_reg_9167);

assign merge_2_out = merge_2_fu_828[3:0];

assign or_ln112_10_fu_4630_p2 = (icmp_ln112_21_fu_4624_p2 | icmp_ln112_20_fu_4618_p2);

assign or_ln112_11_fu_4648_p2 = (icmp_ln112_23_fu_4642_p2 | icmp_ln112_22_fu_4636_p2);

assign or_ln112_12_fu_4753_p2 = (icmp_ln112_25_fu_4747_p2 | icmp_ln112_24_fu_4741_p2);

assign or_ln112_13_fu_4771_p2 = (icmp_ln112_27_fu_4765_p2 | icmp_ln112_26_fu_4759_p2);

assign or_ln112_14_fu_4918_p2 = (icmp_ln112_29_fu_4912_p2 | icmp_ln112_28_fu_4906_p2);

assign or_ln112_15_fu_4936_p2 = (icmp_ln112_31_fu_4930_p2 | icmp_ln112_30_fu_4924_p2);

assign or_ln112_1_fu_4247_p2 = (icmp_ln112_3_reg_8361 | icmp_ln112_2_reg_8356);

assign or_ln112_2_fu_4262_p2 = (icmp_ln112_5_reg_8450 | icmp_ln112_4_reg_8445);

assign or_ln112_3_fu_4266_p2 = (icmp_ln112_7_reg_8460 | icmp_ln112_6_reg_8455);

assign or_ln112_4_fu_4281_p2 = (icmp_ln112_9_reg_8475 | icmp_ln112_8_reg_8470);

assign or_ln112_5_fu_4285_p2 = (icmp_ln112_11_reg_8485 | icmp_ln112_10_reg_8480);

assign or_ln112_6_fu_4442_p2 = (icmp_ln112_13_reg_8571 | icmp_ln112_12_reg_8566);

assign or_ln112_7_fu_4446_p2 = (icmp_ln112_15_reg_8581 | icmp_ln112_14_reg_8576);

assign or_ln112_8_fu_4507_p2 = (icmp_ln112_17_fu_4501_p2 | icmp_ln112_16_fu_4495_p2);

assign or_ln112_9_fu_4525_p2 = (icmp_ln112_19_fu_4519_p2 | icmp_ln112_18_fu_4513_p2);

assign or_ln112_fu_4243_p2 = (icmp_ln112_reg_8346 | icmp_ln112_1_reg_8351);

assign or_ln116_1_fu_5143_p2 = (icmp_ln116_3_fu_5137_p2 | icmp_ln116_2_fu_5131_p2);

assign or_ln116_2_fu_5190_p2 = (icmp_ln116_5_fu_5184_p2 | icmp_ln116_4_fu_5178_p2);

assign or_ln116_3_fu_5263_p2 = (icmp_ln116_7_fu_5257_p2 | icmp_ln116_6_fu_5251_p2);

assign or_ln116_4_fu_5310_p2 = (icmp_ln116_9_fu_5304_p2 | icmp_ln116_8_fu_5298_p2);

assign or_ln116_5_fu_5357_p2 = (icmp_ln116_11_fu_5351_p2 | icmp_ln116_10_fu_5345_p2);

assign or_ln116_6_fu_5404_p2 = (icmp_ln116_13_fu_5398_p2 | icmp_ln116_12_fu_5392_p2);

assign or_ln116_7_fu_5451_p2 = (icmp_ln116_15_fu_5445_p2 | icmp_ln116_14_fu_5439_p2);

assign or_ln116_fu_5089_p2 = (icmp_ln116_fu_5077_p2 | icmp_ln116_1_fu_5083_p2);

assign or_ln122_fu_5498_p2 = (icmp_ln122_fu_5486_p2 | icmp_ln122_1_fu_5492_p2);

assign or_ln130_1_fu_5589_p2 = (icmp_ln130_2_fu_5583_p2 | icmp_ln130_1_fu_5577_p2);

assign or_ln130_2_fu_5607_p2 = (icmp_ln130_4_fu_5601_p2 | icmp_ln130_3_fu_5595_p2);

assign or_ln130_fu_5624_p2 = (icmp_ln130_fu_5537_p2 | and_ln130_1_fu_5619_p2);

assign or_ln139_1_fu_5738_p2 = (icmp_ln139_fu_5726_p2 | icmp_ln139_1_fu_5732_p2);

assign or_ln139_2_fu_5756_p2 = (icmp_ln139_3_fu_5750_p2 | icmp_ln139_2_fu_5744_p2);

assign or_ln139_fu_5773_p2 = (tmp_fu_5685_p3 | and_ln139_1_fu_5768_p2);

assign ov_10_fu_5053_p3 = ((and_ln112_5_reg_8561_pp0_iter2_reg[0:0] == 1'b1) ? reg_3272 : reg_3272);

assign ov_11_fu_5201_p3 = ((and_ln116_2_fu_5196_p2[0:0] == 1'b1) ? 32'd0 : ov_10_reg_8910);

assign ov_14_fu_5107_p3 = ((and_ln112_7_reg_8621_pp0_iter2_reg[0:0] == 1'b1) ? reg_3276 : reg_3276);

assign ov_15_fu_5274_p3 = ((and_ln116_3_fu_5269_p2[0:0] == 1'b1) ? 32'd0 : ov_14_reg_8942);

assign ov_18_fu_5208_p3 = ((and_ln112_9_reg_8626_pp0_iter2_reg[0:0] == 1'b1) ? ov_16_reg_8922 : ov_17_reg_8949);

assign ov_19_fu_5321_p3 = ((and_ln116_4_fu_5316_p2[0:0] == 1'b1) ? 32'd0 : ov_18_reg_8964);

assign ov_22_fu_5213_p3 = ((and_ln112_11_reg_8641_pp0_iter2_reg[0:0] == 1'b1) ? reg_3232 : reg_3232);

assign ov_23_fu_5368_p3 = ((and_ln116_5_fu_5363_p2[0:0] == 1'b1) ? 32'd0 : ov_22_reg_8971);

assign ov_26_fu_5220_p3 = ((and_ln112_13_reg_8666_pp0_iter2_reg[0:0] == 1'b1) ? reg_3280 : reg_3280);

assign ov_27_fu_5415_p3 = ((and_ln116_6_fu_5410_p2[0:0] == 1'b1) ? 32'd0 : ov_26_reg_8983);

assign ov_2_fu_5040_p3 = ((and_ln112_1_reg_8551_pp0_iter1_reg[0:0] == 1'b1) ? reg_3268 : reg_3268);

assign ov_30_fu_5227_p3 = ((and_ln112_15_reg_8691_pp0_iter2_reg[0:0] == 1'b1) ? reg_3276 : reg_3276);

assign ov_31_fu_5462_p3 = ((and_ln116_7_fu_5457_p2[0:0] == 1'b1) ? 32'd0 : ov_30_reg_8995);

assign ov_32_fu_5100_p3 = ((and_ln116_fu_5095_p2[0:0] == 1'b1) ? 32'd0 : ov_2_reg_8891);

assign ov_6_fu_5047_p3 = ((and_ln112_3_reg_8556_pp0_iter2_reg[0:0] == 1'b1) ? ov_4_reg_8881 : reg_3268);

assign ov_7_fu_5154_p3 = ((and_ln116_1_fu_5149_p2[0:0] == 1'b1) ? 32'd0 : ov_6_reg_8903);

assign sc_2_fu_5523_p3 = ((and_ln122_fu_5504_p2[0:0] == 1'b1) ? overlap_7_reg_9097_pp0_iter9_reg : sc_fu_5519_p1);

assign sc_fu_5519_p1 = xor_ln126_fu_5513_p2;

assign score_2_fu_5779_p3 = ((or_ln139_fu_5773_p2[0:0] == 1'b1) ? tmp_score_4_reg_9144 : score_load_reg_9152);

assign score_3_fu_5797_p3 = ((icmp_ln1019_reg_8706_pp0_iter11_reg[0:0] == 1'b1) ? score_2_fu_5779_p3 : score_load_reg_9152);

assign tmp_48_fu_3694_p4 = {{bitcast_ln112_fu_3691_p1[30:23]}};

assign tmp_49_fu_3711_p4 = {{bitcast_ln112_1_fu_3708_p1[30:23]}};

assign tmp_51_fu_5063_p4 = {{bitcast_ln116_fu_5060_p1[30:23]}};

assign tmp_53_fu_3962_p4 = {{bitcast_ln112_2_fu_3959_p1[30:23]}};

assign tmp_54_fu_3979_p4 = {{bitcast_ln112_3_fu_3976_p1[30:23]}};

assign tmp_56_fu_5117_p4 = {{bitcast_ln116_1_fu_5114_p1[30:23]}};

assign tmp_58_fu_4020_p4 = {{bitcast_ln112_4_fu_4017_p1[30:23]}};

assign tmp_59_fu_4037_p4 = {{bitcast_ln112_5_fu_4034_p1[30:23]}};

assign tmp_61_fu_5164_p4 = {{bitcast_ln116_2_fu_5161_p1[30:23]}};

assign tmp_63_fu_4303_p4 = {{bitcast_ln112_6_fu_4300_p1[30:23]}};

assign tmp_64_fu_4320_p4 = {{bitcast_ln112_7_fu_4317_p1[30:23]}};

assign tmp_66_fu_5237_p4 = {{bitcast_ln116_3_fu_5234_p1[30:23]}};

assign tmp_68_fu_4464_p4 = {{bitcast_ln112_8_fu_4461_p1[30:23]}};

assign tmp_69_fu_4481_p4 = {{bitcast_ln112_9_fu_4478_p1[30:23]}};

assign tmp_71_fu_5284_p4 = {{bitcast_ln116_4_fu_5281_p1[30:23]}};

assign tmp_73_fu_4587_p4 = {{bitcast_ln112_10_fu_4584_p1[30:23]}};

assign tmp_74_fu_4604_p4 = {{bitcast_ln112_11_fu_4601_p1[30:23]}};

assign tmp_76_fu_5331_p4 = {{bitcast_ln116_5_fu_5328_p1[30:23]}};

assign tmp_78_fu_4710_p4 = {{bitcast_ln112_12_fu_4707_p1[30:23]}};

assign tmp_79_fu_4727_p4 = {{bitcast_ln112_13_fu_4724_p1[30:23]}};

assign tmp_81_fu_5378_p4 = {{bitcast_ln116_6_fu_5375_p1[30:23]}};

assign tmp_83_fu_4875_p4 = {{bitcast_ln112_14_fu_4872_p1[30:23]}};

assign tmp_84_fu_4892_p4 = {{bitcast_ln112_15_fu_4889_p1[30:23]}};

assign tmp_86_fu_5425_p4 = {{bitcast_ln116_7_fu_5422_p1[30:23]}};

assign tmp_88_fu_5472_p4 = {{bitcast_ln122_fu_5469_p1[30:23]}};

assign tmp_90_fu_5546_p4 = {{bitcast_ln130_fu_5543_p1[30:23]}};

assign tmp_91_fu_5563_p4 = {{bitcast_ln130_1_fu_5560_p1[30:23]}};

assign tmp_93_fu_5695_p4 = {{bitcast_ln139_fu_5692_p1[30:23]}};

assign tmp_94_fu_5712_p4 = {{bitcast_ln139_1_fu_5709_p1[30:23]}};

assign tmp_fu_5685_p3 = merge_1_4_reg_9160[32'd31];

assign tmp_other_3_fu_5647_p3 = ((icmp_ln1019_reg_8706_pp0_iter11_reg[0:0] == 1'b1) ? 32'd4294967295 : tmp_other_4_reg_9138);

assign tmp_other_4_fu_5630_p3 = ((or_ln130_fu_5624_p2[0:0] == 1'b1) ? k_real_5_reg_8191_pp0_iter10_reg : tmp_other_fu_848);

assign tmp_score_3_fu_5653_p3 = ((icmp_ln1019_reg_8706_pp0_iter11_reg[0:0] == 1'b1) ? 32'd0 : tmp_score_4_reg_9144);

assign tmp_score_4_fu_5637_p3 = ((or_ln130_fu_5624_p2[0:0] == 1'b1) ? sc_2_reg_9119 : tmp_score_load_reg_9126);

assign trunc_ln104_1_fu_3357_p1 = k_real_4_fu_840[3:0];

assign trunc_ln104_fu_3331_p1 = merge_1_1_fu_836[3:0];

assign trunc_ln112_10_fu_4597_p1 = bitcast_ln112_10_fu_4584_p1[22:0];

assign trunc_ln112_11_fu_4614_p1 = bitcast_ln112_11_fu_4601_p1[22:0];

assign trunc_ln112_12_fu_4720_p1 = bitcast_ln112_12_fu_4707_p1[22:0];

assign trunc_ln112_13_fu_4737_p1 = bitcast_ln112_13_fu_4724_p1[22:0];

assign trunc_ln112_14_fu_4885_p1 = bitcast_ln112_14_fu_4872_p1[22:0];

assign trunc_ln112_15_fu_4902_p1 = bitcast_ln112_15_fu_4889_p1[22:0];

assign trunc_ln112_1_fu_3721_p1 = bitcast_ln112_1_fu_3708_p1[22:0];

assign trunc_ln112_2_fu_3972_p1 = bitcast_ln112_2_fu_3959_p1[22:0];

assign trunc_ln112_3_fu_3989_p1 = bitcast_ln112_3_fu_3976_p1[22:0];

assign trunc_ln112_4_fu_4030_p1 = bitcast_ln112_4_fu_4017_p1[22:0];

assign trunc_ln112_5_fu_4047_p1 = bitcast_ln112_5_fu_4034_p1[22:0];

assign trunc_ln112_6_fu_4313_p1 = bitcast_ln112_6_fu_4300_p1[22:0];

assign trunc_ln112_7_fu_4330_p1 = bitcast_ln112_7_fu_4317_p1[22:0];

assign trunc_ln112_8_fu_4474_p1 = bitcast_ln112_8_fu_4461_p1[22:0];

assign trunc_ln112_9_fu_4491_p1 = bitcast_ln112_9_fu_4478_p1[22:0];

assign trunc_ln112_fu_3704_p1 = bitcast_ln112_fu_3691_p1[22:0];

assign trunc_ln116_1_fu_5127_p1 = bitcast_ln116_1_fu_5114_p1[22:0];

assign trunc_ln116_2_fu_5174_p1 = bitcast_ln116_2_fu_5161_p1[22:0];

assign trunc_ln116_3_fu_5247_p1 = bitcast_ln116_3_fu_5234_p1[22:0];

assign trunc_ln116_4_fu_5294_p1 = bitcast_ln116_4_fu_5281_p1[22:0];

assign trunc_ln116_5_fu_5341_p1 = bitcast_ln116_5_fu_5328_p1[22:0];

assign trunc_ln116_6_fu_5388_p1 = bitcast_ln116_6_fu_5375_p1[22:0];

assign trunc_ln116_7_fu_5435_p1 = bitcast_ln116_7_fu_5422_p1[22:0];

assign trunc_ln116_fu_5073_p1 = bitcast_ln116_fu_5060_p1[22:0];

assign trunc_ln122_fu_5482_p1 = bitcast_ln122_fu_5469_p1[22:0];

assign trunc_ln130_1_fu_5573_p1 = bitcast_ln130_1_fu_5560_p1[22:0];

assign trunc_ln130_fu_5556_p1 = bitcast_ln130_fu_5543_p1[22:0];

assign trunc_ln139_1_fu_5722_p1 = bitcast_ln139_1_fu_5709_p1[22:0];

assign trunc_ln139_fu_5705_p1 = bitcast_ln139_fu_5692_p1[22:0];

assign xor_ln126_fu_5513_p2 = (bitcast_ln126_fu_5509_p1 ^ 32'd2147483648);

endmodule //FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1
