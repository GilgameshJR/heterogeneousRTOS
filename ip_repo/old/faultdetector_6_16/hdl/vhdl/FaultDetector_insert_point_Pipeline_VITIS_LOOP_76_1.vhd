-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    regions_center_0_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_8_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_9_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_10_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_11_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_12_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_13_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_14_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_15_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_8_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_9_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_10_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_11_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_12_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_13_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_14_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_15_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_8_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_9_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_10_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_11_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_12_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_13_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_14_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_15_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_8_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_9_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_10_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_11_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_12_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_13_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_14_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_15_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_8_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_9_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_10_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_11_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_12_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_13_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_14_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_15_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_8_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_9_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_10_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_11_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_12_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_13_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_14_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_15_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_8_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_9_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_10_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_11_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_12_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_13_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_14_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_15_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_8_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_9_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_10_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_11_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_12_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_13_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_14_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_15_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_8_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_9_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_10_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_11_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_12_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_13_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_14_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_15_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_8_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_9_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_10_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_11_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_12_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_13_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_14_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_15_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_8_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_9_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_10_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_11_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_12_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_13_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_14_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_15_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_8_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_9_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_10_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_11_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_12_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_13_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_14_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_15_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_8_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_9_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_10_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_11_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_12_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_13_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_14_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_15_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_8_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_9_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_10_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_11_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_12_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_13_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_14_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_15_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_8_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_9_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_10_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_11_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_12_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_13_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_14_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_15_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_8_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_9_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_10_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_11_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_12_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_13_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_14_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_15_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_8_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_9_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_10_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_11_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_12_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_13_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_14_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_15_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_8_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_9_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_10_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_11_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_12_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_13_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_14_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_15_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    merge_2_out : OUT STD_LOGIC_VECTOR (3 downto 0);
    merge_2_out_ap_vld : OUT STD_LOGIC;
    merge_1_out : OUT STD_LOGIC_VECTOR (3 downto 0);
    merge_1_out_ap_vld : OUT STD_LOGIC;
    grp_fu_18132_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_18132_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_18132_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_18132_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_18132_p_ce : OUT STD_LOGIC;
    grp_fu_18138_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_18138_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_18138_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_18138_p_ce : OUT STD_LOGIC;
    grp_fu_18143_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_18143_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_18143_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_18143_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_18143_p_ce : OUT STD_LOGIC;
    grp_fu_18148_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_18148_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_18148_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_18148_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_18148_p_ce : OUT STD_LOGIC );
end;


architecture behav of FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state24_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_state32_pp0_stage7_iter3 : BOOLEAN;
    signal ap_block_state40_pp0_stage7_iter4 : BOOLEAN;
    signal ap_block_state48_pp0_stage7_iter5 : BOOLEAN;
    signal ap_block_state56_pp0_stage7_iter6 : BOOLEAN;
    signal ap_block_state64_pp0_stage7_iter7 : BOOLEAN;
    signal ap_block_state72_pp0_stage7_iter8 : BOOLEAN;
    signal ap_block_state80_pp0_stage7_iter9 : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal icmp_ln1027_reg_6297 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage7 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal grp_fu_2418_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_2445 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state34_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state42_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state50_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state58_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state66_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state74_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state82_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state23_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_state31_pp0_stage6_iter3 : BOOLEAN;
    signal ap_block_state39_pp0_stage6_iter4 : BOOLEAN;
    signal ap_block_state47_pp0_stage6_iter5 : BOOLEAN;
    signal ap_block_state55_pp0_stage6_iter6 : BOOLEAN;
    signal ap_block_state63_pp0_stage6_iter7 : BOOLEAN;
    signal ap_block_state71_pp0_stage6_iter8 : BOOLEAN;
    signal ap_block_state79_pp0_stage6_iter9 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal icmp_ln1027_reg_6297_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_5_reg_6610 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_5_reg_6610_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state49_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state57_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state65_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state73_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state81_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln1027_reg_6297_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_2451 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal icmp_ln1027_reg_6297_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_11_reg_6665 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2410_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_2456 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state21_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state29_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state37_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state45_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_state53_pp0_stage4_iter6 : BOOLEAN;
    signal ap_block_state61_pp0_stage4_iter7 : BOOLEAN;
    signal ap_block_state69_pp0_stage4_iter8 : BOOLEAN;
    signal ap_block_state77_pp0_stage4_iter9 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal and_ln112_1_reg_6552 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_1_reg_6552_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_9_reg_6645 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_9_reg_6645_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2414_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_2460 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln112_3_reg_6557 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_3_reg_6557_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2406_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_2464 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln112_7_reg_6615 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_7_reg_6615_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_2468 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln112_11_reg_6665_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_2472 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1027_reg_6297_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_real_3_reg_6282 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_6282_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_6282_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_6282_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_6282_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_6282_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_6282_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_6282_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_6282_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_6282_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_6290 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_6290_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_6290_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_6290_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_6290_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_6290_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_6290_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_6290_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_6290_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1027_fu_2519_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_6297_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_6297_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_6297_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_6297_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_6297_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln104_fu_2525_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln104_reg_6301 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_2529_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_6317 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln104_1_fu_2551_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln104_1_reg_6322 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_5_fu_2555_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_6338 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_2577_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_6343 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_2599_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_6348 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_2621_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_6357 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_2643_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_6362 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_2665_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_6371 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_2687_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_6376 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_2709_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_6381 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_2731_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_reg_6390 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_2753_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_reg_6399 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_2775_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_reg_6404 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_2797_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_6409 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state35_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state43_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state51_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state59_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state67_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_state75_pp0_stage2_iter9 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp_10_fu_2818_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_reg_6414 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_2839_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_reg_6419 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_2860_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_reg_6424 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_2881_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_reg_6433 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_2902_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_reg_6438 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_2923_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_reg_6447 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_2944_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_reg_6456 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln112_fu_2999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_reg_6465 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state28_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state36_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state44_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state52_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state60_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_state68_pp0_stage3_iter8 : BOOLEAN;
    signal ap_block_state76_pp0_stage3_iter9 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal icmp_ln112_1_fu_3005_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_1_reg_6470 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_2_fu_3011_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_2_reg_6475 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_3_fu_3017_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_3_reg_6480 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_reg_6485 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_4_fu_3057_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_4_reg_6490 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_5_fu_3063_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_5_reg_6495 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_6_fu_3069_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_6_reg_6500 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_7_fu_3075_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_7_reg_6505 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_reg_6510 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_3081_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_reg_6515 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_3102_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_reg_6520 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_3123_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_reg_6525 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_3144_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_reg_6530 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_3165_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_reg_6535 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_3186_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_reg_6544 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln112_1_fu_3220_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_1_reg_6552_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_3_fu_3239_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_3_reg_6557_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_8_fu_3279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_8_reg_6562 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_9_fu_3285_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_9_reg_6567 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_10_fu_3291_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_10_reg_6572 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_11_fu_3297_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_11_reg_6577 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_6582 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_reg_6587 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_3303_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_reg_6592 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_3324_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_reg_6601 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln112_5_fu_3359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state22_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_state30_pp0_stage5_iter3 : BOOLEAN;
    signal ap_block_state38_pp0_stage5_iter4 : BOOLEAN;
    signal ap_block_state46_pp0_stage5_iter5 : BOOLEAN;
    signal ap_block_state54_pp0_stage5_iter6 : BOOLEAN;
    signal ap_block_state62_pp0_stage5_iter7 : BOOLEAN;
    signal ap_block_state70_pp0_stage5_iter8 : BOOLEAN;
    signal ap_block_state78_pp0_stage5_iter9 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal and_ln112_5_reg_6610_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_7_fu_3440_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_7_reg_6615_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_3445_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_reg_6620 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_3466_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_reg_6625 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_reg_6630 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_3487_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_reg_6635 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_3508_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_reg_6640 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln112_9_fu_3605_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_9_reg_6645_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_3610_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_reg_6650 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_3631_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_reg_6655 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_reg_6660 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_11_fu_3728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_11_reg_6665_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_3733_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_reg_6670 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_fu_3754_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_reg_6675 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1019_fu_3775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_6680 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_6680_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_6680_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_6680_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_6680_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_6680_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_6680_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_6680_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_6680_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_6680_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal d_reg_6689 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_reg_6695 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_reg_6700 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_reg_6705 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2422_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_2_reg_6710 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub2_reg_6716 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_1_reg_6721 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_1_reg_6726 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub75_1_reg_6731 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub87_1_reg_6736 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_2_reg_6741 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_2_reg_6746 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub75_2_reg_6751 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub87_2_reg_6756 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_3_reg_6761 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_3_reg_6767 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_3_reg_6772 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub75_3_reg_6777 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub87_3_reg_6782 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_6787 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2431_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_6792 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_6792_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_4_reg_6797 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_4_reg_6802 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub75_4_reg_6807 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_6812 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_6812_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal d_4_reg_6817 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub87_4_reg_6823 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_5_reg_6828 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_5_reg_6833 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_6838 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_6838_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_6838_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_6838_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal d_5_reg_6843 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_4_reg_6849 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_4_reg_6849_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_4_reg_6849_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_4_reg_6849_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_reg_6854 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_2_fu_3820_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_2_reg_6859 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_6_fu_3827_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_6_reg_6866 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_5_reg_6873 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_5_reg_6873_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_5_reg_6873_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_5_reg_6873_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_5_reg_6873_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_reg_6878 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_6883 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_10_fu_3834_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_10_reg_6888 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_24_fu_3881_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_24_reg_6895 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_7_fu_3928_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_7_reg_6900 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_14_fu_3935_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_14_reg_6905 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_reg_6912 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_18_fu_3942_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_18_reg_6917 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_22_fu_3949_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_22_reg_6924 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_11_fu_3996_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_11_reg_6931 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_reg_6936 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_15_fu_4043_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_15_reg_6941 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_1_reg_6946 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_reg_6951 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_19_fu_4090_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_19_reg_6956 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_reg_6961 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_23_fu_4137_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_23_reg_6966 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_23_reg_6966_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_3_reg_6971 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_2_reg_6976 : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_4_reg_6981 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_3_reg_6986 : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_5_reg_6991 : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_5_reg_6991_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_5_reg_6991_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_reg_6998 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_reg_6998_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal distance_4_reg_7003 : STD_LOGIC_VECTOR (31 downto 0);
    signal sc_2_fu_4198_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sc_2_reg_7008 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_load_reg_7015 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_reg_7022 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_other_4_fu_4305_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_other_4_reg_7027 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_4_fu_4312_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_4_reg_7033 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_load_reg_7041 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_1_4_reg_7049 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_2_1_reg_7056 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_73_reg_7062 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter10_stage0 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal merge_1_fu_632 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_1_7_fu_4484_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal merge_2_fu_636 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_2_6_fu_4478_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_fu_640 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_3_fu_4472_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal merge_1_1_fu_644 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_2_fu_3803_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal k_real_4_fu_648 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_3_fu_3795_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_fu_652 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_3_fu_4324_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_other_fu_656 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_other_3_fu_4318_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_2402_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2402_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal grp_fu_2406_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2406_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2410_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2410_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2414_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2414_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2418_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2418_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2422_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2422_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2427_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2427_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2431_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2431_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2435_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2435_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2439_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2439_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_fu_2965_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_1_fu_2982_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_fu_2968_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_fu_2978_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_37_fu_2985_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_1_fu_2995_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln112_2_fu_3023_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_3_fu_3040_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_fu_3026_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_2_fu_3036_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_42_fu_3043_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_3_fu_3053_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln112_1_fu_3211_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_fu_3215_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_fu_3207_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_3_fu_3230_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_2_fu_3234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_2_fu_3226_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln112_4_fu_3245_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_5_fu_3262_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_3248_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_4_fu_3258_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_47_fu_3265_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_5_fu_3275_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln112_4_fu_3345_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_5_fu_3349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_4_fu_3353_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln112_6_fu_3364_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_7_fu_3381_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_fu_3367_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_6_fu_3377_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_13_fu_3404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_12_fu_3398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_3384_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_7_fu_3394_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_15_fu_3422_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_14_fu_3416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_6_fu_3410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_7_fu_3428_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_6_fu_3434_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln112_8_fu_3529_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_9_fu_3546_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_fu_3532_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_8_fu_3542_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_17_fu_3569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_16_fu_3563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_3549_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_9_fu_3559_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_19_fu_3587_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_18_fu_3581_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_8_fu_3575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_9_fu_3593_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_8_fu_3599_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln112_10_fu_3652_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_11_fu_3669_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_fu_3655_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_10_fu_3665_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_21_fu_3692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_20_fu_3686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_3672_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_11_fu_3682_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_23_fu_3710_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_22_fu_3704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_10_fu_3698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_11_fu_3716_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_10_fu_3722_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_real_fu_3785_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_2_fu_3790_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_fu_3780_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln116_fu_3841_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_3844_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_fu_3854_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_1_fu_3864_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_fu_3858_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_fu_3870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_fu_3876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_1_fu_3888_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_fu_3891_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_1_fu_3901_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_3_fu_3911_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_2_fu_3905_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_1_fu_3917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_1_fu_3923_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_2_fu_3956_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_fu_3959_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_2_fu_3969_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_5_fu_3979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_4_fu_3973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_2_fu_3985_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_2_fu_3991_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_3_fu_4003_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_fu_4006_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_3_fu_4016_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_7_fu_4026_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_6_fu_4020_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_3_fu_4032_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_3_fu_4038_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_4_fu_4050_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_fu_4053_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_4_fu_4063_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_9_fu_4073_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_8_fu_4067_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_4_fu_4079_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_4_fu_4085_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_5_fu_4097_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_fu_4100_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_5_fu_4110_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_11_fu_4120_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_10_fu_4114_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_5_fu_4126_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_5_fu_4132_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln122_fu_4144_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_fu_4147_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln122_fu_4157_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln122_1_fu_4167_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln122_fu_4161_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln122_fu_4173_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln126_fu_4184_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln126_fu_4188_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln122_fu_4179_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sc_fu_4194_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln130_fu_4218_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln130_1_fu_4235_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_fu_4221_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln130_fu_4231_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln130_2_fu_4258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_1_fu_4252_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_fu_4238_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln130_1_fu_4248_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln130_4_fu_4276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_3_fu_4270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_1_fu_4264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_2_fu_4282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln130_fu_4288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_fu_4212_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln130_1_fu_4294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_fu_4299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln139_fu_4367_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln139_1_fu_4384_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_fu_4370_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln139_fu_4380_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln139_1_fu_4407_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln139_fu_4401_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_fu_4387_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln139_1_fu_4397_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln139_3_fu_4425_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln139_2_fu_4419_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln139_1_fu_4413_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln139_2_fu_4431_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln139_fu_4437_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_4360_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln139_1_fu_4443_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln139_fu_4448_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal score_2_fu_4454_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_2_5_fu_4460_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_1_6_fu_4466_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp0_stage5_00001 : BOOLEAN;
    signal ap_block_pp0_stage6_00001 : BOOLEAN;
    signal ap_block_pp0_stage7_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal grp_fu_2414_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_2418_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_2422_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_2435_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_2439_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_idle_pp0_0to9 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp0_1to10 : STD_LOGIC;
    signal ap_done_pending_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component FaultDetector_mux_164_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fsub_32ns_32ns_32_8_full_dsp_1_U11 : component FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2406_p0,
        din1 => grp_fu_2406_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2406_p2);

    fsub_32ns_32ns_32_8_full_dsp_1_U12 : component FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2410_p0,
        din1 => grp_fu_2410_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2410_p2);

    faddfsub_32ns_32ns_32_8_full_dsp_1_U13 : component FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2414_p0,
        din1 => grp_fu_2414_p1,
        opcode => grp_fu_2414_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_2414_p2);

    faddfsub_32ns_32ns_32_8_full_dsp_1_U14 : component FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2418_p0,
        din1 => grp_fu_2418_p1,
        opcode => grp_fu_2418_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_2418_p2);

    faddfsub_32ns_32ns_32_8_full_dsp_1_U15 : component FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2422_p0,
        din1 => grp_fu_2422_p1,
        opcode => grp_fu_2422_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_2422_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U17 : component FaultDetector_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2431_p0,
        din1 => grp_fu_2431_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2431_p2);

    mux_164_32_1_1_U20 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_0_0,
        din1 => regions_center_1_0_0,
        din2 => regions_center_2_0_0,
        din3 => regions_center_3_0_0,
        din4 => regions_center_4_0_0,
        din5 => regions_center_5_0_0,
        din6 => regions_center_6_0_0,
        din7 => regions_center_7_0_0,
        din8 => regions_center_8_0_0,
        din9 => regions_center_9_0_0,
        din10 => regions_center_10_0_0,
        din11 => regions_center_11_0_0,
        din12 => regions_center_12_0_0,
        din13 => regions_center_13_0_0,
        din14 => regions_center_14_0_0,
        din15 => regions_center_15_0_0,
        din16 => trunc_ln104_fu_2525_p1,
        dout => tmp_s_fu_2529_p18);

    mux_164_32_1_1_U21 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_0_0,
        din1 => regions_center_1_0_0,
        din2 => regions_center_2_0_0,
        din3 => regions_center_3_0_0,
        din4 => regions_center_4_0_0,
        din5 => regions_center_5_0_0,
        din6 => regions_center_6_0_0,
        din7 => regions_center_7_0_0,
        din8 => regions_center_8_0_0,
        din9 => regions_center_9_0_0,
        din10 => regions_center_10_0_0,
        din11 => regions_center_11_0_0,
        din12 => regions_center_12_0_0,
        din13 => regions_center_13_0_0,
        din14 => regions_center_14_0_0,
        din15 => regions_center_15_0_0,
        din16 => trunc_ln104_1_fu_2551_p1,
        dout => tmp_5_fu_2555_p18);

    mux_164_32_1_1_U22 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_0_0,
        din1 => regions_max_1_0_0,
        din2 => regions_max_2_0_0,
        din3 => regions_max_3_0_0,
        din4 => regions_max_4_0_0,
        din5 => regions_max_5_0_0,
        din6 => regions_max_6_0_0,
        din7 => regions_max_7_0_0,
        din8 => regions_max_8_0_0,
        din9 => regions_max_9_0_0,
        din10 => regions_max_10_0_0,
        din11 => regions_max_11_0_0,
        din12 => regions_max_12_0_0,
        din13 => regions_max_13_0_0,
        din14 => regions_max_14_0_0,
        din15 => regions_max_15_0_0,
        din16 => trunc_ln104_fu_2525_p1,
        dout => tmp_6_fu_2577_p18);

    mux_164_32_1_1_U23 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_0_0,
        din1 => regions_min_1_0_0,
        din2 => regions_min_2_0_0,
        din3 => regions_min_3_0_0,
        din4 => regions_min_4_0_0,
        din5 => regions_min_5_0_0,
        din6 => regions_min_6_0_0,
        din7 => regions_min_7_0_0,
        din8 => regions_min_8_0_0,
        din9 => regions_min_9_0_0,
        din10 => regions_min_10_0_0,
        din11 => regions_min_11_0_0,
        din12 => regions_min_12_0_0,
        din13 => regions_min_13_0_0,
        din14 => regions_min_14_0_0,
        din15 => regions_min_15_0_0,
        din16 => trunc_ln104_fu_2525_p1,
        dout => tmp_7_fu_2599_p18);

    mux_164_32_1_1_U24 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_0_0,
        din1 => regions_max_1_0_0,
        din2 => regions_max_2_0_0,
        din3 => regions_max_3_0_0,
        din4 => regions_max_4_0_0,
        din5 => regions_max_5_0_0,
        din6 => regions_max_6_0_0,
        din7 => regions_max_7_0_0,
        din8 => regions_max_8_0_0,
        din9 => regions_max_9_0_0,
        din10 => regions_max_10_0_0,
        din11 => regions_max_11_0_0,
        din12 => regions_max_12_0_0,
        din13 => regions_max_13_0_0,
        din14 => regions_max_14_0_0,
        din15 => regions_max_15_0_0,
        din16 => trunc_ln104_1_fu_2551_p1,
        dout => tmp_8_fu_2621_p18);

    mux_164_32_1_1_U25 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_0_0,
        din1 => regions_min_1_0_0,
        din2 => regions_min_2_0_0,
        din3 => regions_min_3_0_0,
        din4 => regions_min_4_0_0,
        din5 => regions_min_5_0_0,
        din6 => regions_min_6_0_0,
        din7 => regions_min_7_0_0,
        din8 => regions_min_8_0_0,
        din9 => regions_min_9_0_0,
        din10 => regions_min_10_0_0,
        din11 => regions_min_11_0_0,
        din12 => regions_min_12_0_0,
        din13 => regions_min_13_0_0,
        din14 => regions_min_14_0_0,
        din15 => regions_min_15_0_0,
        din16 => trunc_ln104_1_fu_2551_p1,
        dout => tmp_9_fu_2643_p18);

    mux_164_32_1_1_U26 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_1_0,
        din1 => regions_center_1_1_0,
        din2 => regions_center_2_1_0,
        din3 => regions_center_3_1_0,
        din4 => regions_center_4_1_0,
        din5 => regions_center_5_1_0,
        din6 => regions_center_6_1_0,
        din7 => regions_center_7_1_0,
        din8 => regions_center_8_1_0,
        din9 => regions_center_9_1_0,
        din10 => regions_center_10_1_0,
        din11 => regions_center_11_1_0,
        din12 => regions_center_12_1_0,
        din13 => regions_center_13_1_0,
        din14 => regions_center_14_1_0,
        din15 => regions_center_15_1_0,
        din16 => trunc_ln104_fu_2525_p1,
        dout => tmp_1_fu_2665_p18);

    mux_164_32_1_1_U27 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_1_0,
        din1 => regions_center_1_1_0,
        din2 => regions_center_2_1_0,
        din3 => regions_center_3_1_0,
        din4 => regions_center_4_1_0,
        din5 => regions_center_5_1_0,
        din6 => regions_center_6_1_0,
        din7 => regions_center_7_1_0,
        din8 => regions_center_8_1_0,
        din9 => regions_center_9_1_0,
        din10 => regions_center_10_1_0,
        din11 => regions_center_11_1_0,
        din12 => regions_center_12_1_0,
        din13 => regions_center_13_1_0,
        din14 => regions_center_14_1_0,
        din15 => regions_center_15_1_0,
        din16 => trunc_ln104_1_fu_2551_p1,
        dout => tmp_2_fu_2687_p18);

    mux_164_32_1_1_U28 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_1_0,
        din1 => regions_min_1_1_0,
        din2 => regions_min_2_1_0,
        din3 => regions_min_3_1_0,
        din4 => regions_min_4_1_0,
        din5 => regions_min_5_1_0,
        din6 => regions_min_6_1_0,
        din7 => regions_min_7_1_0,
        din8 => regions_min_8_1_0,
        din9 => regions_min_9_1_0,
        din10 => regions_min_10_1_0,
        din11 => regions_min_11_1_0,
        din12 => regions_min_12_1_0,
        din13 => regions_min_13_1_0,
        din14 => regions_min_14_1_0,
        din15 => regions_min_15_1_0,
        din16 => trunc_ln104_fu_2525_p1,
        dout => tmp_4_fu_2709_p18);

    mux_164_32_1_1_U29 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_1_0,
        din1 => regions_min_1_1_0,
        din2 => regions_min_2_1_0,
        din3 => regions_min_3_1_0,
        din4 => regions_min_4_1_0,
        din5 => regions_min_5_1_0,
        din6 => regions_min_6_1_0,
        din7 => regions_min_7_1_0,
        din8 => regions_min_8_1_0,
        din9 => regions_min_9_1_0,
        din10 => regions_min_10_1_0,
        din11 => regions_min_11_1_0,
        din12 => regions_min_12_1_0,
        din13 => regions_min_13_1_0,
        din14 => regions_min_14_1_0,
        din15 => regions_min_15_1_0,
        din16 => trunc_ln104_1_fu_2551_p1,
        dout => tmp_11_fu_2731_p18);

    mux_164_32_1_1_U30 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_2_0,
        din1 => regions_center_1_2_0,
        din2 => regions_center_2_2_0,
        din3 => regions_center_3_2_0,
        din4 => regions_center_4_2_0,
        din5 => regions_center_5_2_0,
        din6 => regions_center_6_2_0,
        din7 => regions_center_7_2_0,
        din8 => regions_center_8_2_0,
        din9 => regions_center_9_2_0,
        din10 => regions_center_10_2_0,
        din11 => regions_center_11_2_0,
        din12 => regions_center_12_2_0,
        din13 => regions_center_13_2_0,
        din14 => regions_center_14_2_0,
        din15 => regions_center_15_2_0,
        din16 => trunc_ln104_fu_2525_p1,
        dout => tmp_12_fu_2753_p18);

    mux_164_32_1_1_U31 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_2_0,
        din1 => regions_center_1_2_0,
        din2 => regions_center_2_2_0,
        din3 => regions_center_3_2_0,
        din4 => regions_center_4_2_0,
        din5 => regions_center_5_2_0,
        din6 => regions_center_6_2_0,
        din7 => regions_center_7_2_0,
        din8 => regions_center_8_2_0,
        din9 => regions_center_9_2_0,
        din10 => regions_center_10_2_0,
        din11 => regions_center_11_2_0,
        din12 => regions_center_12_2_0,
        din13 => regions_center_13_2_0,
        din14 => regions_center_14_2_0,
        din15 => regions_center_15_2_0,
        din16 => trunc_ln104_1_fu_2551_p1,
        dout => tmp_13_fu_2775_p18);

    mux_164_32_1_1_U32 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_1_0,
        din1 => regions_max_1_1_0,
        din2 => regions_max_2_1_0,
        din3 => regions_max_3_1_0,
        din4 => regions_max_4_1_0,
        din5 => regions_max_5_1_0,
        din6 => regions_max_6_1_0,
        din7 => regions_max_7_1_0,
        din8 => regions_max_8_1_0,
        din9 => regions_max_9_1_0,
        din10 => regions_max_10_1_0,
        din11 => regions_max_11_1_0,
        din12 => regions_max_12_1_0,
        din13 => regions_max_13_1_0,
        din14 => regions_max_14_1_0,
        din15 => regions_max_15_1_0,
        din16 => trunc_ln104_reg_6301,
        dout => tmp_3_fu_2797_p18);

    mux_164_32_1_1_U33 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_1_0,
        din1 => regions_max_1_1_0,
        din2 => regions_max_2_1_0,
        din3 => regions_max_3_1_0,
        din4 => regions_max_4_1_0,
        din5 => regions_max_5_1_0,
        din6 => regions_max_6_1_0,
        din7 => regions_max_7_1_0,
        din8 => regions_max_8_1_0,
        din9 => regions_max_9_1_0,
        din10 => regions_max_10_1_0,
        din11 => regions_max_11_1_0,
        din12 => regions_max_12_1_0,
        din13 => regions_max_13_1_0,
        din14 => regions_max_14_1_0,
        din15 => regions_max_15_1_0,
        din16 => trunc_ln104_1_reg_6322,
        dout => tmp_10_fu_2818_p18);

    mux_164_32_1_1_U34 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_2_0,
        din1 => regions_max_1_2_0,
        din2 => regions_max_2_2_0,
        din3 => regions_max_3_2_0,
        din4 => regions_max_4_2_0,
        din5 => regions_max_5_2_0,
        din6 => regions_max_6_2_0,
        din7 => regions_max_7_2_0,
        din8 => regions_max_8_2_0,
        din9 => regions_max_9_2_0,
        din10 => regions_max_10_2_0,
        din11 => regions_max_11_2_0,
        din12 => regions_max_12_2_0,
        din13 => regions_max_13_2_0,
        din14 => regions_max_14_2_0,
        din15 => regions_max_15_2_0,
        din16 => trunc_ln104_reg_6301,
        dout => tmp_14_fu_2839_p18);

    mux_164_32_1_1_U35 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_2_0,
        din1 => regions_min_1_2_0,
        din2 => regions_min_2_2_0,
        din3 => regions_min_3_2_0,
        din4 => regions_min_4_2_0,
        din5 => regions_min_5_2_0,
        din6 => regions_min_6_2_0,
        din7 => regions_min_7_2_0,
        din8 => regions_min_8_2_0,
        din9 => regions_min_9_2_0,
        din10 => regions_min_10_2_0,
        din11 => regions_min_11_2_0,
        din12 => regions_min_12_2_0,
        din13 => regions_min_13_2_0,
        din14 => regions_min_14_2_0,
        din15 => regions_min_15_2_0,
        din16 => trunc_ln104_reg_6301,
        dout => tmp_15_fu_2860_p18);

    mux_164_32_1_1_U36 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_2_0,
        din1 => regions_max_1_2_0,
        din2 => regions_max_2_2_0,
        din3 => regions_max_3_2_0,
        din4 => regions_max_4_2_0,
        din5 => regions_max_5_2_0,
        din6 => regions_max_6_2_0,
        din7 => regions_max_7_2_0,
        din8 => regions_max_8_2_0,
        din9 => regions_max_9_2_0,
        din10 => regions_max_10_2_0,
        din11 => regions_max_11_2_0,
        din12 => regions_max_12_2_0,
        din13 => regions_max_13_2_0,
        din14 => regions_max_14_2_0,
        din15 => regions_max_15_2_0,
        din16 => trunc_ln104_1_reg_6322,
        dout => tmp_16_fu_2881_p18);

    mux_164_32_1_1_U37 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_2_0,
        din1 => regions_min_1_2_0,
        din2 => regions_min_2_2_0,
        din3 => regions_min_3_2_0,
        din4 => regions_min_4_2_0,
        din5 => regions_min_5_2_0,
        din6 => regions_min_6_2_0,
        din7 => regions_min_7_2_0,
        din8 => regions_min_8_2_0,
        din9 => regions_min_9_2_0,
        din10 => regions_min_10_2_0,
        din11 => regions_min_11_2_0,
        din12 => regions_min_12_2_0,
        din13 => regions_min_13_2_0,
        din14 => regions_min_14_2_0,
        din15 => regions_min_15_2_0,
        din16 => trunc_ln104_1_reg_6322,
        dout => tmp_17_fu_2902_p18);

    mux_164_32_1_1_U38 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_3_0,
        din1 => regions_min_1_3_0,
        din2 => regions_min_2_3_0,
        din3 => regions_min_3_3_0,
        din4 => regions_min_4_3_0,
        din5 => regions_min_5_3_0,
        din6 => regions_min_6_3_0,
        din7 => regions_min_7_3_0,
        din8 => regions_min_8_3_0,
        din9 => regions_min_9_3_0,
        din10 => regions_min_10_3_0,
        din11 => regions_min_11_3_0,
        din12 => regions_min_12_3_0,
        din13 => regions_min_13_3_0,
        din14 => regions_min_14_3_0,
        din15 => regions_min_15_3_0,
        din16 => trunc_ln104_reg_6301,
        dout => tmp_21_fu_2923_p18);

    mux_164_32_1_1_U39 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_3_0,
        din1 => regions_min_1_3_0,
        din2 => regions_min_2_3_0,
        din3 => regions_min_3_3_0,
        din4 => regions_min_4_3_0,
        din5 => regions_min_5_3_0,
        din6 => regions_min_6_3_0,
        din7 => regions_min_7_3_0,
        din8 => regions_min_8_3_0,
        din9 => regions_min_9_3_0,
        din10 => regions_min_10_3_0,
        din11 => regions_min_11_3_0,
        din12 => regions_min_12_3_0,
        din13 => regions_min_13_3_0,
        din14 => regions_min_14_3_0,
        din15 => regions_min_15_3_0,
        din16 => trunc_ln104_1_reg_6322,
        dout => tmp_23_fu_2944_p18);

    mux_164_32_1_1_U40 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_3_0,
        din1 => regions_center_1_3_0,
        din2 => regions_center_2_3_0,
        din3 => regions_center_3_3_0,
        din4 => regions_center_4_3_0,
        din5 => regions_center_5_3_0,
        din6 => regions_center_6_3_0,
        din7 => regions_center_7_3_0,
        din8 => regions_center_8_3_0,
        din9 => regions_center_9_3_0,
        din10 => regions_center_10_3_0,
        din11 => regions_center_11_3_0,
        din12 => regions_center_12_3_0,
        din13 => regions_center_13_3_0,
        din14 => regions_center_14_3_0,
        din15 => regions_center_15_3_0,
        din16 => trunc_ln104_reg_6301,
        dout => tmp_18_fu_3081_p18);

    mux_164_32_1_1_U41 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_3_0,
        din1 => regions_center_1_3_0,
        din2 => regions_center_2_3_0,
        din3 => regions_center_3_3_0,
        din4 => regions_center_4_3_0,
        din5 => regions_center_5_3_0,
        din6 => regions_center_6_3_0,
        din7 => regions_center_7_3_0,
        din8 => regions_center_8_3_0,
        din9 => regions_center_9_3_0,
        din10 => regions_center_10_3_0,
        din11 => regions_center_11_3_0,
        din12 => regions_center_12_3_0,
        din13 => regions_center_13_3_0,
        din14 => regions_center_14_3_0,
        din15 => regions_center_15_3_0,
        din16 => trunc_ln104_1_reg_6322,
        dout => tmp_19_fu_3102_p18);

    mux_164_32_1_1_U42 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_3_0,
        din1 => regions_max_1_3_0,
        din2 => regions_max_2_3_0,
        din3 => regions_max_3_3_0,
        din4 => regions_max_4_3_0,
        din5 => regions_max_5_3_0,
        din6 => regions_max_6_3_0,
        din7 => regions_max_7_3_0,
        din8 => regions_max_8_3_0,
        din9 => regions_max_9_3_0,
        din10 => regions_max_10_3_0,
        din11 => regions_max_11_3_0,
        din12 => regions_max_12_3_0,
        din13 => regions_max_13_3_0,
        din14 => regions_max_14_3_0,
        din15 => regions_max_15_3_0,
        din16 => trunc_ln104_reg_6301,
        dout => tmp_20_fu_3123_p18);

    mux_164_32_1_1_U43 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_3_0,
        din1 => regions_max_1_3_0,
        din2 => regions_max_2_3_0,
        din3 => regions_max_3_3_0,
        din4 => regions_max_4_3_0,
        din5 => regions_max_5_3_0,
        din6 => regions_max_6_3_0,
        din7 => regions_max_7_3_0,
        din8 => regions_max_8_3_0,
        din9 => regions_max_9_3_0,
        din10 => regions_max_10_3_0,
        din11 => regions_max_11_3_0,
        din12 => regions_max_12_3_0,
        din13 => regions_max_13_3_0,
        din14 => regions_max_14_3_0,
        din15 => regions_max_15_3_0,
        din16 => trunc_ln104_1_reg_6322,
        dout => tmp_22_fu_3144_p18);

    mux_164_32_1_1_U44 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_4_0,
        din1 => regions_min_1_4_0,
        din2 => regions_min_2_4_0,
        din3 => regions_min_3_4_0,
        din4 => regions_min_4_4_0,
        din5 => regions_min_5_4_0,
        din6 => regions_min_6_4_0,
        din7 => regions_min_7_4_0,
        din8 => regions_min_8_4_0,
        din9 => regions_min_9_4_0,
        din10 => regions_min_10_4_0,
        din11 => regions_min_11_4_0,
        din12 => regions_min_12_4_0,
        din13 => regions_min_13_4_0,
        din14 => regions_min_14_4_0,
        din15 => regions_min_15_4_0,
        din16 => trunc_ln104_reg_6301,
        dout => tmp_27_fu_3165_p18);

    mux_164_32_1_1_U45 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_4_0,
        din1 => regions_min_1_4_0,
        din2 => regions_min_2_4_0,
        din3 => regions_min_3_4_0,
        din4 => regions_min_4_4_0,
        din5 => regions_min_5_4_0,
        din6 => regions_min_6_4_0,
        din7 => regions_min_7_4_0,
        din8 => regions_min_8_4_0,
        din9 => regions_min_9_4_0,
        din10 => regions_min_10_4_0,
        din11 => regions_min_11_4_0,
        din12 => regions_min_12_4_0,
        din13 => regions_min_13_4_0,
        din14 => regions_min_14_4_0,
        din15 => regions_min_15_4_0,
        din16 => trunc_ln104_1_reg_6322,
        dout => tmp_29_fu_3186_p18);

    mux_164_32_1_1_U46 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_5_0,
        din1 => regions_min_1_5_0,
        din2 => regions_min_2_5_0,
        din3 => regions_min_3_5_0,
        din4 => regions_min_4_5_0,
        din5 => regions_min_5_5_0,
        din6 => regions_min_6_5_0,
        din7 => regions_min_7_5_0,
        din8 => regions_min_8_5_0,
        din9 => regions_min_9_5_0,
        din10 => regions_min_10_5_0,
        din11 => regions_min_11_5_0,
        din12 => regions_min_12_5_0,
        din13 => regions_min_13_5_0,
        din14 => regions_min_14_5_0,
        din15 => regions_min_15_5_0,
        din16 => trunc_ln104_reg_6301,
        dout => tmp_33_fu_3303_p18);

    mux_164_32_1_1_U47 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_5_0,
        din1 => regions_min_1_5_0,
        din2 => regions_min_2_5_0,
        din3 => regions_min_3_5_0,
        din4 => regions_min_4_5_0,
        din5 => regions_min_5_5_0,
        din6 => regions_min_6_5_0,
        din7 => regions_min_7_5_0,
        din8 => regions_min_8_5_0,
        din9 => regions_min_9_5_0,
        din10 => regions_min_10_5_0,
        din11 => regions_min_11_5_0,
        din12 => regions_min_12_5_0,
        din13 => regions_min_13_5_0,
        din14 => regions_min_14_5_0,
        din15 => regions_min_15_5_0,
        din16 => trunc_ln104_1_reg_6322,
        dout => tmp_35_fu_3324_p18);

    mux_164_32_1_1_U48 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_4_0,
        din1 => regions_max_1_4_0,
        din2 => regions_max_2_4_0,
        din3 => regions_max_3_4_0,
        din4 => regions_max_4_4_0,
        din5 => regions_max_5_4_0,
        din6 => regions_max_6_4_0,
        din7 => regions_max_7_4_0,
        din8 => regions_max_8_4_0,
        din9 => regions_max_9_4_0,
        din10 => regions_max_10_4_0,
        din11 => regions_max_11_4_0,
        din12 => regions_max_12_4_0,
        din13 => regions_max_13_4_0,
        din14 => regions_max_14_4_0,
        din15 => regions_max_15_4_0,
        din16 => trunc_ln104_reg_6301,
        dout => tmp_26_fu_3445_p18);

    mux_164_32_1_1_U49 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_4_0,
        din1 => regions_max_1_4_0,
        din2 => regions_max_2_4_0,
        din3 => regions_max_3_4_0,
        din4 => regions_max_4_4_0,
        din5 => regions_max_5_4_0,
        din6 => regions_max_6_4_0,
        din7 => regions_max_7_4_0,
        din8 => regions_max_8_4_0,
        din9 => regions_max_9_4_0,
        din10 => regions_max_10_4_0,
        din11 => regions_max_11_4_0,
        din12 => regions_max_12_4_0,
        din13 => regions_max_13_4_0,
        din14 => regions_max_14_4_0,
        din15 => regions_max_15_4_0,
        din16 => trunc_ln104_1_reg_6322,
        dout => tmp_28_fu_3466_p18);

    mux_164_32_1_1_U50 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_4_0,
        din1 => regions_center_1_4_0,
        din2 => regions_center_2_4_0,
        din3 => regions_center_3_4_0,
        din4 => regions_center_4_4_0,
        din5 => regions_center_5_4_0,
        din6 => regions_center_6_4_0,
        din7 => regions_center_7_4_0,
        din8 => regions_center_8_4_0,
        din9 => regions_center_9_4_0,
        din10 => regions_center_10_4_0,
        din11 => regions_center_11_4_0,
        din12 => regions_center_12_4_0,
        din13 => regions_center_13_4_0,
        din14 => regions_center_14_4_0,
        din15 => regions_center_15_4_0,
        din16 => trunc_ln104_reg_6301,
        dout => tmp_24_fu_3487_p18);

    mux_164_32_1_1_U51 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_4_0,
        din1 => regions_center_1_4_0,
        din2 => regions_center_2_4_0,
        din3 => regions_center_3_4_0,
        din4 => regions_center_4_4_0,
        din5 => regions_center_5_4_0,
        din6 => regions_center_6_4_0,
        din7 => regions_center_7_4_0,
        din8 => regions_center_8_4_0,
        din9 => regions_center_9_4_0,
        din10 => regions_center_10_4_0,
        din11 => regions_center_11_4_0,
        din12 => regions_center_12_4_0,
        din13 => regions_center_13_4_0,
        din14 => regions_center_14_4_0,
        din15 => regions_center_15_4_0,
        din16 => trunc_ln104_1_reg_6322,
        dout => tmp_25_fu_3508_p18);

    mux_164_32_1_1_U52 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_5_0,
        din1 => regions_max_1_5_0,
        din2 => regions_max_2_5_0,
        din3 => regions_max_3_5_0,
        din4 => regions_max_4_5_0,
        din5 => regions_max_5_5_0,
        din6 => regions_max_6_5_0,
        din7 => regions_max_7_5_0,
        din8 => regions_max_8_5_0,
        din9 => regions_max_9_5_0,
        din10 => regions_max_10_5_0,
        din11 => regions_max_11_5_0,
        din12 => regions_max_12_5_0,
        din13 => regions_max_13_5_0,
        din14 => regions_max_14_5_0,
        din15 => regions_max_15_5_0,
        din16 => trunc_ln104_reg_6301,
        dout => tmp_32_fu_3610_p18);

    mux_164_32_1_1_U53 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_5_0,
        din1 => regions_max_1_5_0,
        din2 => regions_max_2_5_0,
        din3 => regions_max_3_5_0,
        din4 => regions_max_4_5_0,
        din5 => regions_max_5_5_0,
        din6 => regions_max_6_5_0,
        din7 => regions_max_7_5_0,
        din8 => regions_max_8_5_0,
        din9 => regions_max_9_5_0,
        din10 => regions_max_10_5_0,
        din11 => regions_max_11_5_0,
        din12 => regions_max_12_5_0,
        din13 => regions_max_13_5_0,
        din14 => regions_max_14_5_0,
        din15 => regions_max_15_5_0,
        din16 => trunc_ln104_1_reg_6322,
        dout => tmp_34_fu_3631_p18);

    mux_164_32_1_1_U54 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_5_0,
        din1 => regions_center_1_5_0,
        din2 => regions_center_2_5_0,
        din3 => regions_center_3_5_0,
        din4 => regions_center_4_5_0,
        din5 => regions_center_5_5_0,
        din6 => regions_center_6_5_0,
        din7 => regions_center_7_5_0,
        din8 => regions_center_8_5_0,
        din9 => regions_center_9_5_0,
        din10 => regions_center_10_5_0,
        din11 => regions_center_11_5_0,
        din12 => regions_center_12_5_0,
        din13 => regions_center_13_5_0,
        din14 => regions_center_14_5_0,
        din15 => regions_center_15_5_0,
        din16 => trunc_ln104_reg_6301,
        dout => tmp_30_fu_3733_p18);

    mux_164_32_1_1_U55 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_5_0,
        din1 => regions_center_1_5_0,
        din2 => regions_center_2_5_0,
        din3 => regions_center_3_5_0,
        din4 => regions_center_4_5_0,
        din5 => regions_center_5_5_0,
        din6 => regions_center_6_5_0,
        din7 => regions_center_7_5_0,
        din8 => regions_center_8_5_0,
        din9 => regions_center_9_5_0,
        din10 => regions_center_10_5_0,
        din11 => regions_center_11_5_0,
        din12 => regions_center_12_5_0,
        din13 => regions_center_13_5_0,
        din14 => regions_center_14_5_0,
        din15 => regions_center_15_5_0,
        din16 => trunc_ln104_1_reg_6322,
        dout => tmp_31_fu_3754_p18);

    flow_control_loop_pipe_sequential_init_U : component FaultDetector_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage7,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter10_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter8_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter9_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
            end if; 
        end if;
    end process;

    k_real_4_fu_648_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    k_real_4_fu_648 <= ap_const_lv32_1;
                elsif (((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    k_real_4_fu_648 <= k_real_3_fu_3795_p3;
                end if;
            end if; 
        end if;
    end process;

    merge_1_1_fu_644_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    merge_1_1_fu_644 <= ap_const_lv32_0;
                elsif (((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    merge_1_1_fu_644 <= i_real_2_fu_3803_p3;
                end if;
            end if; 
        end if;
    end process;

    merge_1_fu_632_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                merge_1_fu_632 <= ap_const_lv32_FFFFFFFF;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                merge_1_fu_632 <= merge_1_7_fu_4484_p3;
            end if; 
        end if;
    end process;

    merge_2_fu_636_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                merge_2_fu_636 <= ap_const_lv32_FFFFFFFF;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                merge_2_fu_636 <= merge_2_6_fu_4478_p3;
            end if; 
        end if;
    end process;

    score_fu_640_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                score_fu_640 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                score_fu_640 <= score_3_fu_4472_p3;
            end if; 
        end if;
    end process;

    tmp_other_fu_656_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                tmp_other_fu_656 <= ap_const_lv32_FFFFFFFF;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln1027_reg_6297_pp0_iter9_reg = ap_const_lv1_1))) then 
                tmp_other_fu_656 <= tmp_other_3_fu_4318_p3;
            end if; 
        end if;
    end process;

    tmp_score_fu_652_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                tmp_score_fu_652 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln1027_reg_6297_pp0_iter9_reg = ap_const_lv1_1))) then 
                tmp_score_fu_652 <= tmp_score_3_fu_4324_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                and_ln112_11_reg_6665 <= and_ln112_11_fu_3728_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                and_ln112_11_reg_6665_pp0_iter1_reg <= and_ln112_11_reg_6665;
                and_ln112_11_reg_6665_pp0_iter2_reg <= and_ln112_11_reg_6665_pp0_iter1_reg;
                mul_3_reg_6838_pp0_iter2_reg <= mul_3_reg_6838;
                mul_3_reg_6838_pp0_iter3_reg <= mul_3_reg_6838_pp0_iter2_reg;
                mul_3_reg_6838_pp0_iter4_reg <= mul_3_reg_6838_pp0_iter3_reg;
                ov_23_reg_6966_pp0_iter4_reg <= ov_23_reg_6966;
                overlap_5_reg_6991_pp0_iter6_reg <= overlap_5_reg_6991;
                overlap_5_reg_6991_pp0_iter7_reg <= overlap_5_reg_6991_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                and_ln112_1_reg_6552 <= and_ln112_1_fu_3220_p2;
                and_ln112_3_reg_6557 <= and_ln112_3_fu_3239_p2;
                icmp_ln112_10_reg_6572 <= icmp_ln112_10_fu_3291_p2;
                icmp_ln112_11_reg_6577 <= icmp_ln112_11_fu_3297_p2;
                icmp_ln112_8_reg_6562 <= icmp_ln112_8_fu_3279_p2;
                icmp_ln112_9_reg_6567 <= icmp_ln112_9_fu_3285_p2;
                tmp_33_reg_6592 <= tmp_33_fu_3303_p18;
                tmp_35_reg_6601 <= tmp_35_fu_3324_p18;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                and_ln112_1_reg_6552_pp0_iter1_reg <= and_ln112_1_reg_6552;
                and_ln112_1_reg_6552_pp0_iter2_reg <= and_ln112_1_reg_6552_pp0_iter1_reg;
                and_ln112_3_reg_6557_pp0_iter1_reg <= and_ln112_3_reg_6557;
                and_ln112_3_reg_6557_pp0_iter2_reg <= and_ln112_3_reg_6557_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                and_ln112_5_reg_6610 <= and_ln112_5_fu_3359_p2;
                and_ln112_7_reg_6615 <= and_ln112_7_fu_3440_p2;
                tmp_26_reg_6620 <= tmp_26_fu_3445_p18;
                tmp_28_reg_6625 <= tmp_28_fu_3466_p18;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                and_ln112_5_reg_6610_pp0_iter1_reg <= and_ln112_5_reg_6610;
                and_ln112_5_reg_6610_pp0_iter2_reg <= and_ln112_5_reg_6610_pp0_iter1_reg;
                and_ln112_7_reg_6615_pp0_iter1_reg <= and_ln112_7_reg_6615;
                and_ln112_7_reg_6615_pp0_iter2_reg <= and_ln112_7_reg_6615_pp0_iter1_reg;
                mul_1_reg_6792_pp0_iter2_reg <= mul_1_reg_6792;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                and_ln112_9_reg_6645 <= and_ln112_9_fu_3605_p2;
                tmp_24_reg_6635 <= tmp_24_fu_3487_p18;
                tmp_25_reg_6640 <= tmp_25_fu_3508_p18;
                tmp_32_reg_6650 <= tmp_32_fu_3610_p18;
                tmp_34_reg_6655 <= tmp_34_fu_3631_p18;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                and_ln112_9_reg_6645_pp0_iter1_reg <= and_ln112_9_reg_6645;
                and_ln112_9_reg_6645_pp0_iter2_reg <= and_ln112_9_reg_6645_pp0_iter1_reg;
                mul_2_reg_6812_pp0_iter2_reg <= mul_2_reg_6812;
                mul_5_reg_6873_pp0_iter3_reg <= mul_5_reg_6873;
                mul_5_reg_6873_pp0_iter4_reg <= mul_5_reg_6873_pp0_iter3_reg;
                mul_5_reg_6873_pp0_iter5_reg <= mul_5_reg_6873_pp0_iter4_reg;
                mul_5_reg_6873_pp0_iter6_reg <= mul_5_reg_6873_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                d1_1_reg_6721 <= grp_fu_2406_p2;
                d1_2_reg_6741 <= grp_fu_2422_p2;
                d2_1_reg_6726 <= grp_fu_2410_p2;
                sub2_reg_6716 <= grp_fu_18132_p_dout0;
                sub75_1_reg_6731 <= grp_fu_2414_p2;
                sub87_1_reg_6736 <= grp_fu_2418_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                d1_3_reg_6767 <= grp_fu_2418_p2;
                d2_2_reg_6746 <= grp_fu_18132_p_dout0;
                d2_3_reg_6772 <= grp_fu_2422_p2;
                d_3_reg_6761 <= grp_fu_2414_p2;
                sub75_2_reg_6751 <= grp_fu_2406_p2;
                sub87_2_reg_6756 <= grp_fu_2410_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                d1_4_reg_6797 <= grp_fu_18132_p_dout0;
                d2_4_reg_6802 <= grp_fu_2406_p2;
                mul_1_reg_6792 <= grp_fu_2431_p2;
                mul_reg_6787 <= grp_fu_18138_p_dout0;
                sub75_4_reg_6807 <= grp_fu_2410_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                d1_5_reg_6828 <= grp_fu_2410_p2;
                d2_5_reg_6833 <= grp_fu_2414_p2;
                d_4_reg_6817 <= grp_fu_18132_p_dout0;
                mul_2_reg_6812 <= grp_fu_18138_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                d1_reg_6695 <= grp_fu_2406_p2;
                d2_reg_6700 <= grp_fu_2410_p2;
                d_2_reg_6710 <= grp_fu_2422_p2;
                d_reg_6689 <= grp_fu_18132_p_dout0;
                sub_reg_6705 <= grp_fu_2414_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                d_5_reg_6843 <= grp_fu_18132_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_6297_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                distance_1_reg_6946 <= grp_fu_2418_p2;
                tmp_60_reg_6951 <= grp_fu_18148_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln1027_reg_6297_pp0_iter4_reg = ap_const_lv1_1))) then
                distance_2_reg_6976 <= grp_fu_2422_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln1027_reg_6297_pp0_iter5_reg = ap_const_lv1_1))) then
                distance_3_reg_6986 <= grp_fu_2414_p2;
                overlap_5_reg_6991 <= grp_fu_2431_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_6297_pp0_iter6_reg = ap_const_lv1_1))) then
                distance_4_reg_7003 <= grp_fu_2414_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                distance_reg_6854 <= grp_fu_2414_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                i_real_3_reg_6282 <= merge_1_1_fu_644;
                i_real_3_reg_6282_pp0_iter1_reg <= i_real_3_reg_6282;
                i_real_3_reg_6282_pp0_iter2_reg <= i_real_3_reg_6282_pp0_iter1_reg;
                i_real_3_reg_6282_pp0_iter3_reg <= i_real_3_reg_6282_pp0_iter2_reg;
                i_real_3_reg_6282_pp0_iter4_reg <= i_real_3_reg_6282_pp0_iter3_reg;
                i_real_3_reg_6282_pp0_iter5_reg <= i_real_3_reg_6282_pp0_iter4_reg;
                i_real_3_reg_6282_pp0_iter6_reg <= i_real_3_reg_6282_pp0_iter5_reg;
                i_real_3_reg_6282_pp0_iter7_reg <= i_real_3_reg_6282_pp0_iter6_reg;
                i_real_3_reg_6282_pp0_iter8_reg <= i_real_3_reg_6282_pp0_iter7_reg;
                i_real_3_reg_6282_pp0_iter9_reg <= i_real_3_reg_6282_pp0_iter8_reg;
                icmp_ln1027_reg_6297 <= icmp_ln1027_fu_2519_p2;
                icmp_ln1027_reg_6297_pp0_iter1_reg <= icmp_ln1027_reg_6297;
                icmp_ln1027_reg_6297_pp0_iter2_reg <= icmp_ln1027_reg_6297_pp0_iter1_reg;
                icmp_ln1027_reg_6297_pp0_iter3_reg <= icmp_ln1027_reg_6297_pp0_iter2_reg;
                icmp_ln1027_reg_6297_pp0_iter4_reg <= icmp_ln1027_reg_6297_pp0_iter3_reg;
                icmp_ln1027_reg_6297_pp0_iter5_reg <= icmp_ln1027_reg_6297_pp0_iter4_reg;
                icmp_ln1027_reg_6297_pp0_iter6_reg <= icmp_ln1027_reg_6297_pp0_iter5_reg;
                icmp_ln1027_reg_6297_pp0_iter7_reg <= icmp_ln1027_reg_6297_pp0_iter6_reg;
                icmp_ln1027_reg_6297_pp0_iter8_reg <= icmp_ln1027_reg_6297_pp0_iter7_reg;
                icmp_ln1027_reg_6297_pp0_iter9_reg <= icmp_ln1027_reg_6297_pp0_iter8_reg;
                k_real_5_reg_6290 <= k_real_4_fu_648;
                k_real_5_reg_6290_pp0_iter1_reg <= k_real_5_reg_6290;
                k_real_5_reg_6290_pp0_iter2_reg <= k_real_5_reg_6290_pp0_iter1_reg;
                k_real_5_reg_6290_pp0_iter3_reg <= k_real_5_reg_6290_pp0_iter2_reg;
                k_real_5_reg_6290_pp0_iter4_reg <= k_real_5_reg_6290_pp0_iter3_reg;
                k_real_5_reg_6290_pp0_iter5_reg <= k_real_5_reg_6290_pp0_iter4_reg;
                k_real_5_reg_6290_pp0_iter6_reg <= k_real_5_reg_6290_pp0_iter5_reg;
                k_real_5_reg_6290_pp0_iter7_reg <= k_real_5_reg_6290_pp0_iter6_reg;
                k_real_5_reg_6290_pp0_iter8_reg <= k_real_5_reg_6290_pp0_iter7_reg;
                tmp_67_reg_6998_pp0_iter7_reg <= tmp_67_reg_6998;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1019_reg_6680 <= icmp_ln1019_fu_3775_p2;
                tmp_30_reg_6670 <= tmp_30_fu_3733_p18;
                tmp_31_reg_6675 <= tmp_31_fu_3754_p18;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1019_reg_6680_pp0_iter10_reg <= icmp_ln1019_reg_6680_pp0_iter9_reg;
                icmp_ln1019_reg_6680_pp0_iter2_reg <= icmp_ln1019_reg_6680;
                icmp_ln1019_reg_6680_pp0_iter3_reg <= icmp_ln1019_reg_6680_pp0_iter2_reg;
                icmp_ln1019_reg_6680_pp0_iter4_reg <= icmp_ln1019_reg_6680_pp0_iter3_reg;
                icmp_ln1019_reg_6680_pp0_iter5_reg <= icmp_ln1019_reg_6680_pp0_iter4_reg;
                icmp_ln1019_reg_6680_pp0_iter6_reg <= icmp_ln1019_reg_6680_pp0_iter5_reg;
                icmp_ln1019_reg_6680_pp0_iter7_reg <= icmp_ln1019_reg_6680_pp0_iter6_reg;
                icmp_ln1019_reg_6680_pp0_iter8_reg <= icmp_ln1019_reg_6680_pp0_iter7_reg;
                icmp_ln1019_reg_6680_pp0_iter9_reg <= icmp_ln1019_reg_6680_pp0_iter8_reg;
                merge_1_4_reg_7049 <= merge_1_fu_632;
                merge_2_1_reg_7056 <= merge_2_fu_636;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                icmp_ln112_1_reg_6470 <= icmp_ln112_1_fu_3005_p2;
                icmp_ln112_2_reg_6475 <= icmp_ln112_2_fu_3011_p2;
                icmp_ln112_3_reg_6480 <= icmp_ln112_3_fu_3017_p2;
                icmp_ln112_4_reg_6490 <= icmp_ln112_4_fu_3057_p2;
                icmp_ln112_5_reg_6495 <= icmp_ln112_5_fu_3063_p2;
                icmp_ln112_6_reg_6500 <= icmp_ln112_6_fu_3069_p2;
                icmp_ln112_7_reg_6505 <= icmp_ln112_7_fu_3075_p2;
                icmp_ln112_reg_6465 <= icmp_ln112_fu_2999_p2;
                tmp_18_reg_6515 <= tmp_18_fu_3081_p18;
                tmp_19_reg_6520 <= tmp_19_fu_3102_p18;
                tmp_20_reg_6525 <= tmp_20_fu_3123_p18;
                tmp_22_reg_6530 <= tmp_22_fu_3144_p18;
                tmp_27_reg_6535 <= tmp_27_fu_3165_p18;
                tmp_29_reg_6544 <= tmp_29_fu_3186_p18;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                mul_3_reg_6838 <= grp_fu_18138_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul_4_reg_6849 <= grp_fu_18138_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul_4_reg_6849_pp0_iter3_reg <= mul_4_reg_6849;
                mul_4_reg_6849_pp0_iter4_reg <= mul_4_reg_6849_pp0_iter3_reg;
                mul_4_reg_6849_pp0_iter5_reg <= mul_4_reg_6849_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                mul_5_reg_6873 <= grp_fu_2431_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                ov_10_reg_6888 <= ov_10_fu_3834_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1027_reg_6297_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                ov_11_reg_6931 <= ov_11_fu_3996_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ov_14_reg_6905 <= ov_14_fu_3935_p3;
                ov_24_reg_6895 <= ov_24_fu_3881_p3;
                ov_7_reg_6900 <= ov_7_fu_3928_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln1027_reg_6297_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ov_15_reg_6941 <= ov_15_fu_4043_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                ov_18_reg_6917 <= ov_18_fu_3942_p3;
                ov_22_reg_6924 <= ov_22_fu_3949_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_6297_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                ov_19_reg_6956 <= ov_19_fu_4090_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_6297_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                ov_23_reg_6966 <= ov_23_fu_4137_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                ov_2_reg_6859 <= ov_2_fu_3820_p3;
                ov_6_reg_6866 <= ov_6_fu_3827_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln1027_reg_6297_pp0_iter4_reg = ap_const_lv1_1))) then
                overlap_3_reg_6971 <= grp_fu_2431_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_6297_pp0_iter4_reg = ap_const_lv1_1))) then
                overlap_4_reg_6981 <= grp_fu_2431_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln1027_reg_6297_pp0_iter7_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_0 = and_ln112_5_reg_6610_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_5_reg_6610_pp0_iter2_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_2445 <= grp_fu_2418_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_11_reg_6665) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_11_reg_6665) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then
                reg_2451 <= grp_fu_18132_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_1_reg_6552_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_1_reg_6552_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_9_reg_6645_pp0_iter2_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then
                reg_2456 <= grp_fu_2410_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_3_reg_6557_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_3_reg_6557_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then
                reg_2460 <= grp_fu_2414_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_9_reg_6645_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_0 = and_ln112_7_reg_6615_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_7_reg_6615_pp0_iter2_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then
                reg_2464 <= grp_fu_2406_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_11_reg_6665_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_11_reg_6665_pp0_iter2_reg) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_2468 <= grp_fu_2410_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln1027_reg_6297_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_6297_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_2472 <= grp_fu_18138_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1027_reg_6297_pp0_iter7_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                sc_2_reg_7008 <= sc_2_fu_4198_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln1027_reg_6297_pp0_iter9_reg = ap_const_lv1_1))) then
                score_load_reg_7041 <= score_fu_640;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                sub75_3_reg_6777 <= grp_fu_18132_p_dout0;
                sub87_3_reg_6782 <= grp_fu_2406_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln112_9_reg_6645) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                sub87_4_reg_6823 <= grp_fu_2406_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_10_reg_6414 <= tmp_10_fu_2818_p18;
                tmp_14_reg_6419 <= tmp_14_fu_2839_p18;
                tmp_15_reg_6424 <= tmp_15_fu_2860_p18;
                tmp_16_reg_6433 <= tmp_16_fu_2881_p18;
                tmp_17_reg_6438 <= tmp_17_fu_2902_p18;
                tmp_21_reg_6447 <= tmp_21_fu_2923_p18;
                tmp_23_reg_6456 <= tmp_23_fu_2944_p18;
                tmp_3_reg_6409 <= tmp_3_fu_2797_p18;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_fu_2519_p2 = ap_const_lv1_1))) then
                tmp_11_reg_6390 <= tmp_11_fu_2731_p18;
                tmp_12_reg_6399 <= tmp_12_fu_2753_p18;
                tmp_13_reg_6404 <= tmp_13_fu_2775_p18;
                tmp_1_reg_6371 <= tmp_1_fu_2665_p18;
                tmp_2_reg_6376 <= tmp_2_fu_2687_p18;
                tmp_4_reg_6381 <= tmp_4_fu_2709_p18;
                tmp_5_reg_6338 <= tmp_5_fu_2555_p18;
                tmp_6_reg_6343 <= tmp_6_fu_2577_p18;
                tmp_7_reg_6348 <= tmp_7_fu_2599_p18;
                tmp_8_reg_6357 <= tmp_8_fu_2621_p18;
                tmp_9_reg_6362 <= tmp_9_fu_2643_p18;
                tmp_s_reg_6317 <= tmp_s_fu_2529_p18;
                trunc_ln104_1_reg_6322 <= trunc_ln104_1_fu_2551_p1;
                trunc_ln104_reg_6301 <= trunc_ln104_fu_2525_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_38_reg_6485 <= grp_fu_18143_p_dout0;
                tmp_43_reg_6510 <= grp_fu_18148_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                tmp_40_reg_6878 <= grp_fu_18143_p_dout0;
                tmp_45_reg_6883 <= grp_fu_18148_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                tmp_48_reg_6582 <= grp_fu_18143_p_dout0;
                tmp_53_reg_6587 <= grp_fu_18148_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_50_reg_6912 <= grp_fu_18143_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1027_reg_6297_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_55_reg_6936 <= grp_fu_18143_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_58_reg_6630 <= grp_fu_18143_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_63_reg_6660 <= grp_fu_18143_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_6297_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_65_reg_6961 <= grp_fu_18148_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_reg_6297_pp0_iter5_reg = ap_const_lv1_1))) then
                tmp_67_reg_6998 <= grp_fu_18148_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_6297_pp0_iter8_reg = ap_const_lv1_1))) then
                tmp_70_reg_7022 <= grp_fu_18143_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_6297_pp0_iter9_reg = ap_const_lv1_1))) then
                tmp_73_reg_7062 <= grp_fu_18148_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_reg_6297_pp0_iter8_reg = ap_const_lv1_1))) then
                tmp_other_4_reg_7027 <= tmp_other_4_fu_4305_p3;
                tmp_score_4_reg_7033 <= tmp_score_4_fu_4312_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln1027_reg_6297_pp0_iter8_reg = ap_const_lv1_1))) then
                tmp_score_load_reg_7015 <= tmp_score_fu_652;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage7_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter10_stage0, ap_block_pp0_stage1_subdone, ap_idle_pp0_0to9, ap_idle_pp0_1to10, ap_done_pending_pp0, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_done_pending_pp0 = ap_const_logic_0) and (ap_idle_pp0_1to10 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    and_ln112_10_fu_3722_p2 <= (or_ln112_11_fu_3716_p2 and or_ln112_10_fu_3698_p2);
    and_ln112_11_fu_3728_p2 <= (tmp_63_reg_6660 and and_ln112_10_fu_3722_p2);
    and_ln112_1_fu_3220_p2 <= (or_ln112_fu_3207_p2 and and_ln112_fu_3215_p2);
    and_ln112_2_fu_3234_p2 <= (tmp_43_reg_6510 and or_ln112_3_fu_3230_p2);
    and_ln112_3_fu_3239_p2 <= (or_ln112_2_fu_3226_p2 and and_ln112_2_fu_3234_p2);
    and_ln112_4_fu_3353_p2 <= (or_ln112_5_fu_3349_p2 and or_ln112_4_fu_3345_p2);
    and_ln112_5_fu_3359_p2 <= (tmp_48_reg_6582 and and_ln112_4_fu_3353_p2);
    and_ln112_6_fu_3434_p2 <= (or_ln112_7_fu_3428_p2 and or_ln112_6_fu_3410_p2);
    and_ln112_7_fu_3440_p2 <= (tmp_53_reg_6587 and and_ln112_6_fu_3434_p2);
    and_ln112_8_fu_3599_p2 <= (or_ln112_9_fu_3593_p2 and or_ln112_8_fu_3575_p2);
    and_ln112_9_fu_3605_p2 <= (tmp_58_reg_6630 and and_ln112_8_fu_3599_p2);
    and_ln112_fu_3215_p2 <= (tmp_38_reg_6485 and or_ln112_1_fu_3211_p2);
    and_ln116_1_fu_3923_p2 <= (tmp_45_reg_6883 and or_ln116_1_fu_3917_p2);
    and_ln116_2_fu_3991_p2 <= (tmp_50_reg_6912 and or_ln116_2_fu_3985_p2);
    and_ln116_3_fu_4038_p2 <= (tmp_55_reg_6936 and or_ln116_3_fu_4032_p2);
    and_ln116_4_fu_4085_p2 <= (tmp_60_reg_6951 and or_ln116_4_fu_4079_p2);
    and_ln116_5_fu_4132_p2 <= (tmp_65_reg_6961 and or_ln116_5_fu_4126_p2);
    and_ln116_fu_3876_p2 <= (tmp_40_reg_6878 and or_ln116_fu_3870_p2);
    and_ln122_fu_4179_p2 <= (tmp_67_reg_6998_pp0_iter7_reg and or_ln122_fu_4173_p2);
    and_ln130_1_fu_4294_p2 <= (tmp_70_reg_7022 and and_ln130_fu_4288_p2);
    and_ln130_fu_4288_p2 <= (or_ln130_2_fu_4282_p2 and or_ln130_1_fu_4264_p2);
    and_ln139_1_fu_4443_p2 <= (tmp_73_reg_7062 and and_ln139_fu_4437_p2);
    and_ln139_fu_4437_p2 <= (or_ln139_2_fu_4431_p2 and or_ln139_1_fu_4413_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage7_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage6_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage7_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage6_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage7_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage5_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage6_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage7_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage4_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage5_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage6_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage7_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage3_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage4_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage5_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage6_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp0_stage7_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp0_stage2_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp0_stage3_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp0_stage4_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp0_stage5_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp0_stage6_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp0_stage7_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state82_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage7_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone, icmp_ln1027_reg_6297)
    begin
        if (((icmp_ln1027_reg_6297 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter10_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, icmp_ln1027_reg_6297_pp0_iter9_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_6297_pp0_iter9_reg = ap_const_lv1_0))) then 
            ap_condition_exit_pp0_iter10_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter10_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter10_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_done_pending_pp0_assign_proc : process(ap_loop_exit_ready, ap_loop_exit_ready_pp0_iter1_reg, ap_loop_exit_ready_pp0_iter2_reg, ap_loop_exit_ready_pp0_iter3_reg, ap_loop_exit_ready_pp0_iter4_reg, ap_loop_exit_ready_pp0_iter5_reg, ap_loop_exit_ready_pp0_iter6_reg, ap_loop_exit_ready_pp0_iter7_reg, ap_loop_exit_ready_pp0_iter8_reg, ap_loop_exit_ready_pp0_iter9_reg, ap_loop_exit_ready_pp0_iter10_reg)
    begin
        if (not(((ap_loop_exit_ready = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_0)))) then 
            ap_done_pending_pp0 <= ap_const_logic_1;
        else 
            ap_done_pending_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to9_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to9 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to10_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to10 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to10 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage7;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln112_10_fu_3652_p1 <= tmp_33_reg_6592;
    bitcast_ln112_11_fu_3669_p1 <= tmp_35_reg_6601;
    bitcast_ln112_1_fu_2982_p1 <= tmp_9_reg_6362;
    bitcast_ln112_2_fu_3023_p1 <= tmp_4_reg_6381;
    bitcast_ln112_3_fu_3040_p1 <= tmp_11_reg_6390;
    bitcast_ln112_4_fu_3245_p1 <= tmp_15_reg_6424;
    bitcast_ln112_5_fu_3262_p1 <= tmp_17_reg_6438;
    bitcast_ln112_6_fu_3364_p1 <= tmp_21_reg_6447;
    bitcast_ln112_7_fu_3381_p1 <= tmp_23_reg_6456;
    bitcast_ln112_8_fu_3529_p1 <= tmp_27_reg_6535;
    bitcast_ln112_9_fu_3546_p1 <= tmp_29_reg_6544;
    bitcast_ln112_fu_2965_p1 <= tmp_7_reg_6348;
    bitcast_ln116_1_fu_3888_p1 <= ov_6_reg_6866;
    bitcast_ln116_2_fu_3956_p1 <= ov_10_reg_6888;
    bitcast_ln116_3_fu_4003_p1 <= ov_14_reg_6905;
    bitcast_ln116_4_fu_4050_p1 <= ov_18_reg_6917;
    bitcast_ln116_5_fu_4097_p1 <= ov_22_reg_6924;
    bitcast_ln116_fu_3841_p1 <= ov_2_reg_6859;
    bitcast_ln122_fu_4144_p1 <= overlap_5_reg_6991_pp0_iter7_reg;
    bitcast_ln126_fu_4184_p1 <= reg_2445;
    bitcast_ln130_1_fu_4235_p1 <= tmp_score_load_reg_7015;
    bitcast_ln130_fu_4218_p1 <= sc_2_reg_7008;
    bitcast_ln139_1_fu_4384_p1 <= score_load_reg_7041;
    bitcast_ln139_fu_4367_p1 <= tmp_score_4_reg_7033;
    grp_fu_18132_p_ce <= ap_const_logic_1;
    grp_fu_18132_p_din0 <= grp_fu_2402_p0;
    grp_fu_18132_p_din1 <= grp_fu_2402_p1;
    grp_fu_18132_p_opcode <= ap_const_lv2_1(1 - 1 downto 0);
    grp_fu_18138_p_ce <= ap_const_logic_1;
    grp_fu_18138_p_din0 <= grp_fu_2427_p0;
    grp_fu_18138_p_din1 <= grp_fu_2427_p1;
    grp_fu_18143_p_ce <= ap_const_logic_1;
    grp_fu_18143_p_din0 <= grp_fu_2435_p0;
    grp_fu_18143_p_din1 <= grp_fu_2435_p1;
    grp_fu_18143_p_opcode <= grp_fu_2435_opcode;
    grp_fu_18148_p_ce <= ap_const_logic_1;
    grp_fu_18148_p_din0 <= grp_fu_2439_p0;
    grp_fu_18148_p_din1 <= grp_fu_2439_p1;
    grp_fu_18148_p_opcode <= grp_fu_2439_opcode;

    grp_fu_2402_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_6297, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, and_ln112_11_reg_6665, ap_CS_fsm_pp0_stage4, tmp_s_reg_6317, tmp_7_reg_6348, ap_CS_fsm_pp0_stage2, tmp_16_reg_6433, tmp_23_reg_6456, ap_CS_fsm_pp0_stage3, tmp_33_reg_6592, tmp_35_reg_6601, ap_CS_fsm_pp0_stage5, tmp_26_reg_6620, tmp_24_reg_6635, tmp_30_reg_6670, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2402_p0 <= tmp_30_reg_6670;
        elsif (((ap_const_lv1_0 = and_ln112_11_reg_6665) and (icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2402_p0 <= tmp_33_reg_6592;
        elsif (((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_lv1_1 = and_ln112_11_reg_6665) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2402_p0 <= tmp_35_reg_6601;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2402_p0 <= tmp_24_reg_6635;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2402_p0 <= tmp_26_reg_6620;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2402_p0 <= tmp_23_reg_6456;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2402_p0 <= tmp_16_reg_6433;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2402_p0 <= tmp_7_reg_6348;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2402_p0 <= tmp_s_reg_6317;
        else 
            grp_fu_2402_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2402_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_6297, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, and_ln112_11_reg_6665, ap_CS_fsm_pp0_stage4, tmp_5_reg_6338, tmp_9_reg_6362, ap_CS_fsm_pp0_stage2, tmp_17_reg_6438, tmp_21_reg_6447, ap_CS_fsm_pp0_stage3, tmp_27_reg_6535, tmp_33_reg_6592, tmp_35_reg_6601, ap_CS_fsm_pp0_stage5, tmp_25_reg_6640, tmp_31_reg_6675, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2402_p1 <= tmp_31_reg_6675;
        elsif (((ap_const_lv1_0 = and_ln112_11_reg_6665) and (icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2402_p1 <= tmp_35_reg_6601;
        elsif (((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_const_lv1_1 = and_ln112_11_reg_6665) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2402_p1 <= tmp_33_reg_6592;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2402_p1 <= tmp_25_reg_6640;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2402_p1 <= tmp_27_reg_6535;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2402_p1 <= tmp_21_reg_6447;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2402_p1 <= tmp_17_reg_6438;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2402_p1 <= tmp_9_reg_6362;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2402_p1 <= tmp_5_reg_6338;
        else 
            grp_fu_2402_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2406_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_6297_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, tmp_6_reg_6343, tmp_3_reg_6409, ap_CS_fsm_pp0_stage2, tmp_17_reg_6438, tmp_21_reg_6447, ap_CS_fsm_pp0_stage3, tmp_27_reg_6535, ap_CS_fsm_pp0_stage5, and_ln112_7_reg_6615_pp0_iter1_reg, tmp_28_reg_6625, d1_3_reg_6767, d2_3_reg_6772, d2_4_reg_6802, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2406_p0 <= d2_4_reg_6802;
        elsif (((ap_const_lv1_0 = and_ln112_7_reg_6615_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2406_p0 <= d2_3_reg_6772;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_7_reg_6615_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2406_p0 <= d1_3_reg_6767;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2406_p0 <= tmp_27_reg_6535;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2406_p0 <= tmp_28_reg_6625;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2406_p0 <= tmp_21_reg_6447;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2406_p0 <= tmp_17_reg_6438;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2406_p0 <= tmp_3_reg_6409;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2406_p0 <= tmp_6_reg_6343;
        else 
            grp_fu_2406_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2406_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_6297_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, tmp_7_reg_6348, tmp_4_reg_6381, ap_CS_fsm_pp0_stage2, tmp_15_reg_6424, tmp_23_reg_6456, ap_CS_fsm_pp0_stage3, tmp_29_reg_6544, ap_CS_fsm_pp0_stage5, and_ln112_7_reg_6615_pp0_iter1_reg, sub75_3_reg_6777, sub87_3_reg_6782, sub87_4_reg_6823, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2406_p1 <= sub87_4_reg_6823;
        elsif (((ap_const_lv1_0 = and_ln112_7_reg_6615_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2406_p1 <= sub87_3_reg_6782;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_7_reg_6615_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2406_p1 <= sub75_3_reg_6777;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_2406_p1 <= tmp_29_reg_6544;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2406_p1 <= tmp_23_reg_6456;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2406_p1 <= tmp_15_reg_6424;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2406_p1 <= tmp_4_reg_6381;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2406_p1 <= tmp_7_reg_6348;
        else 
            grp_fu_2406_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2410_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_6297_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, and_ln112_1_reg_6552_pp0_iter1_reg, tmp_8_reg_6357, ap_CS_fsm_pp0_stage2, tmp_10_reg_6414, tmp_15_reg_6424, ap_CS_fsm_pp0_stage3, tmp_29_reg_6544, ap_CS_fsm_pp0_stage5, tmp_32_reg_6650, and_ln112_11_reg_6665_pp0_iter1_reg, d1_reg_6695, d2_reg_6700, d1_4_reg_6797, d1_5_reg_6828, d2_5_reg_6833, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_lv1_0 = and_ln112_11_reg_6665_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2410_p0 <= d2_5_reg_6833;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_11_reg_6665_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2410_p0 <= d1_5_reg_6828;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2410_p0 <= d1_4_reg_6797;
        elsif (((ap_const_lv1_0 = and_ln112_1_reg_6552_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2410_p0 <= d2_reg_6700;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_1_reg_6552_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2410_p0 <= d1_reg_6695;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2410_p0 <= tmp_32_reg_6650;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2410_p0 <= tmp_29_reg_6544;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2410_p0 <= tmp_15_reg_6424;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2410_p0 <= tmp_10_reg_6414;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2410_p0 <= tmp_8_reg_6357;
        else 
            grp_fu_2410_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2410_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, reg_2451, icmp_ln1027_reg_6297_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, and_ln112_1_reg_6552_pp0_iter1_reg, tmp_9_reg_6362, tmp_11_reg_6390, ap_CS_fsm_pp0_stage2, tmp_17_reg_6438, ap_CS_fsm_pp0_stage3, tmp_27_reg_6535, tmp_33_reg_6592, ap_CS_fsm_pp0_stage5, and_ln112_11_reg_6665_pp0_iter1_reg, sub_reg_6705, sub2_reg_6716, sub75_4_reg_6807, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if ((((ap_const_lv1_0 = and_ln112_11_reg_6665_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_11_reg_6665_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2410_p1 <= reg_2451;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2410_p1 <= sub75_4_reg_6807;
        elsif (((ap_const_lv1_0 = and_ln112_1_reg_6552_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2410_p1 <= sub2_reg_6716;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_1_reg_6552_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2410_p1 <= sub_reg_6705;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2410_p1 <= tmp_33_reg_6592;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2410_p1 <= tmp_27_reg_6535;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2410_p1 <= tmp_17_reg_6438;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2410_p1 <= tmp_11_reg_6390;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2410_p1 <= tmp_9_reg_6362;
        else 
            grp_fu_2410_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2414_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_6297, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_6297_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, and_ln112_3_reg_6557_pp0_iter1_reg, icmp_ln1027_reg_6297_pp0_iter4_reg, icmp_ln1027_reg_6297_pp0_iter5_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage6_00001, ap_block_pp0_stage7_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001)
    begin
        if ((((ap_const_lv1_0 = and_ln112_3_reg_6557_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_3_reg_6557_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_2414_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_reg_6297_pp0_iter5_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_6297_pp0_iter4_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_2414_opcode <= ap_const_lv2_0;
        else 
            grp_fu_2414_opcode <= "XX";
        end if; 
    end process;


    grp_fu_2414_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_6297_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, and_ln112_3_reg_6557_pp0_iter1_reg, tmp_9_reg_6362, tmp_11_reg_6390, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, tmp_18_reg_6515, ap_CS_fsm_pp0_stage5, tmp_34_reg_6655, d1_1_reg_6721, d2_1_reg_6726, mul_reg_6787, distance_2_reg_6976, distance_3_reg_6986, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2414_p0 <= distance_3_reg_6986;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2414_p0 <= distance_2_reg_6976;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2414_p0 <= mul_reg_6787;
        elsif (((ap_const_lv1_0 = and_ln112_3_reg_6557_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2414_p0 <= d2_1_reg_6726;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_3_reg_6557_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2414_p0 <= d1_1_reg_6721;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2414_p0 <= tmp_34_reg_6655;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2414_p0 <= tmp_18_reg_6515;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2414_p0 <= tmp_11_reg_6390;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2414_p0 <= tmp_9_reg_6362;
        else 
            grp_fu_2414_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2414_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_6297_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, and_ln112_3_reg_6557_pp0_iter1_reg, tmp_7_reg_6348, tmp_4_reg_6381, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, tmp_19_reg_6520, tmp_35_reg_6601, ap_CS_fsm_pp0_stage5, sub75_1_reg_6731, sub87_1_reg_6736, mul_3_reg_6838_pp0_iter4_reg, mul_4_reg_6849_pp0_iter5_reg, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2414_p1 <= mul_4_reg_6849_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2414_p1 <= mul_3_reg_6838_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2414_p1 <= ap_const_lv32_0;
        elsif (((ap_const_lv1_0 = and_ln112_3_reg_6557_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2414_p1 <= sub87_1_reg_6736;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_3_reg_6557_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2414_p1 <= sub75_1_reg_6731;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2414_p1 <= tmp_35_reg_6601;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2414_p1 <= tmp_19_reg_6520;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2414_p1 <= tmp_4_reg_6381;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2414_p1 <= tmp_7_reg_6348;
        else 
            grp_fu_2414_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2418_opcode_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_6297, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_6297_pp0_iter2_reg, icmp_ln1027_reg_6297_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, icmp_ln1027_reg_6297_pp0_iter6_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, and_ln112_5_reg_6610_pp0_iter1_reg, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage6_00001, ap_block_pp0_stage7_00001, ap_block_pp0_stage1_00001)
    begin
        if ((((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_5_reg_6610_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_lv1_0 = and_ln112_5_reg_6610_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_2418_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_reg_6297_pp0_iter6_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_2418_opcode <= ap_const_lv2_0;
        else 
            grp_fu_2418_opcode <= "XX";
        end if; 
    end process;


    grp_fu_2418_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_6297_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, tmp_1_reg_6371, tmp_4_reg_6381, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, tmp_20_reg_6525, and_ln112_5_reg_6610_pp0_iter1_reg, d1_2_reg_6741, d2_2_reg_6746, distance_reg_6854, distance_4_reg_7003, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2418_p0 <= distance_4_reg_7003;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2418_p0 <= distance_reg_6854;
        elsif (((ap_const_lv1_0 = and_ln112_5_reg_6610_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2418_p0 <= d2_2_reg_6746;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_5_reg_6610_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2418_p0 <= d1_2_reg_6741;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2418_p0 <= tmp_20_reg_6525;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2418_p0 <= tmp_4_reg_6381;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2418_p0 <= tmp_1_reg_6371;
        else 
            grp_fu_2418_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2418_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_6297_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, tmp_2_reg_6376, tmp_11_reg_6390, ap_CS_fsm_pp0_stage2, tmp_21_reg_6447, ap_CS_fsm_pp0_stage3, and_ln112_5_reg_6610_pp0_iter1_reg, sub75_2_reg_6751, sub87_2_reg_6756, mul_1_reg_6792_pp0_iter2_reg, mul_5_reg_6873_pp0_iter6_reg, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2418_p1 <= mul_5_reg_6873_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2418_p1 <= mul_1_reg_6792_pp0_iter2_reg;
        elsif (((ap_const_lv1_0 = and_ln112_5_reg_6610_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2418_p1 <= sub87_2_reg_6756;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_6297_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_5_reg_6610_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2418_p1 <= sub75_2_reg_6751;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2418_p1 <= tmp_21_reg_6447;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2418_p1 <= tmp_11_reg_6390;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2418_p1 <= tmp_2_reg_6376;
        else 
            grp_fu_2418_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2422_opcode_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, icmp_ln1027_reg_6297, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, icmp_ln1027_reg_6297_pp0_iter3_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage6_00001)
    begin
        if ((((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_2422_opcode <= ap_const_lv2_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (icmp_ln1027_reg_6297_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2422_opcode <= ap_const_lv2_0;
        else 
            grp_fu_2422_opcode <= "XX";
        end if; 
    end process;


    grp_fu_2422_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, tmp_12_reg_6399, ap_CS_fsm_pp0_stage2, tmp_14_reg_6419, ap_CS_fsm_pp0_stage3, tmp_22_reg_6530, distance_1_reg_6946, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2422_p0 <= distance_1_reg_6946;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2422_p0 <= tmp_22_reg_6530;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2422_p0 <= tmp_14_reg_6419;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2422_p0 <= tmp_12_reg_6399;
        else 
            grp_fu_2422_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2422_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, tmp_13_reg_6404, ap_CS_fsm_pp0_stage2, tmp_15_reg_6424, tmp_23_reg_6456, ap_CS_fsm_pp0_stage3, mul_2_reg_6812_pp0_iter2_reg, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2422_p1 <= mul_2_reg_6812_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2422_p1 <= tmp_23_reg_6456;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2422_p1 <= tmp_15_reg_6424;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2422_p1 <= tmp_13_reg_6404;
        else 
            grp_fu_2422_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2427_p0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, reg_2472, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, d_reg_6689, d_2_reg_6710, d_3_reg_6761, d_4_reg_6817, ov_24_reg_6895, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2427_p0 <= reg_2472;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2427_p0 <= ov_24_reg_6895;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2427_p0 <= d_4_reg_6817;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2427_p0 <= d_3_reg_6761;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2427_p0 <= d_2_reg_6710;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2427_p0 <= d_reg_6689;
        else 
            grp_fu_2427_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2427_p1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, d_reg_6689, d_2_reg_6710, d_3_reg_6761, d_4_reg_6817, ov_7_reg_6900, ov_11_reg_6931, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2427_p1 <= ov_11_reg_6931;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2427_p1 <= ov_7_reg_6900;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2427_p1 <= d_4_reg_6817;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2427_p1 <= d_3_reg_6761;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2427_p1 <= d_2_reg_6710;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2427_p1 <= d_reg_6689;
        else 
            grp_fu_2427_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2431_p0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, reg_2445, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, reg_2472, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, d_5_reg_6843, overlap_3_reg_6971, overlap_4_reg_6981, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2431_p0 <= overlap_4_reg_6981;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2431_p0 <= overlap_3_reg_6971;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2431_p0 <= reg_2472;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2431_p0 <= d_5_reg_6843;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2431_p0 <= reg_2445;
        else 
            grp_fu_2431_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2431_p1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, reg_2445, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, d_5_reg_6843, ov_15_reg_6941, ov_19_reg_6956, ov_23_reg_6966_pp0_iter4_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2431_p1 <= ov_23_reg_6966_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2431_p1 <= ov_19_reg_6956;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2431_p1 <= ov_15_reg_6941;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2431_p1 <= d_5_reg_6843;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2431_p1 <= reg_2445;
        else 
            grp_fu_2431_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2435_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_6297, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_6297_pp0_iter2_reg, ap_CS_fsm_pp0_stage4, icmp_ln1027_reg_6297_pp0_iter8_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage6_00001, ap_block_pp0_stage7_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln1027_reg_6297_pp0_iter8_reg = ap_const_lv1_1))) then 
            grp_fu_2435_opcode <= ap_const_lv5_2;
        elsif ((((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_2435_opcode <= ap_const_lv5_4;
        else 
            grp_fu_2435_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_2435_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, tmp_7_reg_6348, ap_CS_fsm_pp0_stage2, tmp_15_reg_6424, ap_CS_fsm_pp0_stage3, tmp_27_reg_6535, tmp_33_reg_6592, ap_CS_fsm_pp0_stage5, ov_2_reg_6859, ov_10_reg_6888, ov_14_reg_6905, sc_2_reg_7008, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2435_p0 <= sc_2_reg_7008;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2435_p0 <= ov_14_reg_6905;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2435_p0 <= ov_10_reg_6888;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2435_p0 <= ov_2_reg_6859;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2435_p0 <= tmp_33_reg_6592;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2435_p0 <= tmp_27_reg_6535;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2435_p0 <= tmp_15_reg_6424;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2435_p0 <= tmp_7_reg_6348;
        else 
            grp_fu_2435_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2435_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, tmp_9_reg_6362, ap_CS_fsm_pp0_stage2, tmp_17_reg_6438, ap_CS_fsm_pp0_stage3, tmp_29_reg_6544, tmp_35_reg_6601, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage1, tmp_score_fu_652, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2435_p1 <= tmp_score_fu_652;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_2435_p1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2435_p1 <= tmp_35_reg_6601;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2435_p1 <= tmp_29_reg_6544;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2435_p1 <= tmp_17_reg_6438;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2435_p1 <= tmp_9_reg_6362;
        else 
            grp_fu_2435_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2439_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_6297, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_6297_pp0_iter2_reg, ap_CS_fsm_pp0_stage4, icmp_ln1027_reg_6297_pp0_iter3_reg, icmp_ln1027_reg_6297_pp0_iter5_reg, icmp_ln1027_reg_6297_pp0_iter9_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage6_00001, ap_block_pp0_stage7_00001, ap_block_pp0_stage0_00001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_6297_pp0_iter5_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln1027_reg_6297_pp0_iter9_reg = ap_const_lv1_1)))) then 
            grp_fu_2439_opcode <= ap_const_lv5_2;
        elsif ((((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_6297 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (icmp_ln1027_reg_6297_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (icmp_ln1027_reg_6297_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (icmp_ln1027_reg_6297_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_2439_opcode <= ap_const_lv5_4;
        else 
            grp_fu_2439_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_2439_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, tmp_4_reg_6381, ap_CS_fsm_pp0_stage2, tmp_21_reg_6447, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ov_6_reg_6866, ov_18_reg_6917, ov_22_reg_6924, overlap_5_reg_6991, tmp_score_4_reg_7033, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2439_p0 <= tmp_score_4_reg_7033;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2439_p0 <= overlap_5_reg_6991;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2439_p0 <= ov_22_reg_6924;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2439_p0 <= ov_18_reg_6917;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2439_p0 <= ov_6_reg_6866;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2439_p0 <= tmp_21_reg_6447;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2439_p0 <= tmp_4_reg_6381;
        else 
            grp_fu_2439_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2439_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, tmp_11_reg_6390, ap_CS_fsm_pp0_stage2, tmp_23_reg_6456, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage0, score_fu_640, ap_block_pp0_stage7, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2439_p1 <= score_fu_640;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_2439_p1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2439_p1 <= tmp_23_reg_6456;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2439_p1 <= tmp_11_reg_6390;
        else 
            grp_fu_2439_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_real_2_fu_3803_p3 <= 
        i_real_fu_3780_p2 when (icmp_ln1019_fu_3775_p2(0) = '1') else 
        i_real_3_reg_6282;
    i_real_fu_3780_p2 <= std_logic_vector(unsigned(i_real_3_reg_6282) + unsigned(ap_const_lv32_1));
    icmp_ln1019_fu_3775_p2 <= "1" when (k_real_5_reg_6290 = ap_const_lv32_F) else "0";
    icmp_ln1027_fu_2519_p2 <= "1" when (signed(merge_1_1_fu_644) < signed(ap_const_lv32_F)) else "0";
    icmp_ln112_10_fu_3291_p2 <= "0" when (tmp_47_fu_3265_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_11_fu_3297_p2 <= "1" when (trunc_ln112_5_fu_3275_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_12_fu_3398_p2 <= "0" when (tmp_51_fu_3367_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_13_fu_3404_p2 <= "1" when (trunc_ln112_6_fu_3377_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_14_fu_3416_p2 <= "0" when (tmp_52_fu_3384_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_15_fu_3422_p2 <= "1" when (trunc_ln112_7_fu_3394_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_16_fu_3563_p2 <= "0" when (tmp_56_fu_3532_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_17_fu_3569_p2 <= "1" when (trunc_ln112_8_fu_3542_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_18_fu_3581_p2 <= "0" when (tmp_57_fu_3549_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_19_fu_3587_p2 <= "1" when (trunc_ln112_9_fu_3559_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_1_fu_3005_p2 <= "1" when (trunc_ln112_fu_2978_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_20_fu_3686_p2 <= "0" when (tmp_61_fu_3655_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_21_fu_3692_p2 <= "1" when (trunc_ln112_10_fu_3665_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_22_fu_3704_p2 <= "0" when (tmp_62_fu_3672_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_23_fu_3710_p2 <= "1" when (trunc_ln112_11_fu_3682_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_2_fu_3011_p2 <= "0" when (tmp_37_fu_2985_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_3_fu_3017_p2 <= "1" when (trunc_ln112_1_fu_2995_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_4_fu_3057_p2 <= "0" when (tmp_41_fu_3026_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_5_fu_3063_p2 <= "1" when (trunc_ln112_2_fu_3036_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_6_fu_3069_p2 <= "0" when (tmp_42_fu_3043_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_7_fu_3075_p2 <= "1" when (trunc_ln112_3_fu_3053_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_8_fu_3279_p2 <= "0" when (tmp_46_fu_3248_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_9_fu_3285_p2 <= "1" when (trunc_ln112_4_fu_3258_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_fu_2999_p2 <= "0" when (tmp_36_fu_2968_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_10_fu_4114_p2 <= "0" when (tmp_64_fu_4100_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_11_fu_4120_p2 <= "1" when (trunc_ln116_5_fu_4110_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_1_fu_3864_p2 <= "1" when (trunc_ln116_fu_3854_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_2_fu_3905_p2 <= "0" when (tmp_44_fu_3891_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_3_fu_3911_p2 <= "1" when (trunc_ln116_1_fu_3901_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_4_fu_3973_p2 <= "0" when (tmp_49_fu_3959_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_5_fu_3979_p2 <= "1" when (trunc_ln116_2_fu_3969_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_6_fu_4020_p2 <= "0" when (tmp_54_fu_4006_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_7_fu_4026_p2 <= "1" when (trunc_ln116_3_fu_4016_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_8_fu_4067_p2 <= "0" when (tmp_59_fu_4053_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_9_fu_4073_p2 <= "1" when (trunc_ln116_4_fu_4063_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_fu_3858_p2 <= "0" when (tmp_39_fu_3844_p4 = ap_const_lv8_FF) else "1";
    icmp_ln122_1_fu_4167_p2 <= "1" when (trunc_ln122_fu_4157_p1 = ap_const_lv23_0) else "0";
    icmp_ln122_fu_4161_p2 <= "0" when (tmp_66_fu_4147_p4 = ap_const_lv8_FF) else "1";
    icmp_ln130_1_fu_4252_p2 <= "0" when (tmp_68_fu_4221_p4 = ap_const_lv8_FF) else "1";
    icmp_ln130_2_fu_4258_p2 <= "1" when (trunc_ln130_fu_4231_p1 = ap_const_lv23_0) else "0";
    icmp_ln130_3_fu_4270_p2 <= "0" when (tmp_69_fu_4238_p4 = ap_const_lv8_FF) else "1";
    icmp_ln130_4_fu_4276_p2 <= "1" when (trunc_ln130_1_fu_4248_p1 = ap_const_lv23_0) else "0";
    icmp_ln130_fu_4212_p2 <= "1" when (tmp_other_fu_656 = ap_const_lv32_FFFFFFFF) else "0";
    icmp_ln139_1_fu_4407_p2 <= "1" when (trunc_ln139_fu_4380_p1 = ap_const_lv23_0) else "0";
    icmp_ln139_2_fu_4419_p2 <= "0" when (tmp_72_fu_4387_p4 = ap_const_lv8_FF) else "1";
    icmp_ln139_3_fu_4425_p2 <= "1" when (trunc_ln139_1_fu_4397_p1 = ap_const_lv23_0) else "0";
    icmp_ln139_fu_4401_p2 <= "0" when (tmp_71_fu_4370_p4 = ap_const_lv8_FF) else "1";
    k_real_2_fu_3790_p2 <= std_logic_vector(unsigned(k_real_5_reg_6290) + unsigned(ap_const_lv32_1));
    k_real_3_fu_3795_p3 <= 
        k_real_fu_3785_p2 when (icmp_ln1019_fu_3775_p2(0) = '1') else 
        k_real_2_fu_3790_p2;
    k_real_fu_3785_p2 <= std_logic_vector(unsigned(i_real_3_reg_6282) + unsigned(ap_const_lv32_2));
    merge_1_6_fu_4466_p3 <= 
        i_real_3_reg_6282_pp0_iter9_reg when (or_ln139_fu_4448_p2(0) = '1') else 
        merge_1_4_reg_7049;
    merge_1_7_fu_4484_p3 <= 
        merge_1_6_fu_4466_p3 when (icmp_ln1019_reg_6680_pp0_iter10_reg(0) = '1') else 
        merge_1_4_reg_7049;
    merge_1_out <= merge_1_fu_632(4 - 1 downto 0);

    merge_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1027_reg_6297_pp0_iter9_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_6297_pp0_iter9_reg = ap_const_lv1_0))) then 
            merge_1_out_ap_vld <= ap_const_logic_1;
        else 
            merge_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    merge_2_5_fu_4460_p3 <= 
        tmp_other_4_reg_7027 when (or_ln139_fu_4448_p2(0) = '1') else 
        merge_2_1_reg_7056;
    merge_2_6_fu_4478_p3 <= 
        merge_2_5_fu_4460_p3 when (icmp_ln1019_reg_6680_pp0_iter10_reg(0) = '1') else 
        merge_2_1_reg_7056;
    merge_2_out <= merge_2_fu_636(4 - 1 downto 0);

    merge_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1027_reg_6297_pp0_iter9_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_6297_pp0_iter9_reg = ap_const_lv1_0))) then 
            merge_2_out_ap_vld <= ap_const_logic_1;
        else 
            merge_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    or_ln112_10_fu_3698_p2 <= (icmp_ln112_21_fu_3692_p2 or icmp_ln112_20_fu_3686_p2);
    or_ln112_11_fu_3716_p2 <= (icmp_ln112_23_fu_3710_p2 or icmp_ln112_22_fu_3704_p2);
    or_ln112_1_fu_3211_p2 <= (icmp_ln112_3_reg_6480 or icmp_ln112_2_reg_6475);
    or_ln112_2_fu_3226_p2 <= (icmp_ln112_5_reg_6495 or icmp_ln112_4_reg_6490);
    or_ln112_3_fu_3230_p2 <= (icmp_ln112_7_reg_6505 or icmp_ln112_6_reg_6500);
    or_ln112_4_fu_3345_p2 <= (icmp_ln112_9_reg_6567 or icmp_ln112_8_reg_6562);
    or_ln112_5_fu_3349_p2 <= (icmp_ln112_11_reg_6577 or icmp_ln112_10_reg_6572);
    or_ln112_6_fu_3410_p2 <= (icmp_ln112_13_fu_3404_p2 or icmp_ln112_12_fu_3398_p2);
    or_ln112_7_fu_3428_p2 <= (icmp_ln112_15_fu_3422_p2 or icmp_ln112_14_fu_3416_p2);
    or_ln112_8_fu_3575_p2 <= (icmp_ln112_17_fu_3569_p2 or icmp_ln112_16_fu_3563_p2);
    or_ln112_9_fu_3593_p2 <= (icmp_ln112_19_fu_3587_p2 or icmp_ln112_18_fu_3581_p2);
    or_ln112_fu_3207_p2 <= (icmp_ln112_reg_6465 or icmp_ln112_1_reg_6470);
    or_ln116_1_fu_3917_p2 <= (icmp_ln116_3_fu_3911_p2 or icmp_ln116_2_fu_3905_p2);
    or_ln116_2_fu_3985_p2 <= (icmp_ln116_5_fu_3979_p2 or icmp_ln116_4_fu_3973_p2);
    or_ln116_3_fu_4032_p2 <= (icmp_ln116_7_fu_4026_p2 or icmp_ln116_6_fu_4020_p2);
    or_ln116_4_fu_4079_p2 <= (icmp_ln116_9_fu_4073_p2 or icmp_ln116_8_fu_4067_p2);
    or_ln116_5_fu_4126_p2 <= (icmp_ln116_11_fu_4120_p2 or icmp_ln116_10_fu_4114_p2);
    or_ln116_fu_3870_p2 <= (icmp_ln116_fu_3858_p2 or icmp_ln116_1_fu_3864_p2);
    or_ln122_fu_4173_p2 <= (icmp_ln122_fu_4161_p2 or icmp_ln122_1_fu_4167_p2);
    or_ln130_1_fu_4264_p2 <= (icmp_ln130_2_fu_4258_p2 or icmp_ln130_1_fu_4252_p2);
    or_ln130_2_fu_4282_p2 <= (icmp_ln130_4_fu_4276_p2 or icmp_ln130_3_fu_4270_p2);
    or_ln130_fu_4299_p2 <= (icmp_ln130_fu_4212_p2 or and_ln130_1_fu_4294_p2);
    or_ln139_1_fu_4413_p2 <= (icmp_ln139_fu_4401_p2 or icmp_ln139_1_fu_4407_p2);
    or_ln139_2_fu_4431_p2 <= (icmp_ln139_3_fu_4425_p2 or icmp_ln139_2_fu_4419_p2);
    or_ln139_fu_4448_p2 <= (tmp_fu_4360_p3 or and_ln139_1_fu_4443_p2);
    ov_10_fu_3834_p3 <= 
        reg_2445 when (and_ln112_5_reg_6610_pp0_iter2_reg(0) = '1') else 
        reg_2445;
    ov_11_fu_3996_p3 <= 
        ap_const_lv32_0 when (and_ln116_2_fu_3991_p2(0) = '1') else 
        ov_10_reg_6888;
    ov_14_fu_3935_p3 <= 
        reg_2464 when (and_ln112_7_reg_6615_pp0_iter2_reg(0) = '1') else 
        reg_2464;
    ov_15_fu_4043_p3 <= 
        ap_const_lv32_0 when (and_ln116_3_fu_4038_p2(0) = '1') else 
        ov_14_reg_6905;
    ov_18_fu_3942_p3 <= 
        reg_2456 when (and_ln112_9_reg_6645_pp0_iter2_reg(0) = '1') else 
        reg_2464;
    ov_19_fu_4090_p3 <= 
        ap_const_lv32_0 when (and_ln116_4_fu_4085_p2(0) = '1') else 
        ov_18_reg_6917;
    ov_22_fu_3949_p3 <= 
        reg_2468 when (and_ln112_11_reg_6665_pp0_iter2_reg(0) = '1') else 
        reg_2468;
    ov_23_fu_4137_p3 <= 
        ap_const_lv32_0 when (and_ln116_5_fu_4132_p2(0) = '1') else 
        ov_22_reg_6924;
    ov_24_fu_3881_p3 <= 
        ap_const_lv32_0 when (and_ln116_fu_3876_p2(0) = '1') else 
        ov_2_reg_6859;
    ov_2_fu_3820_p3 <= 
        reg_2456 when (and_ln112_1_reg_6552_pp0_iter2_reg(0) = '1') else 
        reg_2456;
    ov_6_fu_3827_p3 <= 
        reg_2460 when (and_ln112_3_reg_6557_pp0_iter2_reg(0) = '1') else 
        reg_2460;
    ov_7_fu_3928_p3 <= 
        ap_const_lv32_0 when (and_ln116_1_fu_3923_p2(0) = '1') else 
        ov_6_reg_6866;
    sc_2_fu_4198_p3 <= 
        overlap_5_reg_6991_pp0_iter7_reg when (and_ln122_fu_4179_p2(0) = '1') else 
        sc_fu_4194_p1;
    sc_fu_4194_p1 <= xor_ln126_fu_4188_p2;
    score_2_fu_4454_p3 <= 
        tmp_score_4_reg_7033 when (or_ln139_fu_4448_p2(0) = '1') else 
        score_load_reg_7041;
    score_3_fu_4472_p3 <= 
        score_2_fu_4454_p3 when (icmp_ln1019_reg_6680_pp0_iter10_reg(0) = '1') else 
        score_load_reg_7041;
    tmp_36_fu_2968_p4 <= bitcast_ln112_fu_2965_p1(30 downto 23);
    tmp_37_fu_2985_p4 <= bitcast_ln112_1_fu_2982_p1(30 downto 23);
    tmp_39_fu_3844_p4 <= bitcast_ln116_fu_3841_p1(30 downto 23);
    tmp_41_fu_3026_p4 <= bitcast_ln112_2_fu_3023_p1(30 downto 23);
    tmp_42_fu_3043_p4 <= bitcast_ln112_3_fu_3040_p1(30 downto 23);
    tmp_44_fu_3891_p4 <= bitcast_ln116_1_fu_3888_p1(30 downto 23);
    tmp_46_fu_3248_p4 <= bitcast_ln112_4_fu_3245_p1(30 downto 23);
    tmp_47_fu_3265_p4 <= bitcast_ln112_5_fu_3262_p1(30 downto 23);
    tmp_49_fu_3959_p4 <= bitcast_ln116_2_fu_3956_p1(30 downto 23);
    tmp_51_fu_3367_p4 <= bitcast_ln112_6_fu_3364_p1(30 downto 23);
    tmp_52_fu_3384_p4 <= bitcast_ln112_7_fu_3381_p1(30 downto 23);
    tmp_54_fu_4006_p4 <= bitcast_ln116_3_fu_4003_p1(30 downto 23);
    tmp_56_fu_3532_p4 <= bitcast_ln112_8_fu_3529_p1(30 downto 23);
    tmp_57_fu_3549_p4 <= bitcast_ln112_9_fu_3546_p1(30 downto 23);
    tmp_59_fu_4053_p4 <= bitcast_ln116_4_fu_4050_p1(30 downto 23);
    tmp_61_fu_3655_p4 <= bitcast_ln112_10_fu_3652_p1(30 downto 23);
    tmp_62_fu_3672_p4 <= bitcast_ln112_11_fu_3669_p1(30 downto 23);
    tmp_64_fu_4100_p4 <= bitcast_ln116_5_fu_4097_p1(30 downto 23);
    tmp_66_fu_4147_p4 <= bitcast_ln122_fu_4144_p1(30 downto 23);
    tmp_68_fu_4221_p4 <= bitcast_ln130_fu_4218_p1(30 downto 23);
    tmp_69_fu_4238_p4 <= bitcast_ln130_1_fu_4235_p1(30 downto 23);
    tmp_71_fu_4370_p4 <= bitcast_ln139_fu_4367_p1(30 downto 23);
    tmp_72_fu_4387_p4 <= bitcast_ln139_1_fu_4384_p1(30 downto 23);
    tmp_fu_4360_p3 <= merge_1_4_reg_7049(31 downto 31);
    tmp_other_3_fu_4318_p3 <= 
        ap_const_lv32_FFFFFFFF when (icmp_ln1019_reg_6680_pp0_iter9_reg(0) = '1') else 
        tmp_other_4_reg_7027;
    tmp_other_4_fu_4305_p3 <= 
        k_real_5_reg_6290_pp0_iter8_reg when (or_ln130_fu_4299_p2(0) = '1') else 
        tmp_other_fu_656;
    tmp_score_3_fu_4324_p3 <= 
        ap_const_lv32_0 when (icmp_ln1019_reg_6680_pp0_iter9_reg(0) = '1') else 
        tmp_score_4_reg_7033;
    tmp_score_4_fu_4312_p3 <= 
        sc_2_reg_7008 when (or_ln130_fu_4299_p2(0) = '1') else 
        tmp_score_load_reg_7015;
    trunc_ln104_1_fu_2551_p1 <= k_real_4_fu_648(4 - 1 downto 0);
    trunc_ln104_fu_2525_p1 <= merge_1_1_fu_644(4 - 1 downto 0);
    trunc_ln112_10_fu_3665_p1 <= bitcast_ln112_10_fu_3652_p1(23 - 1 downto 0);
    trunc_ln112_11_fu_3682_p1 <= bitcast_ln112_11_fu_3669_p1(23 - 1 downto 0);
    trunc_ln112_1_fu_2995_p1 <= bitcast_ln112_1_fu_2982_p1(23 - 1 downto 0);
    trunc_ln112_2_fu_3036_p1 <= bitcast_ln112_2_fu_3023_p1(23 - 1 downto 0);
    trunc_ln112_3_fu_3053_p1 <= bitcast_ln112_3_fu_3040_p1(23 - 1 downto 0);
    trunc_ln112_4_fu_3258_p1 <= bitcast_ln112_4_fu_3245_p1(23 - 1 downto 0);
    trunc_ln112_5_fu_3275_p1 <= bitcast_ln112_5_fu_3262_p1(23 - 1 downto 0);
    trunc_ln112_6_fu_3377_p1 <= bitcast_ln112_6_fu_3364_p1(23 - 1 downto 0);
    trunc_ln112_7_fu_3394_p1 <= bitcast_ln112_7_fu_3381_p1(23 - 1 downto 0);
    trunc_ln112_8_fu_3542_p1 <= bitcast_ln112_8_fu_3529_p1(23 - 1 downto 0);
    trunc_ln112_9_fu_3559_p1 <= bitcast_ln112_9_fu_3546_p1(23 - 1 downto 0);
    trunc_ln112_fu_2978_p1 <= bitcast_ln112_fu_2965_p1(23 - 1 downto 0);
    trunc_ln116_1_fu_3901_p1 <= bitcast_ln116_1_fu_3888_p1(23 - 1 downto 0);
    trunc_ln116_2_fu_3969_p1 <= bitcast_ln116_2_fu_3956_p1(23 - 1 downto 0);
    trunc_ln116_3_fu_4016_p1 <= bitcast_ln116_3_fu_4003_p1(23 - 1 downto 0);
    trunc_ln116_4_fu_4063_p1 <= bitcast_ln116_4_fu_4050_p1(23 - 1 downto 0);
    trunc_ln116_5_fu_4110_p1 <= bitcast_ln116_5_fu_4097_p1(23 - 1 downto 0);
    trunc_ln116_fu_3854_p1 <= bitcast_ln116_fu_3841_p1(23 - 1 downto 0);
    trunc_ln122_fu_4157_p1 <= bitcast_ln122_fu_4144_p1(23 - 1 downto 0);
    trunc_ln130_1_fu_4248_p1 <= bitcast_ln130_1_fu_4235_p1(23 - 1 downto 0);
    trunc_ln130_fu_4231_p1 <= bitcast_ln130_fu_4218_p1(23 - 1 downto 0);
    trunc_ln139_1_fu_4397_p1 <= bitcast_ln139_1_fu_4384_p1(23 - 1 downto 0);
    trunc_ln139_fu_4380_p1 <= bitcast_ln139_fu_4367_p1(23 - 1 downto 0);
    xor_ln126_fu_4188_p2 <= (bitcast_ln126_fu_4184_p1 xor ap_const_lv32_80000000);
end behav;
