-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    regions_center_0_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_8_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_9_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_10_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_11_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_12_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_13_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_14_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_15_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_8_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_9_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_10_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_11_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_12_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_13_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_14_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_15_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_8_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_9_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_10_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_11_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_12_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_13_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_14_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_15_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_8_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_9_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_10_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_11_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_12_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_13_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_14_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_15_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_8_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_9_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_10_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_11_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_12_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_13_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_14_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_15_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_8_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_9_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_10_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_11_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_12_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_13_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_14_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_15_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_8_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_9_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_10_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_11_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_12_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_13_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_14_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_15_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_8_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_9_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_10_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_11_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_12_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_13_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_14_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_15_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_8_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_9_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_10_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_11_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_12_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_13_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_14_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_15_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_8_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_9_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_10_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_11_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_12_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_13_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_14_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_15_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_8_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_9_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_10_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_11_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_12_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_13_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_14_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_15_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_8_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_9_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_10_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_11_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_12_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_13_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_14_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_15_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_8_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_9_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_10_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_11_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_12_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_13_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_14_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_15_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_8_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_9_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_10_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_11_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_12_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_13_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_14_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_15_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_8_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_9_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_10_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_11_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_12_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_13_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_14_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_15_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    merge_2_out : OUT STD_LOGIC_VECTOR (3 downto 0);
    merge_2_out_ap_vld : OUT STD_LOGIC;
    merge_1_out : OUT STD_LOGIC_VECTOR (3 downto 0);
    merge_1_out_ap_vld : OUT STD_LOGIC;
    grp_fu_15142_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15142_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15142_p_opcode : OUT STD_LOGIC_VECTOR (1 downto 0);
    grp_fu_15142_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15142_p_ce : OUT STD_LOGIC;
    grp_fu_15148_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15148_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15148_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15148_p_ce : OUT STD_LOGIC;
    grp_fu_15153_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15153_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15153_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_15153_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_15153_p_ce : OUT STD_LOGIC;
    grp_fu_15158_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15158_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_15158_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_15158_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_15158_p_ce : OUT STD_LOGIC );
end;


architecture behav of FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state24_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_state32_pp0_stage7_iter3 : BOOLEAN;
    signal ap_block_state40_pp0_stage7_iter4 : BOOLEAN;
    signal ap_block_state48_pp0_stage7_iter5 : BOOLEAN;
    signal ap_block_state56_pp0_stage7_iter6 : BOOLEAN;
    signal ap_block_state64_pp0_stage7_iter7 : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal icmp_ln1027_reg_5347 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage7 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal reg_2057 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state34_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state42_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state50_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state58_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state66_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal icmp_ln1027_reg_5347_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_5_reg_5629 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_5_reg_5629_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2022_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_2063 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state23_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_state31_pp0_stage6_iter3 : BOOLEAN;
    signal ap_block_state39_pp0_stage6_iter4 : BOOLEAN;
    signal ap_block_state47_pp0_stage6_iter5 : BOOLEAN;
    signal ap_block_state55_pp0_stage6_iter6 : BOOLEAN;
    signal ap_block_state63_pp0_stage6_iter7 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal icmp_ln1027_reg_5347_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_9_reg_5674 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_2026_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_2068 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_2073 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state22_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_state30_pp0_stage5_iter3 : BOOLEAN;
    signal ap_block_state38_pp0_stage5_iter4 : BOOLEAN;
    signal ap_block_state46_pp0_stage5_iter5 : BOOLEAN;
    signal ap_block_state54_pp0_stage5_iter6 : BOOLEAN;
    signal ap_block_state62_pp0_stage5_iter7 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal and_ln112_1_reg_5579 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_1_reg_5579_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_7_reg_5634 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_7_reg_5634_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state49_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state57_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state65_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal and_ln112_9_reg_5674_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_2077 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln112_3_reg_5584 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_3_reg_5584_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_real_3_reg_5332 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_5332_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_5332_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_5332_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_5332_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_5332_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_5332_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_5332_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_5332_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_5340 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_5340_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_5340_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_5340_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_5340_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_5340_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_5340_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_5340_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1027_fu_2122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_5347_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_5347_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_5347_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_5347_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_5347_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_5347_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln104_fu_2128_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln104_reg_5351 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_2132_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_5365 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln104_1_fu_2154_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal trunc_ln104_1_reg_5370 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_1_fu_2158_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_5384 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_2180_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_5389 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_2202_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_5394 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_2224_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_5403 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_2246_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_5408 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_2268_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_5417 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_2290_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_5422 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_2312_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_5427 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_2334_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_reg_5436 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_2356_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_5445 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state35_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state43_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state51_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state59_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state67_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp_10_fu_2377_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_reg_5450 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_2398_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_reg_5455 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_2419_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_reg_5464 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_2440_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_reg_5473 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_2461_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_reg_5482 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln112_fu_2516_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_reg_5491 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state28_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state36_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state44_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state52_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state60_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal icmp_ln112_1_fu_2522_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_1_reg_5496 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_2_fu_2528_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_2_reg_5501 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_3_fu_2534_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_3_reg_5506 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_reg_5511 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_4_fu_2574_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_4_reg_5516 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_5_fu_2580_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_5_reg_5521 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_6_fu_2586_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_6_reg_5526 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_7_fu_2592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_7_reg_5531 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_37_reg_5536 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_2598_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_reg_5541 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_2619_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_reg_5546 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_2640_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_reg_5551 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_2661_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_reg_5556 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_2682_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_reg_5561 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_2703_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_reg_5570 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln112_1_fu_2737_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state21_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state29_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state37_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state45_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_state53_pp0_stage4_iter6 : BOOLEAN;
    signal ap_block_state61_pp0_stage4_iter7 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal and_ln112_1_reg_5579_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_3_fu_2756_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_3_reg_5584_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_8_fu_2796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_8_reg_5589 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_9_fu_2802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_9_reg_5594 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_10_fu_2808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_10_reg_5599 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_11_fu_2814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_11_reg_5604 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_42_reg_5609 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_2820_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_reg_5614 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_2841_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_reg_5619 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_47_reg_5624 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_5_fu_2876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_5_reg_5629_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_7_fu_2957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_7_reg_5634_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_reg_5639 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_2962_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_reg_5644 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_2983_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_reg_5649 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_3004_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_reg_5654 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_3025_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_reg_5659 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_fu_3046_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_reg_5664 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_3067_p18 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_reg_5669 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln112_9_fu_3164_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_9_reg_5674_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_fu_3169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_5679 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_5679_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_5679_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_5679_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_5679_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_5679_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_5679_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_5679_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal d1_reg_5688 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_reg_5693 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2030_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_reg_5698 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2034_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_1_reg_5703 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub2_reg_5709 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_1_reg_5714 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_1_reg_5719 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub75_1_reg_5724 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub87_1_reg_5729 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_2_reg_5734 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_2_reg_5740 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_2_reg_5745 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub75_2_reg_5750 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub87_2_reg_5755 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_3_reg_5760 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_3_reg_5765 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub75_3_reg_5770 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub87_3_reg_5775 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_5780 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2043_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_5785 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_5785_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal d_3_reg_5790 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_5796 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_5796_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_5796_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal d_4_reg_5801 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_5807 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_5807_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_5807_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_reg_5812 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_4_reg_5817 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_4_reg_5817_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_4_reg_5817_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_4_reg_5817_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_reg_5822 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_2_fu_3214_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_2_reg_5827 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_6_fu_3220_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_6_reg_5834 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_reg_5841 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_39_reg_5846 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_10_fu_3227_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_10_reg_5851 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_14_fu_3234_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_14_reg_5858 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_20_fu_3281_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_20_reg_5865 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_7_fu_3328_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_7_reg_5870 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_18_fu_3335_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_18_reg_5875 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_reg_5882 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_49_reg_5887 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_11_fu_3382_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_11_reg_5892 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_15_fu_3429_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_15_reg_5897 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_1_reg_5902 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_reg_5907 : STD_LOGIC_VECTOR (0 downto 0);
    signal overlap_1_reg_5912 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_19_fu_3476_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_19_reg_5917 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_19_reg_5917_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_2_reg_5922 : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_3_reg_5927 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_2_reg_5932 : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_4_reg_5937 : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_4_reg_5937_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_reg_5944 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_56_reg_5944_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal distance_3_reg_5949 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_4_reg_5954 : STD_LOGIC_VECTOR (31 downto 0);
    signal sc_2_fu_3536_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sc_2_reg_5959 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_load_reg_5966 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_reg_5973 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_other_4_fu_3643_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_other_4_reg_5978 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_4_fu_3650_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_4_reg_5984 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_load_reg_5992 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_1_4_reg_6000 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_2_1_reg_6007 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_62_reg_6013 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter8_stage1 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal merge_1_fu_536 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_1_7_fu_3822_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal merge_2_fu_540 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_2_6_fu_3816_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_fu_544 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_3_fu_3810_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal merge_1_1_fu_548 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_2_fu_3197_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_4_fu_552 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_3_fu_3189_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_fu_556 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_3_fu_3666_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal tmp_other_fu_560 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_other_3_fu_3660_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_block_pp0_stage1_01001 : BOOLEAN;
    signal grp_fu_2018_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2018_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal grp_fu_2022_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2022_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2026_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2026_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2030_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2030_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2034_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2034_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2039_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2039_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2043_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2043_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2047_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2047_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2051_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2051_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_fu_2482_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_1_fu_2499_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_fu_2485_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_fu_2495_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_31_fu_2502_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_1_fu_2512_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln112_2_fu_2540_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_3_fu_2557_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_2543_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_2_fu_2553_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_36_fu_2560_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_3_fu_2570_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln112_1_fu_2728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_fu_2732_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_fu_2724_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_3_fu_2747_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_2_fu_2751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_2_fu_2743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln112_4_fu_2762_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_5_fu_2779_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_fu_2765_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_4_fu_2775_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_41_fu_2782_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_5_fu_2792_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln112_4_fu_2862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_5_fu_2866_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_4_fu_2870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln112_6_fu_2881_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_7_fu_2898_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_fu_2884_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_6_fu_2894_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_13_fu_2921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_12_fu_2915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_46_fu_2901_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_7_fu_2911_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_15_fu_2939_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_14_fu_2933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_6_fu_2927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_7_fu_2945_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_6_fu_2951_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln112_8_fu_3088_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_9_fu_3105_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_fu_3091_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_8_fu_3101_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_17_fu_3128_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_16_fu_3122_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_51_fu_3108_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_9_fu_3118_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_19_fu_3146_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_18_fu_3140_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_8_fu_3134_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_9_fu_3152_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_8_fu_3158_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_real_fu_3179_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_2_fu_3184_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_fu_3174_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln116_fu_3241_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_fu_3244_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_fu_3254_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_1_fu_3264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_fu_3258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_fu_3270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_fu_3276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_1_fu_3288_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_fu_3291_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_1_fu_3301_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_3_fu_3311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_2_fu_3305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_1_fu_3317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_1_fu_3323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_2_fu_3342_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_fu_3345_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_2_fu_3355_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_5_fu_3365_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_4_fu_3359_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_2_fu_3371_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_2_fu_3377_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_3_fu_3389_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_fu_3392_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_3_fu_3402_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_7_fu_3412_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_6_fu_3406_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_3_fu_3418_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_3_fu_3424_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_4_fu_3436_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_53_fu_3439_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_4_fu_3449_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_9_fu_3459_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_8_fu_3453_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_4_fu_3465_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_4_fu_3471_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln122_fu_3483_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_fu_3486_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln122_fu_3496_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln122_1_fu_3506_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln122_fu_3500_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln122_fu_3512_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln126_fu_3523_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln126_fu_3526_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln122_fu_3518_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sc_fu_3532_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln130_fu_3556_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln130_1_fu_3573_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_57_fu_3559_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln130_fu_3569_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln130_2_fu_3596_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_1_fu_3590_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_58_fu_3576_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln130_1_fu_3586_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln130_4_fu_3614_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_3_fu_3608_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_1_fu_3602_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_2_fu_3620_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln130_fu_3626_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_fu_3550_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln130_1_fu_3632_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_fu_3637_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln139_fu_3705_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln139_1_fu_3722_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_fu_3708_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln139_fu_3718_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln139_1_fu_3745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln139_fu_3739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_61_fu_3725_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln139_1_fu_3735_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln139_3_fu_3763_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln139_2_fu_3757_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln139_1_fu_3751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln139_2_fu_3769_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln139_fu_3775_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_3698_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln139_1_fu_3781_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln139_fu_3786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal score_2_fu_3792_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_2_5_fu_3798_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_1_6_fu_3804_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_2018_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal ap_block_pp0_stage6_00001 : BOOLEAN;
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp0_stage5_00001 : BOOLEAN;
    signal ap_block_pp0_stage7_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal grp_fu_2026_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_2030_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_2047_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_2051_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_idle_pp0_0to7 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to8 : STD_LOGIC;
    signal ap_done_pending_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component FaultDetector_mux_164_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fsub_32ns_32ns_32_8_full_dsp_1_U11 : component FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2022_p0,
        din1 => grp_fu_2022_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2022_p2);

    faddfsub_32ns_32ns_32_8_full_dsp_1_U12 : component FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2026_p0,
        din1 => grp_fu_2026_p1,
        opcode => grp_fu_2026_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_2026_p2);

    faddfsub_32ns_32ns_32_8_full_dsp_1_U13 : component FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2030_p0,
        din1 => grp_fu_2030_p1,
        opcode => grp_fu_2030_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_2030_p2);

    fsub_32ns_32ns_32_8_full_dsp_1_U14 : component FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2034_p0,
        din1 => grp_fu_2034_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2034_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U16 : component FaultDetector_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_2043_p0,
        din1 => grp_fu_2043_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_2043_p2);

    mux_164_32_1_1_U19 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_0_0,
        din1 => regions_center_1_0_0,
        din2 => regions_center_2_0_0,
        din3 => regions_center_3_0_0,
        din4 => regions_center_4_0_0,
        din5 => regions_center_5_0_0,
        din6 => regions_center_6_0_0,
        din7 => regions_center_7_0_0,
        din8 => regions_center_8_0_0,
        din9 => regions_center_9_0_0,
        din10 => regions_center_10_0_0,
        din11 => regions_center_11_0_0,
        din12 => regions_center_12_0_0,
        din13 => regions_center_13_0_0,
        din14 => regions_center_14_0_0,
        din15 => regions_center_15_0_0,
        din16 => trunc_ln104_fu_2128_p1,
        dout => tmp_s_fu_2132_p18);

    mux_164_32_1_1_U20 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_0_0,
        din1 => regions_center_1_0_0,
        din2 => regions_center_2_0_0,
        din3 => regions_center_3_0_0,
        din4 => regions_center_4_0_0,
        din5 => regions_center_5_0_0,
        din6 => regions_center_6_0_0,
        din7 => regions_center_7_0_0,
        din8 => regions_center_8_0_0,
        din9 => regions_center_9_0_0,
        din10 => regions_center_10_0_0,
        din11 => regions_center_11_0_0,
        din12 => regions_center_12_0_0,
        din13 => regions_center_13_0_0,
        din14 => regions_center_14_0_0,
        din15 => regions_center_15_0_0,
        din16 => trunc_ln104_1_fu_2154_p1,
        dout => tmp_1_fu_2158_p18);

    mux_164_32_1_1_U21 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_0_0,
        din1 => regions_max_1_0_0,
        din2 => regions_max_2_0_0,
        din3 => regions_max_3_0_0,
        din4 => regions_max_4_0_0,
        din5 => regions_max_5_0_0,
        din6 => regions_max_6_0_0,
        din7 => regions_max_7_0_0,
        din8 => regions_max_8_0_0,
        din9 => regions_max_9_0_0,
        din10 => regions_max_10_0_0,
        din11 => regions_max_11_0_0,
        din12 => regions_max_12_0_0,
        din13 => regions_max_13_0_0,
        din14 => regions_max_14_0_0,
        din15 => regions_max_15_0_0,
        din16 => trunc_ln104_fu_2128_p1,
        dout => tmp_2_fu_2180_p18);

    mux_164_32_1_1_U22 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_0_0,
        din1 => regions_min_1_0_0,
        din2 => regions_min_2_0_0,
        din3 => regions_min_3_0_0,
        din4 => regions_min_4_0_0,
        din5 => regions_min_5_0_0,
        din6 => regions_min_6_0_0,
        din7 => regions_min_7_0_0,
        din8 => regions_min_8_0_0,
        din9 => regions_min_9_0_0,
        din10 => regions_min_10_0_0,
        din11 => regions_min_11_0_0,
        din12 => regions_min_12_0_0,
        din13 => regions_min_13_0_0,
        din14 => regions_min_14_0_0,
        din15 => regions_min_15_0_0,
        din16 => trunc_ln104_fu_2128_p1,
        dout => tmp_3_fu_2202_p18);

    mux_164_32_1_1_U23 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_0_0,
        din1 => regions_max_1_0_0,
        din2 => regions_max_2_0_0,
        din3 => regions_max_3_0_0,
        din4 => regions_max_4_0_0,
        din5 => regions_max_5_0_0,
        din6 => regions_max_6_0_0,
        din7 => regions_max_7_0_0,
        din8 => regions_max_8_0_0,
        din9 => regions_max_9_0_0,
        din10 => regions_max_10_0_0,
        din11 => regions_max_11_0_0,
        din12 => regions_max_12_0_0,
        din13 => regions_max_13_0_0,
        din14 => regions_max_14_0_0,
        din15 => regions_max_15_0_0,
        din16 => trunc_ln104_1_fu_2154_p1,
        dout => tmp_4_fu_2224_p18);

    mux_164_32_1_1_U24 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_0_0,
        din1 => regions_min_1_0_0,
        din2 => regions_min_2_0_0,
        din3 => regions_min_3_0_0,
        din4 => regions_min_4_0_0,
        din5 => regions_min_5_0_0,
        din6 => regions_min_6_0_0,
        din7 => regions_min_7_0_0,
        din8 => regions_min_8_0_0,
        din9 => regions_min_9_0_0,
        din10 => regions_min_10_0_0,
        din11 => regions_min_11_0_0,
        din12 => regions_min_12_0_0,
        din13 => regions_min_13_0_0,
        din14 => regions_min_14_0_0,
        din15 => regions_min_15_0_0,
        din16 => trunc_ln104_1_fu_2154_p1,
        dout => tmp_5_fu_2246_p18);

    mux_164_32_1_1_U25 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_1_0,
        din1 => regions_center_1_1_0,
        din2 => regions_center_2_1_0,
        din3 => regions_center_3_1_0,
        din4 => regions_center_4_1_0,
        din5 => regions_center_5_1_0,
        din6 => regions_center_6_1_0,
        din7 => regions_center_7_1_0,
        din8 => regions_center_8_1_0,
        din9 => regions_center_9_1_0,
        din10 => regions_center_10_1_0,
        din11 => regions_center_11_1_0,
        din12 => regions_center_12_1_0,
        din13 => regions_center_13_1_0,
        din14 => regions_center_14_1_0,
        din15 => regions_center_15_1_0,
        din16 => trunc_ln104_fu_2128_p1,
        dout => tmp_6_fu_2268_p18);

    mux_164_32_1_1_U26 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_1_0,
        din1 => regions_center_1_1_0,
        din2 => regions_center_2_1_0,
        din3 => regions_center_3_1_0,
        din4 => regions_center_4_1_0,
        din5 => regions_center_5_1_0,
        din6 => regions_center_6_1_0,
        din7 => regions_center_7_1_0,
        din8 => regions_center_8_1_0,
        din9 => regions_center_9_1_0,
        din10 => regions_center_10_1_0,
        din11 => regions_center_11_1_0,
        din12 => regions_center_12_1_0,
        din13 => regions_center_13_1_0,
        din14 => regions_center_14_1_0,
        din15 => regions_center_15_1_0,
        din16 => trunc_ln104_1_fu_2154_p1,
        dout => tmp_7_fu_2290_p18);

    mux_164_32_1_1_U27 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_1_0,
        din1 => regions_min_1_1_0,
        din2 => regions_min_2_1_0,
        din3 => regions_min_3_1_0,
        din4 => regions_min_4_1_0,
        din5 => regions_min_5_1_0,
        din6 => regions_min_6_1_0,
        din7 => regions_min_7_1_0,
        din8 => regions_min_8_1_0,
        din9 => regions_min_9_1_0,
        din10 => regions_min_10_1_0,
        din11 => regions_min_11_1_0,
        din12 => regions_min_12_1_0,
        din13 => regions_min_13_1_0,
        din14 => regions_min_14_1_0,
        din15 => regions_min_15_1_0,
        din16 => trunc_ln104_fu_2128_p1,
        dout => tmp_9_fu_2312_p18);

    mux_164_32_1_1_U28 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_1_0,
        din1 => regions_min_1_1_0,
        din2 => regions_min_2_1_0,
        din3 => regions_min_3_1_0,
        din4 => regions_min_4_1_0,
        din5 => regions_min_5_1_0,
        din6 => regions_min_6_1_0,
        din7 => regions_min_7_1_0,
        din8 => regions_min_8_1_0,
        din9 => regions_min_9_1_0,
        din10 => regions_min_10_1_0,
        din11 => regions_min_11_1_0,
        din12 => regions_min_12_1_0,
        din13 => regions_min_13_1_0,
        din14 => regions_min_14_1_0,
        din15 => regions_min_15_1_0,
        din16 => trunc_ln104_1_fu_2154_p1,
        dout => tmp_11_fu_2334_p18);

    mux_164_32_1_1_U29 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_1_0,
        din1 => regions_max_1_1_0,
        din2 => regions_max_2_1_0,
        din3 => regions_max_3_1_0,
        din4 => regions_max_4_1_0,
        din5 => regions_max_5_1_0,
        din6 => regions_max_6_1_0,
        din7 => regions_max_7_1_0,
        din8 => regions_max_8_1_0,
        din9 => regions_max_9_1_0,
        din10 => regions_max_10_1_0,
        din11 => regions_max_11_1_0,
        din12 => regions_max_12_1_0,
        din13 => regions_max_13_1_0,
        din14 => regions_max_14_1_0,
        din15 => regions_max_15_1_0,
        din16 => trunc_ln104_reg_5351,
        dout => tmp_8_fu_2356_p18);

    mux_164_32_1_1_U30 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_1_0,
        din1 => regions_max_1_1_0,
        din2 => regions_max_2_1_0,
        din3 => regions_max_3_1_0,
        din4 => regions_max_4_1_0,
        din5 => regions_max_5_1_0,
        din6 => regions_max_6_1_0,
        din7 => regions_max_7_1_0,
        din8 => regions_max_8_1_0,
        din9 => regions_max_9_1_0,
        din10 => regions_max_10_1_0,
        din11 => regions_max_11_1_0,
        din12 => regions_max_12_1_0,
        din13 => regions_max_13_1_0,
        din14 => regions_max_14_1_0,
        din15 => regions_max_15_1_0,
        din16 => trunc_ln104_1_reg_5370,
        dout => tmp_10_fu_2377_p18);

    mux_164_32_1_1_U31 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_2_0,
        din1 => regions_min_1_2_0,
        din2 => regions_min_2_2_0,
        din3 => regions_min_3_2_0,
        din4 => regions_min_4_2_0,
        din5 => regions_min_5_2_0,
        din6 => regions_min_6_2_0,
        din7 => regions_min_7_2_0,
        din8 => regions_min_8_2_0,
        din9 => regions_min_9_2_0,
        din10 => regions_min_10_2_0,
        din11 => regions_min_11_2_0,
        din12 => regions_min_12_2_0,
        din13 => regions_min_13_2_0,
        din14 => regions_min_14_2_0,
        din15 => regions_min_15_2_0,
        din16 => trunc_ln104_reg_5351,
        dout => tmp_15_fu_2398_p18);

    mux_164_32_1_1_U32 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_2_0,
        din1 => regions_min_1_2_0,
        din2 => regions_min_2_2_0,
        din3 => regions_min_3_2_0,
        din4 => regions_min_4_2_0,
        din5 => regions_min_5_2_0,
        din6 => regions_min_6_2_0,
        din7 => regions_min_7_2_0,
        din8 => regions_min_8_2_0,
        din9 => regions_min_9_2_0,
        din10 => regions_min_10_2_0,
        din11 => regions_min_11_2_0,
        din12 => regions_min_12_2_0,
        din13 => regions_min_13_2_0,
        din14 => regions_min_14_2_0,
        din15 => regions_min_15_2_0,
        din16 => trunc_ln104_1_reg_5370,
        dout => tmp_17_fu_2419_p18);

    mux_164_32_1_1_U33 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_3_0,
        din1 => regions_min_1_3_0,
        din2 => regions_min_2_3_0,
        din3 => regions_min_3_3_0,
        din4 => regions_min_4_3_0,
        din5 => regions_min_5_3_0,
        din6 => regions_min_6_3_0,
        din7 => regions_min_7_3_0,
        din8 => regions_min_8_3_0,
        din9 => regions_min_9_3_0,
        din10 => regions_min_10_3_0,
        din11 => regions_min_11_3_0,
        din12 => regions_min_12_3_0,
        din13 => regions_min_13_3_0,
        din14 => regions_min_14_3_0,
        din15 => regions_min_15_3_0,
        din16 => trunc_ln104_reg_5351,
        dout => tmp_21_fu_2440_p18);

    mux_164_32_1_1_U34 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_3_0,
        din1 => regions_min_1_3_0,
        din2 => regions_min_2_3_0,
        din3 => regions_min_3_3_0,
        din4 => regions_min_4_3_0,
        din5 => regions_min_5_3_0,
        din6 => regions_min_6_3_0,
        din7 => regions_min_7_3_0,
        din8 => regions_min_8_3_0,
        din9 => regions_min_9_3_0,
        din10 => regions_min_10_3_0,
        din11 => regions_min_11_3_0,
        din12 => regions_min_12_3_0,
        din13 => regions_min_13_3_0,
        din14 => regions_min_14_3_0,
        din15 => regions_min_15_3_0,
        din16 => trunc_ln104_1_reg_5370,
        dout => tmp_23_fu_2461_p18);

    mux_164_32_1_1_U35 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_2_0,
        din1 => regions_center_1_2_0,
        din2 => regions_center_2_2_0,
        din3 => regions_center_3_2_0,
        din4 => regions_center_4_2_0,
        din5 => regions_center_5_2_0,
        din6 => regions_center_6_2_0,
        din7 => regions_center_7_2_0,
        din8 => regions_center_8_2_0,
        din9 => regions_center_9_2_0,
        din10 => regions_center_10_2_0,
        din11 => regions_center_11_2_0,
        din12 => regions_center_12_2_0,
        din13 => regions_center_13_2_0,
        din14 => regions_center_14_2_0,
        din15 => regions_center_15_2_0,
        din16 => trunc_ln104_reg_5351,
        dout => tmp_12_fu_2598_p18);

    mux_164_32_1_1_U36 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_2_0,
        din1 => regions_center_1_2_0,
        din2 => regions_center_2_2_0,
        din3 => regions_center_3_2_0,
        din4 => regions_center_4_2_0,
        din5 => regions_center_5_2_0,
        din6 => regions_center_6_2_0,
        din7 => regions_center_7_2_0,
        din8 => regions_center_8_2_0,
        din9 => regions_center_9_2_0,
        din10 => regions_center_10_2_0,
        din11 => regions_center_11_2_0,
        din12 => regions_center_12_2_0,
        din13 => regions_center_13_2_0,
        din14 => regions_center_14_2_0,
        din15 => regions_center_15_2_0,
        din16 => trunc_ln104_1_reg_5370,
        dout => tmp_13_fu_2619_p18);

    mux_164_32_1_1_U37 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_2_0,
        din1 => regions_max_1_2_0,
        din2 => regions_max_2_2_0,
        din3 => regions_max_3_2_0,
        din4 => regions_max_4_2_0,
        din5 => regions_max_5_2_0,
        din6 => regions_max_6_2_0,
        din7 => regions_max_7_2_0,
        din8 => regions_max_8_2_0,
        din9 => regions_max_9_2_0,
        din10 => regions_max_10_2_0,
        din11 => regions_max_11_2_0,
        din12 => regions_max_12_2_0,
        din13 => regions_max_13_2_0,
        din14 => regions_max_14_2_0,
        din15 => regions_max_15_2_0,
        din16 => trunc_ln104_reg_5351,
        dout => tmp_14_fu_2640_p18);

    mux_164_32_1_1_U38 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_2_0,
        din1 => regions_max_1_2_0,
        din2 => regions_max_2_2_0,
        din3 => regions_max_3_2_0,
        din4 => regions_max_4_2_0,
        din5 => regions_max_5_2_0,
        din6 => regions_max_6_2_0,
        din7 => regions_max_7_2_0,
        din8 => regions_max_8_2_0,
        din9 => regions_max_9_2_0,
        din10 => regions_max_10_2_0,
        din11 => regions_max_11_2_0,
        din12 => regions_max_12_2_0,
        din13 => regions_max_13_2_0,
        din14 => regions_max_14_2_0,
        din15 => regions_max_15_2_0,
        din16 => trunc_ln104_1_reg_5370,
        dout => tmp_16_fu_2661_p18);

    mux_164_32_1_1_U39 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_4_0,
        din1 => regions_min_1_4_0,
        din2 => regions_min_2_4_0,
        din3 => regions_min_3_4_0,
        din4 => regions_min_4_4_0,
        din5 => regions_min_5_4_0,
        din6 => regions_min_6_4_0,
        din7 => regions_min_7_4_0,
        din8 => regions_min_8_4_0,
        din9 => regions_min_9_4_0,
        din10 => regions_min_10_4_0,
        din11 => regions_min_11_4_0,
        din12 => regions_min_12_4_0,
        din13 => regions_min_13_4_0,
        din14 => regions_min_14_4_0,
        din15 => regions_min_15_4_0,
        din16 => trunc_ln104_reg_5351,
        dout => tmp_27_fu_2682_p18);

    mux_164_32_1_1_U40 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_4_0,
        din1 => regions_min_1_4_0,
        din2 => regions_min_2_4_0,
        din3 => regions_min_3_4_0,
        din4 => regions_min_4_4_0,
        din5 => regions_min_5_4_0,
        din6 => regions_min_6_4_0,
        din7 => regions_min_7_4_0,
        din8 => regions_min_8_4_0,
        din9 => regions_min_9_4_0,
        din10 => regions_min_10_4_0,
        din11 => regions_min_11_4_0,
        din12 => regions_min_12_4_0,
        din13 => regions_min_13_4_0,
        din14 => regions_min_14_4_0,
        din15 => regions_min_15_4_0,
        din16 => trunc_ln104_1_reg_5370,
        dout => tmp_29_fu_2703_p18);

    mux_164_32_1_1_U41 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_3_0,
        din1 => regions_max_1_3_0,
        din2 => regions_max_2_3_0,
        din3 => regions_max_3_3_0,
        din4 => regions_max_4_3_0,
        din5 => regions_max_5_3_0,
        din6 => regions_max_6_3_0,
        din7 => regions_max_7_3_0,
        din8 => regions_max_8_3_0,
        din9 => regions_max_9_3_0,
        din10 => regions_max_10_3_0,
        din11 => regions_max_11_3_0,
        din12 => regions_max_12_3_0,
        din13 => regions_max_13_3_0,
        din14 => regions_max_14_3_0,
        din15 => regions_max_15_3_0,
        din16 => trunc_ln104_reg_5351,
        dout => tmp_20_fu_2820_p18);

    mux_164_32_1_1_U42 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_3_0,
        din1 => regions_max_1_3_0,
        din2 => regions_max_2_3_0,
        din3 => regions_max_3_3_0,
        din4 => regions_max_4_3_0,
        din5 => regions_max_5_3_0,
        din6 => regions_max_6_3_0,
        din7 => regions_max_7_3_0,
        din8 => regions_max_8_3_0,
        din9 => regions_max_9_3_0,
        din10 => regions_max_10_3_0,
        din11 => regions_max_11_3_0,
        din12 => regions_max_12_3_0,
        din13 => regions_max_13_3_0,
        din14 => regions_max_14_3_0,
        din15 => regions_max_15_3_0,
        din16 => trunc_ln104_1_reg_5370,
        dout => tmp_22_fu_2841_p18);

    mux_164_32_1_1_U43 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_3_0,
        din1 => regions_center_1_3_0,
        din2 => regions_center_2_3_0,
        din3 => regions_center_3_3_0,
        din4 => regions_center_4_3_0,
        din5 => regions_center_5_3_0,
        din6 => regions_center_6_3_0,
        din7 => regions_center_7_3_0,
        din8 => regions_center_8_3_0,
        din9 => regions_center_9_3_0,
        din10 => regions_center_10_3_0,
        din11 => regions_center_11_3_0,
        din12 => regions_center_12_3_0,
        din13 => regions_center_13_3_0,
        din14 => regions_center_14_3_0,
        din15 => regions_center_15_3_0,
        din16 => trunc_ln104_reg_5351,
        dout => tmp_18_fu_2962_p18);

    mux_164_32_1_1_U44 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_3_0,
        din1 => regions_center_1_3_0,
        din2 => regions_center_2_3_0,
        din3 => regions_center_3_3_0,
        din4 => regions_center_4_3_0,
        din5 => regions_center_5_3_0,
        din6 => regions_center_6_3_0,
        din7 => regions_center_7_3_0,
        din8 => regions_center_8_3_0,
        din9 => regions_center_9_3_0,
        din10 => regions_center_10_3_0,
        din11 => regions_center_11_3_0,
        din12 => regions_center_12_3_0,
        din13 => regions_center_13_3_0,
        din14 => regions_center_14_3_0,
        din15 => regions_center_15_3_0,
        din16 => trunc_ln104_1_reg_5370,
        dout => tmp_19_fu_2983_p18);

    mux_164_32_1_1_U45 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_4_0,
        din1 => regions_center_1_4_0,
        din2 => regions_center_2_4_0,
        din3 => regions_center_3_4_0,
        din4 => regions_center_4_4_0,
        din5 => regions_center_5_4_0,
        din6 => regions_center_6_4_0,
        din7 => regions_center_7_4_0,
        din8 => regions_center_8_4_0,
        din9 => regions_center_9_4_0,
        din10 => regions_center_10_4_0,
        din11 => regions_center_11_4_0,
        din12 => regions_center_12_4_0,
        din13 => regions_center_13_4_0,
        din14 => regions_center_14_4_0,
        din15 => regions_center_15_4_0,
        din16 => trunc_ln104_reg_5351,
        dout => tmp_24_fu_3004_p18);

    mux_164_32_1_1_U46 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_4_0,
        din1 => regions_center_1_4_0,
        din2 => regions_center_2_4_0,
        din3 => regions_center_3_4_0,
        din4 => regions_center_4_4_0,
        din5 => regions_center_5_4_0,
        din6 => regions_center_6_4_0,
        din7 => regions_center_7_4_0,
        din8 => regions_center_8_4_0,
        din9 => regions_center_9_4_0,
        din10 => regions_center_10_4_0,
        din11 => regions_center_11_4_0,
        din12 => regions_center_12_4_0,
        din13 => regions_center_13_4_0,
        din14 => regions_center_14_4_0,
        din15 => regions_center_15_4_0,
        din16 => trunc_ln104_1_reg_5370,
        dout => tmp_25_fu_3025_p18);

    mux_164_32_1_1_U47 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_4_0,
        din1 => regions_max_1_4_0,
        din2 => regions_max_2_4_0,
        din3 => regions_max_3_4_0,
        din4 => regions_max_4_4_0,
        din5 => regions_max_5_4_0,
        din6 => regions_max_6_4_0,
        din7 => regions_max_7_4_0,
        din8 => regions_max_8_4_0,
        din9 => regions_max_9_4_0,
        din10 => regions_max_10_4_0,
        din11 => regions_max_11_4_0,
        din12 => regions_max_12_4_0,
        din13 => regions_max_13_4_0,
        din14 => regions_max_14_4_0,
        din15 => regions_max_15_4_0,
        din16 => trunc_ln104_reg_5351,
        dout => tmp_26_fu_3046_p18);

    mux_164_32_1_1_U48 : component FaultDetector_mux_164_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 4,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_4_0,
        din1 => regions_max_1_4_0,
        din2 => regions_max_2_4_0,
        din3 => regions_max_3_4_0,
        din4 => regions_max_4_4_0,
        din5 => regions_max_5_4_0,
        din6 => regions_max_6_4_0,
        din7 => regions_max_7_4_0,
        din8 => regions_max_8_4_0,
        din9 => regions_max_9_4_0,
        din10 => regions_max_10_4_0,
        din11 => regions_max_11_4_0,
        din12 => regions_max_12_4_0,
        din13 => regions_max_13_4_0,
        din14 => regions_max_14_4_0,
        din15 => regions_max_15_4_0,
        din16 => trunc_ln104_1_reg_5370,
        dout => tmp_28_fu_3067_p18);

    flow_control_loop_pipe_sequential_init_U : component FaultDetector_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage7,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter8_stage1) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
                    ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to7 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter8_stage1))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to7 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter8_stage1))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to7 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter8_stage1))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to7 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter8_stage1))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to7 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter8_stage1))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to7 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter8_stage1))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to7 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter8_stage1))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter8_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_idle_pp0_0to7 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter8_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
            end if; 
        end if;
    end process;

    k_real_4_fu_552_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    k_real_4_fu_552 <= ap_const_lv32_1;
                elsif (((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    k_real_4_fu_552 <= k_real_3_fu_3189_p3;
                end if;
            end if; 
        end if;
    end process;

    merge_1_1_fu_548_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    merge_1_1_fu_548 <= ap_const_lv32_0;
                elsif (((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    merge_1_1_fu_548 <= i_real_2_fu_3197_p3;
                end if;
            end if; 
        end if;
    end process;

    merge_1_fu_536_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                merge_1_fu_536 <= ap_const_lv32_FFFFFFFF;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln1027_reg_5347_pp0_iter8_reg = ap_const_lv1_1))) then 
                merge_1_fu_536 <= merge_1_7_fu_3822_p3;
            end if; 
        end if;
    end process;

    merge_2_fu_540_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                merge_2_fu_540 <= ap_const_lv32_FFFFFFFF;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln1027_reg_5347_pp0_iter8_reg = ap_const_lv1_1))) then 
                merge_2_fu_540 <= merge_2_6_fu_3816_p3;
            end if; 
        end if;
    end process;

    score_fu_544_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                score_fu_544 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln1027_reg_5347_pp0_iter8_reg = ap_const_lv1_1))) then 
                score_fu_544 <= score_3_fu_3810_p3;
            end if; 
        end if;
    end process;

    tmp_other_fu_560_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    tmp_other_fu_560 <= ap_const_lv32_FFFFFFFF;
                elsif (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln1027_reg_5347_pp0_iter7_reg = ap_const_lv1_1))) then 
                    tmp_other_fu_560 <= tmp_other_3_fu_3660_p3;
                end if;
            end if; 
        end if;
    end process;

    tmp_score_fu_556_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    tmp_score_fu_556 <= ap_const_lv32_0;
                elsif (((ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln1027_reg_5347_pp0_iter7_reg = ap_const_lv1_1))) then 
                    tmp_score_fu_556 <= tmp_score_3_fu_3666_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                and_ln112_1_reg_5579 <= and_ln112_1_fu_2737_p2;
                and_ln112_3_reg_5584 <= and_ln112_3_fu_2756_p2;
                icmp_ln112_10_reg_5599 <= icmp_ln112_10_fu_2808_p2;
                icmp_ln112_11_reg_5604 <= icmp_ln112_11_fu_2814_p2;
                icmp_ln112_8_reg_5589 <= icmp_ln112_8_fu_2796_p2;
                icmp_ln112_9_reg_5594 <= icmp_ln112_9_fu_2802_p2;
                tmp_20_reg_5614 <= tmp_20_fu_2820_p18;
                tmp_22_reg_5619 <= tmp_22_fu_2841_p18;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                and_ln112_1_reg_5579_pp0_iter1_reg <= and_ln112_1_reg_5579;
                and_ln112_1_reg_5579_pp0_iter2_reg <= and_ln112_1_reg_5579_pp0_iter1_reg;
                and_ln112_3_reg_5584_pp0_iter1_reg <= and_ln112_3_reg_5584;
                and_ln112_3_reg_5584_pp0_iter2_reg <= and_ln112_3_reg_5584_pp0_iter1_reg;
                mul_4_reg_5817_pp0_iter3_reg <= mul_4_reg_5817;
                mul_4_reg_5817_pp0_iter4_reg <= mul_4_reg_5817_pp0_iter3_reg;
                mul_4_reg_5817_pp0_iter5_reg <= mul_4_reg_5817_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                and_ln112_5_reg_5629 <= and_ln112_5_fu_2876_p2;
                and_ln112_7_reg_5634 <= and_ln112_7_fu_2957_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                and_ln112_5_reg_5629_pp0_iter1_reg <= and_ln112_5_reg_5629;
                and_ln112_5_reg_5629_pp0_iter2_reg <= and_ln112_5_reg_5629_pp0_iter1_reg;
                and_ln112_7_reg_5634_pp0_iter1_reg <= and_ln112_7_reg_5634;
                and_ln112_7_reg_5634_pp0_iter2_reg <= and_ln112_7_reg_5634_pp0_iter1_reg;
                mul_1_reg_5785_pp0_iter2_reg <= mul_1_reg_5785;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                and_ln112_9_reg_5674 <= and_ln112_9_fu_3164_p2;
                tmp_18_reg_5644 <= tmp_18_fu_2962_p18;
                tmp_19_reg_5649 <= tmp_19_fu_2983_p18;
                tmp_24_reg_5654 <= tmp_24_fu_3004_p18;
                tmp_25_reg_5659 <= tmp_25_fu_3025_p18;
                tmp_26_reg_5664 <= tmp_26_fu_3046_p18;
                tmp_28_reg_5669 <= tmp_28_fu_3067_p18;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                and_ln112_9_reg_5674_pp0_iter1_reg <= and_ln112_9_reg_5674;
                and_ln112_9_reg_5674_pp0_iter2_reg <= and_ln112_9_reg_5674_pp0_iter1_reg;
                ov_19_reg_5917_pp0_iter4_reg <= ov_19_reg_5917;
                tmp_56_reg_5944_pp0_iter6_reg <= tmp_56_reg_5944;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                d1_1_reg_5714 <= grp_fu_2022_p2;
                d2_1_reg_5719 <= grp_fu_2026_p2;
                sub2_reg_5709 <= grp_fu_15142_p_dout0;
                sub75_1_reg_5724 <= grp_fu_2030_p2;
                sub87_1_reg_5729 <= grp_fu_2034_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                d1_2_reg_5740 <= grp_fu_2022_p2;
                d2_2_reg_5745 <= grp_fu_2026_p2;
                d_2_reg_5734 <= grp_fu_15142_p_dout0;
                sub75_2_reg_5750 <= grp_fu_2030_p2;
                sub87_2_reg_5755 <= grp_fu_2034_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                d1_3_reg_5760 <= grp_fu_15142_p_dout0;
                d2_3_reg_5765 <= grp_fu_2022_p2;
                sub75_3_reg_5770 <= grp_fu_2026_p2;
                sub87_3_reg_5775 <= grp_fu_2030_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                d1_reg_5688 <= grp_fu_2022_p2;
                d2_reg_5693 <= grp_fu_2026_p2;
                d_1_reg_5703 <= grp_fu_2034_p2;
                sub_reg_5698 <= grp_fu_2030_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                d_3_reg_5790 <= grp_fu_15142_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                d_4_reg_5801 <= grp_fu_15142_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln1027_reg_5347_pp0_iter3_reg = ap_const_lv1_1))) then
                distance_1_reg_5902 <= grp_fu_2030_p2;
                tmp_54_reg_5907 <= grp_fu_15158_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln1027_reg_5347_pp0_iter4_reg = ap_const_lv1_1))) then
                distance_2_reg_5932 <= grp_fu_2026_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_5347_pp0_iter5_reg = ap_const_lv1_1))) then
                distance_3_reg_5949 <= grp_fu_2026_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_5347_pp0_iter6_reg = ap_const_lv1_1))) then
                distance_4_reg_5954 <= grp_fu_2030_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                distance_reg_5822 <= grp_fu_15142_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                i_real_3_reg_5332 <= merge_1_1_fu_548;
                i_real_3_reg_5332_pp0_iter1_reg <= i_real_3_reg_5332;
                i_real_3_reg_5332_pp0_iter2_reg <= i_real_3_reg_5332_pp0_iter1_reg;
                i_real_3_reg_5332_pp0_iter3_reg <= i_real_3_reg_5332_pp0_iter2_reg;
                i_real_3_reg_5332_pp0_iter4_reg <= i_real_3_reg_5332_pp0_iter3_reg;
                i_real_3_reg_5332_pp0_iter5_reg <= i_real_3_reg_5332_pp0_iter4_reg;
                i_real_3_reg_5332_pp0_iter6_reg <= i_real_3_reg_5332_pp0_iter5_reg;
                i_real_3_reg_5332_pp0_iter7_reg <= i_real_3_reg_5332_pp0_iter6_reg;
                i_real_3_reg_5332_pp0_iter8_reg <= i_real_3_reg_5332_pp0_iter7_reg;
                icmp_ln1027_reg_5347 <= icmp_ln1027_fu_2122_p2;
                icmp_ln1027_reg_5347_pp0_iter1_reg <= icmp_ln1027_reg_5347;
                icmp_ln1027_reg_5347_pp0_iter2_reg <= icmp_ln1027_reg_5347_pp0_iter1_reg;
                icmp_ln1027_reg_5347_pp0_iter3_reg <= icmp_ln1027_reg_5347_pp0_iter2_reg;
                icmp_ln1027_reg_5347_pp0_iter4_reg <= icmp_ln1027_reg_5347_pp0_iter3_reg;
                icmp_ln1027_reg_5347_pp0_iter5_reg <= icmp_ln1027_reg_5347_pp0_iter4_reg;
                icmp_ln1027_reg_5347_pp0_iter6_reg <= icmp_ln1027_reg_5347_pp0_iter5_reg;
                icmp_ln1027_reg_5347_pp0_iter7_reg <= icmp_ln1027_reg_5347_pp0_iter6_reg;
                icmp_ln1027_reg_5347_pp0_iter8_reg <= icmp_ln1027_reg_5347_pp0_iter7_reg;
                k_real_5_reg_5340 <= k_real_4_fu_552;
                k_real_5_reg_5340_pp0_iter1_reg <= k_real_5_reg_5340;
                k_real_5_reg_5340_pp0_iter2_reg <= k_real_5_reg_5340_pp0_iter1_reg;
                k_real_5_reg_5340_pp0_iter3_reg <= k_real_5_reg_5340_pp0_iter2_reg;
                k_real_5_reg_5340_pp0_iter4_reg <= k_real_5_reg_5340_pp0_iter3_reg;
                k_real_5_reg_5340_pp0_iter5_reg <= k_real_5_reg_5340_pp0_iter4_reg;
                k_real_5_reg_5340_pp0_iter6_reg <= k_real_5_reg_5340_pp0_iter5_reg;
                k_real_5_reg_5340_pp0_iter7_reg <= k_real_5_reg_5340_pp0_iter6_reg;
                merge_1_4_reg_6000 <= merge_1_fu_536;
                merge_2_1_reg_6007 <= merge_2_fu_540;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1019_reg_5679 <= icmp_ln1019_fu_3169_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1019_reg_5679_pp0_iter2_reg <= icmp_ln1019_reg_5679;
                icmp_ln1019_reg_5679_pp0_iter3_reg <= icmp_ln1019_reg_5679_pp0_iter2_reg;
                icmp_ln1019_reg_5679_pp0_iter4_reg <= icmp_ln1019_reg_5679_pp0_iter3_reg;
                icmp_ln1019_reg_5679_pp0_iter5_reg <= icmp_ln1019_reg_5679_pp0_iter4_reg;
                icmp_ln1019_reg_5679_pp0_iter6_reg <= icmp_ln1019_reg_5679_pp0_iter5_reg;
                icmp_ln1019_reg_5679_pp0_iter7_reg <= icmp_ln1019_reg_5679_pp0_iter6_reg;
                icmp_ln1019_reg_5679_pp0_iter8_reg <= icmp_ln1019_reg_5679_pp0_iter7_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                icmp_ln112_1_reg_5496 <= icmp_ln112_1_fu_2522_p2;
                icmp_ln112_2_reg_5501 <= icmp_ln112_2_fu_2528_p2;
                icmp_ln112_3_reg_5506 <= icmp_ln112_3_fu_2534_p2;
                icmp_ln112_4_reg_5516 <= icmp_ln112_4_fu_2574_p2;
                icmp_ln112_5_reg_5521 <= icmp_ln112_5_fu_2580_p2;
                icmp_ln112_6_reg_5526 <= icmp_ln112_6_fu_2586_p2;
                icmp_ln112_7_reg_5531 <= icmp_ln112_7_fu_2592_p2;
                icmp_ln112_reg_5491 <= icmp_ln112_fu_2516_p2;
                tmp_12_reg_5541 <= tmp_12_fu_2598_p18;
                tmp_13_reg_5546 <= tmp_13_fu_2619_p18;
                tmp_14_reg_5551 <= tmp_14_fu_2640_p18;
                tmp_16_reg_5556 <= tmp_16_fu_2661_p18;
                tmp_27_reg_5561 <= tmp_27_fu_2682_p18;
                tmp_29_reg_5570 <= tmp_29_fu_2703_p18;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                mul_1_reg_5785 <= grp_fu_2043_p2;
                mul_reg_5780 <= grp_fu_15148_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                mul_2_reg_5796 <= grp_fu_15148_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                mul_2_reg_5796_pp0_iter2_reg <= mul_2_reg_5796;
                mul_2_reg_5796_pp0_iter3_reg <= mul_2_reg_5796_pp0_iter2_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul_3_reg_5807 <= grp_fu_15148_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul_3_reg_5807_pp0_iter3_reg <= mul_3_reg_5807;
                mul_3_reg_5807_pp0_iter4_reg <= mul_3_reg_5807_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                mul_4_reg_5817 <= grp_fu_15148_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ov_10_reg_5851 <= ov_10_fu_3227_p3;
                ov_14_reg_5858 <= ov_14_fu_3234_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln1027_reg_5347_pp0_iter3_reg = ap_const_lv1_1))) then
                ov_11_reg_5892 <= ov_11_fu_3382_p3;
                ov_15_reg_5897 <= ov_15_fu_3429_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                ov_18_reg_5875 <= ov_18_fu_3335_p3;
                ov_20_reg_5865 <= ov_20_fu_3281_p3;
                ov_7_reg_5870 <= ov_7_fu_3328_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln1027_reg_5347_pp0_iter3_reg = ap_const_lv1_1))) then
                ov_19_reg_5917 <= ov_19_fu_3476_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                ov_2_reg_5827 <= ov_2_fu_3214_p3;
                ov_6_reg_5834 <= ov_6_fu_3220_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_1_reg_5579_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                ov_reg_5812 <= grp_fu_2034_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln1027_reg_5347_pp0_iter3_reg = ap_const_lv1_1))) then
                overlap_1_reg_5912 <= grp_fu_15148_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln1027_reg_5347_pp0_iter4_reg = ap_const_lv1_1))) then
                overlap_2_reg_5922 <= grp_fu_2043_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln1027_reg_5347_pp0_iter4_reg = ap_const_lv1_1))) then
                overlap_3_reg_5927 <= grp_fu_2043_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln1027_reg_5347_pp0_iter5_reg = ap_const_lv1_1))) then
                overlap_4_reg_5937 <= grp_fu_15148_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                overlap_4_reg_5937_pp0_iter6_reg <= overlap_4_reg_5937;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_5_reg_5629_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_5_reg_5629_pp0_iter2_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_2057 <= grp_fu_15142_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_9_reg_5674) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_9_reg_5674) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_2063 <= grp_fu_2022_p2;
                reg_2068 <= grp_fu_2026_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_9_reg_5674_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_9_reg_5674_pp0_iter2_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_0 = and_ln112_7_reg_5634_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_lv1_0 = and_ln112_1_reg_5579_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_7_reg_5634_pp0_iter2_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then
                reg_2073 <= grp_fu_2022_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_3_reg_5584_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_3_reg_5584_pp0_iter2_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then
                reg_2077 <= grp_fu_2026_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_reg_5347_pp0_iter6_reg = ap_const_lv1_1))) then
                sc_2_reg_5959 <= sc_2_fu_3536_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_5347_pp0_iter7_reg = ap_const_lv1_1))) then
                score_load_reg_5992 <= score_fu_544;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_10_reg_5450 <= tmp_10_fu_2377_p18;
                tmp_15_reg_5455 <= tmp_15_fu_2398_p18;
                tmp_17_reg_5464 <= tmp_17_fu_2419_p18;
                tmp_21_reg_5473 <= tmp_21_fu_2440_p18;
                tmp_23_reg_5482 <= tmp_23_fu_2461_p18;
                tmp_8_reg_5445 <= tmp_8_fu_2356_p18;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_fu_2122_p2 = ap_const_lv1_1))) then
                tmp_11_reg_5436 <= tmp_11_fu_2334_p18;
                tmp_1_reg_5384 <= tmp_1_fu_2158_p18;
                tmp_2_reg_5389 <= tmp_2_fu_2180_p18;
                tmp_3_reg_5394 <= tmp_3_fu_2202_p18;
                tmp_4_reg_5403 <= tmp_4_fu_2224_p18;
                tmp_5_reg_5408 <= tmp_5_fu_2246_p18;
                tmp_6_reg_5417 <= tmp_6_fu_2268_p18;
                tmp_7_reg_5422 <= tmp_7_fu_2290_p18;
                tmp_9_reg_5427 <= tmp_9_fu_2312_p18;
                tmp_s_reg_5365 <= tmp_s_fu_2132_p18;
                trunc_ln104_1_reg_5370 <= trunc_ln104_1_fu_2154_p1;
                trunc_ln104_reg_5351 <= trunc_ln104_fu_2128_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_32_reg_5511 <= grp_fu_15153_p_dout0;
                tmp_37_reg_5536 <= grp_fu_15158_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_34_reg_5841 <= grp_fu_15153_p_dout0;
                tmp_39_reg_5846 <= grp_fu_15158_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                tmp_42_reg_5609 <= grp_fu_15153_p_dout0;
                tmp_47_reg_5624 <= grp_fu_15158_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln1027_reg_5347_pp0_iter3_reg = ap_const_lv1_1))) then
                tmp_44_reg_5882 <= grp_fu_15153_p_dout0;
                tmp_49_reg_5887 <= grp_fu_15158_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_52_reg_5639 <= grp_fu_15153_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln1027_reg_5347_pp0_iter5_reg = ap_const_lv1_1))) then
                tmp_56_reg_5944 <= grp_fu_15153_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln1027_reg_5347_pp0_iter7_reg = ap_const_lv1_1))) then
                tmp_59_reg_5973 <= grp_fu_15158_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_reg_5347_pp0_iter7_reg = ap_const_lv1_1))) then
                tmp_62_reg_6013 <= grp_fu_15153_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln1027_reg_5347_pp0_iter7_reg = ap_const_lv1_1))) then
                tmp_other_4_reg_5978 <= tmp_other_4_fu_3643_p3;
                tmp_score_4_reg_5984 <= tmp_score_4_fu_3650_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln1027_reg_5347_pp0_iter7_reg = ap_const_lv1_1))) then
                tmp_score_load_reg_5966 <= tmp_score_fu_556;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage7_subdone, ap_block_pp0_stage1_subdone, ap_condition_exit_pp0_iter8_stage1, ap_block_pp0_stage2_subdone, ap_idle_pp0_0to7, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to8, ap_done_pending_pp0, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_done_pending_pp0 = ap_const_logic_0) and (ap_idle_pp0_1to8 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if (((ap_idle_pp0_0to7 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter8_stage1))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    and_ln112_1_fu_2737_p2 <= (or_ln112_fu_2724_p2 and and_ln112_fu_2732_p2);
    and_ln112_2_fu_2751_p2 <= (tmp_37_reg_5536 and or_ln112_3_fu_2747_p2);
    and_ln112_3_fu_2756_p2 <= (or_ln112_2_fu_2743_p2 and and_ln112_2_fu_2751_p2);
    and_ln112_4_fu_2870_p2 <= (or_ln112_5_fu_2866_p2 and or_ln112_4_fu_2862_p2);
    and_ln112_5_fu_2876_p2 <= (tmp_42_reg_5609 and and_ln112_4_fu_2870_p2);
    and_ln112_6_fu_2951_p2 <= (or_ln112_7_fu_2945_p2 and or_ln112_6_fu_2927_p2);
    and_ln112_7_fu_2957_p2 <= (tmp_47_reg_5624 and and_ln112_6_fu_2951_p2);
    and_ln112_8_fu_3158_p2 <= (or_ln112_9_fu_3152_p2 and or_ln112_8_fu_3134_p2);
    and_ln112_9_fu_3164_p2 <= (tmp_52_reg_5639 and and_ln112_8_fu_3158_p2);
    and_ln112_fu_2732_p2 <= (tmp_32_reg_5511 and or_ln112_1_fu_2728_p2);
    and_ln116_1_fu_3323_p2 <= (tmp_39_reg_5846 and or_ln116_1_fu_3317_p2);
    and_ln116_2_fu_3377_p2 <= (tmp_44_reg_5882 and or_ln116_2_fu_3371_p2);
    and_ln116_3_fu_3424_p2 <= (tmp_49_reg_5887 and or_ln116_3_fu_3418_p2);
    and_ln116_4_fu_3471_p2 <= (tmp_54_reg_5907 and or_ln116_4_fu_3465_p2);
    and_ln116_fu_3276_p2 <= (tmp_34_reg_5841 and or_ln116_fu_3270_p2);
    and_ln122_fu_3518_p2 <= (tmp_56_reg_5944_pp0_iter6_reg and or_ln122_fu_3512_p2);
    and_ln130_1_fu_3632_p2 <= (tmp_59_reg_5973 and and_ln130_fu_3626_p2);
    and_ln130_fu_3626_p2 <= (or_ln130_2_fu_3620_p2 and or_ln130_1_fu_3602_p2);
    and_ln139_1_fu_3781_p2 <= (tmp_62_reg_6013 and and_ln139_fu_3775_p2);
    and_ln139_fu_3775_p2 <= (or_ln139_2_fu_3769_p2 and or_ln139_1_fu_3751_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage7_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage6_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage7_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage6_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage7_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage5_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage6_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage7_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage4_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage5_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage6_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage7_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage7_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone, icmp_ln1027_reg_5347)
    begin
        if (((icmp_ln1027_reg_5347 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter8_stage1_assign_proc : process(ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage1, icmp_ln1027_reg_5347_pp0_iter7_reg, ap_block_pp0_stage1_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_reg_5347_pp0_iter7_reg = ap_const_lv1_0))) then 
            ap_condition_exit_pp0_iter8_stage1 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter8_stage1 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter8_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_done_pending_pp0_assign_proc : process(ap_loop_exit_ready, ap_loop_exit_ready_pp0_iter1_reg, ap_loop_exit_ready_pp0_iter2_reg, ap_loop_exit_ready_pp0_iter3_reg, ap_loop_exit_ready_pp0_iter4_reg, ap_loop_exit_ready_pp0_iter5_reg, ap_loop_exit_ready_pp0_iter6_reg, ap_loop_exit_ready_pp0_iter7_reg, ap_loop_exit_ready_pp0_iter8_reg)
    begin
        if (not(((ap_loop_exit_ready = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter8_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_0)))) then 
            ap_done_pending_pp0 <= ap_const_logic_1;
        else 
            ap_done_pending_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to7_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to7 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to8_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8)
    begin
        if (((ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to8 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to8 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage7;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln112_1_fu_2499_p1 <= tmp_5_reg_5408;
    bitcast_ln112_2_fu_2540_p1 <= tmp_9_reg_5427;
    bitcast_ln112_3_fu_2557_p1 <= tmp_11_reg_5436;
    bitcast_ln112_4_fu_2762_p1 <= tmp_15_reg_5455;
    bitcast_ln112_5_fu_2779_p1 <= tmp_17_reg_5464;
    bitcast_ln112_6_fu_2881_p1 <= tmp_21_reg_5473;
    bitcast_ln112_7_fu_2898_p1 <= tmp_23_reg_5482;
    bitcast_ln112_8_fu_3088_p1 <= tmp_27_reg_5561;
    bitcast_ln112_9_fu_3105_p1 <= tmp_29_reg_5570;
    bitcast_ln112_fu_2482_p1 <= tmp_3_reg_5394;
    bitcast_ln116_1_fu_3288_p1 <= ov_6_reg_5834;
    bitcast_ln116_2_fu_3342_p1 <= ov_10_reg_5851;
    bitcast_ln116_3_fu_3389_p1 <= ov_14_reg_5858;
    bitcast_ln116_4_fu_3436_p1 <= ov_18_reg_5875;
    bitcast_ln116_fu_3241_p1 <= ov_2_reg_5827;
    bitcast_ln122_fu_3483_p1 <= overlap_4_reg_5937_pp0_iter6_reg;
    bitcast_ln126_fu_3523_p1 <= distance_4_reg_5954;
    bitcast_ln130_1_fu_3573_p1 <= tmp_score_load_reg_5966;
    bitcast_ln130_fu_3556_p1 <= sc_2_reg_5959;
    bitcast_ln139_1_fu_3722_p1 <= score_load_reg_5992;
    bitcast_ln139_fu_3705_p1 <= tmp_score_4_reg_5984;
    grp_fu_15142_p_ce <= ap_const_logic_1;
    grp_fu_15142_p_din0 <= grp_fu_2018_p0;
    grp_fu_15142_p_din1 <= grp_fu_2018_p1;
    grp_fu_15142_p_opcode <= grp_fu_2018_opcode;
    grp_fu_15148_p_ce <= ap_const_logic_1;
    grp_fu_15148_p_din0 <= grp_fu_2039_p0;
    grp_fu_15148_p_din1 <= grp_fu_2039_p1;
    grp_fu_15153_p_ce <= ap_const_logic_1;
    grp_fu_15153_p_din0 <= grp_fu_2047_p0;
    grp_fu_15153_p_din1 <= grp_fu_2047_p1;
    grp_fu_15153_p_opcode <= grp_fu_2047_opcode;
    grp_fu_15158_p_ce <= ap_const_logic_1;
    grp_fu_15158_p_din0 <= grp_fu_2051_p0;
    grp_fu_15158_p_din1 <= grp_fu_2051_p1;
    grp_fu_15158_p_opcode <= grp_fu_2051_opcode;

    grp_fu_2018_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_5347, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_5347_pp0_iter1_reg, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, and_ln112_5_reg_5629_pp0_iter1_reg, ap_block_pp0_stage6_00001, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage7_00001, ap_block_pp0_stage1_00001, ap_block_pp0_stage0_00001)
    begin
        if ((((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_5_reg_5629_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_0 = and_ln112_5_reg_5629_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_2018_opcode <= ap_const_lv2_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2018_opcode <= ap_const_lv2_0;
        else 
            grp_fu_2018_opcode <= "XX";
        end if; 
    end process;


    grp_fu_2018_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_5347_pp0_iter1_reg, ap_CS_fsm_pp0_stage5, tmp_s_reg_5365, tmp_3_reg_5394, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, tmp_12_reg_5541, ap_CS_fsm_pp0_stage4, tmp_20_reg_5614, and_ln112_5_reg_5629_pp0_iter1_reg, tmp_18_reg_5644, tmp_24_reg_5654, d1_2_reg_5740, d2_2_reg_5745, mul_reg_5780, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_lv1_0 = and_ln112_5_reg_5629_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2018_p0 <= d2_2_reg_5745;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_5_reg_5629_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2018_p0 <= d1_2_reg_5740;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2018_p0 <= mul_reg_5780;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2018_p0 <= tmp_24_reg_5654;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2018_p0 <= tmp_18_reg_5644;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2018_p0 <= tmp_20_reg_5614;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2018_p0 <= tmp_12_reg_5541;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2018_p0 <= tmp_3_reg_5394;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2018_p0 <= tmp_s_reg_5365;
        else 
            grp_fu_2018_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2018_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_5347_pp0_iter1_reg, ap_CS_fsm_pp0_stage5, tmp_1_reg_5384, tmp_5_reg_5408, ap_CS_fsm_pp0_stage2, tmp_21_reg_5473, ap_CS_fsm_pp0_stage3, tmp_13_reg_5546, ap_CS_fsm_pp0_stage4, and_ln112_5_reg_5629_pp0_iter1_reg, tmp_19_reg_5649, tmp_25_reg_5659, sub75_2_reg_5750, sub87_2_reg_5755, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_lv1_0 = and_ln112_5_reg_5629_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2018_p1 <= sub87_2_reg_5755;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_5_reg_5629_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2018_p1 <= sub75_2_reg_5750;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2018_p1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2018_p1 <= tmp_25_reg_5659;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2018_p1 <= tmp_19_reg_5649;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2018_p1 <= tmp_21_reg_5473;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2018_p1 <= tmp_13_reg_5546;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2018_p1 <= tmp_5_reg_5408;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2018_p1 <= tmp_1_reg_5384;
        else 
            grp_fu_2018_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2022_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_5347, ap_CS_fsm_pp0_stage1, reg_2063, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_5347_pp0_iter1_reg, and_ln112_9_reg_5674, ap_CS_fsm_pp0_stage5, tmp_2_reg_5389, tmp_8_reg_5445, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, tmp_14_reg_5551, ap_CS_fsm_pp0_stage4, tmp_22_reg_5619, and_ln112_7_reg_5634_pp0_iter1_reg, tmp_26_reg_5664, tmp_28_reg_5669, and_ln112_9_reg_5674_pp0_iter1_reg, d2_reg_5693, d1_3_reg_5760, d2_3_reg_5765, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if ((((ap_const_lv1_0 = and_ln112_9_reg_5674_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_9_reg_5674_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2022_p0 <= reg_2063;
        elsif (((ap_const_lv1_0 = and_ln112_7_reg_5634_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2022_p0 <= d2_3_reg_5765;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_7_reg_5634_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2022_p0 <= d1_3_reg_5760;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2022_p0 <= d2_reg_5693;
        elsif (((ap_const_lv1_0 = and_ln112_9_reg_5674) and (icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2022_p0 <= tmp_28_reg_5669;
        elsif (((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_lv1_1 = and_ln112_9_reg_5674) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2022_p0 <= tmp_26_reg_5664;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2022_p0 <= tmp_22_reg_5619;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2022_p0 <= tmp_14_reg_5551;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2022_p0 <= tmp_8_reg_5445;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2022_p0 <= tmp_2_reg_5389;
        else 
            grp_fu_2022_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2022_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_5347, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_5347_pp0_iter1_reg, and_ln112_9_reg_5674, reg_2068, ap_CS_fsm_pp0_stage5, tmp_3_reg_5394, tmp_9_reg_5427, ap_CS_fsm_pp0_stage2, tmp_15_reg_5455, tmp_23_reg_5482, ap_CS_fsm_pp0_stage3, tmp_27_reg_5561, tmp_29_reg_5570, ap_CS_fsm_pp0_stage4, and_ln112_7_reg_5634_pp0_iter1_reg, and_ln112_9_reg_5674_pp0_iter1_reg, sub2_reg_5709, sub75_3_reg_5770, sub87_3_reg_5775, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if ((((ap_const_lv1_0 = and_ln112_9_reg_5674_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_9_reg_5674_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2022_p1 <= reg_2068;
        elsif (((ap_const_lv1_0 = and_ln112_7_reg_5634_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2022_p1 <= sub87_3_reg_5775;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_7_reg_5634_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2022_p1 <= sub75_3_reg_5770;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2022_p1 <= sub2_reg_5709;
        elsif (((ap_const_lv1_0 = and_ln112_9_reg_5674) and (icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2022_p1 <= tmp_29_reg_5570;
        elsif (((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_lv1_1 = and_ln112_9_reg_5674) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2022_p1 <= tmp_27_reg_5561;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2022_p1 <= tmp_23_reg_5482;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2022_p1 <= tmp_15_reg_5455;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2022_p1 <= tmp_9_reg_5427;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2022_p1 <= tmp_3_reg_5394;
        else 
            grp_fu_2022_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2026_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_5347, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_5347_pp0_iter1_reg, and_ln112_9_reg_5674, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_5347_pp0_iter3_reg, icmp_ln1027_reg_5347_pp0_iter4_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, and_ln112_3_reg_5584_pp0_iter1_reg, ap_block_pp0_stage6_00001, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage7_00001, ap_block_pp0_stage1_00001, ap_block_pp0_stage0_00001)
    begin
        if ((((ap_const_lv1_0 = and_ln112_9_reg_5674) and (icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (ap_const_lv1_1 = and_ln112_9_reg_5674) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_3_reg_5584_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_lv1_0 = and_ln112_3_reg_5584_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_2026_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_5347_pp0_iter3_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_reg_5347_pp0_iter4_reg = ap_const_lv1_1)))) then 
            grp_fu_2026_opcode <= ap_const_lv2_0;
        else 
            grp_fu_2026_opcode <= "XX";
        end if; 
    end process;


    grp_fu_2026_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_5347, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_5347_pp0_iter1_reg, and_ln112_9_reg_5674, ap_CS_fsm_pp0_stage5, tmp_4_reg_5403, ap_CS_fsm_pp0_stage2, tmp_10_reg_5450, tmp_23_reg_5482, ap_CS_fsm_pp0_stage3, tmp_16_reg_5556, tmp_27_reg_5561, tmp_29_reg_5570, ap_CS_fsm_pp0_stage4, and_ln112_3_reg_5584_pp0_iter1_reg, d1_1_reg_5714, d2_1_reg_5719, distance_1_reg_5902, distance_2_reg_5932, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2026_p0 <= distance_2_reg_5932;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2026_p0 <= distance_1_reg_5902;
        elsif (((ap_const_lv1_0 = and_ln112_3_reg_5584_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2026_p0 <= d2_1_reg_5719;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_3_reg_5584_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2026_p0 <= d1_1_reg_5714;
        elsif (((ap_const_lv1_0 = and_ln112_9_reg_5674) and (icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2026_p0 <= tmp_27_reg_5561;
        elsif (((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_lv1_1 = and_ln112_9_reg_5674) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2026_p0 <= tmp_29_reg_5570;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2026_p0 <= tmp_23_reg_5482;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2026_p0 <= tmp_16_reg_5556;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2026_p0 <= tmp_10_reg_5450;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2026_p0 <= tmp_4_reg_5403;
        else 
            grp_fu_2026_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2026_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_5347, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_5347_pp0_iter1_reg, and_ln112_9_reg_5674, ap_CS_fsm_pp0_stage5, tmp_5_reg_5408, tmp_11_reg_5436, ap_CS_fsm_pp0_stage2, tmp_17_reg_5464, tmp_21_reg_5473, ap_CS_fsm_pp0_stage3, tmp_27_reg_5561, tmp_29_reg_5570, ap_CS_fsm_pp0_stage4, and_ln112_3_reg_5584_pp0_iter1_reg, sub75_1_reg_5724, sub87_1_reg_5729, mul_2_reg_5796_pp0_iter3_reg, mul_3_reg_5807_pp0_iter4_reg, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2026_p1 <= mul_3_reg_5807_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2026_p1 <= mul_2_reg_5796_pp0_iter3_reg;
        elsif (((ap_const_lv1_0 = and_ln112_3_reg_5584_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2026_p1 <= sub87_1_reg_5729;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (icmp_ln1027_reg_5347_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_3_reg_5584_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2026_p1 <= sub75_1_reg_5724;
        elsif (((ap_const_lv1_0 = and_ln112_9_reg_5674) and (icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2026_p1 <= tmp_29_reg_5570;
        elsif (((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_const_lv1_1 = and_ln112_9_reg_5674) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2026_p1 <= tmp_27_reg_5561;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2026_p1 <= tmp_21_reg_5473;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2026_p1 <= tmp_17_reg_5464;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2026_p1 <= tmp_11_reg_5436;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2026_p1 <= tmp_5_reg_5408;
        else 
            grp_fu_2026_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2030_opcode_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter6, icmp_ln1027_reg_5347, ap_CS_fsm_pp0_stage1, icmp_ln1027_reg_5347_pp0_iter2_reg, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_5347_pp0_iter5_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage6_00001, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage1_00001)
    begin
        if ((((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_2030_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_reg_5347_pp0_iter5_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_2030_opcode <= ap_const_lv2_0;
        else 
            grp_fu_2030_opcode <= "XX";
        end if; 
    end process;


    grp_fu_2030_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, tmp_5_reg_5408, tmp_11_reg_5436, ap_CS_fsm_pp0_stage2, tmp_17_reg_5464, tmp_21_reg_5473, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, distance_reg_5822, distance_3_reg_5949, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2030_p0 <= distance_3_reg_5949;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2030_p0 <= distance_reg_5822;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2030_p0 <= tmp_21_reg_5473;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2030_p0 <= tmp_17_reg_5464;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2030_p0 <= tmp_11_reg_5436;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2030_p0 <= tmp_5_reg_5408;
        else 
            grp_fu_2030_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2030_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, tmp_3_reg_5394, tmp_9_reg_5427, ap_CS_fsm_pp0_stage2, tmp_15_reg_5455, tmp_23_reg_5482, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, mul_1_reg_5785_pp0_iter2_reg, mul_4_reg_5817_pp0_iter5_reg, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2030_p1 <= mul_4_reg_5817_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_2030_p1 <= mul_1_reg_5785_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2030_p1 <= tmp_23_reg_5482;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2030_p1 <= tmp_15_reg_5455;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2030_p1 <= tmp_9_reg_5427;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2030_p1 <= tmp_3_reg_5394;
        else 
            grp_fu_2030_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2034_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, tmp_6_reg_5417, tmp_9_reg_5427, ap_CS_fsm_pp0_stage2, tmp_15_reg_5455, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, d1_reg_5688, ap_block_pp0_stage5, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2034_p0 <= d1_reg_5688;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2034_p0 <= tmp_15_reg_5455;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2034_p0 <= tmp_9_reg_5427;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2034_p0 <= tmp_6_reg_5417;
        else 
            grp_fu_2034_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2034_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage5, tmp_7_reg_5422, tmp_11_reg_5436, ap_CS_fsm_pp0_stage2, tmp_17_reg_5464, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, sub_reg_5698, ap_block_pp0_stage5, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2034_p1 <= sub_reg_5698;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2034_p1 <= tmp_17_reg_5464;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2034_p1 <= tmp_11_reg_5436;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2034_p1 <= tmp_7_reg_5422;
        else 
            grp_fu_2034_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2039_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage7, reg_2057, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, d_2_reg_5734, d_3_reg_5790, d_4_reg_5801, ov_20_reg_5865, overlap_3_reg_5927, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2039_p0 <= overlap_3_reg_5927;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2039_p0 <= ov_20_reg_5865;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2039_p0 <= d_4_reg_5801;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2039_p0 <= d_3_reg_5790;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2039_p0 <= d_2_reg_5734;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2039_p0 <= reg_2057;
        else 
            grp_fu_2039_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2039_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage7, reg_2057, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, d_2_reg_5734, d_3_reg_5790, d_4_reg_5801, ov_7_reg_5870, ov_19_reg_5917_pp0_iter4_reg, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2039_p1 <= ov_19_reg_5917_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2039_p1 <= ov_7_reg_5870;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2039_p1 <= d_4_reg_5801;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2039_p1 <= d_3_reg_5790;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2039_p1 <= d_2_reg_5734;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2039_p1 <= reg_2057;
        else 
            grp_fu_2039_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2043_p0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, d_1_reg_5703, overlap_1_reg_5912, overlap_2_reg_5922, ap_block_pp0_stage7, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2043_p0 <= overlap_2_reg_5922;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2043_p0 <= overlap_1_reg_5912;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2043_p0 <= d_1_reg_5703;
        else 
            grp_fu_2043_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2043_p1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, d_1_reg_5703, ov_11_reg_5892, ov_15_reg_5897, ap_block_pp0_stage7, ap_block_pp0_stage2, ap_block_pp0_stage3)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2043_p1 <= ov_15_reg_5897;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2043_p1 <= ov_11_reg_5892;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2043_p1 <= d_1_reg_5703;
        else 
            grp_fu_2043_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2047_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_5347, ap_CS_fsm_pp0_stage1, icmp_ln1027_reg_5347_pp0_iter2_reg, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_5347_pp0_iter5_reg, icmp_ln1027_reg_5347_pp0_iter7_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage7_00001, ap_block_pp0_stage1_00001, ap_block_pp0_stage0_00001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_5347_pp0_iter7_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln1027_reg_5347_pp0_iter5_reg = ap_const_lv1_1)))) then 
            grp_fu_2047_opcode <= ap_const_lv5_2;
        elsif ((((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_2047_opcode <= ap_const_lv5_4;
        else 
            grp_fu_2047_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_2047_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, tmp_3_reg_5394, ap_CS_fsm_pp0_stage2, tmp_15_reg_5455, ap_CS_fsm_pp0_stage3, tmp_27_reg_5561, ap_CS_fsm_pp0_stage4, ov_2_reg_5827, ov_10_reg_5851, overlap_4_reg_5937, tmp_score_4_reg_5984, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2047_p0 <= tmp_score_4_reg_5984;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2047_p0 <= overlap_4_reg_5937;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2047_p0 <= ov_10_reg_5851;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2047_p0 <= ov_2_reg_5827;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2047_p0 <= tmp_27_reg_5561;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2047_p0 <= tmp_15_reg_5455;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2047_p0 <= tmp_3_reg_5394;
        else 
            grp_fu_2047_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2047_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, tmp_5_reg_5408, ap_CS_fsm_pp0_stage2, tmp_17_reg_5464, ap_CS_fsm_pp0_stage3, tmp_29_reg_5570, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1, score_fu_544, ap_block_pp0_stage0, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_2047_p1 <= score_fu_544;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2047_p1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2047_p1 <= tmp_29_reg_5570;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2047_p1 <= tmp_17_reg_5464;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2047_p1 <= tmp_5_reg_5408;
        else 
            grp_fu_2047_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2051_opcode_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_5347, ap_CS_fsm_pp0_stage1, icmp_ln1027_reg_5347_pp0_iter2_reg, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_5347_pp0_iter3_reg, icmp_ln1027_reg_5347_pp0_iter7_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage7_00001, ap_block_pp0_stage1_00001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln1027_reg_5347_pp0_iter7_reg = ap_const_lv1_1))) then 
            grp_fu_2051_opcode <= ap_const_lv5_2;
        elsif ((((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_5347 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (icmp_ln1027_reg_5347_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln1027_reg_5347_pp0_iter3_reg = ap_const_lv1_1)))) then 
            grp_fu_2051_opcode <= ap_const_lv5_4;
        else 
            grp_fu_2051_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_2051_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, tmp_9_reg_5427, ap_CS_fsm_pp0_stage2, tmp_21_reg_5473, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ov_6_reg_5834, ov_14_reg_5858, ov_18_reg_5875, sc_2_reg_5959, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2051_p0 <= sc_2_reg_5959;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_2051_p0 <= ov_18_reg_5875;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_2051_p0 <= ov_14_reg_5858;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_2051_p0 <= ov_6_reg_5834;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2051_p0 <= tmp_21_reg_5473;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2051_p0 <= tmp_9_reg_5427;
        else 
            grp_fu_2051_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_2051_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, tmp_11_reg_5436, ap_CS_fsm_pp0_stage2, tmp_23_reg_5482, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage1, tmp_score_fu_556, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_2051_p1 <= tmp_score_fu_556;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_2051_p1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_2051_p1 <= tmp_23_reg_5482;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_2051_p1 <= tmp_11_reg_5436;
        else 
            grp_fu_2051_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_real_2_fu_3197_p3 <= 
        i_real_fu_3174_p2 when (icmp_ln1019_fu_3169_p2(0) = '1') else 
        i_real_3_reg_5332;
    i_real_fu_3174_p2 <= std_logic_vector(unsigned(i_real_3_reg_5332) + unsigned(ap_const_lv32_1));
    icmp_ln1019_fu_3169_p2 <= "1" when (k_real_5_reg_5340 = ap_const_lv32_F) else "0";
    icmp_ln1027_fu_2122_p2 <= "1" when (signed(merge_1_1_fu_548) < signed(ap_const_lv32_F)) else "0";
    icmp_ln112_10_fu_2808_p2 <= "0" when (tmp_41_fu_2782_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_11_fu_2814_p2 <= "1" when (trunc_ln112_5_fu_2792_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_12_fu_2915_p2 <= "0" when (tmp_45_fu_2884_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_13_fu_2921_p2 <= "1" when (trunc_ln112_6_fu_2894_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_14_fu_2933_p2 <= "0" when (tmp_46_fu_2901_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_15_fu_2939_p2 <= "1" when (trunc_ln112_7_fu_2911_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_16_fu_3122_p2 <= "0" when (tmp_50_fu_3091_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_17_fu_3128_p2 <= "1" when (trunc_ln112_8_fu_3101_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_18_fu_3140_p2 <= "0" when (tmp_51_fu_3108_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_19_fu_3146_p2 <= "1" when (trunc_ln112_9_fu_3118_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_1_fu_2522_p2 <= "1" when (trunc_ln112_fu_2495_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_2_fu_2528_p2 <= "0" when (tmp_31_fu_2502_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_3_fu_2534_p2 <= "1" when (trunc_ln112_1_fu_2512_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_4_fu_2574_p2 <= "0" when (tmp_35_fu_2543_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_5_fu_2580_p2 <= "1" when (trunc_ln112_2_fu_2553_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_6_fu_2586_p2 <= "0" when (tmp_36_fu_2560_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_7_fu_2592_p2 <= "1" when (trunc_ln112_3_fu_2570_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_8_fu_2796_p2 <= "0" when (tmp_40_fu_2765_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_9_fu_2802_p2 <= "1" when (trunc_ln112_4_fu_2775_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_fu_2516_p2 <= "0" when (tmp_30_fu_2485_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_1_fu_3264_p2 <= "1" when (trunc_ln116_fu_3254_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_2_fu_3305_p2 <= "0" when (tmp_38_fu_3291_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_3_fu_3311_p2 <= "1" when (trunc_ln116_1_fu_3301_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_4_fu_3359_p2 <= "0" when (tmp_43_fu_3345_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_5_fu_3365_p2 <= "1" when (trunc_ln116_2_fu_3355_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_6_fu_3406_p2 <= "0" when (tmp_48_fu_3392_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_7_fu_3412_p2 <= "1" when (trunc_ln116_3_fu_3402_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_8_fu_3453_p2 <= "0" when (tmp_53_fu_3439_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_9_fu_3459_p2 <= "1" when (trunc_ln116_4_fu_3449_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_fu_3258_p2 <= "0" when (tmp_33_fu_3244_p4 = ap_const_lv8_FF) else "1";
    icmp_ln122_1_fu_3506_p2 <= "1" when (trunc_ln122_fu_3496_p1 = ap_const_lv23_0) else "0";
    icmp_ln122_fu_3500_p2 <= "0" when (tmp_55_fu_3486_p4 = ap_const_lv8_FF) else "1";
    icmp_ln130_1_fu_3590_p2 <= "0" when (tmp_57_fu_3559_p4 = ap_const_lv8_FF) else "1";
    icmp_ln130_2_fu_3596_p2 <= "1" when (trunc_ln130_fu_3569_p1 = ap_const_lv23_0) else "0";
    icmp_ln130_3_fu_3608_p2 <= "0" when (tmp_58_fu_3576_p4 = ap_const_lv8_FF) else "1";
    icmp_ln130_4_fu_3614_p2 <= "1" when (trunc_ln130_1_fu_3586_p1 = ap_const_lv23_0) else "0";
    icmp_ln130_fu_3550_p2 <= "1" when (tmp_other_fu_560 = ap_const_lv32_FFFFFFFF) else "0";
    icmp_ln139_1_fu_3745_p2 <= "1" when (trunc_ln139_fu_3718_p1 = ap_const_lv23_0) else "0";
    icmp_ln139_2_fu_3757_p2 <= "0" when (tmp_61_fu_3725_p4 = ap_const_lv8_FF) else "1";
    icmp_ln139_3_fu_3763_p2 <= "1" when (trunc_ln139_1_fu_3735_p1 = ap_const_lv23_0) else "0";
    icmp_ln139_fu_3739_p2 <= "0" when (tmp_60_fu_3708_p4 = ap_const_lv8_FF) else "1";
    k_real_2_fu_3184_p2 <= std_logic_vector(unsigned(k_real_5_reg_5340) + unsigned(ap_const_lv32_1));
    k_real_3_fu_3189_p3 <= 
        k_real_fu_3179_p2 when (icmp_ln1019_fu_3169_p2(0) = '1') else 
        k_real_2_fu_3184_p2;
    k_real_fu_3179_p2 <= std_logic_vector(unsigned(i_real_3_reg_5332) + unsigned(ap_const_lv32_2));
    merge_1_6_fu_3804_p3 <= 
        i_real_3_reg_5332_pp0_iter8_reg when (or_ln139_fu_3786_p2(0) = '1') else 
        merge_1_4_reg_6000;
    merge_1_7_fu_3822_p3 <= 
        merge_1_6_fu_3804_p3 when (icmp_ln1019_reg_5679_pp0_iter8_reg(0) = '1') else 
        merge_1_4_reg_6000;
    merge_1_out <= merge_1_fu_536(4 - 1 downto 0);

    merge_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln1027_reg_5347_pp0_iter7_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_reg_5347_pp0_iter7_reg = ap_const_lv1_0))) then 
            merge_1_out_ap_vld <= ap_const_logic_1;
        else 
            merge_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    merge_2_5_fu_3798_p3 <= 
        tmp_other_4_reg_5978 when (or_ln139_fu_3786_p2(0) = '1') else 
        merge_2_1_reg_6007;
    merge_2_6_fu_3816_p3 <= 
        merge_2_5_fu_3798_p3 when (icmp_ln1019_reg_5679_pp0_iter8_reg(0) = '1') else 
        merge_2_1_reg_6007;
    merge_2_out <= merge_2_fu_540(4 - 1 downto 0);

    merge_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage1, ap_block_pp0_stage1_11001, icmp_ln1027_reg_5347_pp0_iter7_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_reg_5347_pp0_iter7_reg = ap_const_lv1_0))) then 
            merge_2_out_ap_vld <= ap_const_logic_1;
        else 
            merge_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    or_ln112_1_fu_2728_p2 <= (icmp_ln112_3_reg_5506 or icmp_ln112_2_reg_5501);
    or_ln112_2_fu_2743_p2 <= (icmp_ln112_5_reg_5521 or icmp_ln112_4_reg_5516);
    or_ln112_3_fu_2747_p2 <= (icmp_ln112_7_reg_5531 or icmp_ln112_6_reg_5526);
    or_ln112_4_fu_2862_p2 <= (icmp_ln112_9_reg_5594 or icmp_ln112_8_reg_5589);
    or_ln112_5_fu_2866_p2 <= (icmp_ln112_11_reg_5604 or icmp_ln112_10_reg_5599);
    or_ln112_6_fu_2927_p2 <= (icmp_ln112_13_fu_2921_p2 or icmp_ln112_12_fu_2915_p2);
    or_ln112_7_fu_2945_p2 <= (icmp_ln112_15_fu_2939_p2 or icmp_ln112_14_fu_2933_p2);
    or_ln112_8_fu_3134_p2 <= (icmp_ln112_17_fu_3128_p2 or icmp_ln112_16_fu_3122_p2);
    or_ln112_9_fu_3152_p2 <= (icmp_ln112_19_fu_3146_p2 or icmp_ln112_18_fu_3140_p2);
    or_ln112_fu_2724_p2 <= (icmp_ln112_reg_5491 or icmp_ln112_1_reg_5496);
    or_ln116_1_fu_3317_p2 <= (icmp_ln116_3_fu_3311_p2 or icmp_ln116_2_fu_3305_p2);
    or_ln116_2_fu_3371_p2 <= (icmp_ln116_5_fu_3365_p2 or icmp_ln116_4_fu_3359_p2);
    or_ln116_3_fu_3418_p2 <= (icmp_ln116_7_fu_3412_p2 or icmp_ln116_6_fu_3406_p2);
    or_ln116_4_fu_3465_p2 <= (icmp_ln116_9_fu_3459_p2 or icmp_ln116_8_fu_3453_p2);
    or_ln116_fu_3270_p2 <= (icmp_ln116_fu_3258_p2 or icmp_ln116_1_fu_3264_p2);
    or_ln122_fu_3512_p2 <= (icmp_ln122_fu_3500_p2 or icmp_ln122_1_fu_3506_p2);
    or_ln130_1_fu_3602_p2 <= (icmp_ln130_2_fu_3596_p2 or icmp_ln130_1_fu_3590_p2);
    or_ln130_2_fu_3620_p2 <= (icmp_ln130_4_fu_3614_p2 or icmp_ln130_3_fu_3608_p2);
    or_ln130_fu_3637_p2 <= (icmp_ln130_fu_3550_p2 or and_ln130_1_fu_3632_p2);
    or_ln139_1_fu_3751_p2 <= (icmp_ln139_fu_3739_p2 or icmp_ln139_1_fu_3745_p2);
    or_ln139_2_fu_3769_p2 <= (icmp_ln139_3_fu_3763_p2 or icmp_ln139_2_fu_3757_p2);
    or_ln139_fu_3786_p2 <= (tmp_fu_3698_p3 or and_ln139_1_fu_3781_p2);
    ov_10_fu_3227_p3 <= 
        reg_2057 when (and_ln112_5_reg_5629_pp0_iter2_reg(0) = '1') else 
        reg_2057;
    ov_11_fu_3382_p3 <= 
        ap_const_lv32_0 when (and_ln116_2_fu_3377_p2(0) = '1') else 
        ov_10_reg_5851;
    ov_14_fu_3234_p3 <= 
        reg_2073 when (and_ln112_7_reg_5634_pp0_iter2_reg(0) = '1') else 
        reg_2073;
    ov_15_fu_3429_p3 <= 
        ap_const_lv32_0 when (and_ln116_3_fu_3424_p2(0) = '1') else 
        ov_14_reg_5858;
    ov_18_fu_3335_p3 <= 
        reg_2073 when (and_ln112_9_reg_5674_pp0_iter2_reg(0) = '1') else 
        reg_2073;
    ov_19_fu_3476_p3 <= 
        ap_const_lv32_0 when (and_ln116_4_fu_3471_p2(0) = '1') else 
        ov_18_reg_5875;
    ov_20_fu_3281_p3 <= 
        ap_const_lv32_0 when (and_ln116_fu_3276_p2(0) = '1') else 
        ov_2_reg_5827;
    ov_2_fu_3214_p3 <= 
        ov_reg_5812 when (and_ln112_1_reg_5579_pp0_iter2_reg(0) = '1') else 
        reg_2073;
    ov_6_fu_3220_p3 <= 
        reg_2077 when (and_ln112_3_reg_5584_pp0_iter2_reg(0) = '1') else 
        reg_2077;
    ov_7_fu_3328_p3 <= 
        ap_const_lv32_0 when (and_ln116_1_fu_3323_p2(0) = '1') else 
        ov_6_reg_5834;
    sc_2_fu_3536_p3 <= 
        overlap_4_reg_5937_pp0_iter6_reg when (and_ln122_fu_3518_p2(0) = '1') else 
        sc_fu_3532_p1;
    sc_fu_3532_p1 <= xor_ln126_fu_3526_p2;
    score_2_fu_3792_p3 <= 
        tmp_score_4_reg_5984 when (or_ln139_fu_3786_p2(0) = '1') else 
        score_load_reg_5992;
    score_3_fu_3810_p3 <= 
        score_2_fu_3792_p3 when (icmp_ln1019_reg_5679_pp0_iter8_reg(0) = '1') else 
        score_load_reg_5992;
    tmp_30_fu_2485_p4 <= bitcast_ln112_fu_2482_p1(30 downto 23);
    tmp_31_fu_2502_p4 <= bitcast_ln112_1_fu_2499_p1(30 downto 23);
    tmp_33_fu_3244_p4 <= bitcast_ln116_fu_3241_p1(30 downto 23);
    tmp_35_fu_2543_p4 <= bitcast_ln112_2_fu_2540_p1(30 downto 23);
    tmp_36_fu_2560_p4 <= bitcast_ln112_3_fu_2557_p1(30 downto 23);
    tmp_38_fu_3291_p4 <= bitcast_ln116_1_fu_3288_p1(30 downto 23);
    tmp_40_fu_2765_p4 <= bitcast_ln112_4_fu_2762_p1(30 downto 23);
    tmp_41_fu_2782_p4 <= bitcast_ln112_5_fu_2779_p1(30 downto 23);
    tmp_43_fu_3345_p4 <= bitcast_ln116_2_fu_3342_p1(30 downto 23);
    tmp_45_fu_2884_p4 <= bitcast_ln112_6_fu_2881_p1(30 downto 23);
    tmp_46_fu_2901_p4 <= bitcast_ln112_7_fu_2898_p1(30 downto 23);
    tmp_48_fu_3392_p4 <= bitcast_ln116_3_fu_3389_p1(30 downto 23);
    tmp_50_fu_3091_p4 <= bitcast_ln112_8_fu_3088_p1(30 downto 23);
    tmp_51_fu_3108_p4 <= bitcast_ln112_9_fu_3105_p1(30 downto 23);
    tmp_53_fu_3439_p4 <= bitcast_ln116_4_fu_3436_p1(30 downto 23);
    tmp_55_fu_3486_p4 <= bitcast_ln122_fu_3483_p1(30 downto 23);
    tmp_57_fu_3559_p4 <= bitcast_ln130_fu_3556_p1(30 downto 23);
    tmp_58_fu_3576_p4 <= bitcast_ln130_1_fu_3573_p1(30 downto 23);
    tmp_60_fu_3708_p4 <= bitcast_ln139_fu_3705_p1(30 downto 23);
    tmp_61_fu_3725_p4 <= bitcast_ln139_1_fu_3722_p1(30 downto 23);
    tmp_fu_3698_p3 <= merge_1_4_reg_6000(31 downto 31);
    tmp_other_3_fu_3660_p3 <= 
        ap_const_lv32_FFFFFFFF when (icmp_ln1019_reg_5679_pp0_iter7_reg(0) = '1') else 
        tmp_other_4_reg_5978;
    tmp_other_4_fu_3643_p3 <= 
        k_real_5_reg_5340_pp0_iter7_reg when (or_ln130_fu_3637_p2(0) = '1') else 
        tmp_other_fu_560;
    tmp_score_3_fu_3666_p3 <= 
        ap_const_lv32_0 when (icmp_ln1019_reg_5679_pp0_iter7_reg(0) = '1') else 
        tmp_score_4_reg_5984;
    tmp_score_4_fu_3650_p3 <= 
        sc_2_reg_5959 when (or_ln130_fu_3637_p2(0) = '1') else 
        tmp_score_load_reg_5966;
    trunc_ln104_1_fu_2154_p1 <= k_real_4_fu_552(4 - 1 downto 0);
    trunc_ln104_fu_2128_p1 <= merge_1_1_fu_548(4 - 1 downto 0);
    trunc_ln112_1_fu_2512_p1 <= bitcast_ln112_1_fu_2499_p1(23 - 1 downto 0);
    trunc_ln112_2_fu_2553_p1 <= bitcast_ln112_2_fu_2540_p1(23 - 1 downto 0);
    trunc_ln112_3_fu_2570_p1 <= bitcast_ln112_3_fu_2557_p1(23 - 1 downto 0);
    trunc_ln112_4_fu_2775_p1 <= bitcast_ln112_4_fu_2762_p1(23 - 1 downto 0);
    trunc_ln112_5_fu_2792_p1 <= bitcast_ln112_5_fu_2779_p1(23 - 1 downto 0);
    trunc_ln112_6_fu_2894_p1 <= bitcast_ln112_6_fu_2881_p1(23 - 1 downto 0);
    trunc_ln112_7_fu_2911_p1 <= bitcast_ln112_7_fu_2898_p1(23 - 1 downto 0);
    trunc_ln112_8_fu_3101_p1 <= bitcast_ln112_8_fu_3088_p1(23 - 1 downto 0);
    trunc_ln112_9_fu_3118_p1 <= bitcast_ln112_9_fu_3105_p1(23 - 1 downto 0);
    trunc_ln112_fu_2495_p1 <= bitcast_ln112_fu_2482_p1(23 - 1 downto 0);
    trunc_ln116_1_fu_3301_p1 <= bitcast_ln116_1_fu_3288_p1(23 - 1 downto 0);
    trunc_ln116_2_fu_3355_p1 <= bitcast_ln116_2_fu_3342_p1(23 - 1 downto 0);
    trunc_ln116_3_fu_3402_p1 <= bitcast_ln116_3_fu_3389_p1(23 - 1 downto 0);
    trunc_ln116_4_fu_3449_p1 <= bitcast_ln116_4_fu_3436_p1(23 - 1 downto 0);
    trunc_ln116_fu_3254_p1 <= bitcast_ln116_fu_3241_p1(23 - 1 downto 0);
    trunc_ln122_fu_3496_p1 <= bitcast_ln122_fu_3483_p1(23 - 1 downto 0);
    trunc_ln130_1_fu_3586_p1 <= bitcast_ln130_1_fu_3573_p1(23 - 1 downto 0);
    trunc_ln130_fu_3569_p1 <= bitcast_ln130_fu_3556_p1(23 - 1 downto 0);
    trunc_ln139_1_fu_3735_p1 <= bitcast_ln139_1_fu_3722_p1(23 - 1 downto 0);
    trunc_ln139_fu_3718_p1 <= bitcast_ln139_fu_3705_p1(23 - 1 downto 0);
    xor_ln126_fu_3526_p2 <= (bitcast_ln126_fu_3523_p1 xor ap_const_lv32_80000000);
end behav;
