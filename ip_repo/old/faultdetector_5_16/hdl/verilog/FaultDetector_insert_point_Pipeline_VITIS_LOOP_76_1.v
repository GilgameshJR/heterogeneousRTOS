// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        regions_center_0_0_0,
        regions_center_1_0_0,
        regions_center_2_0_0,
        regions_center_3_0_0,
        regions_center_4_0_0,
        regions_center_5_0_0,
        regions_center_6_0_0,
        regions_center_7_0_0,
        regions_center_8_0_0,
        regions_center_9_0_0,
        regions_center_10_0_0,
        regions_center_11_0_0,
        regions_center_12_0_0,
        regions_center_13_0_0,
        regions_center_14_0_0,
        regions_center_15_0_0,
        regions_max_0_0_0,
        regions_max_1_0_0,
        regions_max_2_0_0,
        regions_max_3_0_0,
        regions_max_4_0_0,
        regions_max_5_0_0,
        regions_max_6_0_0,
        regions_max_7_0_0,
        regions_max_8_0_0,
        regions_max_9_0_0,
        regions_max_10_0_0,
        regions_max_11_0_0,
        regions_max_12_0_0,
        regions_max_13_0_0,
        regions_max_14_0_0,
        regions_max_15_0_0,
        regions_min_0_0_0,
        regions_min_1_0_0,
        regions_min_2_0_0,
        regions_min_3_0_0,
        regions_min_4_0_0,
        regions_min_5_0_0,
        regions_min_6_0_0,
        regions_min_7_0_0,
        regions_min_8_0_0,
        regions_min_9_0_0,
        regions_min_10_0_0,
        regions_min_11_0_0,
        regions_min_12_0_0,
        regions_min_13_0_0,
        regions_min_14_0_0,
        regions_min_15_0_0,
        regions_center_0_1_0,
        regions_center_1_1_0,
        regions_center_2_1_0,
        regions_center_3_1_0,
        regions_center_4_1_0,
        regions_center_5_1_0,
        regions_center_6_1_0,
        regions_center_7_1_0,
        regions_center_8_1_0,
        regions_center_9_1_0,
        regions_center_10_1_0,
        regions_center_11_1_0,
        regions_center_12_1_0,
        regions_center_13_1_0,
        regions_center_14_1_0,
        regions_center_15_1_0,
        regions_max_0_1_0,
        regions_max_1_1_0,
        regions_max_2_1_0,
        regions_max_3_1_0,
        regions_max_4_1_0,
        regions_max_5_1_0,
        regions_max_6_1_0,
        regions_max_7_1_0,
        regions_max_8_1_0,
        regions_max_9_1_0,
        regions_max_10_1_0,
        regions_max_11_1_0,
        regions_max_12_1_0,
        regions_max_13_1_0,
        regions_max_14_1_0,
        regions_max_15_1_0,
        regions_min_0_1_0,
        regions_min_1_1_0,
        regions_min_2_1_0,
        regions_min_3_1_0,
        regions_min_4_1_0,
        regions_min_5_1_0,
        regions_min_6_1_0,
        regions_min_7_1_0,
        regions_min_8_1_0,
        regions_min_9_1_0,
        regions_min_10_1_0,
        regions_min_11_1_0,
        regions_min_12_1_0,
        regions_min_13_1_0,
        regions_min_14_1_0,
        regions_min_15_1_0,
        regions_center_0_2_0,
        regions_center_1_2_0,
        regions_center_2_2_0,
        regions_center_3_2_0,
        regions_center_4_2_0,
        regions_center_5_2_0,
        regions_center_6_2_0,
        regions_center_7_2_0,
        regions_center_8_2_0,
        regions_center_9_2_0,
        regions_center_10_2_0,
        regions_center_11_2_0,
        regions_center_12_2_0,
        regions_center_13_2_0,
        regions_center_14_2_0,
        regions_center_15_2_0,
        regions_max_0_2_0,
        regions_max_1_2_0,
        regions_max_2_2_0,
        regions_max_3_2_0,
        regions_max_4_2_0,
        regions_max_5_2_0,
        regions_max_6_2_0,
        regions_max_7_2_0,
        regions_max_8_2_0,
        regions_max_9_2_0,
        regions_max_10_2_0,
        regions_max_11_2_0,
        regions_max_12_2_0,
        regions_max_13_2_0,
        regions_max_14_2_0,
        regions_max_15_2_0,
        regions_min_0_2_0,
        regions_min_1_2_0,
        regions_min_2_2_0,
        regions_min_3_2_0,
        regions_min_4_2_0,
        regions_min_5_2_0,
        regions_min_6_2_0,
        regions_min_7_2_0,
        regions_min_8_2_0,
        regions_min_9_2_0,
        regions_min_10_2_0,
        regions_min_11_2_0,
        regions_min_12_2_0,
        regions_min_13_2_0,
        regions_min_14_2_0,
        regions_min_15_2_0,
        regions_center_0_3_0,
        regions_center_1_3_0,
        regions_center_2_3_0,
        regions_center_3_3_0,
        regions_center_4_3_0,
        regions_center_5_3_0,
        regions_center_6_3_0,
        regions_center_7_3_0,
        regions_center_8_3_0,
        regions_center_9_3_0,
        regions_center_10_3_0,
        regions_center_11_3_0,
        regions_center_12_3_0,
        regions_center_13_3_0,
        regions_center_14_3_0,
        regions_center_15_3_0,
        regions_max_0_3_0,
        regions_max_1_3_0,
        regions_max_2_3_0,
        regions_max_3_3_0,
        regions_max_4_3_0,
        regions_max_5_3_0,
        regions_max_6_3_0,
        regions_max_7_3_0,
        regions_max_8_3_0,
        regions_max_9_3_0,
        regions_max_10_3_0,
        regions_max_11_3_0,
        regions_max_12_3_0,
        regions_max_13_3_0,
        regions_max_14_3_0,
        regions_max_15_3_0,
        regions_min_0_3_0,
        regions_min_1_3_0,
        regions_min_2_3_0,
        regions_min_3_3_0,
        regions_min_4_3_0,
        regions_min_5_3_0,
        regions_min_6_3_0,
        regions_min_7_3_0,
        regions_min_8_3_0,
        regions_min_9_3_0,
        regions_min_10_3_0,
        regions_min_11_3_0,
        regions_min_12_3_0,
        regions_min_13_3_0,
        regions_min_14_3_0,
        regions_min_15_3_0,
        regions_center_0_4_0,
        regions_center_1_4_0,
        regions_center_2_4_0,
        regions_center_3_4_0,
        regions_center_4_4_0,
        regions_center_5_4_0,
        regions_center_6_4_0,
        regions_center_7_4_0,
        regions_center_8_4_0,
        regions_center_9_4_0,
        regions_center_10_4_0,
        regions_center_11_4_0,
        regions_center_12_4_0,
        regions_center_13_4_0,
        regions_center_14_4_0,
        regions_center_15_4_0,
        regions_max_0_4_0,
        regions_max_1_4_0,
        regions_max_2_4_0,
        regions_max_3_4_0,
        regions_max_4_4_0,
        regions_max_5_4_0,
        regions_max_6_4_0,
        regions_max_7_4_0,
        regions_max_8_4_0,
        regions_max_9_4_0,
        regions_max_10_4_0,
        regions_max_11_4_0,
        regions_max_12_4_0,
        regions_max_13_4_0,
        regions_max_14_4_0,
        regions_max_15_4_0,
        regions_min_0_4_0,
        regions_min_1_4_0,
        regions_min_2_4_0,
        regions_min_3_4_0,
        regions_min_4_4_0,
        regions_min_5_4_0,
        regions_min_6_4_0,
        regions_min_7_4_0,
        regions_min_8_4_0,
        regions_min_9_4_0,
        regions_min_10_4_0,
        regions_min_11_4_0,
        regions_min_12_4_0,
        regions_min_13_4_0,
        regions_min_14_4_0,
        regions_min_15_4_0,
        merge_2_out,
        merge_2_out_ap_vld,
        merge_1_out,
        merge_1_out_ap_vld,
        grp_fu_15142_p_din0,
        grp_fu_15142_p_din1,
        grp_fu_15142_p_opcode,
        grp_fu_15142_p_dout0,
        grp_fu_15142_p_ce,
        grp_fu_15148_p_din0,
        grp_fu_15148_p_din1,
        grp_fu_15148_p_dout0,
        grp_fu_15148_p_ce,
        grp_fu_15153_p_din0,
        grp_fu_15153_p_din1,
        grp_fu_15153_p_opcode,
        grp_fu_15153_p_dout0,
        grp_fu_15153_p_ce,
        grp_fu_15158_p_din0,
        grp_fu_15158_p_din1,
        grp_fu_15158_p_opcode,
        grp_fu_15158_p_dout0,
        grp_fu_15158_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] regions_center_0_0_0;
input  [31:0] regions_center_1_0_0;
input  [31:0] regions_center_2_0_0;
input  [31:0] regions_center_3_0_0;
input  [31:0] regions_center_4_0_0;
input  [31:0] regions_center_5_0_0;
input  [31:0] regions_center_6_0_0;
input  [31:0] regions_center_7_0_0;
input  [31:0] regions_center_8_0_0;
input  [31:0] regions_center_9_0_0;
input  [31:0] regions_center_10_0_0;
input  [31:0] regions_center_11_0_0;
input  [31:0] regions_center_12_0_0;
input  [31:0] regions_center_13_0_0;
input  [31:0] regions_center_14_0_0;
input  [31:0] regions_center_15_0_0;
input  [31:0] regions_max_0_0_0;
input  [31:0] regions_max_1_0_0;
input  [31:0] regions_max_2_0_0;
input  [31:0] regions_max_3_0_0;
input  [31:0] regions_max_4_0_0;
input  [31:0] regions_max_5_0_0;
input  [31:0] regions_max_6_0_0;
input  [31:0] regions_max_7_0_0;
input  [31:0] regions_max_8_0_0;
input  [31:0] regions_max_9_0_0;
input  [31:0] regions_max_10_0_0;
input  [31:0] regions_max_11_0_0;
input  [31:0] regions_max_12_0_0;
input  [31:0] regions_max_13_0_0;
input  [31:0] regions_max_14_0_0;
input  [31:0] regions_max_15_0_0;
input  [31:0] regions_min_0_0_0;
input  [31:0] regions_min_1_0_0;
input  [31:0] regions_min_2_0_0;
input  [31:0] regions_min_3_0_0;
input  [31:0] regions_min_4_0_0;
input  [31:0] regions_min_5_0_0;
input  [31:0] regions_min_6_0_0;
input  [31:0] regions_min_7_0_0;
input  [31:0] regions_min_8_0_0;
input  [31:0] regions_min_9_0_0;
input  [31:0] regions_min_10_0_0;
input  [31:0] regions_min_11_0_0;
input  [31:0] regions_min_12_0_0;
input  [31:0] regions_min_13_0_0;
input  [31:0] regions_min_14_0_0;
input  [31:0] regions_min_15_0_0;
input  [31:0] regions_center_0_1_0;
input  [31:0] regions_center_1_1_0;
input  [31:0] regions_center_2_1_0;
input  [31:0] regions_center_3_1_0;
input  [31:0] regions_center_4_1_0;
input  [31:0] regions_center_5_1_0;
input  [31:0] regions_center_6_1_0;
input  [31:0] regions_center_7_1_0;
input  [31:0] regions_center_8_1_0;
input  [31:0] regions_center_9_1_0;
input  [31:0] regions_center_10_1_0;
input  [31:0] regions_center_11_1_0;
input  [31:0] regions_center_12_1_0;
input  [31:0] regions_center_13_1_0;
input  [31:0] regions_center_14_1_0;
input  [31:0] regions_center_15_1_0;
input  [31:0] regions_max_0_1_0;
input  [31:0] regions_max_1_1_0;
input  [31:0] regions_max_2_1_0;
input  [31:0] regions_max_3_1_0;
input  [31:0] regions_max_4_1_0;
input  [31:0] regions_max_5_1_0;
input  [31:0] regions_max_6_1_0;
input  [31:0] regions_max_7_1_0;
input  [31:0] regions_max_8_1_0;
input  [31:0] regions_max_9_1_0;
input  [31:0] regions_max_10_1_0;
input  [31:0] regions_max_11_1_0;
input  [31:0] regions_max_12_1_0;
input  [31:0] regions_max_13_1_0;
input  [31:0] regions_max_14_1_0;
input  [31:0] regions_max_15_1_0;
input  [31:0] regions_min_0_1_0;
input  [31:0] regions_min_1_1_0;
input  [31:0] regions_min_2_1_0;
input  [31:0] regions_min_3_1_0;
input  [31:0] regions_min_4_1_0;
input  [31:0] regions_min_5_1_0;
input  [31:0] regions_min_6_1_0;
input  [31:0] regions_min_7_1_0;
input  [31:0] regions_min_8_1_0;
input  [31:0] regions_min_9_1_0;
input  [31:0] regions_min_10_1_0;
input  [31:0] regions_min_11_1_0;
input  [31:0] regions_min_12_1_0;
input  [31:0] regions_min_13_1_0;
input  [31:0] regions_min_14_1_0;
input  [31:0] regions_min_15_1_0;
input  [31:0] regions_center_0_2_0;
input  [31:0] regions_center_1_2_0;
input  [31:0] regions_center_2_2_0;
input  [31:0] regions_center_3_2_0;
input  [31:0] regions_center_4_2_0;
input  [31:0] regions_center_5_2_0;
input  [31:0] regions_center_6_2_0;
input  [31:0] regions_center_7_2_0;
input  [31:0] regions_center_8_2_0;
input  [31:0] regions_center_9_2_0;
input  [31:0] regions_center_10_2_0;
input  [31:0] regions_center_11_2_0;
input  [31:0] regions_center_12_2_0;
input  [31:0] regions_center_13_2_0;
input  [31:0] regions_center_14_2_0;
input  [31:0] regions_center_15_2_0;
input  [31:0] regions_max_0_2_0;
input  [31:0] regions_max_1_2_0;
input  [31:0] regions_max_2_2_0;
input  [31:0] regions_max_3_2_0;
input  [31:0] regions_max_4_2_0;
input  [31:0] regions_max_5_2_0;
input  [31:0] regions_max_6_2_0;
input  [31:0] regions_max_7_2_0;
input  [31:0] regions_max_8_2_0;
input  [31:0] regions_max_9_2_0;
input  [31:0] regions_max_10_2_0;
input  [31:0] regions_max_11_2_0;
input  [31:0] regions_max_12_2_0;
input  [31:0] regions_max_13_2_0;
input  [31:0] regions_max_14_2_0;
input  [31:0] regions_max_15_2_0;
input  [31:0] regions_min_0_2_0;
input  [31:0] regions_min_1_2_0;
input  [31:0] regions_min_2_2_0;
input  [31:0] regions_min_3_2_0;
input  [31:0] regions_min_4_2_0;
input  [31:0] regions_min_5_2_0;
input  [31:0] regions_min_6_2_0;
input  [31:0] regions_min_7_2_0;
input  [31:0] regions_min_8_2_0;
input  [31:0] regions_min_9_2_0;
input  [31:0] regions_min_10_2_0;
input  [31:0] regions_min_11_2_0;
input  [31:0] regions_min_12_2_0;
input  [31:0] regions_min_13_2_0;
input  [31:0] regions_min_14_2_0;
input  [31:0] regions_min_15_2_0;
input  [31:0] regions_center_0_3_0;
input  [31:0] regions_center_1_3_0;
input  [31:0] regions_center_2_3_0;
input  [31:0] regions_center_3_3_0;
input  [31:0] regions_center_4_3_0;
input  [31:0] regions_center_5_3_0;
input  [31:0] regions_center_6_3_0;
input  [31:0] regions_center_7_3_0;
input  [31:0] regions_center_8_3_0;
input  [31:0] regions_center_9_3_0;
input  [31:0] regions_center_10_3_0;
input  [31:0] regions_center_11_3_0;
input  [31:0] regions_center_12_3_0;
input  [31:0] regions_center_13_3_0;
input  [31:0] regions_center_14_3_0;
input  [31:0] regions_center_15_3_0;
input  [31:0] regions_max_0_3_0;
input  [31:0] regions_max_1_3_0;
input  [31:0] regions_max_2_3_0;
input  [31:0] regions_max_3_3_0;
input  [31:0] regions_max_4_3_0;
input  [31:0] regions_max_5_3_0;
input  [31:0] regions_max_6_3_0;
input  [31:0] regions_max_7_3_0;
input  [31:0] regions_max_8_3_0;
input  [31:0] regions_max_9_3_0;
input  [31:0] regions_max_10_3_0;
input  [31:0] regions_max_11_3_0;
input  [31:0] regions_max_12_3_0;
input  [31:0] regions_max_13_3_0;
input  [31:0] regions_max_14_3_0;
input  [31:0] regions_max_15_3_0;
input  [31:0] regions_min_0_3_0;
input  [31:0] regions_min_1_3_0;
input  [31:0] regions_min_2_3_0;
input  [31:0] regions_min_3_3_0;
input  [31:0] regions_min_4_3_0;
input  [31:0] regions_min_5_3_0;
input  [31:0] regions_min_6_3_0;
input  [31:0] regions_min_7_3_0;
input  [31:0] regions_min_8_3_0;
input  [31:0] regions_min_9_3_0;
input  [31:0] regions_min_10_3_0;
input  [31:0] regions_min_11_3_0;
input  [31:0] regions_min_12_3_0;
input  [31:0] regions_min_13_3_0;
input  [31:0] regions_min_14_3_0;
input  [31:0] regions_min_15_3_0;
input  [31:0] regions_center_0_4_0;
input  [31:0] regions_center_1_4_0;
input  [31:0] regions_center_2_4_0;
input  [31:0] regions_center_3_4_0;
input  [31:0] regions_center_4_4_0;
input  [31:0] regions_center_5_4_0;
input  [31:0] regions_center_6_4_0;
input  [31:0] regions_center_7_4_0;
input  [31:0] regions_center_8_4_0;
input  [31:0] regions_center_9_4_0;
input  [31:0] regions_center_10_4_0;
input  [31:0] regions_center_11_4_0;
input  [31:0] regions_center_12_4_0;
input  [31:0] regions_center_13_4_0;
input  [31:0] regions_center_14_4_0;
input  [31:0] regions_center_15_4_0;
input  [31:0] regions_max_0_4_0;
input  [31:0] regions_max_1_4_0;
input  [31:0] regions_max_2_4_0;
input  [31:0] regions_max_3_4_0;
input  [31:0] regions_max_4_4_0;
input  [31:0] regions_max_5_4_0;
input  [31:0] regions_max_6_4_0;
input  [31:0] regions_max_7_4_0;
input  [31:0] regions_max_8_4_0;
input  [31:0] regions_max_9_4_0;
input  [31:0] regions_max_10_4_0;
input  [31:0] regions_max_11_4_0;
input  [31:0] regions_max_12_4_0;
input  [31:0] regions_max_13_4_0;
input  [31:0] regions_max_14_4_0;
input  [31:0] regions_max_15_4_0;
input  [31:0] regions_min_0_4_0;
input  [31:0] regions_min_1_4_0;
input  [31:0] regions_min_2_4_0;
input  [31:0] regions_min_3_4_0;
input  [31:0] regions_min_4_4_0;
input  [31:0] regions_min_5_4_0;
input  [31:0] regions_min_6_4_0;
input  [31:0] regions_min_7_4_0;
input  [31:0] regions_min_8_4_0;
input  [31:0] regions_min_9_4_0;
input  [31:0] regions_min_10_4_0;
input  [31:0] regions_min_11_4_0;
input  [31:0] regions_min_12_4_0;
input  [31:0] regions_min_13_4_0;
input  [31:0] regions_min_14_4_0;
input  [31:0] regions_min_15_4_0;
output  [3:0] merge_2_out;
output   merge_2_out_ap_vld;
output  [3:0] merge_1_out;
output   merge_1_out_ap_vld;
output  [31:0] grp_fu_15142_p_din0;
output  [31:0] grp_fu_15142_p_din1;
output  [1:0] grp_fu_15142_p_opcode;
input  [31:0] grp_fu_15142_p_dout0;
output   grp_fu_15142_p_ce;
output  [31:0] grp_fu_15148_p_din0;
output  [31:0] grp_fu_15148_p_din1;
input  [31:0] grp_fu_15148_p_dout0;
output   grp_fu_15148_p_ce;
output  [31:0] grp_fu_15153_p_din0;
output  [31:0] grp_fu_15153_p_din1;
output  [4:0] grp_fu_15153_p_opcode;
input  [0:0] grp_fu_15153_p_dout0;
output   grp_fu_15153_p_ce;
output  [31:0] grp_fu_15158_p_din0;
output  [31:0] grp_fu_15158_p_din1;
output  [4:0] grp_fu_15158_p_opcode;
input  [0:0] grp_fu_15158_p_dout0;
output   grp_fu_15158_p_ce;

reg ap_idle;
reg merge_2_out_ap_vld;
reg merge_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state16_pp0_stage7_iter1;
wire    ap_block_state24_pp0_stage7_iter2;
wire    ap_block_state32_pp0_stage7_iter3;
wire    ap_block_state40_pp0_stage7_iter4;
wire    ap_block_state48_pp0_stage7_iter5;
wire    ap_block_state56_pp0_stage7_iter6;
wire    ap_block_state64_pp0_stage7_iter7;
wire    ap_block_pp0_stage7_subdone;
reg   [0:0] icmp_ln1027_reg_5347;
reg    ap_condition_exit_pp0_iter0_stage7;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_2057;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state10_pp0_stage1_iter1;
wire    ap_block_state18_pp0_stage1_iter2;
wire    ap_block_state26_pp0_stage1_iter3;
wire    ap_block_state34_pp0_stage1_iter4;
wire    ap_block_state42_pp0_stage1_iter5;
wire    ap_block_state50_pp0_stage1_iter6;
wire    ap_block_state58_pp0_stage1_iter7;
wire    ap_block_state66_pp0_stage1_iter8;
wire    ap_block_pp0_stage1_11001;
wire    ap_block_pp0_stage7_11001;
reg   [0:0] icmp_ln1027_reg_5347_pp0_iter2_reg;
reg   [0:0] and_ln112_5_reg_5629;
reg   [0:0] and_ln112_5_reg_5629_pp0_iter2_reg;
wire   [31:0] grp_fu_2022_p2;
reg   [31:0] reg_2063;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state15_pp0_stage6_iter1;
wire    ap_block_state23_pp0_stage6_iter2;
wire    ap_block_state31_pp0_stage6_iter3;
wire    ap_block_state39_pp0_stage6_iter4;
wire    ap_block_state47_pp0_stage6_iter5;
wire    ap_block_state55_pp0_stage6_iter6;
wire    ap_block_state63_pp0_stage6_iter7;
wire    ap_block_pp0_stage6_11001;
reg   [0:0] icmp_ln1027_reg_5347_pp0_iter1_reg;
reg   [0:0] and_ln112_9_reg_5674;
wire   [31:0] grp_fu_2026_p2;
reg   [31:0] reg_2068;
reg   [31:0] reg_2073;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state14_pp0_stage5_iter1;
wire    ap_block_state22_pp0_stage5_iter2;
wire    ap_block_state30_pp0_stage5_iter3;
wire    ap_block_state38_pp0_stage5_iter4;
wire    ap_block_state46_pp0_stage5_iter5;
wire    ap_block_state54_pp0_stage5_iter6;
wire    ap_block_state62_pp0_stage5_iter7;
wire    ap_block_pp0_stage5_11001;
reg   [0:0] and_ln112_1_reg_5579;
reg   [0:0] and_ln112_1_reg_5579_pp0_iter2_reg;
reg   [0:0] and_ln112_7_reg_5634;
reg   [0:0] and_ln112_7_reg_5634_pp0_iter2_reg;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_state17_pp0_stage0_iter2;
wire    ap_block_state25_pp0_stage0_iter3;
wire    ap_block_state33_pp0_stage0_iter4;
wire    ap_block_state41_pp0_stage0_iter5;
wire    ap_block_state49_pp0_stage0_iter6;
wire    ap_block_state57_pp0_stage0_iter7;
wire    ap_block_state65_pp0_stage0_iter8;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] and_ln112_9_reg_5674_pp0_iter2_reg;
reg   [31:0] reg_2077;
reg   [0:0] and_ln112_3_reg_5584;
reg   [0:0] and_ln112_3_reg_5584_pp0_iter2_reg;
reg   [31:0] i_real_3_reg_5332;
reg   [31:0] i_real_3_reg_5332_pp0_iter1_reg;
reg   [31:0] i_real_3_reg_5332_pp0_iter2_reg;
reg   [31:0] i_real_3_reg_5332_pp0_iter3_reg;
reg   [31:0] i_real_3_reg_5332_pp0_iter4_reg;
reg   [31:0] i_real_3_reg_5332_pp0_iter5_reg;
reg   [31:0] i_real_3_reg_5332_pp0_iter6_reg;
reg   [31:0] i_real_3_reg_5332_pp0_iter7_reg;
reg   [31:0] i_real_3_reg_5332_pp0_iter8_reg;
reg   [31:0] k_real_5_reg_5340;
reg   [31:0] k_real_5_reg_5340_pp0_iter1_reg;
reg   [31:0] k_real_5_reg_5340_pp0_iter2_reg;
reg   [31:0] k_real_5_reg_5340_pp0_iter3_reg;
reg   [31:0] k_real_5_reg_5340_pp0_iter4_reg;
reg   [31:0] k_real_5_reg_5340_pp0_iter5_reg;
reg   [31:0] k_real_5_reg_5340_pp0_iter6_reg;
reg   [31:0] k_real_5_reg_5340_pp0_iter7_reg;
wire   [0:0] icmp_ln1027_fu_2122_p2;
reg   [0:0] icmp_ln1027_reg_5347_pp0_iter3_reg;
reg   [0:0] icmp_ln1027_reg_5347_pp0_iter4_reg;
reg   [0:0] icmp_ln1027_reg_5347_pp0_iter5_reg;
reg   [0:0] icmp_ln1027_reg_5347_pp0_iter6_reg;
reg   [0:0] icmp_ln1027_reg_5347_pp0_iter7_reg;
reg   [0:0] icmp_ln1027_reg_5347_pp0_iter8_reg;
wire   [3:0] trunc_ln104_fu_2128_p1;
reg   [3:0] trunc_ln104_reg_5351;
wire   [31:0] tmp_s_fu_2132_p18;
reg   [31:0] tmp_s_reg_5365;
wire   [3:0] trunc_ln104_1_fu_2154_p1;
reg   [3:0] trunc_ln104_1_reg_5370;
wire   [31:0] tmp_1_fu_2158_p18;
reg   [31:0] tmp_1_reg_5384;
wire   [31:0] tmp_2_fu_2180_p18;
reg   [31:0] tmp_2_reg_5389;
wire   [31:0] tmp_3_fu_2202_p18;
reg   [31:0] tmp_3_reg_5394;
wire   [31:0] tmp_4_fu_2224_p18;
reg   [31:0] tmp_4_reg_5403;
wire   [31:0] tmp_5_fu_2246_p18;
reg   [31:0] tmp_5_reg_5408;
wire   [31:0] tmp_6_fu_2268_p18;
reg   [31:0] tmp_6_reg_5417;
wire   [31:0] tmp_7_fu_2290_p18;
reg   [31:0] tmp_7_reg_5422;
wire   [31:0] tmp_9_fu_2312_p18;
reg   [31:0] tmp_9_reg_5427;
wire   [31:0] tmp_11_fu_2334_p18;
reg   [31:0] tmp_11_reg_5436;
wire   [31:0] tmp_8_fu_2356_p18;
reg   [31:0] tmp_8_reg_5445;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state11_pp0_stage2_iter1;
wire    ap_block_state19_pp0_stage2_iter2;
wire    ap_block_state27_pp0_stage2_iter3;
wire    ap_block_state35_pp0_stage2_iter4;
wire    ap_block_state43_pp0_stage2_iter5;
wire    ap_block_state51_pp0_stage2_iter6;
wire    ap_block_state59_pp0_stage2_iter7;
wire    ap_block_state67_pp0_stage2_iter8;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] tmp_10_fu_2377_p18;
reg   [31:0] tmp_10_reg_5450;
wire   [31:0] tmp_15_fu_2398_p18;
reg   [31:0] tmp_15_reg_5455;
wire   [31:0] tmp_17_fu_2419_p18;
reg   [31:0] tmp_17_reg_5464;
wire   [31:0] tmp_21_fu_2440_p18;
reg   [31:0] tmp_21_reg_5473;
wire   [31:0] tmp_23_fu_2461_p18;
reg   [31:0] tmp_23_reg_5482;
wire   [0:0] icmp_ln112_fu_2516_p2;
reg   [0:0] icmp_ln112_reg_5491;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state12_pp0_stage3_iter1;
wire    ap_block_state20_pp0_stage3_iter2;
wire    ap_block_state28_pp0_stage3_iter3;
wire    ap_block_state36_pp0_stage3_iter4;
wire    ap_block_state44_pp0_stage3_iter5;
wire    ap_block_state52_pp0_stage3_iter6;
wire    ap_block_state60_pp0_stage3_iter7;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] icmp_ln112_1_fu_2522_p2;
reg   [0:0] icmp_ln112_1_reg_5496;
wire   [0:0] icmp_ln112_2_fu_2528_p2;
reg   [0:0] icmp_ln112_2_reg_5501;
wire   [0:0] icmp_ln112_3_fu_2534_p2;
reg   [0:0] icmp_ln112_3_reg_5506;
reg   [0:0] tmp_32_reg_5511;
wire   [0:0] icmp_ln112_4_fu_2574_p2;
reg   [0:0] icmp_ln112_4_reg_5516;
wire   [0:0] icmp_ln112_5_fu_2580_p2;
reg   [0:0] icmp_ln112_5_reg_5521;
wire   [0:0] icmp_ln112_6_fu_2586_p2;
reg   [0:0] icmp_ln112_6_reg_5526;
wire   [0:0] icmp_ln112_7_fu_2592_p2;
reg   [0:0] icmp_ln112_7_reg_5531;
reg   [0:0] tmp_37_reg_5536;
wire   [31:0] tmp_12_fu_2598_p18;
reg   [31:0] tmp_12_reg_5541;
wire   [31:0] tmp_13_fu_2619_p18;
reg   [31:0] tmp_13_reg_5546;
wire   [31:0] tmp_14_fu_2640_p18;
reg   [31:0] tmp_14_reg_5551;
wire   [31:0] tmp_16_fu_2661_p18;
reg   [31:0] tmp_16_reg_5556;
wire   [31:0] tmp_27_fu_2682_p18;
reg   [31:0] tmp_27_reg_5561;
wire   [31:0] tmp_29_fu_2703_p18;
reg   [31:0] tmp_29_reg_5570;
wire   [0:0] and_ln112_1_fu_2737_p2;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state13_pp0_stage4_iter1;
wire    ap_block_state21_pp0_stage4_iter2;
wire    ap_block_state29_pp0_stage4_iter3;
wire    ap_block_state37_pp0_stage4_iter4;
wire    ap_block_state45_pp0_stage4_iter5;
wire    ap_block_state53_pp0_stage4_iter6;
wire    ap_block_state61_pp0_stage4_iter7;
wire    ap_block_pp0_stage4_11001;
reg   [0:0] and_ln112_1_reg_5579_pp0_iter1_reg;
wire   [0:0] and_ln112_3_fu_2756_p2;
reg   [0:0] and_ln112_3_reg_5584_pp0_iter1_reg;
wire   [0:0] icmp_ln112_8_fu_2796_p2;
reg   [0:0] icmp_ln112_8_reg_5589;
wire   [0:0] icmp_ln112_9_fu_2802_p2;
reg   [0:0] icmp_ln112_9_reg_5594;
wire   [0:0] icmp_ln112_10_fu_2808_p2;
reg   [0:0] icmp_ln112_10_reg_5599;
wire   [0:0] icmp_ln112_11_fu_2814_p2;
reg   [0:0] icmp_ln112_11_reg_5604;
reg   [0:0] tmp_42_reg_5609;
wire   [31:0] tmp_20_fu_2820_p18;
reg   [31:0] tmp_20_reg_5614;
wire   [31:0] tmp_22_fu_2841_p18;
reg   [31:0] tmp_22_reg_5619;
reg   [0:0] tmp_47_reg_5624;
wire   [0:0] and_ln112_5_fu_2876_p2;
reg   [0:0] and_ln112_5_reg_5629_pp0_iter1_reg;
wire   [0:0] and_ln112_7_fu_2957_p2;
reg   [0:0] and_ln112_7_reg_5634_pp0_iter1_reg;
reg   [0:0] tmp_52_reg_5639;
wire   [31:0] tmp_18_fu_2962_p18;
reg   [31:0] tmp_18_reg_5644;
wire   [31:0] tmp_19_fu_2983_p18;
reg   [31:0] tmp_19_reg_5649;
wire   [31:0] tmp_24_fu_3004_p18;
reg   [31:0] tmp_24_reg_5654;
wire   [31:0] tmp_25_fu_3025_p18;
reg   [31:0] tmp_25_reg_5659;
wire   [31:0] tmp_26_fu_3046_p18;
reg   [31:0] tmp_26_reg_5664;
wire   [31:0] tmp_28_fu_3067_p18;
reg   [31:0] tmp_28_reg_5669;
wire   [0:0] and_ln112_9_fu_3164_p2;
reg   [0:0] and_ln112_9_reg_5674_pp0_iter1_reg;
wire   [0:0] icmp_ln1019_fu_3169_p2;
reg   [0:0] icmp_ln1019_reg_5679;
reg   [0:0] icmp_ln1019_reg_5679_pp0_iter2_reg;
reg   [0:0] icmp_ln1019_reg_5679_pp0_iter3_reg;
reg   [0:0] icmp_ln1019_reg_5679_pp0_iter4_reg;
reg   [0:0] icmp_ln1019_reg_5679_pp0_iter5_reg;
reg   [0:0] icmp_ln1019_reg_5679_pp0_iter6_reg;
reg   [0:0] icmp_ln1019_reg_5679_pp0_iter7_reg;
reg   [0:0] icmp_ln1019_reg_5679_pp0_iter8_reg;
reg   [31:0] d1_reg_5688;
reg   [31:0] d2_reg_5693;
wire   [31:0] grp_fu_2030_p2;
reg   [31:0] sub_reg_5698;
wire   [31:0] grp_fu_2034_p2;
reg   [31:0] d_1_reg_5703;
reg   [31:0] sub2_reg_5709;
reg   [31:0] d1_1_reg_5714;
reg   [31:0] d2_1_reg_5719;
reg   [31:0] sub75_1_reg_5724;
reg   [31:0] sub87_1_reg_5729;
reg   [31:0] d_2_reg_5734;
reg   [31:0] d1_2_reg_5740;
reg   [31:0] d2_2_reg_5745;
reg   [31:0] sub75_2_reg_5750;
reg   [31:0] sub87_2_reg_5755;
reg   [31:0] d1_3_reg_5760;
reg   [31:0] d2_3_reg_5765;
reg   [31:0] sub75_3_reg_5770;
reg   [31:0] sub87_3_reg_5775;
reg   [31:0] mul_reg_5780;
wire   [31:0] grp_fu_2043_p2;
reg   [31:0] mul_1_reg_5785;
reg   [31:0] mul_1_reg_5785_pp0_iter2_reg;
reg   [31:0] d_3_reg_5790;
reg   [31:0] mul_2_reg_5796;
reg   [31:0] mul_2_reg_5796_pp0_iter2_reg;
reg   [31:0] mul_2_reg_5796_pp0_iter3_reg;
reg   [31:0] d_4_reg_5801;
reg   [31:0] mul_3_reg_5807;
reg   [31:0] mul_3_reg_5807_pp0_iter3_reg;
reg   [31:0] mul_3_reg_5807_pp0_iter4_reg;
reg   [31:0] ov_reg_5812;
reg   [31:0] mul_4_reg_5817;
reg   [31:0] mul_4_reg_5817_pp0_iter3_reg;
reg   [31:0] mul_4_reg_5817_pp0_iter4_reg;
reg   [31:0] mul_4_reg_5817_pp0_iter5_reg;
reg   [31:0] distance_reg_5822;
wire   [31:0] ov_2_fu_3214_p3;
reg   [31:0] ov_2_reg_5827;
wire   [31:0] ov_6_fu_3220_p3;
reg   [31:0] ov_6_reg_5834;
reg   [0:0] tmp_34_reg_5841;
reg   [0:0] tmp_39_reg_5846;
wire   [31:0] ov_10_fu_3227_p3;
reg   [31:0] ov_10_reg_5851;
wire   [31:0] ov_14_fu_3234_p3;
reg   [31:0] ov_14_reg_5858;
wire   [31:0] ov_20_fu_3281_p3;
reg   [31:0] ov_20_reg_5865;
wire   [31:0] ov_7_fu_3328_p3;
reg   [31:0] ov_7_reg_5870;
wire   [31:0] ov_18_fu_3335_p3;
reg   [31:0] ov_18_reg_5875;
reg   [0:0] tmp_44_reg_5882;
reg   [0:0] tmp_49_reg_5887;
wire   [31:0] ov_11_fu_3382_p3;
reg   [31:0] ov_11_reg_5892;
wire   [31:0] ov_15_fu_3429_p3;
reg   [31:0] ov_15_reg_5897;
reg   [31:0] distance_1_reg_5902;
reg   [0:0] tmp_54_reg_5907;
reg   [31:0] overlap_1_reg_5912;
wire   [31:0] ov_19_fu_3476_p3;
reg   [31:0] ov_19_reg_5917;
reg   [31:0] ov_19_reg_5917_pp0_iter4_reg;
reg   [31:0] overlap_2_reg_5922;
reg   [31:0] overlap_3_reg_5927;
reg   [31:0] distance_2_reg_5932;
reg   [31:0] overlap_4_reg_5937;
reg   [31:0] overlap_4_reg_5937_pp0_iter6_reg;
reg   [0:0] tmp_56_reg_5944;
reg   [0:0] tmp_56_reg_5944_pp0_iter6_reg;
reg   [31:0] distance_3_reg_5949;
reg   [31:0] distance_4_reg_5954;
wire   [31:0] sc_2_fu_3536_p3;
reg   [31:0] sc_2_reg_5959;
reg   [31:0] tmp_score_load_reg_5966;
reg   [0:0] tmp_59_reg_5973;
wire   [31:0] tmp_other_4_fu_3643_p3;
reg   [31:0] tmp_other_4_reg_5978;
wire   [31:0] tmp_score_4_fu_3650_p3;
reg   [31:0] tmp_score_4_reg_5984;
reg   [31:0] score_load_reg_5992;
reg   [31:0] merge_1_4_reg_6000;
reg   [31:0] merge_2_1_reg_6007;
reg   [0:0] tmp_62_reg_6013;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter8_stage1;
wire    ap_block_pp0_stage2_subdone;
reg   [31:0] merge_1_fu_536;
wire   [31:0] merge_1_7_fu_3822_p3;
wire    ap_loop_init;
wire    ap_block_pp0_stage1;
reg   [31:0] merge_2_fu_540;
wire   [31:0] merge_2_6_fu_3816_p3;
reg   [31:0] score_fu_544;
wire   [31:0] score_3_fu_3810_p3;
wire    ap_block_pp0_stage0;
reg   [31:0] merge_1_1_fu_548;
wire   [31:0] i_real_2_fu_3197_p3;
reg   [31:0] k_real_4_fu_552;
wire   [31:0] k_real_3_fu_3189_p3;
reg   [31:0] tmp_score_fu_556;
wire   [31:0] tmp_score_3_fu_3666_p3;
wire    ap_block_pp0_stage5;
reg   [31:0] tmp_other_fu_560;
wire   [31:0] tmp_other_3_fu_3660_p3;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage1_01001;
reg   [31:0] grp_fu_2018_p0;
reg   [31:0] grp_fu_2018_p1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage6;
reg   [31:0] grp_fu_2022_p0;
reg   [31:0] grp_fu_2022_p1;
reg   [31:0] grp_fu_2026_p0;
reg   [31:0] grp_fu_2026_p1;
reg   [31:0] grp_fu_2030_p0;
reg   [31:0] grp_fu_2030_p1;
reg   [31:0] grp_fu_2034_p0;
reg   [31:0] grp_fu_2034_p1;
reg   [31:0] grp_fu_2039_p0;
reg   [31:0] grp_fu_2039_p1;
reg   [31:0] grp_fu_2043_p0;
reg   [31:0] grp_fu_2043_p1;
reg   [31:0] grp_fu_2047_p0;
reg   [31:0] grp_fu_2047_p1;
reg   [31:0] grp_fu_2051_p0;
reg   [31:0] grp_fu_2051_p1;
wire   [31:0] bitcast_ln112_fu_2482_p1;
wire   [31:0] bitcast_ln112_1_fu_2499_p1;
wire   [7:0] tmp_30_fu_2485_p4;
wire   [22:0] trunc_ln112_fu_2495_p1;
wire   [7:0] tmp_31_fu_2502_p4;
wire   [22:0] trunc_ln112_1_fu_2512_p1;
wire   [31:0] bitcast_ln112_2_fu_2540_p1;
wire   [31:0] bitcast_ln112_3_fu_2557_p1;
wire   [7:0] tmp_35_fu_2543_p4;
wire   [22:0] trunc_ln112_2_fu_2553_p1;
wire   [7:0] tmp_36_fu_2560_p4;
wire   [22:0] trunc_ln112_3_fu_2570_p1;
wire   [0:0] or_ln112_1_fu_2728_p2;
wire   [0:0] and_ln112_fu_2732_p2;
wire   [0:0] or_ln112_fu_2724_p2;
wire   [0:0] or_ln112_3_fu_2747_p2;
wire   [0:0] and_ln112_2_fu_2751_p2;
wire   [0:0] or_ln112_2_fu_2743_p2;
wire   [31:0] bitcast_ln112_4_fu_2762_p1;
wire   [31:0] bitcast_ln112_5_fu_2779_p1;
wire   [7:0] tmp_40_fu_2765_p4;
wire   [22:0] trunc_ln112_4_fu_2775_p1;
wire   [7:0] tmp_41_fu_2782_p4;
wire   [22:0] trunc_ln112_5_fu_2792_p1;
wire   [0:0] or_ln112_4_fu_2862_p2;
wire   [0:0] or_ln112_5_fu_2866_p2;
wire   [0:0] and_ln112_4_fu_2870_p2;
wire   [31:0] bitcast_ln112_6_fu_2881_p1;
wire   [31:0] bitcast_ln112_7_fu_2898_p1;
wire   [7:0] tmp_45_fu_2884_p4;
wire   [22:0] trunc_ln112_6_fu_2894_p1;
wire   [0:0] icmp_ln112_13_fu_2921_p2;
wire   [0:0] icmp_ln112_12_fu_2915_p2;
wire   [7:0] tmp_46_fu_2901_p4;
wire   [22:0] trunc_ln112_7_fu_2911_p1;
wire   [0:0] icmp_ln112_15_fu_2939_p2;
wire   [0:0] icmp_ln112_14_fu_2933_p2;
wire   [0:0] or_ln112_6_fu_2927_p2;
wire   [0:0] or_ln112_7_fu_2945_p2;
wire   [0:0] and_ln112_6_fu_2951_p2;
wire   [31:0] bitcast_ln112_8_fu_3088_p1;
wire   [31:0] bitcast_ln112_9_fu_3105_p1;
wire   [7:0] tmp_50_fu_3091_p4;
wire   [22:0] trunc_ln112_8_fu_3101_p1;
wire   [0:0] icmp_ln112_17_fu_3128_p2;
wire   [0:0] icmp_ln112_16_fu_3122_p2;
wire   [7:0] tmp_51_fu_3108_p4;
wire   [22:0] trunc_ln112_9_fu_3118_p1;
wire   [0:0] icmp_ln112_19_fu_3146_p2;
wire   [0:0] icmp_ln112_18_fu_3140_p2;
wire   [0:0] or_ln112_8_fu_3134_p2;
wire   [0:0] or_ln112_9_fu_3152_p2;
wire   [0:0] and_ln112_8_fu_3158_p2;
wire   [31:0] k_real_fu_3179_p2;
wire   [31:0] k_real_2_fu_3184_p2;
wire   [31:0] i_real_fu_3174_p2;
wire   [31:0] bitcast_ln116_fu_3241_p1;
wire   [7:0] tmp_33_fu_3244_p4;
wire   [22:0] trunc_ln116_fu_3254_p1;
wire   [0:0] icmp_ln116_1_fu_3264_p2;
wire   [0:0] icmp_ln116_fu_3258_p2;
wire   [0:0] or_ln116_fu_3270_p2;
wire   [0:0] and_ln116_fu_3276_p2;
wire   [31:0] bitcast_ln116_1_fu_3288_p1;
wire   [7:0] tmp_38_fu_3291_p4;
wire   [22:0] trunc_ln116_1_fu_3301_p1;
wire   [0:0] icmp_ln116_3_fu_3311_p2;
wire   [0:0] icmp_ln116_2_fu_3305_p2;
wire   [0:0] or_ln116_1_fu_3317_p2;
wire   [0:0] and_ln116_1_fu_3323_p2;
wire   [31:0] bitcast_ln116_2_fu_3342_p1;
wire   [7:0] tmp_43_fu_3345_p4;
wire   [22:0] trunc_ln116_2_fu_3355_p1;
wire   [0:0] icmp_ln116_5_fu_3365_p2;
wire   [0:0] icmp_ln116_4_fu_3359_p2;
wire   [0:0] or_ln116_2_fu_3371_p2;
wire   [0:0] and_ln116_2_fu_3377_p2;
wire   [31:0] bitcast_ln116_3_fu_3389_p1;
wire   [7:0] tmp_48_fu_3392_p4;
wire   [22:0] trunc_ln116_3_fu_3402_p1;
wire   [0:0] icmp_ln116_7_fu_3412_p2;
wire   [0:0] icmp_ln116_6_fu_3406_p2;
wire   [0:0] or_ln116_3_fu_3418_p2;
wire   [0:0] and_ln116_3_fu_3424_p2;
wire   [31:0] bitcast_ln116_4_fu_3436_p1;
wire   [7:0] tmp_53_fu_3439_p4;
wire   [22:0] trunc_ln116_4_fu_3449_p1;
wire   [0:0] icmp_ln116_9_fu_3459_p2;
wire   [0:0] icmp_ln116_8_fu_3453_p2;
wire   [0:0] or_ln116_4_fu_3465_p2;
wire   [0:0] and_ln116_4_fu_3471_p2;
wire   [31:0] bitcast_ln122_fu_3483_p1;
wire   [7:0] tmp_55_fu_3486_p4;
wire   [22:0] trunc_ln122_fu_3496_p1;
wire   [0:0] icmp_ln122_1_fu_3506_p2;
wire   [0:0] icmp_ln122_fu_3500_p2;
wire   [0:0] or_ln122_fu_3512_p2;
wire   [31:0] bitcast_ln126_fu_3523_p1;
wire   [31:0] xor_ln126_fu_3526_p2;
wire   [0:0] and_ln122_fu_3518_p2;
wire   [31:0] sc_fu_3532_p1;
wire   [31:0] bitcast_ln130_fu_3556_p1;
wire   [31:0] bitcast_ln130_1_fu_3573_p1;
wire   [7:0] tmp_57_fu_3559_p4;
wire   [22:0] trunc_ln130_fu_3569_p1;
wire   [0:0] icmp_ln130_2_fu_3596_p2;
wire   [0:0] icmp_ln130_1_fu_3590_p2;
wire   [7:0] tmp_58_fu_3576_p4;
wire   [22:0] trunc_ln130_1_fu_3586_p1;
wire   [0:0] icmp_ln130_4_fu_3614_p2;
wire   [0:0] icmp_ln130_3_fu_3608_p2;
wire   [0:0] or_ln130_1_fu_3602_p2;
wire   [0:0] or_ln130_2_fu_3620_p2;
wire   [0:0] and_ln130_fu_3626_p2;
wire   [0:0] icmp_ln130_fu_3550_p2;
wire   [0:0] and_ln130_1_fu_3632_p2;
wire   [0:0] or_ln130_fu_3637_p2;
wire   [31:0] bitcast_ln139_fu_3705_p1;
wire   [31:0] bitcast_ln139_1_fu_3722_p1;
wire   [7:0] tmp_60_fu_3708_p4;
wire   [22:0] trunc_ln139_fu_3718_p1;
wire   [0:0] icmp_ln139_1_fu_3745_p2;
wire   [0:0] icmp_ln139_fu_3739_p2;
wire   [7:0] tmp_61_fu_3725_p4;
wire   [22:0] trunc_ln139_1_fu_3735_p1;
wire   [0:0] icmp_ln139_3_fu_3763_p2;
wire   [0:0] icmp_ln139_2_fu_3757_p2;
wire   [0:0] or_ln139_1_fu_3751_p2;
wire   [0:0] or_ln139_2_fu_3769_p2;
wire   [0:0] and_ln139_fu_3775_p2;
wire   [0:0] tmp_fu_3698_p3;
wire   [0:0] and_ln139_1_fu_3781_p2;
wire   [0:0] or_ln139_fu_3786_p2;
wire   [31:0] score_2_fu_3792_p3;
wire   [31:0] merge_2_5_fu_3798_p3;
wire   [31:0] merge_1_6_fu_3804_p3;
reg   [1:0] grp_fu_2018_opcode;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage5_00001;
wire    ap_block_pp0_stage7_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage0_00001;
reg   [1:0] grp_fu_2026_opcode;
reg   [1:0] grp_fu_2030_opcode;
reg   [4:0] grp_fu_2047_opcode;
reg   [4:0] grp_fu_2051_opcode;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_idle_pp0_0to7;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [7:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to8;
reg    ap_done_pending_pp0;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_8_full_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2022_p0),
    .din1(grp_fu_2022_p1),
    .ce(1'b1),
    .dout(grp_fu_2022_p2)
);

FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_8_full_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2026_p0),
    .din1(grp_fu_2026_p1),
    .opcode(grp_fu_2026_opcode),
    .ce(1'b1),
    .dout(grp_fu_2026_p2)
);

FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_8_full_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2030_p0),
    .din1(grp_fu_2030_p1),
    .opcode(grp_fu_2030_opcode),
    .ce(1'b1),
    .dout(grp_fu_2030_p2)
);

FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_8_full_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2034_p0),
    .din1(grp_fu_2034_p1),
    .ce(1'b1),
    .dout(grp_fu_2034_p2)
);

FaultDetector_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2043_p0),
    .din1(grp_fu_2043_p1),
    .ce(1'b1),
    .dout(grp_fu_2043_p2)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U19(
    .din0(regions_center_0_0_0),
    .din1(regions_center_1_0_0),
    .din2(regions_center_2_0_0),
    .din3(regions_center_3_0_0),
    .din4(regions_center_4_0_0),
    .din5(regions_center_5_0_0),
    .din6(regions_center_6_0_0),
    .din7(regions_center_7_0_0),
    .din8(regions_center_8_0_0),
    .din9(regions_center_9_0_0),
    .din10(regions_center_10_0_0),
    .din11(regions_center_11_0_0),
    .din12(regions_center_12_0_0),
    .din13(regions_center_13_0_0),
    .din14(regions_center_14_0_0),
    .din15(regions_center_15_0_0),
    .din16(trunc_ln104_fu_2128_p1),
    .dout(tmp_s_fu_2132_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U20(
    .din0(regions_center_0_0_0),
    .din1(regions_center_1_0_0),
    .din2(regions_center_2_0_0),
    .din3(regions_center_3_0_0),
    .din4(regions_center_4_0_0),
    .din5(regions_center_5_0_0),
    .din6(regions_center_6_0_0),
    .din7(regions_center_7_0_0),
    .din8(regions_center_8_0_0),
    .din9(regions_center_9_0_0),
    .din10(regions_center_10_0_0),
    .din11(regions_center_11_0_0),
    .din12(regions_center_12_0_0),
    .din13(regions_center_13_0_0),
    .din14(regions_center_14_0_0),
    .din15(regions_center_15_0_0),
    .din16(trunc_ln104_1_fu_2154_p1),
    .dout(tmp_1_fu_2158_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U21(
    .din0(regions_max_0_0_0),
    .din1(regions_max_1_0_0),
    .din2(regions_max_2_0_0),
    .din3(regions_max_3_0_0),
    .din4(regions_max_4_0_0),
    .din5(regions_max_5_0_0),
    .din6(regions_max_6_0_0),
    .din7(regions_max_7_0_0),
    .din8(regions_max_8_0_0),
    .din9(regions_max_9_0_0),
    .din10(regions_max_10_0_0),
    .din11(regions_max_11_0_0),
    .din12(regions_max_12_0_0),
    .din13(regions_max_13_0_0),
    .din14(regions_max_14_0_0),
    .din15(regions_max_15_0_0),
    .din16(trunc_ln104_fu_2128_p1),
    .dout(tmp_2_fu_2180_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U22(
    .din0(regions_min_0_0_0),
    .din1(regions_min_1_0_0),
    .din2(regions_min_2_0_0),
    .din3(regions_min_3_0_0),
    .din4(regions_min_4_0_0),
    .din5(regions_min_5_0_0),
    .din6(regions_min_6_0_0),
    .din7(regions_min_7_0_0),
    .din8(regions_min_8_0_0),
    .din9(regions_min_9_0_0),
    .din10(regions_min_10_0_0),
    .din11(regions_min_11_0_0),
    .din12(regions_min_12_0_0),
    .din13(regions_min_13_0_0),
    .din14(regions_min_14_0_0),
    .din15(regions_min_15_0_0),
    .din16(trunc_ln104_fu_2128_p1),
    .dout(tmp_3_fu_2202_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U23(
    .din0(regions_max_0_0_0),
    .din1(regions_max_1_0_0),
    .din2(regions_max_2_0_0),
    .din3(regions_max_3_0_0),
    .din4(regions_max_4_0_0),
    .din5(regions_max_5_0_0),
    .din6(regions_max_6_0_0),
    .din7(regions_max_7_0_0),
    .din8(regions_max_8_0_0),
    .din9(regions_max_9_0_0),
    .din10(regions_max_10_0_0),
    .din11(regions_max_11_0_0),
    .din12(regions_max_12_0_0),
    .din13(regions_max_13_0_0),
    .din14(regions_max_14_0_0),
    .din15(regions_max_15_0_0),
    .din16(trunc_ln104_1_fu_2154_p1),
    .dout(tmp_4_fu_2224_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U24(
    .din0(regions_min_0_0_0),
    .din1(regions_min_1_0_0),
    .din2(regions_min_2_0_0),
    .din3(regions_min_3_0_0),
    .din4(regions_min_4_0_0),
    .din5(regions_min_5_0_0),
    .din6(regions_min_6_0_0),
    .din7(regions_min_7_0_0),
    .din8(regions_min_8_0_0),
    .din9(regions_min_9_0_0),
    .din10(regions_min_10_0_0),
    .din11(regions_min_11_0_0),
    .din12(regions_min_12_0_0),
    .din13(regions_min_13_0_0),
    .din14(regions_min_14_0_0),
    .din15(regions_min_15_0_0),
    .din16(trunc_ln104_1_fu_2154_p1),
    .dout(tmp_5_fu_2246_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U25(
    .din0(regions_center_0_1_0),
    .din1(regions_center_1_1_0),
    .din2(regions_center_2_1_0),
    .din3(regions_center_3_1_0),
    .din4(regions_center_4_1_0),
    .din5(regions_center_5_1_0),
    .din6(regions_center_6_1_0),
    .din7(regions_center_7_1_0),
    .din8(regions_center_8_1_0),
    .din9(regions_center_9_1_0),
    .din10(regions_center_10_1_0),
    .din11(regions_center_11_1_0),
    .din12(regions_center_12_1_0),
    .din13(regions_center_13_1_0),
    .din14(regions_center_14_1_0),
    .din15(regions_center_15_1_0),
    .din16(trunc_ln104_fu_2128_p1),
    .dout(tmp_6_fu_2268_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U26(
    .din0(regions_center_0_1_0),
    .din1(regions_center_1_1_0),
    .din2(regions_center_2_1_0),
    .din3(regions_center_3_1_0),
    .din4(regions_center_4_1_0),
    .din5(regions_center_5_1_0),
    .din6(regions_center_6_1_0),
    .din7(regions_center_7_1_0),
    .din8(regions_center_8_1_0),
    .din9(regions_center_9_1_0),
    .din10(regions_center_10_1_0),
    .din11(regions_center_11_1_0),
    .din12(regions_center_12_1_0),
    .din13(regions_center_13_1_0),
    .din14(regions_center_14_1_0),
    .din15(regions_center_15_1_0),
    .din16(trunc_ln104_1_fu_2154_p1),
    .dout(tmp_7_fu_2290_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U27(
    .din0(regions_min_0_1_0),
    .din1(regions_min_1_1_0),
    .din2(regions_min_2_1_0),
    .din3(regions_min_3_1_0),
    .din4(regions_min_4_1_0),
    .din5(regions_min_5_1_0),
    .din6(regions_min_6_1_0),
    .din7(regions_min_7_1_0),
    .din8(regions_min_8_1_0),
    .din9(regions_min_9_1_0),
    .din10(regions_min_10_1_0),
    .din11(regions_min_11_1_0),
    .din12(regions_min_12_1_0),
    .din13(regions_min_13_1_0),
    .din14(regions_min_14_1_0),
    .din15(regions_min_15_1_0),
    .din16(trunc_ln104_fu_2128_p1),
    .dout(tmp_9_fu_2312_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U28(
    .din0(regions_min_0_1_0),
    .din1(regions_min_1_1_0),
    .din2(regions_min_2_1_0),
    .din3(regions_min_3_1_0),
    .din4(regions_min_4_1_0),
    .din5(regions_min_5_1_0),
    .din6(regions_min_6_1_0),
    .din7(regions_min_7_1_0),
    .din8(regions_min_8_1_0),
    .din9(regions_min_9_1_0),
    .din10(regions_min_10_1_0),
    .din11(regions_min_11_1_0),
    .din12(regions_min_12_1_0),
    .din13(regions_min_13_1_0),
    .din14(regions_min_14_1_0),
    .din15(regions_min_15_1_0),
    .din16(trunc_ln104_1_fu_2154_p1),
    .dout(tmp_11_fu_2334_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U29(
    .din0(regions_max_0_1_0),
    .din1(regions_max_1_1_0),
    .din2(regions_max_2_1_0),
    .din3(regions_max_3_1_0),
    .din4(regions_max_4_1_0),
    .din5(regions_max_5_1_0),
    .din6(regions_max_6_1_0),
    .din7(regions_max_7_1_0),
    .din8(regions_max_8_1_0),
    .din9(regions_max_9_1_0),
    .din10(regions_max_10_1_0),
    .din11(regions_max_11_1_0),
    .din12(regions_max_12_1_0),
    .din13(regions_max_13_1_0),
    .din14(regions_max_14_1_0),
    .din15(regions_max_15_1_0),
    .din16(trunc_ln104_reg_5351),
    .dout(tmp_8_fu_2356_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U30(
    .din0(regions_max_0_1_0),
    .din1(regions_max_1_1_0),
    .din2(regions_max_2_1_0),
    .din3(regions_max_3_1_0),
    .din4(regions_max_4_1_0),
    .din5(regions_max_5_1_0),
    .din6(regions_max_6_1_0),
    .din7(regions_max_7_1_0),
    .din8(regions_max_8_1_0),
    .din9(regions_max_9_1_0),
    .din10(regions_max_10_1_0),
    .din11(regions_max_11_1_0),
    .din12(regions_max_12_1_0),
    .din13(regions_max_13_1_0),
    .din14(regions_max_14_1_0),
    .din15(regions_max_15_1_0),
    .din16(trunc_ln104_1_reg_5370),
    .dout(tmp_10_fu_2377_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U31(
    .din0(regions_min_0_2_0),
    .din1(regions_min_1_2_0),
    .din2(regions_min_2_2_0),
    .din3(regions_min_3_2_0),
    .din4(regions_min_4_2_0),
    .din5(regions_min_5_2_0),
    .din6(regions_min_6_2_0),
    .din7(regions_min_7_2_0),
    .din8(regions_min_8_2_0),
    .din9(regions_min_9_2_0),
    .din10(regions_min_10_2_0),
    .din11(regions_min_11_2_0),
    .din12(regions_min_12_2_0),
    .din13(regions_min_13_2_0),
    .din14(regions_min_14_2_0),
    .din15(regions_min_15_2_0),
    .din16(trunc_ln104_reg_5351),
    .dout(tmp_15_fu_2398_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U32(
    .din0(regions_min_0_2_0),
    .din1(regions_min_1_2_0),
    .din2(regions_min_2_2_0),
    .din3(regions_min_3_2_0),
    .din4(regions_min_4_2_0),
    .din5(regions_min_5_2_0),
    .din6(regions_min_6_2_0),
    .din7(regions_min_7_2_0),
    .din8(regions_min_8_2_0),
    .din9(regions_min_9_2_0),
    .din10(regions_min_10_2_0),
    .din11(regions_min_11_2_0),
    .din12(regions_min_12_2_0),
    .din13(regions_min_13_2_0),
    .din14(regions_min_14_2_0),
    .din15(regions_min_15_2_0),
    .din16(trunc_ln104_1_reg_5370),
    .dout(tmp_17_fu_2419_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U33(
    .din0(regions_min_0_3_0),
    .din1(regions_min_1_3_0),
    .din2(regions_min_2_3_0),
    .din3(regions_min_3_3_0),
    .din4(regions_min_4_3_0),
    .din5(regions_min_5_3_0),
    .din6(regions_min_6_3_0),
    .din7(regions_min_7_3_0),
    .din8(regions_min_8_3_0),
    .din9(regions_min_9_3_0),
    .din10(regions_min_10_3_0),
    .din11(regions_min_11_3_0),
    .din12(regions_min_12_3_0),
    .din13(regions_min_13_3_0),
    .din14(regions_min_14_3_0),
    .din15(regions_min_15_3_0),
    .din16(trunc_ln104_reg_5351),
    .dout(tmp_21_fu_2440_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U34(
    .din0(regions_min_0_3_0),
    .din1(regions_min_1_3_0),
    .din2(regions_min_2_3_0),
    .din3(regions_min_3_3_0),
    .din4(regions_min_4_3_0),
    .din5(regions_min_5_3_0),
    .din6(regions_min_6_3_0),
    .din7(regions_min_7_3_0),
    .din8(regions_min_8_3_0),
    .din9(regions_min_9_3_0),
    .din10(regions_min_10_3_0),
    .din11(regions_min_11_3_0),
    .din12(regions_min_12_3_0),
    .din13(regions_min_13_3_0),
    .din14(regions_min_14_3_0),
    .din15(regions_min_15_3_0),
    .din16(trunc_ln104_1_reg_5370),
    .dout(tmp_23_fu_2461_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U35(
    .din0(regions_center_0_2_0),
    .din1(regions_center_1_2_0),
    .din2(regions_center_2_2_0),
    .din3(regions_center_3_2_0),
    .din4(regions_center_4_2_0),
    .din5(regions_center_5_2_0),
    .din6(regions_center_6_2_0),
    .din7(regions_center_7_2_0),
    .din8(regions_center_8_2_0),
    .din9(regions_center_9_2_0),
    .din10(regions_center_10_2_0),
    .din11(regions_center_11_2_0),
    .din12(regions_center_12_2_0),
    .din13(regions_center_13_2_0),
    .din14(regions_center_14_2_0),
    .din15(regions_center_15_2_0),
    .din16(trunc_ln104_reg_5351),
    .dout(tmp_12_fu_2598_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U36(
    .din0(regions_center_0_2_0),
    .din1(regions_center_1_2_0),
    .din2(regions_center_2_2_0),
    .din3(regions_center_3_2_0),
    .din4(regions_center_4_2_0),
    .din5(regions_center_5_2_0),
    .din6(regions_center_6_2_0),
    .din7(regions_center_7_2_0),
    .din8(regions_center_8_2_0),
    .din9(regions_center_9_2_0),
    .din10(regions_center_10_2_0),
    .din11(regions_center_11_2_0),
    .din12(regions_center_12_2_0),
    .din13(regions_center_13_2_0),
    .din14(regions_center_14_2_0),
    .din15(regions_center_15_2_0),
    .din16(trunc_ln104_1_reg_5370),
    .dout(tmp_13_fu_2619_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U37(
    .din0(regions_max_0_2_0),
    .din1(regions_max_1_2_0),
    .din2(regions_max_2_2_0),
    .din3(regions_max_3_2_0),
    .din4(regions_max_4_2_0),
    .din5(regions_max_5_2_0),
    .din6(regions_max_6_2_0),
    .din7(regions_max_7_2_0),
    .din8(regions_max_8_2_0),
    .din9(regions_max_9_2_0),
    .din10(regions_max_10_2_0),
    .din11(regions_max_11_2_0),
    .din12(regions_max_12_2_0),
    .din13(regions_max_13_2_0),
    .din14(regions_max_14_2_0),
    .din15(regions_max_15_2_0),
    .din16(trunc_ln104_reg_5351),
    .dout(tmp_14_fu_2640_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U38(
    .din0(regions_max_0_2_0),
    .din1(regions_max_1_2_0),
    .din2(regions_max_2_2_0),
    .din3(regions_max_3_2_0),
    .din4(regions_max_4_2_0),
    .din5(regions_max_5_2_0),
    .din6(regions_max_6_2_0),
    .din7(regions_max_7_2_0),
    .din8(regions_max_8_2_0),
    .din9(regions_max_9_2_0),
    .din10(regions_max_10_2_0),
    .din11(regions_max_11_2_0),
    .din12(regions_max_12_2_0),
    .din13(regions_max_13_2_0),
    .din14(regions_max_14_2_0),
    .din15(regions_max_15_2_0),
    .din16(trunc_ln104_1_reg_5370),
    .dout(tmp_16_fu_2661_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U39(
    .din0(regions_min_0_4_0),
    .din1(regions_min_1_4_0),
    .din2(regions_min_2_4_0),
    .din3(regions_min_3_4_0),
    .din4(regions_min_4_4_0),
    .din5(regions_min_5_4_0),
    .din6(regions_min_6_4_0),
    .din7(regions_min_7_4_0),
    .din8(regions_min_8_4_0),
    .din9(regions_min_9_4_0),
    .din10(regions_min_10_4_0),
    .din11(regions_min_11_4_0),
    .din12(regions_min_12_4_0),
    .din13(regions_min_13_4_0),
    .din14(regions_min_14_4_0),
    .din15(regions_min_15_4_0),
    .din16(trunc_ln104_reg_5351),
    .dout(tmp_27_fu_2682_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U40(
    .din0(regions_min_0_4_0),
    .din1(regions_min_1_4_0),
    .din2(regions_min_2_4_0),
    .din3(regions_min_3_4_0),
    .din4(regions_min_4_4_0),
    .din5(regions_min_5_4_0),
    .din6(regions_min_6_4_0),
    .din7(regions_min_7_4_0),
    .din8(regions_min_8_4_0),
    .din9(regions_min_9_4_0),
    .din10(regions_min_10_4_0),
    .din11(regions_min_11_4_0),
    .din12(regions_min_12_4_0),
    .din13(regions_min_13_4_0),
    .din14(regions_min_14_4_0),
    .din15(regions_min_15_4_0),
    .din16(trunc_ln104_1_reg_5370),
    .dout(tmp_29_fu_2703_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U41(
    .din0(regions_max_0_3_0),
    .din1(regions_max_1_3_0),
    .din2(regions_max_2_3_0),
    .din3(regions_max_3_3_0),
    .din4(regions_max_4_3_0),
    .din5(regions_max_5_3_0),
    .din6(regions_max_6_3_0),
    .din7(regions_max_7_3_0),
    .din8(regions_max_8_3_0),
    .din9(regions_max_9_3_0),
    .din10(regions_max_10_3_0),
    .din11(regions_max_11_3_0),
    .din12(regions_max_12_3_0),
    .din13(regions_max_13_3_0),
    .din14(regions_max_14_3_0),
    .din15(regions_max_15_3_0),
    .din16(trunc_ln104_reg_5351),
    .dout(tmp_20_fu_2820_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U42(
    .din0(regions_max_0_3_0),
    .din1(regions_max_1_3_0),
    .din2(regions_max_2_3_0),
    .din3(regions_max_3_3_0),
    .din4(regions_max_4_3_0),
    .din5(regions_max_5_3_0),
    .din6(regions_max_6_3_0),
    .din7(regions_max_7_3_0),
    .din8(regions_max_8_3_0),
    .din9(regions_max_9_3_0),
    .din10(regions_max_10_3_0),
    .din11(regions_max_11_3_0),
    .din12(regions_max_12_3_0),
    .din13(regions_max_13_3_0),
    .din14(regions_max_14_3_0),
    .din15(regions_max_15_3_0),
    .din16(trunc_ln104_1_reg_5370),
    .dout(tmp_22_fu_2841_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U43(
    .din0(regions_center_0_3_0),
    .din1(regions_center_1_3_0),
    .din2(regions_center_2_3_0),
    .din3(regions_center_3_3_0),
    .din4(regions_center_4_3_0),
    .din5(regions_center_5_3_0),
    .din6(regions_center_6_3_0),
    .din7(regions_center_7_3_0),
    .din8(regions_center_8_3_0),
    .din9(regions_center_9_3_0),
    .din10(regions_center_10_3_0),
    .din11(regions_center_11_3_0),
    .din12(regions_center_12_3_0),
    .din13(regions_center_13_3_0),
    .din14(regions_center_14_3_0),
    .din15(regions_center_15_3_0),
    .din16(trunc_ln104_reg_5351),
    .dout(tmp_18_fu_2962_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U44(
    .din0(regions_center_0_3_0),
    .din1(regions_center_1_3_0),
    .din2(regions_center_2_3_0),
    .din3(regions_center_3_3_0),
    .din4(regions_center_4_3_0),
    .din5(regions_center_5_3_0),
    .din6(regions_center_6_3_0),
    .din7(regions_center_7_3_0),
    .din8(regions_center_8_3_0),
    .din9(regions_center_9_3_0),
    .din10(regions_center_10_3_0),
    .din11(regions_center_11_3_0),
    .din12(regions_center_12_3_0),
    .din13(regions_center_13_3_0),
    .din14(regions_center_14_3_0),
    .din15(regions_center_15_3_0),
    .din16(trunc_ln104_1_reg_5370),
    .dout(tmp_19_fu_2983_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U45(
    .din0(regions_center_0_4_0),
    .din1(regions_center_1_4_0),
    .din2(regions_center_2_4_0),
    .din3(regions_center_3_4_0),
    .din4(regions_center_4_4_0),
    .din5(regions_center_5_4_0),
    .din6(regions_center_6_4_0),
    .din7(regions_center_7_4_0),
    .din8(regions_center_8_4_0),
    .din9(regions_center_9_4_0),
    .din10(regions_center_10_4_0),
    .din11(regions_center_11_4_0),
    .din12(regions_center_12_4_0),
    .din13(regions_center_13_4_0),
    .din14(regions_center_14_4_0),
    .din15(regions_center_15_4_0),
    .din16(trunc_ln104_reg_5351),
    .dout(tmp_24_fu_3004_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U46(
    .din0(regions_center_0_4_0),
    .din1(regions_center_1_4_0),
    .din2(regions_center_2_4_0),
    .din3(regions_center_3_4_0),
    .din4(regions_center_4_4_0),
    .din5(regions_center_5_4_0),
    .din6(regions_center_6_4_0),
    .din7(regions_center_7_4_0),
    .din8(regions_center_8_4_0),
    .din9(regions_center_9_4_0),
    .din10(regions_center_10_4_0),
    .din11(regions_center_11_4_0),
    .din12(regions_center_12_4_0),
    .din13(regions_center_13_4_0),
    .din14(regions_center_14_4_0),
    .din15(regions_center_15_4_0),
    .din16(trunc_ln104_1_reg_5370),
    .dout(tmp_25_fu_3025_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U47(
    .din0(regions_max_0_4_0),
    .din1(regions_max_1_4_0),
    .din2(regions_max_2_4_0),
    .din3(regions_max_3_4_0),
    .din4(regions_max_4_4_0),
    .din5(regions_max_5_4_0),
    .din6(regions_max_6_4_0),
    .din7(regions_max_7_4_0),
    .din8(regions_max_8_4_0),
    .din9(regions_max_9_4_0),
    .din10(regions_max_10_4_0),
    .din11(regions_max_11_4_0),
    .din12(regions_max_12_4_0),
    .din13(regions_max_13_4_0),
    .din14(regions_max_14_4_0),
    .din15(regions_max_15_4_0),
    .din16(trunc_ln104_reg_5351),
    .dout(tmp_26_fu_3046_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U48(
    .din0(regions_max_0_4_0),
    .din1(regions_max_1_4_0),
    .din2(regions_max_2_4_0),
    .din3(regions_max_3_4_0),
    .din4(regions_max_4_4_0),
    .din5(regions_max_5_4_0),
    .din6(regions_max_6_4_0),
    .din7(regions_max_7_4_0),
    .din8(regions_max_8_4_0),
    .din9(regions_max_9_4_0),
    .din10(regions_max_10_4_0),
    .din11(regions_max_11_4_0),
    .din12(regions_max_12_4_0),
    .din13(regions_max_13_4_0),
    .din14(regions_max_14_4_0),
    .din15(regions_max_15_4_0),
    .din16(trunc_ln104_1_reg_5370),
    .dout(tmp_28_fu_3067_p18)
);

FaultDetector_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage7),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter8_stage1) | ((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_real_4_fu_552 <= 32'd1;
        end else if (((icmp_ln1027_reg_5347 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            k_real_4_fu_552 <= k_real_3_fu_3189_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            merge_1_1_fu_548 <= 32'd0;
        end else if (((icmp_ln1027_reg_5347 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            merge_1_1_fu_548 <= i_real_2_fu_3197_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        merge_1_fu_536 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_5347_pp0_iter8_reg == 1'd1))) begin
        merge_1_fu_536 <= merge_1_7_fu_3822_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        merge_2_fu_540 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_5347_pp0_iter8_reg == 1'd1))) begin
        merge_2_fu_540 <= merge_2_6_fu_3816_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        score_fu_544 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_5347_pp0_iter8_reg == 1'd1))) begin
        score_fu_544 <= score_3_fu_3810_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_other_fu_560 <= 32'd4294967295;
        end else if (((ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln1027_reg_5347_pp0_iter7_reg == 1'd1))) begin
            tmp_other_fu_560 <= tmp_other_3_fu_3660_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_score_fu_556 <= 32'd0;
        end else if (((ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln1027_reg_5347_pp0_iter7_reg == 1'd1))) begin
            tmp_score_fu_556 <= tmp_score_3_fu_3666_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln112_1_reg_5579 <= and_ln112_1_fu_2737_p2;
        and_ln112_3_reg_5584 <= and_ln112_3_fu_2756_p2;
        icmp_ln112_10_reg_5599 <= icmp_ln112_10_fu_2808_p2;
        icmp_ln112_11_reg_5604 <= icmp_ln112_11_fu_2814_p2;
        icmp_ln112_8_reg_5589 <= icmp_ln112_8_fu_2796_p2;
        icmp_ln112_9_reg_5594 <= icmp_ln112_9_fu_2802_p2;
        tmp_20_reg_5614 <= tmp_20_fu_2820_p18;
        tmp_22_reg_5619 <= tmp_22_fu_2841_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln112_1_reg_5579_pp0_iter1_reg <= and_ln112_1_reg_5579;
        and_ln112_1_reg_5579_pp0_iter2_reg <= and_ln112_1_reg_5579_pp0_iter1_reg;
        and_ln112_3_reg_5584_pp0_iter1_reg <= and_ln112_3_reg_5584;
        and_ln112_3_reg_5584_pp0_iter2_reg <= and_ln112_3_reg_5584_pp0_iter1_reg;
        mul_4_reg_5817_pp0_iter3_reg <= mul_4_reg_5817;
        mul_4_reg_5817_pp0_iter4_reg <= mul_4_reg_5817_pp0_iter3_reg;
        mul_4_reg_5817_pp0_iter5_reg <= mul_4_reg_5817_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        and_ln112_5_reg_5629 <= and_ln112_5_fu_2876_p2;
        and_ln112_7_reg_5634 <= and_ln112_7_fu_2957_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        and_ln112_5_reg_5629_pp0_iter1_reg <= and_ln112_5_reg_5629;
        and_ln112_5_reg_5629_pp0_iter2_reg <= and_ln112_5_reg_5629_pp0_iter1_reg;
        and_ln112_7_reg_5634_pp0_iter1_reg <= and_ln112_7_reg_5634;
        and_ln112_7_reg_5634_pp0_iter2_reg <= and_ln112_7_reg_5634_pp0_iter1_reg;
        mul_1_reg_5785_pp0_iter2_reg <= mul_1_reg_5785;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        and_ln112_9_reg_5674 <= and_ln112_9_fu_3164_p2;
        tmp_18_reg_5644 <= tmp_18_fu_2962_p18;
        tmp_19_reg_5649 <= tmp_19_fu_2983_p18;
        tmp_24_reg_5654 <= tmp_24_fu_3004_p18;
        tmp_25_reg_5659 <= tmp_25_fu_3025_p18;
        tmp_26_reg_5664 <= tmp_26_fu_3046_p18;
        tmp_28_reg_5669 <= tmp_28_fu_3067_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        and_ln112_9_reg_5674_pp0_iter1_reg <= and_ln112_9_reg_5674;
        and_ln112_9_reg_5674_pp0_iter2_reg <= and_ln112_9_reg_5674_pp0_iter1_reg;
        ov_19_reg_5917_pp0_iter4_reg <= ov_19_reg_5917;
        tmp_56_reg_5944_pp0_iter6_reg <= tmp_56_reg_5944;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        d1_1_reg_5714 <= grp_fu_2022_p2;
        d2_1_reg_5719 <= grp_fu_2026_p2;
        sub2_reg_5709 <= grp_fu_15142_p_dout0;
        sub75_1_reg_5724 <= grp_fu_2030_p2;
        sub87_1_reg_5729 <= grp_fu_2034_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        d1_2_reg_5740 <= grp_fu_2022_p2;
        d2_2_reg_5745 <= grp_fu_2026_p2;
        d_2_reg_5734 <= grp_fu_15142_p_dout0;
        sub75_2_reg_5750 <= grp_fu_2030_p2;
        sub87_2_reg_5755 <= grp_fu_2034_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        d1_3_reg_5760 <= grp_fu_15142_p_dout0;
        d2_3_reg_5765 <= grp_fu_2022_p2;
        sub75_3_reg_5770 <= grp_fu_2026_p2;
        sub87_3_reg_5775 <= grp_fu_2030_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        d1_reg_5688 <= grp_fu_2022_p2;
        d2_reg_5693 <= grp_fu_2026_p2;
        d_1_reg_5703 <= grp_fu_2034_p2;
        sub_reg_5698 <= grp_fu_2030_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        d_3_reg_5790 <= grp_fu_15142_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        d_4_reg_5801 <= grp_fu_15142_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln1027_reg_5347_pp0_iter3_reg == 1'd1))) begin
        distance_1_reg_5902 <= grp_fu_2030_p2;
        tmp_54_reg_5907 <= grp_fu_15158_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln1027_reg_5347_pp0_iter4_reg == 1'd1))) begin
        distance_2_reg_5932 <= grp_fu_2026_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_5347_pp0_iter5_reg == 1'd1))) begin
        distance_3_reg_5949 <= grp_fu_2026_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_5347_pp0_iter6_reg == 1'd1))) begin
        distance_4_reg_5954 <= grp_fu_2030_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        distance_reg_5822 <= grp_fu_15142_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_real_3_reg_5332 <= merge_1_1_fu_548;
        i_real_3_reg_5332_pp0_iter1_reg <= i_real_3_reg_5332;
        i_real_3_reg_5332_pp0_iter2_reg <= i_real_3_reg_5332_pp0_iter1_reg;
        i_real_3_reg_5332_pp0_iter3_reg <= i_real_3_reg_5332_pp0_iter2_reg;
        i_real_3_reg_5332_pp0_iter4_reg <= i_real_3_reg_5332_pp0_iter3_reg;
        i_real_3_reg_5332_pp0_iter5_reg <= i_real_3_reg_5332_pp0_iter4_reg;
        i_real_3_reg_5332_pp0_iter6_reg <= i_real_3_reg_5332_pp0_iter5_reg;
        i_real_3_reg_5332_pp0_iter7_reg <= i_real_3_reg_5332_pp0_iter6_reg;
        i_real_3_reg_5332_pp0_iter8_reg <= i_real_3_reg_5332_pp0_iter7_reg;
        icmp_ln1027_reg_5347 <= icmp_ln1027_fu_2122_p2;
        icmp_ln1027_reg_5347_pp0_iter1_reg <= icmp_ln1027_reg_5347;
        icmp_ln1027_reg_5347_pp0_iter2_reg <= icmp_ln1027_reg_5347_pp0_iter1_reg;
        icmp_ln1027_reg_5347_pp0_iter3_reg <= icmp_ln1027_reg_5347_pp0_iter2_reg;
        icmp_ln1027_reg_5347_pp0_iter4_reg <= icmp_ln1027_reg_5347_pp0_iter3_reg;
        icmp_ln1027_reg_5347_pp0_iter5_reg <= icmp_ln1027_reg_5347_pp0_iter4_reg;
        icmp_ln1027_reg_5347_pp0_iter6_reg <= icmp_ln1027_reg_5347_pp0_iter5_reg;
        icmp_ln1027_reg_5347_pp0_iter7_reg <= icmp_ln1027_reg_5347_pp0_iter6_reg;
        icmp_ln1027_reg_5347_pp0_iter8_reg <= icmp_ln1027_reg_5347_pp0_iter7_reg;
        k_real_5_reg_5340 <= k_real_4_fu_552;
        k_real_5_reg_5340_pp0_iter1_reg <= k_real_5_reg_5340;
        k_real_5_reg_5340_pp0_iter2_reg <= k_real_5_reg_5340_pp0_iter1_reg;
        k_real_5_reg_5340_pp0_iter3_reg <= k_real_5_reg_5340_pp0_iter2_reg;
        k_real_5_reg_5340_pp0_iter4_reg <= k_real_5_reg_5340_pp0_iter3_reg;
        k_real_5_reg_5340_pp0_iter5_reg <= k_real_5_reg_5340_pp0_iter4_reg;
        k_real_5_reg_5340_pp0_iter6_reg <= k_real_5_reg_5340_pp0_iter5_reg;
        k_real_5_reg_5340_pp0_iter7_reg <= k_real_5_reg_5340_pp0_iter6_reg;
        merge_1_4_reg_6000 <= merge_1_fu_536;
        merge_2_1_reg_6007 <= merge_2_fu_540;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1019_reg_5679 <= icmp_ln1019_fu_3169_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1019_reg_5679_pp0_iter2_reg <= icmp_ln1019_reg_5679;
        icmp_ln1019_reg_5679_pp0_iter3_reg <= icmp_ln1019_reg_5679_pp0_iter2_reg;
        icmp_ln1019_reg_5679_pp0_iter4_reg <= icmp_ln1019_reg_5679_pp0_iter3_reg;
        icmp_ln1019_reg_5679_pp0_iter5_reg <= icmp_ln1019_reg_5679_pp0_iter4_reg;
        icmp_ln1019_reg_5679_pp0_iter6_reg <= icmp_ln1019_reg_5679_pp0_iter5_reg;
        icmp_ln1019_reg_5679_pp0_iter7_reg <= icmp_ln1019_reg_5679_pp0_iter6_reg;
        icmp_ln1019_reg_5679_pp0_iter8_reg <= icmp_ln1019_reg_5679_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        icmp_ln112_1_reg_5496 <= icmp_ln112_1_fu_2522_p2;
        icmp_ln112_2_reg_5501 <= icmp_ln112_2_fu_2528_p2;
        icmp_ln112_3_reg_5506 <= icmp_ln112_3_fu_2534_p2;
        icmp_ln112_4_reg_5516 <= icmp_ln112_4_fu_2574_p2;
        icmp_ln112_5_reg_5521 <= icmp_ln112_5_fu_2580_p2;
        icmp_ln112_6_reg_5526 <= icmp_ln112_6_fu_2586_p2;
        icmp_ln112_7_reg_5531 <= icmp_ln112_7_fu_2592_p2;
        icmp_ln112_reg_5491 <= icmp_ln112_fu_2516_p2;
        tmp_12_reg_5541 <= tmp_12_fu_2598_p18;
        tmp_13_reg_5546 <= tmp_13_fu_2619_p18;
        tmp_14_reg_5551 <= tmp_14_fu_2640_p18;
        tmp_16_reg_5556 <= tmp_16_fu_2661_p18;
        tmp_27_reg_5561 <= tmp_27_fu_2682_p18;
        tmp_29_reg_5570 <= tmp_29_fu_2703_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul_1_reg_5785 <= grp_fu_2043_p2;
        mul_reg_5780 <= grp_fu_15148_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_2_reg_5796 <= grp_fu_15148_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_2_reg_5796_pp0_iter2_reg <= mul_2_reg_5796;
        mul_2_reg_5796_pp0_iter3_reg <= mul_2_reg_5796_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_3_reg_5807 <= grp_fu_15148_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_3_reg_5807_pp0_iter3_reg <= mul_3_reg_5807;
        mul_3_reg_5807_pp0_iter4_reg <= mul_3_reg_5807_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul_4_reg_5817 <= grp_fu_15148_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ov_10_reg_5851 <= ov_10_fu_3227_p3;
        ov_14_reg_5858 <= ov_14_fu_3234_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln1027_reg_5347_pp0_iter3_reg == 1'd1))) begin
        ov_11_reg_5892 <= ov_11_fu_3382_p3;
        ov_15_reg_5897 <= ov_15_fu_3429_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ov_18_reg_5875 <= ov_18_fu_3335_p3;
        ov_20_reg_5865 <= ov_20_fu_3281_p3;
        ov_7_reg_5870 <= ov_7_fu_3328_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln1027_reg_5347_pp0_iter3_reg == 1'd1))) begin
        ov_19_reg_5917 <= ov_19_fu_3476_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ov_2_reg_5827 <= ov_2_fu_3214_p3;
        ov_6_reg_5834 <= ov_6_fu_3220_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_1_reg_5579_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ov_reg_5812 <= grp_fu_2034_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln1027_reg_5347_pp0_iter3_reg == 1'd1))) begin
        overlap_1_reg_5912 <= grp_fu_15148_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_5347_pp0_iter4_reg == 1'd1))) begin
        overlap_2_reg_5922 <= grp_fu_2043_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln1027_reg_5347_pp0_iter4_reg == 1'd1))) begin
        overlap_3_reg_5927 <= grp_fu_2043_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln1027_reg_5347_pp0_iter5_reg == 1'd1))) begin
        overlap_4_reg_5937 <= grp_fu_15148_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        overlap_4_reg_5937_pp0_iter6_reg <= overlap_4_reg_5937;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_5_reg_5629_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_5_reg_5629_pp0_iter2_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_2057 <= grp_fu_15142_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_9_reg_5674) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_9_reg_5674) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_2063 <= grp_fu_2022_p2;
        reg_2068 <= grp_fu_2026_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_9_reg_5674_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_9_reg_5674_pp0_iter2_reg) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln112_7_reg_5634_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'd0 == and_ln112_1_reg_5579_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_7_reg_5634_pp0_iter2_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        reg_2073 <= grp_fu_2022_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_3_reg_5584_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_3_reg_5584_pp0_iter2_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_2077 <= grp_fu_2026_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_5347_pp0_iter6_reg == 1'd1))) begin
        sc_2_reg_5959 <= sc_2_fu_3536_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_5347_pp0_iter7_reg == 1'd1))) begin
        score_load_reg_5992 <= score_fu_544;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_10_reg_5450 <= tmp_10_fu_2377_p18;
        tmp_15_reg_5455 <= tmp_15_fu_2398_p18;
        tmp_17_reg_5464 <= tmp_17_fu_2419_p18;
        tmp_21_reg_5473 <= tmp_21_fu_2440_p18;
        tmp_23_reg_5482 <= tmp_23_fu_2461_p18;
        tmp_8_reg_5445 <= tmp_8_fu_2356_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_fu_2122_p2 == 1'd1))) begin
        tmp_11_reg_5436 <= tmp_11_fu_2334_p18;
        tmp_1_reg_5384 <= tmp_1_fu_2158_p18;
        tmp_2_reg_5389 <= tmp_2_fu_2180_p18;
        tmp_3_reg_5394 <= tmp_3_fu_2202_p18;
        tmp_4_reg_5403 <= tmp_4_fu_2224_p18;
        tmp_5_reg_5408 <= tmp_5_fu_2246_p18;
        tmp_6_reg_5417 <= tmp_6_fu_2268_p18;
        tmp_7_reg_5422 <= tmp_7_fu_2290_p18;
        tmp_9_reg_5427 <= tmp_9_fu_2312_p18;
        tmp_s_reg_5365 <= tmp_s_fu_2132_p18;
        trunc_ln104_1_reg_5370 <= trunc_ln104_1_fu_2154_p1;
        trunc_ln104_reg_5351 <= trunc_ln104_fu_2128_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_32_reg_5511 <= grp_fu_15153_p_dout0;
        tmp_37_reg_5536 <= grp_fu_15158_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_34_reg_5841 <= grp_fu_15153_p_dout0;
        tmp_39_reg_5846 <= grp_fu_15158_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_42_reg_5609 <= grp_fu_15153_p_dout0;
        tmp_47_reg_5624 <= grp_fu_15158_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_5347_pp0_iter3_reg == 1'd1))) begin
        tmp_44_reg_5882 <= grp_fu_15153_p_dout0;
        tmp_49_reg_5887 <= grp_fu_15158_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_52_reg_5639 <= grp_fu_15153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln1027_reg_5347_pp0_iter5_reg == 1'd1))) begin
        tmp_56_reg_5944 <= grp_fu_15153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln1027_reg_5347_pp0_iter7_reg == 1'd1))) begin
        tmp_59_reg_5973 <= grp_fu_15158_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_5347_pp0_iter7_reg == 1'd1))) begin
        tmp_62_reg_6013 <= grp_fu_15153_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln1027_reg_5347_pp0_iter7_reg == 1'd1))) begin
        tmp_other_4_reg_5978 <= tmp_other_4_fu_3643_p3;
        tmp_score_4_reg_5984 <= tmp_score_4_fu_3650_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln1027_reg_5347_pp0_iter7_reg == 1'd1))) begin
        tmp_score_load_reg_5966 <= tmp_score_fu_556;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_5347 == 1'd0) & (1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_5347_pp0_iter7_reg == 1'd0))) begin
        ap_condition_exit_pp0_iter8_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter8_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to7 = 1'b1;
    end else begin
        ap_idle_pp0_0to7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to8 = 1'b1;
    end else begin
        ap_idle_pp0_1to8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage7_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_00001) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_5_reg_5629_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln112_5_reg_5629_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0_00001) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_2018_opcode = 2'd1;
    end else if (((1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2018_opcode = 2'd0;
    end else begin
        grp_fu_2018_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln112_5_reg_5629_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2018_p0 = d2_2_reg_5745;
    end else if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_5_reg_5629_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2018_p0 = d1_2_reg_5740;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2018_p0 = mul_reg_5780;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2018_p0 = tmp_24_reg_5654;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2018_p0 = tmp_18_reg_5644;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2018_p0 = tmp_20_reg_5614;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2018_p0 = tmp_12_reg_5541;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2018_p0 = tmp_3_reg_5394;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2018_p0 = tmp_s_reg_5365;
    end else begin
        grp_fu_2018_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln112_5_reg_5629_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2018_p1 = sub87_2_reg_5755;
    end else if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_5_reg_5629_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2018_p1 = sub75_2_reg_5750;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2018_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2018_p1 = tmp_25_reg_5659;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2018_p1 = tmp_19_reg_5649;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2018_p1 = tmp_21_reg_5473;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2018_p1 = tmp_13_reg_5546;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2018_p1 = tmp_5_reg_5408;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2018_p1 = tmp_1_reg_5384;
    end else begin
        grp_fu_2018_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_9_reg_5674_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_9_reg_5674_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_2022_p0 = reg_2063;
    end else if (((1'd0 == and_ln112_7_reg_5634_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2022_p0 = d2_3_reg_5765;
    end else if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_7_reg_5634_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2022_p0 = d1_3_reg_5760;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2022_p0 = d2_reg_5693;
    end else if (((1'd0 == and_ln112_9_reg_5674) & (icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2022_p0 = tmp_28_reg_5669;
    end else if (((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (1'd1 == and_ln112_9_reg_5674) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2022_p0 = tmp_26_reg_5664;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2022_p0 = tmp_22_reg_5619;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2022_p0 = tmp_14_reg_5551;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2022_p0 = tmp_8_reg_5445;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2022_p0 = tmp_2_reg_5389;
    end else begin
        grp_fu_2022_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_9_reg_5674_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_9_reg_5674_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_2022_p1 = reg_2068;
    end else if (((1'd0 == and_ln112_7_reg_5634_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2022_p1 = sub87_3_reg_5775;
    end else if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_7_reg_5634_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2022_p1 = sub75_3_reg_5770;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2022_p1 = sub2_reg_5709;
    end else if (((1'd0 == and_ln112_9_reg_5674) & (icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2022_p1 = tmp_29_reg_5570;
    end else if (((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (1'd1 == and_ln112_9_reg_5674) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2022_p1 = tmp_27_reg_5561;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2022_p1 = tmp_23_reg_5482;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2022_p1 = tmp_15_reg_5455;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2022_p1 = tmp_9_reg_5427;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2022_p1 = tmp_3_reg_5394;
    end else begin
        grp_fu_2022_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_9_reg_5674) & (icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage7_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage7_00001) & (1'd1 == and_ln112_9_reg_5674) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_3_reg_5584_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'd0 == and_ln112_3_reg_5584_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_2026_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_5347_pp0_iter3_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_5347_pp0_iter4_reg == 1'd1)))) begin
        grp_fu_2026_opcode = 2'd0;
    end else begin
        grp_fu_2026_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2026_p0 = distance_2_reg_5932;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2026_p0 = distance_1_reg_5902;
    end else if (((1'd0 == and_ln112_3_reg_5584_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage6) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2026_p0 = d2_1_reg_5719;
    end else if (((1'b0 == ap_block_pp0_stage6) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_3_reg_5584_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2026_p0 = d1_1_reg_5714;
    end else if (((1'd0 == and_ln112_9_reg_5674) & (icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2026_p0 = tmp_27_reg_5561;
    end else if (((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (1'd1 == and_ln112_9_reg_5674) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2026_p0 = tmp_29_reg_5570;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2026_p0 = tmp_23_reg_5482;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2026_p0 = tmp_16_reg_5556;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2026_p0 = tmp_10_reg_5450;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2026_p0 = tmp_4_reg_5403;
    end else begin
        grp_fu_2026_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2026_p1 = mul_3_reg_5807_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2026_p1 = mul_2_reg_5796_pp0_iter3_reg;
    end else if (((1'd0 == and_ln112_3_reg_5584_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage6) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2026_p1 = sub87_1_reg_5729;
    end else if (((1'b0 == ap_block_pp0_stage6) & (icmp_ln1027_reg_5347_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_3_reg_5584_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2026_p1 = sub75_1_reg_5724;
    end else if (((1'd0 == and_ln112_9_reg_5674) & (icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2026_p1 = tmp_29_reg_5570;
    end else if (((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (1'd1 == and_ln112_9_reg_5674) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2026_p1 = tmp_27_reg_5561;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2026_p1 = tmp_21_reg_5473;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2026_p1 = tmp_17_reg_5464;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2026_p1 = tmp_11_reg_5436;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2026_p1 = tmp_5_reg_5408;
    end else begin
        grp_fu_2026_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_2030_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_5347_pp0_iter5_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_2030_opcode = 2'd0;
    end else begin
        grp_fu_2030_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2030_p0 = distance_3_reg_5949;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2030_p0 = distance_reg_5822;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2030_p0 = tmp_21_reg_5473;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2030_p0 = tmp_17_reg_5464;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2030_p0 = tmp_11_reg_5436;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2030_p0 = tmp_5_reg_5408;
    end else begin
        grp_fu_2030_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2030_p1 = mul_4_reg_5817_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2030_p1 = mul_1_reg_5785_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2030_p1 = tmp_23_reg_5482;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2030_p1 = tmp_15_reg_5455;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2030_p1 = tmp_9_reg_5427;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2030_p1 = tmp_3_reg_5394;
    end else begin
        grp_fu_2030_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2034_p0 = d1_reg_5688;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2034_p0 = tmp_15_reg_5455;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2034_p0 = tmp_9_reg_5427;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2034_p0 = tmp_6_reg_5417;
    end else begin
        grp_fu_2034_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2034_p1 = sub_reg_5698;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2034_p1 = tmp_17_reg_5464;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2034_p1 = tmp_11_reg_5436;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2034_p1 = tmp_7_reg_5422;
    end else begin
        grp_fu_2034_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2039_p0 = overlap_3_reg_5927;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2039_p0 = ov_20_reg_5865;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2039_p0 = d_4_reg_5801;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2039_p0 = d_3_reg_5790;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2039_p0 = d_2_reg_5734;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2039_p0 = reg_2057;
    end else begin
        grp_fu_2039_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2039_p1 = ov_19_reg_5917_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2039_p1 = ov_7_reg_5870;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2039_p1 = d_4_reg_5801;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2039_p1 = d_3_reg_5790;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2039_p1 = d_2_reg_5734;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2039_p1 = reg_2057;
    end else begin
        grp_fu_2039_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2043_p0 = overlap_2_reg_5922;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2043_p0 = overlap_1_reg_5912;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2043_p0 = d_1_reg_5703;
    end else begin
        grp_fu_2043_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2043_p1 = ov_15_reg_5897;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2043_p1 = ov_11_reg_5892;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2043_p1 = d_1_reg_5703;
    end else begin
        grp_fu_2043_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_5347_pp0_iter7_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln1027_reg_5347_pp0_iter5_reg == 1'd1)))) begin
        grp_fu_2047_opcode = 5'd2;
    end else if ((((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage7_00001) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        grp_fu_2047_opcode = 5'd4;
    end else begin
        grp_fu_2047_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2047_p0 = tmp_score_4_reg_5984;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2047_p0 = overlap_4_reg_5937;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2047_p0 = ov_10_reg_5851;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2047_p0 = ov_2_reg_5827;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2047_p0 = tmp_27_reg_5561;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2047_p0 = tmp_15_reg_5455;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2047_p0 = tmp_3_reg_5394;
    end else begin
        grp_fu_2047_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2047_p1 = score_fu_544;
    end else if ((((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_2047_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2047_p1 = tmp_29_reg_5570;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2047_p1 = tmp_17_reg_5464;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2047_p1 = tmp_5_reg_5408;
    end else begin
        grp_fu_2047_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln1027_reg_5347_pp0_iter7_reg == 1'd1))) begin
        grp_fu_2051_opcode = 5'd2;
    end else if ((((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_5347 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage7_00001) & (icmp_ln1027_reg_5347_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln1027_reg_5347_pp0_iter3_reg == 1'd1)))) begin
        grp_fu_2051_opcode = 5'd4;
    end else begin
        grp_fu_2051_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2051_p0 = sc_2_reg_5959;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2051_p0 = ov_18_reg_5875;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2051_p0 = ov_14_reg_5858;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2051_p0 = ov_6_reg_5834;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2051_p0 = tmp_21_reg_5473;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2051_p0 = tmp_9_reg_5427;
    end else begin
        grp_fu_2051_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2051_p1 = tmp_score_fu_556;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_2051_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2051_p1 = tmp_23_reg_5482;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2051_p1 = tmp_11_reg_5436;
    end else begin
        grp_fu_2051_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_5347_pp0_iter7_reg == 1'd0))) begin
        merge_1_out_ap_vld = 1'b1;
    end else begin
        merge_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_5347_pp0_iter7_reg == 1'd0))) begin
        merge_2_out_ap_vld = 1'b1;
    end else begin
        merge_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to8 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln112_1_fu_2737_p2 = (or_ln112_fu_2724_p2 & and_ln112_fu_2732_p2);

assign and_ln112_2_fu_2751_p2 = (tmp_37_reg_5536 & or_ln112_3_fu_2747_p2);

assign and_ln112_3_fu_2756_p2 = (or_ln112_2_fu_2743_p2 & and_ln112_2_fu_2751_p2);

assign and_ln112_4_fu_2870_p2 = (or_ln112_5_fu_2866_p2 & or_ln112_4_fu_2862_p2);

assign and_ln112_5_fu_2876_p2 = (tmp_42_reg_5609 & and_ln112_4_fu_2870_p2);

assign and_ln112_6_fu_2951_p2 = (or_ln112_7_fu_2945_p2 & or_ln112_6_fu_2927_p2);

assign and_ln112_7_fu_2957_p2 = (tmp_47_reg_5624 & and_ln112_6_fu_2951_p2);

assign and_ln112_8_fu_3158_p2 = (or_ln112_9_fu_3152_p2 & or_ln112_8_fu_3134_p2);

assign and_ln112_9_fu_3164_p2 = (tmp_52_reg_5639 & and_ln112_8_fu_3158_p2);

assign and_ln112_fu_2732_p2 = (tmp_32_reg_5511 & or_ln112_1_fu_2728_p2);

assign and_ln116_1_fu_3323_p2 = (tmp_39_reg_5846 & or_ln116_1_fu_3317_p2);

assign and_ln116_2_fu_3377_p2 = (tmp_44_reg_5882 & or_ln116_2_fu_3371_p2);

assign and_ln116_3_fu_3424_p2 = (tmp_49_reg_5887 & or_ln116_3_fu_3418_p2);

assign and_ln116_4_fu_3471_p2 = (tmp_54_reg_5907 & or_ln116_4_fu_3465_p2);

assign and_ln116_fu_3276_p2 = (tmp_34_reg_5841 & or_ln116_fu_3270_p2);

assign and_ln122_fu_3518_p2 = (tmp_56_reg_5944_pp0_iter6_reg & or_ln122_fu_3512_p2);

assign and_ln130_1_fu_3632_p2 = (tmp_59_reg_5973 & and_ln130_fu_3626_p2);

assign and_ln130_fu_3626_p2 = (or_ln130_2_fu_3620_p2 & or_ln130_1_fu_3602_p2);

assign and_ln139_1_fu_3781_p2 = (tmp_62_reg_6013 & and_ln139_fu_3775_p2);

assign and_ln139_fu_3775_p2 = (or_ln139_2_fu_3769_p2 & or_ln139_1_fu_3751_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage5_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage6_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage7_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage7;

assign bitcast_ln112_1_fu_2499_p1 = tmp_5_reg_5408;

assign bitcast_ln112_2_fu_2540_p1 = tmp_9_reg_5427;

assign bitcast_ln112_3_fu_2557_p1 = tmp_11_reg_5436;

assign bitcast_ln112_4_fu_2762_p1 = tmp_15_reg_5455;

assign bitcast_ln112_5_fu_2779_p1 = tmp_17_reg_5464;

assign bitcast_ln112_6_fu_2881_p1 = tmp_21_reg_5473;

assign bitcast_ln112_7_fu_2898_p1 = tmp_23_reg_5482;

assign bitcast_ln112_8_fu_3088_p1 = tmp_27_reg_5561;

assign bitcast_ln112_9_fu_3105_p1 = tmp_29_reg_5570;

assign bitcast_ln112_fu_2482_p1 = tmp_3_reg_5394;

assign bitcast_ln116_1_fu_3288_p1 = ov_6_reg_5834;

assign bitcast_ln116_2_fu_3342_p1 = ov_10_reg_5851;

assign bitcast_ln116_3_fu_3389_p1 = ov_14_reg_5858;

assign bitcast_ln116_4_fu_3436_p1 = ov_18_reg_5875;

assign bitcast_ln116_fu_3241_p1 = ov_2_reg_5827;

assign bitcast_ln122_fu_3483_p1 = overlap_4_reg_5937_pp0_iter6_reg;

assign bitcast_ln126_fu_3523_p1 = distance_4_reg_5954;

assign bitcast_ln130_1_fu_3573_p1 = tmp_score_load_reg_5966;

assign bitcast_ln130_fu_3556_p1 = sc_2_reg_5959;

assign bitcast_ln139_1_fu_3722_p1 = score_load_reg_5992;

assign bitcast_ln139_fu_3705_p1 = tmp_score_4_reg_5984;

assign grp_fu_15142_p_ce = 1'b1;

assign grp_fu_15142_p_din0 = grp_fu_2018_p0;

assign grp_fu_15142_p_din1 = grp_fu_2018_p1;

assign grp_fu_15142_p_opcode = grp_fu_2018_opcode;

assign grp_fu_15148_p_ce = 1'b1;

assign grp_fu_15148_p_din0 = grp_fu_2039_p0;

assign grp_fu_15148_p_din1 = grp_fu_2039_p1;

assign grp_fu_15153_p_ce = 1'b1;

assign grp_fu_15153_p_din0 = grp_fu_2047_p0;

assign grp_fu_15153_p_din1 = grp_fu_2047_p1;

assign grp_fu_15153_p_opcode = grp_fu_2047_opcode;

assign grp_fu_15158_p_ce = 1'b1;

assign grp_fu_15158_p_din0 = grp_fu_2051_p0;

assign grp_fu_15158_p_din1 = grp_fu_2051_p1;

assign grp_fu_15158_p_opcode = grp_fu_2051_opcode;

assign i_real_2_fu_3197_p3 = ((icmp_ln1019_fu_3169_p2[0:0] == 1'b1) ? i_real_fu_3174_p2 : i_real_3_reg_5332);

assign i_real_fu_3174_p2 = (i_real_3_reg_5332 + 32'd1);

assign icmp_ln1019_fu_3169_p2 = ((k_real_5_reg_5340 == 32'd15) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_2122_p2 = (($signed(merge_1_1_fu_548) < $signed(32'd15)) ? 1'b1 : 1'b0);

assign icmp_ln112_10_fu_2808_p2 = ((tmp_41_fu_2782_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_11_fu_2814_p2 = ((trunc_ln112_5_fu_2792_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_12_fu_2915_p2 = ((tmp_45_fu_2884_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_13_fu_2921_p2 = ((trunc_ln112_6_fu_2894_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_14_fu_2933_p2 = ((tmp_46_fu_2901_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_15_fu_2939_p2 = ((trunc_ln112_7_fu_2911_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_16_fu_3122_p2 = ((tmp_50_fu_3091_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_17_fu_3128_p2 = ((trunc_ln112_8_fu_3101_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_18_fu_3140_p2 = ((tmp_51_fu_3108_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_19_fu_3146_p2 = ((trunc_ln112_9_fu_3118_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_1_fu_2522_p2 = ((trunc_ln112_fu_2495_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_2_fu_2528_p2 = ((tmp_31_fu_2502_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_3_fu_2534_p2 = ((trunc_ln112_1_fu_2512_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_4_fu_2574_p2 = ((tmp_35_fu_2543_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_5_fu_2580_p2 = ((trunc_ln112_2_fu_2553_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_6_fu_2586_p2 = ((tmp_36_fu_2560_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_7_fu_2592_p2 = ((trunc_ln112_3_fu_2570_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_8_fu_2796_p2 = ((tmp_40_fu_2765_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_9_fu_2802_p2 = ((trunc_ln112_4_fu_2775_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_fu_2516_p2 = ((tmp_30_fu_2485_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_1_fu_3264_p2 = ((trunc_ln116_fu_3254_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_2_fu_3305_p2 = ((tmp_38_fu_3291_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_3_fu_3311_p2 = ((trunc_ln116_1_fu_3301_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_4_fu_3359_p2 = ((tmp_43_fu_3345_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_5_fu_3365_p2 = ((trunc_ln116_2_fu_3355_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_6_fu_3406_p2 = ((tmp_48_fu_3392_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_7_fu_3412_p2 = ((trunc_ln116_3_fu_3402_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_8_fu_3453_p2 = ((tmp_53_fu_3439_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_9_fu_3459_p2 = ((trunc_ln116_4_fu_3449_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_3258_p2 = ((tmp_33_fu_3244_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln122_1_fu_3506_p2 = ((trunc_ln122_fu_3496_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_3500_p2 = ((tmp_55_fu_3486_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_1_fu_3590_p2 = ((tmp_57_fu_3559_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_2_fu_3596_p2 = ((trunc_ln130_fu_3569_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_3_fu_3608_p2 = ((tmp_58_fu_3576_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_4_fu_3614_p2 = ((trunc_ln130_1_fu_3586_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_fu_3550_p2 = ((tmp_other_fu_560 == 32'd4294967295) ? 1'b1 : 1'b0);

assign icmp_ln139_1_fu_3745_p2 = ((trunc_ln139_fu_3718_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln139_2_fu_3757_p2 = ((tmp_61_fu_3725_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln139_3_fu_3763_p2 = ((trunc_ln139_1_fu_3735_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln139_fu_3739_p2 = ((tmp_60_fu_3708_p4 != 8'd255) ? 1'b1 : 1'b0);

assign k_real_2_fu_3184_p2 = (k_real_5_reg_5340 + 32'd1);

assign k_real_3_fu_3189_p3 = ((icmp_ln1019_fu_3169_p2[0:0] == 1'b1) ? k_real_fu_3179_p2 : k_real_2_fu_3184_p2);

assign k_real_fu_3179_p2 = (i_real_3_reg_5332 + 32'd2);

assign merge_1_6_fu_3804_p3 = ((or_ln139_fu_3786_p2[0:0] == 1'b1) ? i_real_3_reg_5332_pp0_iter8_reg : merge_1_4_reg_6000);

assign merge_1_7_fu_3822_p3 = ((icmp_ln1019_reg_5679_pp0_iter8_reg[0:0] == 1'b1) ? merge_1_6_fu_3804_p3 : merge_1_4_reg_6000);

assign merge_1_out = merge_1_fu_536[3:0];

assign merge_2_5_fu_3798_p3 = ((or_ln139_fu_3786_p2[0:0] == 1'b1) ? tmp_other_4_reg_5978 : merge_2_1_reg_6007);

assign merge_2_6_fu_3816_p3 = ((icmp_ln1019_reg_5679_pp0_iter8_reg[0:0] == 1'b1) ? merge_2_5_fu_3798_p3 : merge_2_1_reg_6007);

assign merge_2_out = merge_2_fu_540[3:0];

assign or_ln112_1_fu_2728_p2 = (icmp_ln112_3_reg_5506 | icmp_ln112_2_reg_5501);

assign or_ln112_2_fu_2743_p2 = (icmp_ln112_5_reg_5521 | icmp_ln112_4_reg_5516);

assign or_ln112_3_fu_2747_p2 = (icmp_ln112_7_reg_5531 | icmp_ln112_6_reg_5526);

assign or_ln112_4_fu_2862_p2 = (icmp_ln112_9_reg_5594 | icmp_ln112_8_reg_5589);

assign or_ln112_5_fu_2866_p2 = (icmp_ln112_11_reg_5604 | icmp_ln112_10_reg_5599);

assign or_ln112_6_fu_2927_p2 = (icmp_ln112_13_fu_2921_p2 | icmp_ln112_12_fu_2915_p2);

assign or_ln112_7_fu_2945_p2 = (icmp_ln112_15_fu_2939_p2 | icmp_ln112_14_fu_2933_p2);

assign or_ln112_8_fu_3134_p2 = (icmp_ln112_17_fu_3128_p2 | icmp_ln112_16_fu_3122_p2);

assign or_ln112_9_fu_3152_p2 = (icmp_ln112_19_fu_3146_p2 | icmp_ln112_18_fu_3140_p2);

assign or_ln112_fu_2724_p2 = (icmp_ln112_reg_5491 | icmp_ln112_1_reg_5496);

assign or_ln116_1_fu_3317_p2 = (icmp_ln116_3_fu_3311_p2 | icmp_ln116_2_fu_3305_p2);

assign or_ln116_2_fu_3371_p2 = (icmp_ln116_5_fu_3365_p2 | icmp_ln116_4_fu_3359_p2);

assign or_ln116_3_fu_3418_p2 = (icmp_ln116_7_fu_3412_p2 | icmp_ln116_6_fu_3406_p2);

assign or_ln116_4_fu_3465_p2 = (icmp_ln116_9_fu_3459_p2 | icmp_ln116_8_fu_3453_p2);

assign or_ln116_fu_3270_p2 = (icmp_ln116_fu_3258_p2 | icmp_ln116_1_fu_3264_p2);

assign or_ln122_fu_3512_p2 = (icmp_ln122_fu_3500_p2 | icmp_ln122_1_fu_3506_p2);

assign or_ln130_1_fu_3602_p2 = (icmp_ln130_2_fu_3596_p2 | icmp_ln130_1_fu_3590_p2);

assign or_ln130_2_fu_3620_p2 = (icmp_ln130_4_fu_3614_p2 | icmp_ln130_3_fu_3608_p2);

assign or_ln130_fu_3637_p2 = (icmp_ln130_fu_3550_p2 | and_ln130_1_fu_3632_p2);

assign or_ln139_1_fu_3751_p2 = (icmp_ln139_fu_3739_p2 | icmp_ln139_1_fu_3745_p2);

assign or_ln139_2_fu_3769_p2 = (icmp_ln139_3_fu_3763_p2 | icmp_ln139_2_fu_3757_p2);

assign or_ln139_fu_3786_p2 = (tmp_fu_3698_p3 | and_ln139_1_fu_3781_p2);

assign ov_10_fu_3227_p3 = ((and_ln112_5_reg_5629_pp0_iter2_reg[0:0] == 1'b1) ? reg_2057 : reg_2057);

assign ov_11_fu_3382_p3 = ((and_ln116_2_fu_3377_p2[0:0] == 1'b1) ? 32'd0 : ov_10_reg_5851);

assign ov_14_fu_3234_p3 = ((and_ln112_7_reg_5634_pp0_iter2_reg[0:0] == 1'b1) ? reg_2073 : reg_2073);

assign ov_15_fu_3429_p3 = ((and_ln116_3_fu_3424_p2[0:0] == 1'b1) ? 32'd0 : ov_14_reg_5858);

assign ov_18_fu_3335_p3 = ((and_ln112_9_reg_5674_pp0_iter2_reg[0:0] == 1'b1) ? reg_2073 : reg_2073);

assign ov_19_fu_3476_p3 = ((and_ln116_4_fu_3471_p2[0:0] == 1'b1) ? 32'd0 : ov_18_reg_5875);

assign ov_20_fu_3281_p3 = ((and_ln116_fu_3276_p2[0:0] == 1'b1) ? 32'd0 : ov_2_reg_5827);

assign ov_2_fu_3214_p3 = ((and_ln112_1_reg_5579_pp0_iter2_reg[0:0] == 1'b1) ? ov_reg_5812 : reg_2073);

assign ov_6_fu_3220_p3 = ((and_ln112_3_reg_5584_pp0_iter2_reg[0:0] == 1'b1) ? reg_2077 : reg_2077);

assign ov_7_fu_3328_p3 = ((and_ln116_1_fu_3323_p2[0:0] == 1'b1) ? 32'd0 : ov_6_reg_5834);

assign sc_2_fu_3536_p3 = ((and_ln122_fu_3518_p2[0:0] == 1'b1) ? overlap_4_reg_5937_pp0_iter6_reg : sc_fu_3532_p1);

assign sc_fu_3532_p1 = xor_ln126_fu_3526_p2;

assign score_2_fu_3792_p3 = ((or_ln139_fu_3786_p2[0:0] == 1'b1) ? tmp_score_4_reg_5984 : score_load_reg_5992);

assign score_3_fu_3810_p3 = ((icmp_ln1019_reg_5679_pp0_iter8_reg[0:0] == 1'b1) ? score_2_fu_3792_p3 : score_load_reg_5992);

assign tmp_30_fu_2485_p4 = {{bitcast_ln112_fu_2482_p1[30:23]}};

assign tmp_31_fu_2502_p4 = {{bitcast_ln112_1_fu_2499_p1[30:23]}};

assign tmp_33_fu_3244_p4 = {{bitcast_ln116_fu_3241_p1[30:23]}};

assign tmp_35_fu_2543_p4 = {{bitcast_ln112_2_fu_2540_p1[30:23]}};

assign tmp_36_fu_2560_p4 = {{bitcast_ln112_3_fu_2557_p1[30:23]}};

assign tmp_38_fu_3291_p4 = {{bitcast_ln116_1_fu_3288_p1[30:23]}};

assign tmp_40_fu_2765_p4 = {{bitcast_ln112_4_fu_2762_p1[30:23]}};

assign tmp_41_fu_2782_p4 = {{bitcast_ln112_5_fu_2779_p1[30:23]}};

assign tmp_43_fu_3345_p4 = {{bitcast_ln116_2_fu_3342_p1[30:23]}};

assign tmp_45_fu_2884_p4 = {{bitcast_ln112_6_fu_2881_p1[30:23]}};

assign tmp_46_fu_2901_p4 = {{bitcast_ln112_7_fu_2898_p1[30:23]}};

assign tmp_48_fu_3392_p4 = {{bitcast_ln116_3_fu_3389_p1[30:23]}};

assign tmp_50_fu_3091_p4 = {{bitcast_ln112_8_fu_3088_p1[30:23]}};

assign tmp_51_fu_3108_p4 = {{bitcast_ln112_9_fu_3105_p1[30:23]}};

assign tmp_53_fu_3439_p4 = {{bitcast_ln116_4_fu_3436_p1[30:23]}};

assign tmp_55_fu_3486_p4 = {{bitcast_ln122_fu_3483_p1[30:23]}};

assign tmp_57_fu_3559_p4 = {{bitcast_ln130_fu_3556_p1[30:23]}};

assign tmp_58_fu_3576_p4 = {{bitcast_ln130_1_fu_3573_p1[30:23]}};

assign tmp_60_fu_3708_p4 = {{bitcast_ln139_fu_3705_p1[30:23]}};

assign tmp_61_fu_3725_p4 = {{bitcast_ln139_1_fu_3722_p1[30:23]}};

assign tmp_fu_3698_p3 = merge_1_4_reg_6000[32'd31];

assign tmp_other_3_fu_3660_p3 = ((icmp_ln1019_reg_5679_pp0_iter7_reg[0:0] == 1'b1) ? 32'd4294967295 : tmp_other_4_reg_5978);

assign tmp_other_4_fu_3643_p3 = ((or_ln130_fu_3637_p2[0:0] == 1'b1) ? k_real_5_reg_5340_pp0_iter7_reg : tmp_other_fu_560);

assign tmp_score_3_fu_3666_p3 = ((icmp_ln1019_reg_5679_pp0_iter7_reg[0:0] == 1'b1) ? 32'd0 : tmp_score_4_reg_5984);

assign tmp_score_4_fu_3650_p3 = ((or_ln130_fu_3637_p2[0:0] == 1'b1) ? sc_2_reg_5959 : tmp_score_load_reg_5966);

assign trunc_ln104_1_fu_2154_p1 = k_real_4_fu_552[3:0];

assign trunc_ln104_fu_2128_p1 = merge_1_1_fu_548[3:0];

assign trunc_ln112_1_fu_2512_p1 = bitcast_ln112_1_fu_2499_p1[22:0];

assign trunc_ln112_2_fu_2553_p1 = bitcast_ln112_2_fu_2540_p1[22:0];

assign trunc_ln112_3_fu_2570_p1 = bitcast_ln112_3_fu_2557_p1[22:0];

assign trunc_ln112_4_fu_2775_p1 = bitcast_ln112_4_fu_2762_p1[22:0];

assign trunc_ln112_5_fu_2792_p1 = bitcast_ln112_5_fu_2779_p1[22:0];

assign trunc_ln112_6_fu_2894_p1 = bitcast_ln112_6_fu_2881_p1[22:0];

assign trunc_ln112_7_fu_2911_p1 = bitcast_ln112_7_fu_2898_p1[22:0];

assign trunc_ln112_8_fu_3101_p1 = bitcast_ln112_8_fu_3088_p1[22:0];

assign trunc_ln112_9_fu_3118_p1 = bitcast_ln112_9_fu_3105_p1[22:0];

assign trunc_ln112_fu_2495_p1 = bitcast_ln112_fu_2482_p1[22:0];

assign trunc_ln116_1_fu_3301_p1 = bitcast_ln116_1_fu_3288_p1[22:0];

assign trunc_ln116_2_fu_3355_p1 = bitcast_ln116_2_fu_3342_p1[22:0];

assign trunc_ln116_3_fu_3402_p1 = bitcast_ln116_3_fu_3389_p1[22:0];

assign trunc_ln116_4_fu_3449_p1 = bitcast_ln116_4_fu_3436_p1[22:0];

assign trunc_ln116_fu_3254_p1 = bitcast_ln116_fu_3241_p1[22:0];

assign trunc_ln122_fu_3496_p1 = bitcast_ln122_fu_3483_p1[22:0];

assign trunc_ln130_1_fu_3586_p1 = bitcast_ln130_1_fu_3573_p1[22:0];

assign trunc_ln130_fu_3569_p1 = bitcast_ln130_fu_3556_p1[22:0];

assign trunc_ln139_1_fu_3735_p1 = bitcast_ln139_1_fu_3722_p1[22:0];

assign trunc_ln139_fu_3718_p1 = bitcast_ln139_fu_3705_p1[22:0];

assign xor_ln126_fu_3526_p2 = (bitcast_ln126_fu_3523_p1 ^ 32'd2147483648);

endmodule //FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1
