// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        regions_center_0_0_0,
        regions_center_1_0_0,
        regions_center_2_0_0,
        regions_center_3_0_0,
        regions_center_4_0_0,
        regions_center_5_0_0,
        regions_center_6_0_0,
        regions_center_7_0_0,
        regions_max_0_0_0,
        regions_max_1_0_0,
        regions_max_2_0_0,
        regions_max_3_0_0,
        regions_max_4_0_0,
        regions_max_5_0_0,
        regions_max_6_0_0,
        regions_max_7_0_0,
        regions_min_0_0_0,
        regions_min_1_0_0,
        regions_min_2_0_0,
        regions_min_3_0_0,
        regions_min_4_0_0,
        regions_min_5_0_0,
        regions_min_6_0_0,
        regions_min_7_0_0,
        regions_center_0_1_0,
        regions_center_1_1_0,
        regions_center_2_1_0,
        regions_center_3_1_0,
        regions_center_4_1_0,
        regions_center_5_1_0,
        regions_center_6_1_0,
        regions_center_7_1_0,
        regions_max_0_1_0,
        regions_max_1_1_0,
        regions_max_2_1_0,
        regions_max_3_1_0,
        regions_max_4_1_0,
        regions_max_5_1_0,
        regions_max_6_1_0,
        regions_max_7_1_0,
        regions_min_0_1_0,
        regions_min_1_1_0,
        regions_min_2_1_0,
        regions_min_3_1_0,
        regions_min_4_1_0,
        regions_min_5_1_0,
        regions_min_6_1_0,
        regions_min_7_1_0,
        regions_center_0_2_0,
        regions_center_1_2_0,
        regions_center_2_2_0,
        regions_center_3_2_0,
        regions_center_4_2_0,
        regions_center_5_2_0,
        regions_center_6_2_0,
        regions_center_7_2_0,
        regions_max_0_2_0,
        regions_max_1_2_0,
        regions_max_2_2_0,
        regions_max_3_2_0,
        regions_max_4_2_0,
        regions_max_5_2_0,
        regions_max_6_2_0,
        regions_max_7_2_0,
        regions_min_0_2_0,
        regions_min_1_2_0,
        regions_min_2_2_0,
        regions_min_3_2_0,
        regions_min_4_2_0,
        regions_min_5_2_0,
        regions_min_6_2_0,
        regions_min_7_2_0,
        regions_center_0_3_0,
        regions_center_1_3_0,
        regions_center_2_3_0,
        regions_center_3_3_0,
        regions_center_4_3_0,
        regions_center_5_3_0,
        regions_center_6_3_0,
        regions_center_7_3_0,
        regions_max_0_3_0,
        regions_max_1_3_0,
        regions_max_2_3_0,
        regions_max_3_3_0,
        regions_max_4_3_0,
        regions_max_5_3_0,
        regions_max_6_3_0,
        regions_max_7_3_0,
        regions_min_0_3_0,
        regions_min_1_3_0,
        regions_min_2_3_0,
        regions_min_3_3_0,
        regions_min_4_3_0,
        regions_min_5_3_0,
        regions_min_6_3_0,
        regions_min_7_3_0,
        regions_center_0_4_0,
        regions_center_1_4_0,
        regions_center_2_4_0,
        regions_center_3_4_0,
        regions_center_4_4_0,
        regions_center_5_4_0,
        regions_center_6_4_0,
        regions_center_7_4_0,
        regions_max_0_4_0,
        regions_max_1_4_0,
        regions_max_2_4_0,
        regions_max_3_4_0,
        regions_max_4_4_0,
        regions_max_5_4_0,
        regions_max_6_4_0,
        regions_max_7_4_0,
        regions_min_0_4_0,
        regions_min_1_4_0,
        regions_min_2_4_0,
        regions_min_3_4_0,
        regions_min_4_4_0,
        regions_min_5_4_0,
        regions_min_6_4_0,
        regions_min_7_4_0,
        merge_2_out,
        merge_2_out_ap_vld,
        merge_1_out,
        merge_1_out_ap_vld,
        grp_fu_5732_p_din0,
        grp_fu_5732_p_din1,
        grp_fu_5732_p_opcode,
        grp_fu_5732_p_dout0,
        grp_fu_5732_p_ce,
        grp_fu_5738_p_din0,
        grp_fu_5738_p_din1,
        grp_fu_5738_p_dout0,
        grp_fu_5738_p_ce,
        grp_fu_5743_p_din0,
        grp_fu_5743_p_din1,
        grp_fu_5743_p_opcode,
        grp_fu_5743_p_dout0,
        grp_fu_5743_p_ce,
        grp_fu_5748_p_din0,
        grp_fu_5748_p_din1,
        grp_fu_5748_p_opcode,
        grp_fu_5748_p_dout0,
        grp_fu_5748_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] regions_center_0_0_0;
input  [31:0] regions_center_1_0_0;
input  [31:0] regions_center_2_0_0;
input  [31:0] regions_center_3_0_0;
input  [31:0] regions_center_4_0_0;
input  [31:0] regions_center_5_0_0;
input  [31:0] regions_center_6_0_0;
input  [31:0] regions_center_7_0_0;
input  [31:0] regions_max_0_0_0;
input  [31:0] regions_max_1_0_0;
input  [31:0] regions_max_2_0_0;
input  [31:0] regions_max_3_0_0;
input  [31:0] regions_max_4_0_0;
input  [31:0] regions_max_5_0_0;
input  [31:0] regions_max_6_0_0;
input  [31:0] regions_max_7_0_0;
input  [31:0] regions_min_0_0_0;
input  [31:0] regions_min_1_0_0;
input  [31:0] regions_min_2_0_0;
input  [31:0] regions_min_3_0_0;
input  [31:0] regions_min_4_0_0;
input  [31:0] regions_min_5_0_0;
input  [31:0] regions_min_6_0_0;
input  [31:0] regions_min_7_0_0;
input  [31:0] regions_center_0_1_0;
input  [31:0] regions_center_1_1_0;
input  [31:0] regions_center_2_1_0;
input  [31:0] regions_center_3_1_0;
input  [31:0] regions_center_4_1_0;
input  [31:0] regions_center_5_1_0;
input  [31:0] regions_center_6_1_0;
input  [31:0] regions_center_7_1_0;
input  [31:0] regions_max_0_1_0;
input  [31:0] regions_max_1_1_0;
input  [31:0] regions_max_2_1_0;
input  [31:0] regions_max_3_1_0;
input  [31:0] regions_max_4_1_0;
input  [31:0] regions_max_5_1_0;
input  [31:0] regions_max_6_1_0;
input  [31:0] regions_max_7_1_0;
input  [31:0] regions_min_0_1_0;
input  [31:0] regions_min_1_1_0;
input  [31:0] regions_min_2_1_0;
input  [31:0] regions_min_3_1_0;
input  [31:0] regions_min_4_1_0;
input  [31:0] regions_min_5_1_0;
input  [31:0] regions_min_6_1_0;
input  [31:0] regions_min_7_1_0;
input  [31:0] regions_center_0_2_0;
input  [31:0] regions_center_1_2_0;
input  [31:0] regions_center_2_2_0;
input  [31:0] regions_center_3_2_0;
input  [31:0] regions_center_4_2_0;
input  [31:0] regions_center_5_2_0;
input  [31:0] regions_center_6_2_0;
input  [31:0] regions_center_7_2_0;
input  [31:0] regions_max_0_2_0;
input  [31:0] regions_max_1_2_0;
input  [31:0] regions_max_2_2_0;
input  [31:0] regions_max_3_2_0;
input  [31:0] regions_max_4_2_0;
input  [31:0] regions_max_5_2_0;
input  [31:0] regions_max_6_2_0;
input  [31:0] regions_max_7_2_0;
input  [31:0] regions_min_0_2_0;
input  [31:0] regions_min_1_2_0;
input  [31:0] regions_min_2_2_0;
input  [31:0] regions_min_3_2_0;
input  [31:0] regions_min_4_2_0;
input  [31:0] regions_min_5_2_0;
input  [31:0] regions_min_6_2_0;
input  [31:0] regions_min_7_2_0;
input  [31:0] regions_center_0_3_0;
input  [31:0] regions_center_1_3_0;
input  [31:0] regions_center_2_3_0;
input  [31:0] regions_center_3_3_0;
input  [31:0] regions_center_4_3_0;
input  [31:0] regions_center_5_3_0;
input  [31:0] regions_center_6_3_0;
input  [31:0] regions_center_7_3_0;
input  [31:0] regions_max_0_3_0;
input  [31:0] regions_max_1_3_0;
input  [31:0] regions_max_2_3_0;
input  [31:0] regions_max_3_3_0;
input  [31:0] regions_max_4_3_0;
input  [31:0] regions_max_5_3_0;
input  [31:0] regions_max_6_3_0;
input  [31:0] regions_max_7_3_0;
input  [31:0] regions_min_0_3_0;
input  [31:0] regions_min_1_3_0;
input  [31:0] regions_min_2_3_0;
input  [31:0] regions_min_3_3_0;
input  [31:0] regions_min_4_3_0;
input  [31:0] regions_min_5_3_0;
input  [31:0] regions_min_6_3_0;
input  [31:0] regions_min_7_3_0;
input  [31:0] regions_center_0_4_0;
input  [31:0] regions_center_1_4_0;
input  [31:0] regions_center_2_4_0;
input  [31:0] regions_center_3_4_0;
input  [31:0] regions_center_4_4_0;
input  [31:0] regions_center_5_4_0;
input  [31:0] regions_center_6_4_0;
input  [31:0] regions_center_7_4_0;
input  [31:0] regions_max_0_4_0;
input  [31:0] regions_max_1_4_0;
input  [31:0] regions_max_2_4_0;
input  [31:0] regions_max_3_4_0;
input  [31:0] regions_max_4_4_0;
input  [31:0] regions_max_5_4_0;
input  [31:0] regions_max_6_4_0;
input  [31:0] regions_max_7_4_0;
input  [31:0] regions_min_0_4_0;
input  [31:0] regions_min_1_4_0;
input  [31:0] regions_min_2_4_0;
input  [31:0] regions_min_3_4_0;
input  [31:0] regions_min_4_4_0;
input  [31:0] regions_min_5_4_0;
input  [31:0] regions_min_6_4_0;
input  [31:0] regions_min_7_4_0;
output  [2:0] merge_2_out;
output   merge_2_out_ap_vld;
output  [2:0] merge_1_out;
output   merge_1_out_ap_vld;
output  [31:0] grp_fu_5732_p_din0;
output  [31:0] grp_fu_5732_p_din1;
output  [1:0] grp_fu_5732_p_opcode;
input  [31:0] grp_fu_5732_p_dout0;
output   grp_fu_5732_p_ce;
output  [31:0] grp_fu_5738_p_din0;
output  [31:0] grp_fu_5738_p_din1;
input  [31:0] grp_fu_5738_p_dout0;
output   grp_fu_5738_p_ce;
output  [31:0] grp_fu_5743_p_din0;
output  [31:0] grp_fu_5743_p_din1;
output  [4:0] grp_fu_5743_p_opcode;
input  [0:0] grp_fu_5743_p_dout0;
output   grp_fu_5743_p_ce;
output  [31:0] grp_fu_5748_p_din0;
output  [31:0] grp_fu_5748_p_din1;
output  [4:0] grp_fu_5748_p_opcode;
input  [0:0] grp_fu_5748_p_dout0;
output   grp_fu_5748_p_ce;

reg ap_idle;
reg merge_2_out_ap_vld;
reg merge_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state16_pp0_stage7_iter1;
wire    ap_block_state24_pp0_stage7_iter2;
wire    ap_block_state32_pp0_stage7_iter3;
wire    ap_block_state40_pp0_stage7_iter4;
wire    ap_block_state48_pp0_stage7_iter5;
wire    ap_block_state56_pp0_stage7_iter6;
wire    ap_block_state64_pp0_stage7_iter7;
wire    ap_block_pp0_stage7_subdone;
reg   [0:0] icmp_ln1027_reg_3423;
reg    ap_condition_exit_pp0_iter0_stage7;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_1093;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state10_pp0_stage1_iter1;
wire    ap_block_state18_pp0_stage1_iter2;
wire    ap_block_state26_pp0_stage1_iter3;
wire    ap_block_state34_pp0_stage1_iter4;
wire    ap_block_state42_pp0_stage1_iter5;
wire    ap_block_state50_pp0_stage1_iter6;
wire    ap_block_state58_pp0_stage1_iter7;
wire    ap_block_state66_pp0_stage1_iter8;
wire    ap_block_pp0_stage1_11001;
wire    ap_block_pp0_stage7_11001;
reg   [0:0] icmp_ln1027_reg_3423_pp0_iter2_reg;
reg   [0:0] and_ln112_5_reg_3705;
reg   [0:0] and_ln112_5_reg_3705_pp0_iter2_reg;
wire   [31:0] grp_fu_1058_p2;
reg   [31:0] reg_1099;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state15_pp0_stage6_iter1;
wire    ap_block_state23_pp0_stage6_iter2;
wire    ap_block_state31_pp0_stage6_iter3;
wire    ap_block_state39_pp0_stage6_iter4;
wire    ap_block_state47_pp0_stage6_iter5;
wire    ap_block_state55_pp0_stage6_iter6;
wire    ap_block_state63_pp0_stage6_iter7;
wire    ap_block_pp0_stage6_11001;
reg   [0:0] icmp_ln1027_reg_3423_pp0_iter1_reg;
reg   [0:0] and_ln112_9_reg_3740;
wire   [31:0] grp_fu_1062_p2;
reg   [31:0] reg_1104;
reg   [31:0] reg_1109;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state14_pp0_stage5_iter1;
wire    ap_block_state22_pp0_stage5_iter2;
wire    ap_block_state30_pp0_stage5_iter3;
wire    ap_block_state38_pp0_stage5_iter4;
wire    ap_block_state46_pp0_stage5_iter5;
wire    ap_block_state54_pp0_stage5_iter6;
wire    ap_block_state62_pp0_stage5_iter7;
wire    ap_block_pp0_stage5_11001;
reg   [0:0] and_ln112_1_reg_3655;
reg   [0:0] and_ln112_1_reg_3655_pp0_iter2_reg;
reg   [0:0] and_ln112_7_reg_3710;
reg   [0:0] and_ln112_7_reg_3710_pp0_iter2_reg;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_state17_pp0_stage0_iter2;
wire    ap_block_state25_pp0_stage0_iter3;
wire    ap_block_state33_pp0_stage0_iter4;
wire    ap_block_state41_pp0_stage0_iter5;
wire    ap_block_state49_pp0_stage0_iter6;
wire    ap_block_state57_pp0_stage0_iter7;
wire    ap_block_state65_pp0_stage0_iter8;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] and_ln112_9_reg_3740_pp0_iter2_reg;
reg   [31:0] reg_1113;
reg   [0:0] and_ln112_3_reg_3660;
reg   [0:0] and_ln112_3_reg_3660_pp0_iter2_reg;
reg   [31:0] i_real_3_reg_3408;
reg   [31:0] i_real_3_reg_3408_pp0_iter1_reg;
reg   [31:0] i_real_3_reg_3408_pp0_iter2_reg;
reg   [31:0] i_real_3_reg_3408_pp0_iter3_reg;
reg   [31:0] i_real_3_reg_3408_pp0_iter4_reg;
reg   [31:0] i_real_3_reg_3408_pp0_iter5_reg;
reg   [31:0] i_real_3_reg_3408_pp0_iter6_reg;
reg   [31:0] i_real_3_reg_3408_pp0_iter7_reg;
reg   [31:0] i_real_3_reg_3408_pp0_iter8_reg;
reg   [31:0] k_real_5_reg_3416;
reg   [31:0] k_real_5_reg_3416_pp0_iter1_reg;
reg   [31:0] k_real_5_reg_3416_pp0_iter2_reg;
reg   [31:0] k_real_5_reg_3416_pp0_iter3_reg;
reg   [31:0] k_real_5_reg_3416_pp0_iter4_reg;
reg   [31:0] k_real_5_reg_3416_pp0_iter5_reg;
reg   [31:0] k_real_5_reg_3416_pp0_iter6_reg;
reg   [31:0] k_real_5_reg_3416_pp0_iter7_reg;
wire   [0:0] icmp_ln1027_fu_1158_p2;
reg   [0:0] icmp_ln1027_reg_3423_pp0_iter3_reg;
reg   [0:0] icmp_ln1027_reg_3423_pp0_iter4_reg;
reg   [0:0] icmp_ln1027_reg_3423_pp0_iter5_reg;
reg   [0:0] icmp_ln1027_reg_3423_pp0_iter6_reg;
reg   [0:0] icmp_ln1027_reg_3423_pp0_iter7_reg;
reg   [0:0] icmp_ln1027_reg_3423_pp0_iter8_reg;
wire   [2:0] trunc_ln104_fu_1164_p1;
reg   [2:0] trunc_ln104_reg_3427;
wire   [31:0] tmp_s_fu_1168_p10;
reg   [31:0] tmp_s_reg_3441;
wire   [2:0] trunc_ln104_1_fu_1182_p1;
reg   [2:0] trunc_ln104_1_reg_3446;
wire   [31:0] tmp_1_fu_1186_p10;
reg   [31:0] tmp_1_reg_3460;
wire   [31:0] tmp_2_fu_1200_p10;
reg   [31:0] tmp_2_reg_3465;
wire   [31:0] tmp_3_fu_1214_p10;
reg   [31:0] tmp_3_reg_3470;
wire   [31:0] tmp_4_fu_1228_p10;
reg   [31:0] tmp_4_reg_3479;
wire   [31:0] tmp_5_fu_1242_p10;
reg   [31:0] tmp_5_reg_3484;
wire   [31:0] tmp_6_fu_1256_p10;
reg   [31:0] tmp_6_reg_3493;
wire   [31:0] tmp_7_fu_1270_p10;
reg   [31:0] tmp_7_reg_3498;
wire   [31:0] tmp_9_fu_1284_p10;
reg   [31:0] tmp_9_reg_3503;
wire   [31:0] tmp_11_fu_1298_p10;
reg   [31:0] tmp_11_reg_3512;
wire   [31:0] tmp_8_fu_1312_p10;
reg   [31:0] tmp_8_reg_3521;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state11_pp0_stage2_iter1;
wire    ap_block_state19_pp0_stage2_iter2;
wire    ap_block_state27_pp0_stage2_iter3;
wire    ap_block_state35_pp0_stage2_iter4;
wire    ap_block_state43_pp0_stage2_iter5;
wire    ap_block_state51_pp0_stage2_iter6;
wire    ap_block_state59_pp0_stage2_iter7;
wire    ap_block_state67_pp0_stage2_iter8;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] tmp_10_fu_1325_p10;
reg   [31:0] tmp_10_reg_3526;
wire   [31:0] tmp_15_fu_1338_p10;
reg   [31:0] tmp_15_reg_3531;
wire   [31:0] tmp_17_fu_1351_p10;
reg   [31:0] tmp_17_reg_3540;
wire   [31:0] tmp_21_fu_1364_p10;
reg   [31:0] tmp_21_reg_3549;
wire   [31:0] tmp_23_fu_1377_p10;
reg   [31:0] tmp_23_reg_3558;
wire   [0:0] icmp_ln112_fu_1424_p2;
reg   [0:0] icmp_ln112_reg_3567;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state12_pp0_stage3_iter1;
wire    ap_block_state20_pp0_stage3_iter2;
wire    ap_block_state28_pp0_stage3_iter3;
wire    ap_block_state36_pp0_stage3_iter4;
wire    ap_block_state44_pp0_stage3_iter5;
wire    ap_block_state52_pp0_stage3_iter6;
wire    ap_block_state60_pp0_stage3_iter7;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] icmp_ln112_1_fu_1430_p2;
reg   [0:0] icmp_ln112_1_reg_3572;
wire   [0:0] icmp_ln112_2_fu_1436_p2;
reg   [0:0] icmp_ln112_2_reg_3577;
wire   [0:0] icmp_ln112_3_fu_1442_p2;
reg   [0:0] icmp_ln112_3_reg_3582;
reg   [0:0] tmp_32_reg_3587;
wire   [0:0] icmp_ln112_4_fu_1482_p2;
reg   [0:0] icmp_ln112_4_reg_3592;
wire   [0:0] icmp_ln112_5_fu_1488_p2;
reg   [0:0] icmp_ln112_5_reg_3597;
wire   [0:0] icmp_ln112_6_fu_1494_p2;
reg   [0:0] icmp_ln112_6_reg_3602;
wire   [0:0] icmp_ln112_7_fu_1500_p2;
reg   [0:0] icmp_ln112_7_reg_3607;
reg   [0:0] tmp_37_reg_3612;
wire   [31:0] tmp_12_fu_1506_p10;
reg   [31:0] tmp_12_reg_3617;
wire   [31:0] tmp_13_fu_1519_p10;
reg   [31:0] tmp_13_reg_3622;
wire   [31:0] tmp_14_fu_1532_p10;
reg   [31:0] tmp_14_reg_3627;
wire   [31:0] tmp_16_fu_1545_p10;
reg   [31:0] tmp_16_reg_3632;
wire   [31:0] tmp_27_fu_1558_p10;
reg   [31:0] tmp_27_reg_3637;
wire   [31:0] tmp_29_fu_1571_p10;
reg   [31:0] tmp_29_reg_3646;
wire   [0:0] and_ln112_1_fu_1597_p2;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state13_pp0_stage4_iter1;
wire    ap_block_state21_pp0_stage4_iter2;
wire    ap_block_state29_pp0_stage4_iter3;
wire    ap_block_state37_pp0_stage4_iter4;
wire    ap_block_state45_pp0_stage4_iter5;
wire    ap_block_state53_pp0_stage4_iter6;
wire    ap_block_state61_pp0_stage4_iter7;
wire    ap_block_pp0_stage4_11001;
reg   [0:0] and_ln112_1_reg_3655_pp0_iter1_reg;
wire   [0:0] and_ln112_3_fu_1616_p2;
reg   [0:0] and_ln112_3_reg_3660_pp0_iter1_reg;
wire   [0:0] icmp_ln112_8_fu_1656_p2;
reg   [0:0] icmp_ln112_8_reg_3665;
wire   [0:0] icmp_ln112_9_fu_1662_p2;
reg   [0:0] icmp_ln112_9_reg_3670;
wire   [0:0] icmp_ln112_10_fu_1668_p2;
reg   [0:0] icmp_ln112_10_reg_3675;
wire   [0:0] icmp_ln112_11_fu_1674_p2;
reg   [0:0] icmp_ln112_11_reg_3680;
reg   [0:0] tmp_42_reg_3685;
wire   [31:0] tmp_20_fu_1680_p10;
reg   [31:0] tmp_20_reg_3690;
wire   [31:0] tmp_22_fu_1693_p10;
reg   [31:0] tmp_22_reg_3695;
reg   [0:0] tmp_47_reg_3700;
wire   [0:0] and_ln112_5_fu_1720_p2;
reg   [0:0] and_ln112_5_reg_3705_pp0_iter1_reg;
wire   [0:0] and_ln112_7_fu_1801_p2;
reg   [0:0] and_ln112_7_reg_3710_pp0_iter1_reg;
reg   [0:0] tmp_52_reg_3715;
wire   [31:0] tmp_18_fu_1806_p10;
reg   [31:0] tmp_18_reg_3720;
wire   [31:0] tmp_19_fu_1819_p10;
reg   [31:0] tmp_19_reg_3725;
wire   [31:0] tmp_26_fu_1832_p10;
reg   [31:0] tmp_26_reg_3730;
wire   [31:0] tmp_28_fu_1845_p10;
reg   [31:0] tmp_28_reg_3735;
wire   [0:0] and_ln112_9_fu_1934_p2;
reg   [0:0] and_ln112_9_reg_3740_pp0_iter1_reg;
wire   [31:0] tmp_24_fu_1939_p10;
reg   [31:0] tmp_24_reg_3745;
wire   [31:0] tmp_25_fu_1952_p10;
reg   [31:0] tmp_25_reg_3750;
wire   [0:0] icmp_ln1019_fu_1965_p2;
reg   [0:0] icmp_ln1019_reg_3755;
reg   [0:0] icmp_ln1019_reg_3755_pp0_iter2_reg;
reg   [0:0] icmp_ln1019_reg_3755_pp0_iter3_reg;
reg   [0:0] icmp_ln1019_reg_3755_pp0_iter4_reg;
reg   [0:0] icmp_ln1019_reg_3755_pp0_iter5_reg;
reg   [0:0] icmp_ln1019_reg_3755_pp0_iter6_reg;
reg   [0:0] icmp_ln1019_reg_3755_pp0_iter7_reg;
reg   [0:0] icmp_ln1019_reg_3755_pp0_iter8_reg;
reg   [31:0] d1_reg_3764;
reg   [31:0] d2_reg_3769;
wire   [31:0] grp_fu_1066_p2;
reg   [31:0] sub_reg_3774;
wire   [31:0] grp_fu_1070_p2;
reg   [31:0] d_1_reg_3779;
reg   [31:0] sub2_reg_3785;
reg   [31:0] d1_1_reg_3790;
reg   [31:0] d2_1_reg_3795;
reg   [31:0] sub75_1_reg_3800;
reg   [31:0] sub87_1_reg_3805;
reg   [31:0] d_2_reg_3810;
reg   [31:0] d1_2_reg_3816;
reg   [31:0] d2_2_reg_3821;
reg   [31:0] sub75_2_reg_3826;
reg   [31:0] sub87_2_reg_3831;
reg   [31:0] d1_3_reg_3836;
reg   [31:0] d2_3_reg_3841;
reg   [31:0] sub75_3_reg_3846;
reg   [31:0] sub87_3_reg_3851;
reg   [31:0] mul_reg_3856;
wire   [31:0] grp_fu_1079_p2;
reg   [31:0] mul_1_reg_3861;
reg   [31:0] mul_1_reg_3861_pp0_iter2_reg;
reg   [31:0] d_3_reg_3866;
reg   [31:0] mul_2_reg_3872;
reg   [31:0] mul_2_reg_3872_pp0_iter2_reg;
reg   [31:0] mul_2_reg_3872_pp0_iter3_reg;
reg   [31:0] d_4_reg_3877;
reg   [31:0] mul_3_reg_3883;
reg   [31:0] mul_3_reg_3883_pp0_iter3_reg;
reg   [31:0] mul_3_reg_3883_pp0_iter4_reg;
reg   [31:0] ov_reg_3888;
reg   [31:0] mul_4_reg_3893;
reg   [31:0] mul_4_reg_3893_pp0_iter3_reg;
reg   [31:0] mul_4_reg_3893_pp0_iter4_reg;
reg   [31:0] mul_4_reg_3893_pp0_iter5_reg;
reg   [31:0] distance_reg_3898;
wire   [31:0] ov_2_fu_2010_p3;
reg   [31:0] ov_2_reg_3903;
wire   [31:0] ov_6_fu_2016_p3;
reg   [31:0] ov_6_reg_3910;
reg   [0:0] tmp_34_reg_3917;
reg   [0:0] tmp_39_reg_3922;
wire   [31:0] ov_10_fu_2023_p3;
reg   [31:0] ov_10_reg_3927;
wire   [31:0] ov_14_fu_2030_p3;
reg   [31:0] ov_14_reg_3934;
wire   [31:0] ov_20_fu_2077_p3;
reg   [31:0] ov_20_reg_3941;
wire   [31:0] ov_7_fu_2124_p3;
reg   [31:0] ov_7_reg_3946;
wire   [31:0] ov_18_fu_2131_p3;
reg   [31:0] ov_18_reg_3951;
reg   [0:0] tmp_44_reg_3958;
reg   [0:0] tmp_49_reg_3963;
wire   [31:0] ov_11_fu_2178_p3;
reg   [31:0] ov_11_reg_3968;
wire   [31:0] ov_15_fu_2225_p3;
reg   [31:0] ov_15_reg_3973;
reg   [31:0] distance_1_reg_3978;
reg   [0:0] tmp_54_reg_3983;
reg   [31:0] overlap_1_reg_3988;
wire   [31:0] ov_19_fu_2272_p3;
reg   [31:0] ov_19_reg_3993;
reg   [31:0] ov_19_reg_3993_pp0_iter4_reg;
reg   [31:0] overlap_2_reg_3998;
reg   [31:0] overlap_3_reg_4003;
reg   [31:0] distance_2_reg_4008;
reg   [31:0] overlap_4_reg_4013;
reg   [31:0] overlap_4_reg_4013_pp0_iter6_reg;
reg   [0:0] tmp_56_reg_4020;
reg   [0:0] tmp_56_reg_4020_pp0_iter6_reg;
reg   [31:0] distance_3_reg_4025;
reg   [31:0] distance_4_reg_4030;
wire   [31:0] sc_2_fu_2332_p3;
reg   [31:0] sc_2_reg_4035;
reg   [31:0] tmp_score_load_reg_4042;
reg   [0:0] tmp_59_reg_4049;
wire   [31:0] tmp_other_4_fu_2439_p3;
reg   [31:0] tmp_other_4_reg_4054;
wire   [31:0] tmp_score_4_fu_2446_p3;
reg   [31:0] tmp_score_4_reg_4060;
reg   [31:0] score_load_reg_4068;
reg   [31:0] merge_1_4_reg_4076;
reg   [31:0] merge_2_1_reg_4083;
reg   [0:0] tmp_62_reg_4089;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage1_subdone;
reg    ap_condition_exit_pp0_iter8_stage1;
wire    ap_block_pp0_stage2_subdone;
reg   [31:0] merge_1_fu_292;
wire   [31:0] merge_1_7_fu_2618_p3;
wire    ap_loop_init;
wire    ap_block_pp0_stage1;
reg   [31:0] merge_2_fu_296;
wire   [31:0] merge_2_6_fu_2612_p3;
reg   [31:0] score_fu_300;
wire   [31:0] score_3_fu_2606_p3;
wire    ap_block_pp0_stage0;
reg   [31:0] merge_1_1_fu_304;
wire   [31:0] i_real_2_fu_1993_p3;
reg   [31:0] k_real_4_fu_308;
wire   [31:0] k_real_3_fu_1985_p3;
reg   [31:0] tmp_score_fu_312;
wire   [31:0] tmp_score_3_fu_2462_p3;
wire    ap_block_pp0_stage5;
reg   [31:0] tmp_other_fu_316;
wire   [31:0] tmp_other_3_fu_2456_p3;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage1_01001;
reg   [31:0] grp_fu_1054_p0;
reg   [31:0] grp_fu_1054_p1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage6;
reg   [31:0] grp_fu_1058_p0;
reg   [31:0] grp_fu_1058_p1;
reg   [31:0] grp_fu_1062_p0;
reg   [31:0] grp_fu_1062_p1;
reg   [31:0] grp_fu_1066_p0;
reg   [31:0] grp_fu_1066_p1;
reg   [31:0] grp_fu_1070_p0;
reg   [31:0] grp_fu_1070_p1;
reg   [31:0] grp_fu_1075_p0;
reg   [31:0] grp_fu_1075_p1;
reg   [31:0] grp_fu_1079_p0;
reg   [31:0] grp_fu_1079_p1;
reg   [31:0] grp_fu_1083_p0;
reg   [31:0] grp_fu_1083_p1;
reg   [31:0] grp_fu_1087_p0;
reg   [31:0] grp_fu_1087_p1;
wire   [31:0] bitcast_ln112_fu_1390_p1;
wire   [31:0] bitcast_ln112_1_fu_1407_p1;
wire   [7:0] tmp_30_fu_1393_p4;
wire   [22:0] trunc_ln112_fu_1403_p1;
wire   [7:0] tmp_31_fu_1410_p4;
wire   [22:0] trunc_ln112_1_fu_1420_p1;
wire   [31:0] bitcast_ln112_2_fu_1448_p1;
wire   [31:0] bitcast_ln112_3_fu_1465_p1;
wire   [7:0] tmp_35_fu_1451_p4;
wire   [22:0] trunc_ln112_2_fu_1461_p1;
wire   [7:0] tmp_36_fu_1468_p4;
wire   [22:0] trunc_ln112_3_fu_1478_p1;
wire   [0:0] or_ln112_1_fu_1588_p2;
wire   [0:0] and_ln112_fu_1592_p2;
wire   [0:0] or_ln112_fu_1584_p2;
wire   [0:0] or_ln112_3_fu_1607_p2;
wire   [0:0] and_ln112_2_fu_1611_p2;
wire   [0:0] or_ln112_2_fu_1603_p2;
wire   [31:0] bitcast_ln112_4_fu_1622_p1;
wire   [31:0] bitcast_ln112_5_fu_1639_p1;
wire   [7:0] tmp_40_fu_1625_p4;
wire   [22:0] trunc_ln112_4_fu_1635_p1;
wire   [7:0] tmp_41_fu_1642_p4;
wire   [22:0] trunc_ln112_5_fu_1652_p1;
wire   [0:0] or_ln112_4_fu_1706_p2;
wire   [0:0] or_ln112_5_fu_1710_p2;
wire   [0:0] and_ln112_4_fu_1714_p2;
wire   [31:0] bitcast_ln112_6_fu_1725_p1;
wire   [31:0] bitcast_ln112_7_fu_1742_p1;
wire   [7:0] tmp_45_fu_1728_p4;
wire   [22:0] trunc_ln112_6_fu_1738_p1;
wire   [0:0] icmp_ln112_13_fu_1765_p2;
wire   [0:0] icmp_ln112_12_fu_1759_p2;
wire   [7:0] tmp_46_fu_1745_p4;
wire   [22:0] trunc_ln112_7_fu_1755_p1;
wire   [0:0] icmp_ln112_15_fu_1783_p2;
wire   [0:0] icmp_ln112_14_fu_1777_p2;
wire   [0:0] or_ln112_6_fu_1771_p2;
wire   [0:0] or_ln112_7_fu_1789_p2;
wire   [0:0] and_ln112_6_fu_1795_p2;
wire   [31:0] bitcast_ln112_8_fu_1858_p1;
wire   [31:0] bitcast_ln112_9_fu_1875_p1;
wire   [7:0] tmp_50_fu_1861_p4;
wire   [22:0] trunc_ln112_8_fu_1871_p1;
wire   [0:0] icmp_ln112_17_fu_1898_p2;
wire   [0:0] icmp_ln112_16_fu_1892_p2;
wire   [7:0] tmp_51_fu_1878_p4;
wire   [22:0] trunc_ln112_9_fu_1888_p1;
wire   [0:0] icmp_ln112_19_fu_1916_p2;
wire   [0:0] icmp_ln112_18_fu_1910_p2;
wire   [0:0] or_ln112_8_fu_1904_p2;
wire   [0:0] or_ln112_9_fu_1922_p2;
wire   [0:0] and_ln112_8_fu_1928_p2;
wire   [31:0] k_real_fu_1975_p2;
wire   [31:0] k_real_2_fu_1980_p2;
wire   [31:0] i_real_fu_1970_p2;
wire   [31:0] bitcast_ln116_fu_2037_p1;
wire   [7:0] tmp_33_fu_2040_p4;
wire   [22:0] trunc_ln116_fu_2050_p1;
wire   [0:0] icmp_ln116_1_fu_2060_p2;
wire   [0:0] icmp_ln116_fu_2054_p2;
wire   [0:0] or_ln116_fu_2066_p2;
wire   [0:0] and_ln116_fu_2072_p2;
wire   [31:0] bitcast_ln116_1_fu_2084_p1;
wire   [7:0] tmp_38_fu_2087_p4;
wire   [22:0] trunc_ln116_1_fu_2097_p1;
wire   [0:0] icmp_ln116_3_fu_2107_p2;
wire   [0:0] icmp_ln116_2_fu_2101_p2;
wire   [0:0] or_ln116_1_fu_2113_p2;
wire   [0:0] and_ln116_1_fu_2119_p2;
wire   [31:0] bitcast_ln116_2_fu_2138_p1;
wire   [7:0] tmp_43_fu_2141_p4;
wire   [22:0] trunc_ln116_2_fu_2151_p1;
wire   [0:0] icmp_ln116_5_fu_2161_p2;
wire   [0:0] icmp_ln116_4_fu_2155_p2;
wire   [0:0] or_ln116_2_fu_2167_p2;
wire   [0:0] and_ln116_2_fu_2173_p2;
wire   [31:0] bitcast_ln116_3_fu_2185_p1;
wire   [7:0] tmp_48_fu_2188_p4;
wire   [22:0] trunc_ln116_3_fu_2198_p1;
wire   [0:0] icmp_ln116_7_fu_2208_p2;
wire   [0:0] icmp_ln116_6_fu_2202_p2;
wire   [0:0] or_ln116_3_fu_2214_p2;
wire   [0:0] and_ln116_3_fu_2220_p2;
wire   [31:0] bitcast_ln116_4_fu_2232_p1;
wire   [7:0] tmp_53_fu_2235_p4;
wire   [22:0] trunc_ln116_4_fu_2245_p1;
wire   [0:0] icmp_ln116_9_fu_2255_p2;
wire   [0:0] icmp_ln116_8_fu_2249_p2;
wire   [0:0] or_ln116_4_fu_2261_p2;
wire   [0:0] and_ln116_4_fu_2267_p2;
wire   [31:0] bitcast_ln122_fu_2279_p1;
wire   [7:0] tmp_55_fu_2282_p4;
wire   [22:0] trunc_ln122_fu_2292_p1;
wire   [0:0] icmp_ln122_1_fu_2302_p2;
wire   [0:0] icmp_ln122_fu_2296_p2;
wire   [0:0] or_ln122_fu_2308_p2;
wire   [31:0] bitcast_ln126_fu_2319_p1;
wire   [31:0] xor_ln126_fu_2322_p2;
wire   [0:0] and_ln122_fu_2314_p2;
wire   [31:0] sc_fu_2328_p1;
wire   [31:0] bitcast_ln130_fu_2352_p1;
wire   [31:0] bitcast_ln130_1_fu_2369_p1;
wire   [7:0] tmp_57_fu_2355_p4;
wire   [22:0] trunc_ln130_fu_2365_p1;
wire   [0:0] icmp_ln130_2_fu_2392_p2;
wire   [0:0] icmp_ln130_1_fu_2386_p2;
wire   [7:0] tmp_58_fu_2372_p4;
wire   [22:0] trunc_ln130_1_fu_2382_p1;
wire   [0:0] icmp_ln130_4_fu_2410_p2;
wire   [0:0] icmp_ln130_3_fu_2404_p2;
wire   [0:0] or_ln130_1_fu_2398_p2;
wire   [0:0] or_ln130_2_fu_2416_p2;
wire   [0:0] and_ln130_fu_2422_p2;
wire   [0:0] icmp_ln130_fu_2346_p2;
wire   [0:0] and_ln130_1_fu_2428_p2;
wire   [0:0] or_ln130_fu_2433_p2;
wire   [31:0] bitcast_ln139_fu_2501_p1;
wire   [31:0] bitcast_ln139_1_fu_2518_p1;
wire   [7:0] tmp_60_fu_2504_p4;
wire   [22:0] trunc_ln139_fu_2514_p1;
wire   [0:0] icmp_ln139_1_fu_2541_p2;
wire   [0:0] icmp_ln139_fu_2535_p2;
wire   [7:0] tmp_61_fu_2521_p4;
wire   [22:0] trunc_ln139_1_fu_2531_p1;
wire   [0:0] icmp_ln139_3_fu_2559_p2;
wire   [0:0] icmp_ln139_2_fu_2553_p2;
wire   [0:0] or_ln139_1_fu_2547_p2;
wire   [0:0] or_ln139_2_fu_2565_p2;
wire   [0:0] and_ln139_fu_2571_p2;
wire   [0:0] tmp_fu_2494_p3;
wire   [0:0] and_ln139_1_fu_2577_p2;
wire   [0:0] or_ln139_fu_2582_p2;
wire   [31:0] score_2_fu_2588_p3;
wire   [31:0] merge_2_5_fu_2594_p3;
wire   [31:0] merge_1_6_fu_2600_p3;
reg   [1:0] grp_fu_1054_opcode;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage5_00001;
wire    ap_block_pp0_stage7_00001;
wire    ap_block_pp0_stage1_00001;
wire    ap_block_pp0_stage0_00001;
reg   [1:0] grp_fu_1062_opcode;
reg   [1:0] grp_fu_1066_opcode;
reg   [4:0] grp_fu_1083_opcode;
reg   [4:0] grp_fu_1087_opcode;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_idle_pp0_0to7;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg   [7:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to8;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_8_full_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1058_p0),
    .din1(grp_fu_1058_p1),
    .ce(1'b1),
    .dout(grp_fu_1058_p2)
);

FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_8_full_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1062_p0),
    .din1(grp_fu_1062_p1),
    .opcode(grp_fu_1062_opcode),
    .ce(1'b1),
    .dout(grp_fu_1062_p2)
);

FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_8_full_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1066_p0),
    .din1(grp_fu_1066_p1),
    .opcode(grp_fu_1066_opcode),
    .ce(1'b1),
    .dout(grp_fu_1066_p2)
);

FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_8_full_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1070_p0),
    .din1(grp_fu_1070_p1),
    .ce(1'b1),
    .dout(grp_fu_1070_p2)
);

FaultDetector_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1079_p0),
    .din1(grp_fu_1079_p1),
    .ce(1'b1),
    .dout(grp_fu_1079_p2)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U19(
    .din0(regions_center_0_0_0),
    .din1(regions_center_1_0_0),
    .din2(regions_center_2_0_0),
    .din3(regions_center_3_0_0),
    .din4(regions_center_4_0_0),
    .din5(regions_center_5_0_0),
    .din6(regions_center_6_0_0),
    .din7(regions_center_7_0_0),
    .din8(trunc_ln104_fu_1164_p1),
    .dout(tmp_s_fu_1168_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U20(
    .din0(regions_center_0_0_0),
    .din1(regions_center_1_0_0),
    .din2(regions_center_2_0_0),
    .din3(regions_center_3_0_0),
    .din4(regions_center_4_0_0),
    .din5(regions_center_5_0_0),
    .din6(regions_center_6_0_0),
    .din7(regions_center_7_0_0),
    .din8(trunc_ln104_1_fu_1182_p1),
    .dout(tmp_1_fu_1186_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U21(
    .din0(regions_max_0_0_0),
    .din1(regions_max_1_0_0),
    .din2(regions_max_2_0_0),
    .din3(regions_max_3_0_0),
    .din4(regions_max_4_0_0),
    .din5(regions_max_5_0_0),
    .din6(regions_max_6_0_0),
    .din7(regions_max_7_0_0),
    .din8(trunc_ln104_fu_1164_p1),
    .dout(tmp_2_fu_1200_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U22(
    .din0(regions_min_0_0_0),
    .din1(regions_min_1_0_0),
    .din2(regions_min_2_0_0),
    .din3(regions_min_3_0_0),
    .din4(regions_min_4_0_0),
    .din5(regions_min_5_0_0),
    .din6(regions_min_6_0_0),
    .din7(regions_min_7_0_0),
    .din8(trunc_ln104_fu_1164_p1),
    .dout(tmp_3_fu_1214_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U23(
    .din0(regions_max_0_0_0),
    .din1(regions_max_1_0_0),
    .din2(regions_max_2_0_0),
    .din3(regions_max_3_0_0),
    .din4(regions_max_4_0_0),
    .din5(regions_max_5_0_0),
    .din6(regions_max_6_0_0),
    .din7(regions_max_7_0_0),
    .din8(trunc_ln104_1_fu_1182_p1),
    .dout(tmp_4_fu_1228_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U24(
    .din0(regions_min_0_0_0),
    .din1(regions_min_1_0_0),
    .din2(regions_min_2_0_0),
    .din3(regions_min_3_0_0),
    .din4(regions_min_4_0_0),
    .din5(regions_min_5_0_0),
    .din6(regions_min_6_0_0),
    .din7(regions_min_7_0_0),
    .din8(trunc_ln104_1_fu_1182_p1),
    .dout(tmp_5_fu_1242_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U25(
    .din0(regions_center_0_1_0),
    .din1(regions_center_1_1_0),
    .din2(regions_center_2_1_0),
    .din3(regions_center_3_1_0),
    .din4(regions_center_4_1_0),
    .din5(regions_center_5_1_0),
    .din6(regions_center_6_1_0),
    .din7(regions_center_7_1_0),
    .din8(trunc_ln104_fu_1164_p1),
    .dout(tmp_6_fu_1256_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U26(
    .din0(regions_center_0_1_0),
    .din1(regions_center_1_1_0),
    .din2(regions_center_2_1_0),
    .din3(regions_center_3_1_0),
    .din4(regions_center_4_1_0),
    .din5(regions_center_5_1_0),
    .din6(regions_center_6_1_0),
    .din7(regions_center_7_1_0),
    .din8(trunc_ln104_1_fu_1182_p1),
    .dout(tmp_7_fu_1270_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U27(
    .din0(regions_min_0_1_0),
    .din1(regions_min_1_1_0),
    .din2(regions_min_2_1_0),
    .din3(regions_min_3_1_0),
    .din4(regions_min_4_1_0),
    .din5(regions_min_5_1_0),
    .din6(regions_min_6_1_0),
    .din7(regions_min_7_1_0),
    .din8(trunc_ln104_fu_1164_p1),
    .dout(tmp_9_fu_1284_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U28(
    .din0(regions_min_0_1_0),
    .din1(regions_min_1_1_0),
    .din2(regions_min_2_1_0),
    .din3(regions_min_3_1_0),
    .din4(regions_min_4_1_0),
    .din5(regions_min_5_1_0),
    .din6(regions_min_6_1_0),
    .din7(regions_min_7_1_0),
    .din8(trunc_ln104_1_fu_1182_p1),
    .dout(tmp_11_fu_1298_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U29(
    .din0(regions_max_0_1_0),
    .din1(regions_max_1_1_0),
    .din2(regions_max_2_1_0),
    .din3(regions_max_3_1_0),
    .din4(regions_max_4_1_0),
    .din5(regions_max_5_1_0),
    .din6(regions_max_6_1_0),
    .din7(regions_max_7_1_0),
    .din8(trunc_ln104_reg_3427),
    .dout(tmp_8_fu_1312_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U30(
    .din0(regions_max_0_1_0),
    .din1(regions_max_1_1_0),
    .din2(regions_max_2_1_0),
    .din3(regions_max_3_1_0),
    .din4(regions_max_4_1_0),
    .din5(regions_max_5_1_0),
    .din6(regions_max_6_1_0),
    .din7(regions_max_7_1_0),
    .din8(trunc_ln104_1_reg_3446),
    .dout(tmp_10_fu_1325_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U31(
    .din0(regions_min_0_2_0),
    .din1(regions_min_1_2_0),
    .din2(regions_min_2_2_0),
    .din3(regions_min_3_2_0),
    .din4(regions_min_4_2_0),
    .din5(regions_min_5_2_0),
    .din6(regions_min_6_2_0),
    .din7(regions_min_7_2_0),
    .din8(trunc_ln104_reg_3427),
    .dout(tmp_15_fu_1338_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U32(
    .din0(regions_min_0_2_0),
    .din1(regions_min_1_2_0),
    .din2(regions_min_2_2_0),
    .din3(regions_min_3_2_0),
    .din4(regions_min_4_2_0),
    .din5(regions_min_5_2_0),
    .din6(regions_min_6_2_0),
    .din7(regions_min_7_2_0),
    .din8(trunc_ln104_1_reg_3446),
    .dout(tmp_17_fu_1351_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U33(
    .din0(regions_min_0_3_0),
    .din1(regions_min_1_3_0),
    .din2(regions_min_2_3_0),
    .din3(regions_min_3_3_0),
    .din4(regions_min_4_3_0),
    .din5(regions_min_5_3_0),
    .din6(regions_min_6_3_0),
    .din7(regions_min_7_3_0),
    .din8(trunc_ln104_reg_3427),
    .dout(tmp_21_fu_1364_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U34(
    .din0(regions_min_0_3_0),
    .din1(regions_min_1_3_0),
    .din2(regions_min_2_3_0),
    .din3(regions_min_3_3_0),
    .din4(regions_min_4_3_0),
    .din5(regions_min_5_3_0),
    .din6(regions_min_6_3_0),
    .din7(regions_min_7_3_0),
    .din8(trunc_ln104_1_reg_3446),
    .dout(tmp_23_fu_1377_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U35(
    .din0(regions_center_0_2_0),
    .din1(regions_center_1_2_0),
    .din2(regions_center_2_2_0),
    .din3(regions_center_3_2_0),
    .din4(regions_center_4_2_0),
    .din5(regions_center_5_2_0),
    .din6(regions_center_6_2_0),
    .din7(regions_center_7_2_0),
    .din8(trunc_ln104_reg_3427),
    .dout(tmp_12_fu_1506_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U36(
    .din0(regions_center_0_2_0),
    .din1(regions_center_1_2_0),
    .din2(regions_center_2_2_0),
    .din3(regions_center_3_2_0),
    .din4(regions_center_4_2_0),
    .din5(regions_center_5_2_0),
    .din6(regions_center_6_2_0),
    .din7(regions_center_7_2_0),
    .din8(trunc_ln104_1_reg_3446),
    .dout(tmp_13_fu_1519_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U37(
    .din0(regions_max_0_2_0),
    .din1(regions_max_1_2_0),
    .din2(regions_max_2_2_0),
    .din3(regions_max_3_2_0),
    .din4(regions_max_4_2_0),
    .din5(regions_max_5_2_0),
    .din6(regions_max_6_2_0),
    .din7(regions_max_7_2_0),
    .din8(trunc_ln104_reg_3427),
    .dout(tmp_14_fu_1532_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U38(
    .din0(regions_max_0_2_0),
    .din1(regions_max_1_2_0),
    .din2(regions_max_2_2_0),
    .din3(regions_max_3_2_0),
    .din4(regions_max_4_2_0),
    .din5(regions_max_5_2_0),
    .din6(regions_max_6_2_0),
    .din7(regions_max_7_2_0),
    .din8(trunc_ln104_1_reg_3446),
    .dout(tmp_16_fu_1545_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U39(
    .din0(regions_min_0_4_0),
    .din1(regions_min_1_4_0),
    .din2(regions_min_2_4_0),
    .din3(regions_min_3_4_0),
    .din4(regions_min_4_4_0),
    .din5(regions_min_5_4_0),
    .din6(regions_min_6_4_0),
    .din7(regions_min_7_4_0),
    .din8(trunc_ln104_reg_3427),
    .dout(tmp_27_fu_1558_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U40(
    .din0(regions_min_0_4_0),
    .din1(regions_min_1_4_0),
    .din2(regions_min_2_4_0),
    .din3(regions_min_3_4_0),
    .din4(regions_min_4_4_0),
    .din5(regions_min_5_4_0),
    .din6(regions_min_6_4_0),
    .din7(regions_min_7_4_0),
    .din8(trunc_ln104_1_reg_3446),
    .dout(tmp_29_fu_1571_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U41(
    .din0(regions_max_0_3_0),
    .din1(regions_max_1_3_0),
    .din2(regions_max_2_3_0),
    .din3(regions_max_3_3_0),
    .din4(regions_max_4_3_0),
    .din5(regions_max_5_3_0),
    .din6(regions_max_6_3_0),
    .din7(regions_max_7_3_0),
    .din8(trunc_ln104_reg_3427),
    .dout(tmp_20_fu_1680_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U42(
    .din0(regions_max_0_3_0),
    .din1(regions_max_1_3_0),
    .din2(regions_max_2_3_0),
    .din3(regions_max_3_3_0),
    .din4(regions_max_4_3_0),
    .din5(regions_max_5_3_0),
    .din6(regions_max_6_3_0),
    .din7(regions_max_7_3_0),
    .din8(trunc_ln104_1_reg_3446),
    .dout(tmp_22_fu_1693_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U43(
    .din0(regions_center_0_3_0),
    .din1(regions_center_1_3_0),
    .din2(regions_center_2_3_0),
    .din3(regions_center_3_3_0),
    .din4(regions_center_4_3_0),
    .din5(regions_center_5_3_0),
    .din6(regions_center_6_3_0),
    .din7(regions_center_7_3_0),
    .din8(trunc_ln104_reg_3427),
    .dout(tmp_18_fu_1806_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U44(
    .din0(regions_center_0_3_0),
    .din1(regions_center_1_3_0),
    .din2(regions_center_2_3_0),
    .din3(regions_center_3_3_0),
    .din4(regions_center_4_3_0),
    .din5(regions_center_5_3_0),
    .din6(regions_center_6_3_0),
    .din7(regions_center_7_3_0),
    .din8(trunc_ln104_1_reg_3446),
    .dout(tmp_19_fu_1819_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U45(
    .din0(regions_max_0_4_0),
    .din1(regions_max_1_4_0),
    .din2(regions_max_2_4_0),
    .din3(regions_max_3_4_0),
    .din4(regions_max_4_4_0),
    .din5(regions_max_5_4_0),
    .din6(regions_max_6_4_0),
    .din7(regions_max_7_4_0),
    .din8(trunc_ln104_reg_3427),
    .dout(tmp_26_fu_1832_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U46(
    .din0(regions_max_0_4_0),
    .din1(regions_max_1_4_0),
    .din2(regions_max_2_4_0),
    .din3(regions_max_3_4_0),
    .din4(regions_max_4_4_0),
    .din5(regions_max_5_4_0),
    .din6(regions_max_6_4_0),
    .din7(regions_max_7_4_0),
    .din8(trunc_ln104_1_reg_3446),
    .dout(tmp_28_fu_1845_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U47(
    .din0(regions_center_0_4_0),
    .din1(regions_center_1_4_0),
    .din2(regions_center_2_4_0),
    .din3(regions_center_3_4_0),
    .din4(regions_center_4_4_0),
    .din5(regions_center_5_4_0),
    .din6(regions_center_6_4_0),
    .din7(regions_center_7_4_0),
    .din8(trunc_ln104_reg_3427),
    .dout(tmp_24_fu_1939_p10)
);

FaultDetector_mux_83_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 3 ),
    .dout_WIDTH( 32 ))
mux_83_32_1_1_U48(
    .din0(regions_center_0_4_0),
    .din1(regions_center_1_4_0),
    .din2(regions_center_2_4_0),
    .din3(regions_center_3_4_0),
    .din4(regions_center_4_4_0),
    .din5(regions_center_5_4_0),
    .din6(regions_center_6_4_0),
    .din7(regions_center_7_4_0),
    .din8(trunc_ln104_1_reg_3446),
    .dout(tmp_25_fu_1952_p10)
);

FaultDetector_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage7),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter8_stage1) | ((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
            ap_enable_reg_pp0_iter8 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1)) | ((1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_real_4_fu_308 <= 32'd1;
        end else if (((icmp_ln1027_reg_3423 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            k_real_4_fu_308 <= k_real_3_fu_1985_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            merge_1_1_fu_304 <= 32'd0;
        end else if (((icmp_ln1027_reg_3423 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            merge_1_1_fu_304 <= i_real_2_fu_1993_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        merge_1_fu_292 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln1027_reg_3423_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        merge_1_fu_292 <= merge_1_7_fu_2618_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        merge_2_fu_296 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln1027_reg_3423_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        merge_2_fu_296 <= merge_2_6_fu_2612_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        score_fu_300 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln1027_reg_3423_pp0_iter8_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        score_fu_300 <= score_3_fu_2606_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_other_fu_316 <= 32'd4294967295;
        end else if (((icmp_ln1027_reg_3423_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
            tmp_other_fu_316 <= tmp_other_3_fu_2456_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_score_fu_312 <= 32'd0;
        end else if (((icmp_ln1027_reg_3423_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1))) begin
            tmp_score_fu_312 <= tmp_score_3_fu_2462_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln112_1_reg_3655 <= and_ln112_1_fu_1597_p2;
        and_ln112_3_reg_3660 <= and_ln112_3_fu_1616_p2;
        icmp_ln112_10_reg_3675 <= icmp_ln112_10_fu_1668_p2;
        icmp_ln112_11_reg_3680 <= icmp_ln112_11_fu_1674_p2;
        icmp_ln112_8_reg_3665 <= icmp_ln112_8_fu_1656_p2;
        icmp_ln112_9_reg_3670 <= icmp_ln112_9_fu_1662_p2;
        tmp_20_reg_3690 <= tmp_20_fu_1680_p10;
        tmp_22_reg_3695 <= tmp_22_fu_1693_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln112_1_reg_3655_pp0_iter1_reg <= and_ln112_1_reg_3655;
        and_ln112_1_reg_3655_pp0_iter2_reg <= and_ln112_1_reg_3655_pp0_iter1_reg;
        and_ln112_3_reg_3660_pp0_iter1_reg <= and_ln112_3_reg_3660;
        and_ln112_3_reg_3660_pp0_iter2_reg <= and_ln112_3_reg_3660_pp0_iter1_reg;
        mul_4_reg_3893_pp0_iter3_reg <= mul_4_reg_3893;
        mul_4_reg_3893_pp0_iter4_reg <= mul_4_reg_3893_pp0_iter3_reg;
        mul_4_reg_3893_pp0_iter5_reg <= mul_4_reg_3893_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        and_ln112_5_reg_3705 <= and_ln112_5_fu_1720_p2;
        and_ln112_7_reg_3710 <= and_ln112_7_fu_1801_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        and_ln112_5_reg_3705_pp0_iter1_reg <= and_ln112_5_reg_3705;
        and_ln112_5_reg_3705_pp0_iter2_reg <= and_ln112_5_reg_3705_pp0_iter1_reg;
        and_ln112_7_reg_3710_pp0_iter1_reg <= and_ln112_7_reg_3710;
        and_ln112_7_reg_3710_pp0_iter2_reg <= and_ln112_7_reg_3710_pp0_iter1_reg;
        mul_1_reg_3861_pp0_iter2_reg <= mul_1_reg_3861;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        and_ln112_9_reg_3740 <= and_ln112_9_fu_1934_p2;
        tmp_18_reg_3720 <= tmp_18_fu_1806_p10;
        tmp_19_reg_3725 <= tmp_19_fu_1819_p10;
        tmp_26_reg_3730 <= tmp_26_fu_1832_p10;
        tmp_28_reg_3735 <= tmp_28_fu_1845_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        and_ln112_9_reg_3740_pp0_iter1_reg <= and_ln112_9_reg_3740;
        and_ln112_9_reg_3740_pp0_iter2_reg <= and_ln112_9_reg_3740_pp0_iter1_reg;
        ov_19_reg_3993_pp0_iter4_reg <= ov_19_reg_3993;
        tmp_56_reg_4020_pp0_iter6_reg <= tmp_56_reg_4020;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        d1_1_reg_3790 <= grp_fu_1058_p2;
        d2_1_reg_3795 <= grp_fu_1062_p2;
        sub2_reg_3785 <= grp_fu_5732_p_dout0;
        sub75_1_reg_3800 <= grp_fu_1066_p2;
        sub87_1_reg_3805 <= grp_fu_1070_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        d1_2_reg_3816 <= grp_fu_1058_p2;
        d2_2_reg_3821 <= grp_fu_1062_p2;
        d_2_reg_3810 <= grp_fu_5732_p_dout0;
        sub75_2_reg_3826 <= grp_fu_1066_p2;
        sub87_2_reg_3831 <= grp_fu_1070_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        d1_3_reg_3836 <= grp_fu_5732_p_dout0;
        d2_3_reg_3841 <= grp_fu_1058_p2;
        sub75_3_reg_3846 <= grp_fu_1062_p2;
        sub87_3_reg_3851 <= grp_fu_1066_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        d1_reg_3764 <= grp_fu_1058_p2;
        d2_reg_3769 <= grp_fu_1062_p2;
        d_1_reg_3779 <= grp_fu_1070_p2;
        sub_reg_3774 <= grp_fu_1066_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        d_3_reg_3866 <= grp_fu_5732_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        d_4_reg_3877 <= grp_fu_5732_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_3423_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        distance_1_reg_3978 <= grp_fu_1066_p2;
        tmp_54_reg_3983 <= grp_fu_5748_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_3423_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        distance_2_reg_4008 <= grp_fu_1062_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_3423_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        distance_3_reg_4025 <= grp_fu_1062_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_3423_pp0_iter6_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        distance_4_reg_4030 <= grp_fu_1066_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        distance_reg_3898 <= grp_fu_5732_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_real_3_reg_3408 <= merge_1_1_fu_304;
        i_real_3_reg_3408_pp0_iter1_reg <= i_real_3_reg_3408;
        i_real_3_reg_3408_pp0_iter2_reg <= i_real_3_reg_3408_pp0_iter1_reg;
        i_real_3_reg_3408_pp0_iter3_reg <= i_real_3_reg_3408_pp0_iter2_reg;
        i_real_3_reg_3408_pp0_iter4_reg <= i_real_3_reg_3408_pp0_iter3_reg;
        i_real_3_reg_3408_pp0_iter5_reg <= i_real_3_reg_3408_pp0_iter4_reg;
        i_real_3_reg_3408_pp0_iter6_reg <= i_real_3_reg_3408_pp0_iter5_reg;
        i_real_3_reg_3408_pp0_iter7_reg <= i_real_3_reg_3408_pp0_iter6_reg;
        i_real_3_reg_3408_pp0_iter8_reg <= i_real_3_reg_3408_pp0_iter7_reg;
        icmp_ln1027_reg_3423 <= icmp_ln1027_fu_1158_p2;
        icmp_ln1027_reg_3423_pp0_iter1_reg <= icmp_ln1027_reg_3423;
        icmp_ln1027_reg_3423_pp0_iter2_reg <= icmp_ln1027_reg_3423_pp0_iter1_reg;
        icmp_ln1027_reg_3423_pp0_iter3_reg <= icmp_ln1027_reg_3423_pp0_iter2_reg;
        icmp_ln1027_reg_3423_pp0_iter4_reg <= icmp_ln1027_reg_3423_pp0_iter3_reg;
        icmp_ln1027_reg_3423_pp0_iter5_reg <= icmp_ln1027_reg_3423_pp0_iter4_reg;
        icmp_ln1027_reg_3423_pp0_iter6_reg <= icmp_ln1027_reg_3423_pp0_iter5_reg;
        icmp_ln1027_reg_3423_pp0_iter7_reg <= icmp_ln1027_reg_3423_pp0_iter6_reg;
        icmp_ln1027_reg_3423_pp0_iter8_reg <= icmp_ln1027_reg_3423_pp0_iter7_reg;
        k_real_5_reg_3416 <= k_real_4_fu_308;
        k_real_5_reg_3416_pp0_iter1_reg <= k_real_5_reg_3416;
        k_real_5_reg_3416_pp0_iter2_reg <= k_real_5_reg_3416_pp0_iter1_reg;
        k_real_5_reg_3416_pp0_iter3_reg <= k_real_5_reg_3416_pp0_iter2_reg;
        k_real_5_reg_3416_pp0_iter4_reg <= k_real_5_reg_3416_pp0_iter3_reg;
        k_real_5_reg_3416_pp0_iter5_reg <= k_real_5_reg_3416_pp0_iter4_reg;
        k_real_5_reg_3416_pp0_iter6_reg <= k_real_5_reg_3416_pp0_iter5_reg;
        k_real_5_reg_3416_pp0_iter7_reg <= k_real_5_reg_3416_pp0_iter6_reg;
        merge_1_4_reg_4076 <= merge_1_fu_292;
        merge_2_1_reg_4083 <= merge_2_fu_296;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1019_reg_3755 <= icmp_ln1019_fu_1965_p2;
        tmp_24_reg_3745 <= tmp_24_fu_1939_p10;
        tmp_25_reg_3750 <= tmp_25_fu_1952_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1019_reg_3755_pp0_iter2_reg <= icmp_ln1019_reg_3755;
        icmp_ln1019_reg_3755_pp0_iter3_reg <= icmp_ln1019_reg_3755_pp0_iter2_reg;
        icmp_ln1019_reg_3755_pp0_iter4_reg <= icmp_ln1019_reg_3755_pp0_iter3_reg;
        icmp_ln1019_reg_3755_pp0_iter5_reg <= icmp_ln1019_reg_3755_pp0_iter4_reg;
        icmp_ln1019_reg_3755_pp0_iter6_reg <= icmp_ln1019_reg_3755_pp0_iter5_reg;
        icmp_ln1019_reg_3755_pp0_iter7_reg <= icmp_ln1019_reg_3755_pp0_iter6_reg;
        icmp_ln1019_reg_3755_pp0_iter8_reg <= icmp_ln1019_reg_3755_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        icmp_ln112_1_reg_3572 <= icmp_ln112_1_fu_1430_p2;
        icmp_ln112_2_reg_3577 <= icmp_ln112_2_fu_1436_p2;
        icmp_ln112_3_reg_3582 <= icmp_ln112_3_fu_1442_p2;
        icmp_ln112_4_reg_3592 <= icmp_ln112_4_fu_1482_p2;
        icmp_ln112_5_reg_3597 <= icmp_ln112_5_fu_1488_p2;
        icmp_ln112_6_reg_3602 <= icmp_ln112_6_fu_1494_p2;
        icmp_ln112_7_reg_3607 <= icmp_ln112_7_fu_1500_p2;
        icmp_ln112_reg_3567 <= icmp_ln112_fu_1424_p2;
        tmp_12_reg_3617 <= tmp_12_fu_1506_p10;
        tmp_13_reg_3622 <= tmp_13_fu_1519_p10;
        tmp_14_reg_3627 <= tmp_14_fu_1532_p10;
        tmp_16_reg_3632 <= tmp_16_fu_1545_p10;
        tmp_27_reg_3637 <= tmp_27_fu_1558_p10;
        tmp_29_reg_3646 <= tmp_29_fu_1571_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul_1_reg_3861 <= grp_fu_1079_p2;
        mul_reg_3856 <= grp_fu_5738_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_2_reg_3872 <= grp_fu_5738_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_2_reg_3872_pp0_iter2_reg <= mul_2_reg_3872;
        mul_2_reg_3872_pp0_iter3_reg <= mul_2_reg_3872_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_3_reg_3883 <= grp_fu_5738_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_3_reg_3883_pp0_iter3_reg <= mul_3_reg_3883;
        mul_3_reg_3883_pp0_iter4_reg <= mul_3_reg_3883_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        mul_4_reg_3893 <= grp_fu_5738_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ov_10_reg_3927 <= ov_10_fu_2023_p3;
        ov_14_reg_3934 <= ov_14_fu_2030_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln1027_reg_3423_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ov_11_reg_3968 <= ov_11_fu_2178_p3;
        ov_15_reg_3973 <= ov_15_fu_2225_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ov_18_reg_3951 <= ov_18_fu_2131_p3;
        ov_20_reg_3941 <= ov_20_fu_2077_p3;
        ov_7_reg_3946 <= ov_7_fu_2124_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_3423_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ov_19_reg_3993 <= ov_19_fu_2272_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ov_2_reg_3903 <= ov_2_fu_2010_p3;
        ov_6_reg_3910 <= ov_6_fu_2016_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_1_reg_3655_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ov_reg_3888 <= grp_fu_1070_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_3423_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        overlap_1_reg_3988 <= grp_fu_5738_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln1027_reg_3423_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        overlap_2_reg_3998 <= grp_fu_1079_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_3423_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        overlap_3_reg_4003 <= grp_fu_1079_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln1027_reg_3423_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        overlap_4_reg_4013 <= grp_fu_5738_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        overlap_4_reg_4013_pp0_iter6_reg <= overlap_4_reg_4013;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_5_reg_3705_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_5_reg_3705_pp0_iter2_reg) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_1093 <= grp_fu_5732_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_9_reg_3740) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_9_reg_3740) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_1099 <= grp_fu_1058_p2;
        reg_1104 <= grp_fu_1062_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_9_reg_3740_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_9_reg_3740_pp0_iter2_reg) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln112_7_reg_3710_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'd0 == and_ln112_1_reg_3655_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_7_reg_3710_pp0_iter2_reg) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        reg_1109 <= grp_fu_1058_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_3_reg_3660_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_3_reg_3660_pp0_iter2_reg) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_1113 <= grp_fu_1062_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_3423_pp0_iter6_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sc_2_reg_4035 <= sc_2_fu_2332_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_3423_pp0_iter7_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        score_load_reg_4068 <= score_fu_300;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_10_reg_3526 <= tmp_10_fu_1325_p10;
        tmp_15_reg_3531 <= tmp_15_fu_1338_p10;
        tmp_17_reg_3540 <= tmp_17_fu_1351_p10;
        tmp_21_reg_3549 <= tmp_21_fu_1364_p10;
        tmp_23_reg_3558 <= tmp_23_fu_1377_p10;
        tmp_8_reg_3521 <= tmp_8_fu_1312_p10;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_fu_1158_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_11_reg_3512 <= tmp_11_fu_1298_p10;
        tmp_1_reg_3460 <= tmp_1_fu_1186_p10;
        tmp_2_reg_3465 <= tmp_2_fu_1200_p10;
        tmp_3_reg_3470 <= tmp_3_fu_1214_p10;
        tmp_4_reg_3479 <= tmp_4_fu_1228_p10;
        tmp_5_reg_3484 <= tmp_5_fu_1242_p10;
        tmp_6_reg_3493 <= tmp_6_fu_1256_p10;
        tmp_7_reg_3498 <= tmp_7_fu_1270_p10;
        tmp_9_reg_3503 <= tmp_9_fu_1284_p10;
        tmp_s_reg_3441 <= tmp_s_fu_1168_p10;
        trunc_ln104_1_reg_3446 <= trunc_ln104_1_fu_1182_p1;
        trunc_ln104_reg_3427 <= trunc_ln104_fu_1164_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_32_reg_3587 <= grp_fu_5743_p_dout0;
        tmp_37_reg_3612 <= grp_fu_5748_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_34_reg_3917 <= grp_fu_5743_p_dout0;
        tmp_39_reg_3922 <= grp_fu_5748_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_42_reg_3685 <= grp_fu_5743_p_dout0;
        tmp_47_reg_3700 <= grp_fu_5748_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln1027_reg_3423_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_44_reg_3958 <= grp_fu_5743_p_dout0;
        tmp_49_reg_3963 <= grp_fu_5748_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_52_reg_3715 <= grp_fu_5743_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_3423_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_56_reg_4020 <= grp_fu_5743_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_3423_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_59_reg_4049 <= grp_fu_5748_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_3423_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_62_reg_4089 <= grp_fu_5743_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_3423_pp0_iter7_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_other_4_reg_4054 <= tmp_other_4_fu_2439_p3;
        tmp_score_4_reg_4060 <= tmp_score_4_fu_2446_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_3423_pp0_iter7_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_score_load_reg_4042 <= tmp_score_fu_312;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_3423 == 1'd0) & (1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (icmp_ln1027_reg_3423_pp0_iter7_reg == 1'd0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_condition_exit_pp0_iter8_stage1 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter8_stage1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to7 = 1'b1;
    end else begin
        ap_idle_pp0_0to7 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to8 = 1'b1;
    end else begin
        ap_idle_pp0_1to8 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if ((((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage7_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_5_reg_3705_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln112_5_reg_3705_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_1054_opcode = 2'd1;
    end else if (((1'b0 == ap_block_pp0_stage6_00001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1054_opcode = 2'd0;
    end else begin
        grp_fu_1054_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln112_5_reg_3705_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1054_p0 = d2_2_reg_3821;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_5_reg_3705_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1054_p0 = d1_2_reg_3816;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1054_p0 = mul_reg_3856;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1054_p0 = tmp_24_reg_3745;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1054_p0 = tmp_18_reg_3720;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1054_p0 = tmp_20_reg_3690;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1054_p0 = tmp_12_reg_3617;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1054_p0 = tmp_3_reg_3470;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1054_p0 = tmp_s_reg_3441;
    end else begin
        grp_fu_1054_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln112_5_reg_3705_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1054_p1 = sub87_2_reg_3831;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_5_reg_3705_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1054_p1 = sub75_2_reg_3826;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1054_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1054_p1 = tmp_25_reg_3750;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1054_p1 = tmp_19_reg_3725;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1054_p1 = tmp_21_reg_3549;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1054_p1 = tmp_13_reg_3622;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1054_p1 = tmp_5_reg_3484;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1054_p1 = tmp_1_reg_3460;
    end else begin
        grp_fu_1054_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_9_reg_3740_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_9_reg_3740_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_1058_p0 = reg_1099;
    end else if (((1'd0 == and_ln112_7_reg_3710_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1058_p0 = d2_3_reg_3841;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_7_reg_3710_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1058_p0 = d1_3_reg_3836;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1058_p0 = d2_reg_3769;
    end else if (((1'd0 == and_ln112_9_reg_3740) & (icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1058_p0 = tmp_28_reg_3735;
    end else if (((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'd1 == and_ln112_9_reg_3740) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1058_p0 = tmp_26_reg_3730;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1058_p0 = tmp_22_reg_3695;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1058_p0 = tmp_14_reg_3627;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1058_p0 = tmp_8_reg_3521;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1058_p0 = tmp_2_reg_3465;
    end else begin
        grp_fu_1058_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_9_reg_3740_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_9_reg_3740_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_1058_p1 = reg_1104;
    end else if (((1'd0 == and_ln112_7_reg_3710_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1058_p1 = sub87_3_reg_3851;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_7_reg_3710_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1058_p1 = sub75_3_reg_3846;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1058_p1 = sub2_reg_3785;
    end else if (((1'd0 == and_ln112_9_reg_3740) & (icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1058_p1 = tmp_29_reg_3646;
    end else if (((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'd1 == and_ln112_9_reg_3740) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1058_p1 = tmp_27_reg_3637;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1058_p1 = tmp_23_reg_3558;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1058_p1 = tmp_15_reg_3531;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1058_p1 = tmp_9_reg_3503;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1058_p1 = tmp_3_reg_3470;
    end else begin
        grp_fu_1058_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_9_reg_3740) & (icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage7_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage7_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'd1 == and_ln112_9_reg_3740) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage6_00001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_3_reg_3660_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'd0 == and_ln112_3_reg_3660_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage6_00001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_1062_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage0_00001) & (icmp_ln1027_reg_3423_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1_00001) & (icmp_ln1027_reg_3423_pp0_iter4_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_1062_opcode = 2'd0;
    end else begin
        grp_fu_1062_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1062_p0 = distance_2_reg_4008;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1062_p0 = distance_1_reg_3978;
    end else if (((1'd0 == and_ln112_3_reg_3660_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1062_p0 = d2_1_reg_3795;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_3_reg_3660_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1062_p0 = d1_1_reg_3790;
    end else if (((1'd0 == and_ln112_9_reg_3740) & (icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1062_p0 = tmp_27_reg_3637;
    end else if (((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'd1 == and_ln112_9_reg_3740) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1062_p0 = tmp_29_reg_3646;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1062_p0 = tmp_23_reg_3558;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1062_p0 = tmp_16_reg_3632;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1062_p0 = tmp_10_reg_3526;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1062_p0 = tmp_4_reg_3479;
    end else begin
        grp_fu_1062_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1062_p1 = mul_3_reg_3883_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1062_p1 = mul_2_reg_3872_pp0_iter3_reg;
    end else if (((1'd0 == and_ln112_3_reg_3660_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1062_p1 = sub87_1_reg_3805;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_3_reg_3660_pp0_iter1_reg) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1062_p1 = sub75_1_reg_3800;
    end else if (((1'd0 == and_ln112_9_reg_3740) & (icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1062_p1 = tmp_29_reg_3646;
    end else if (((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'd1 == and_ln112_9_reg_3740) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1062_p1 = tmp_27_reg_3637;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1062_p1 = tmp_21_reg_3549;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1062_p1 = tmp_17_reg_3540;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1062_p1 = tmp_11_reg_3512;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1062_p1 = tmp_5_reg_3484;
    end else begin
        grp_fu_1062_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_1066_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage1_00001) & (icmp_ln1027_reg_3423_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage6_00001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_1066_opcode = 2'd0;
    end else begin
        grp_fu_1066_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1066_p0 = distance_3_reg_4025;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1066_p0 = distance_reg_3898;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1066_p0 = tmp_21_reg_3549;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1066_p0 = tmp_17_reg_3540;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1066_p0 = tmp_11_reg_3512;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1066_p0 = tmp_5_reg_3484;
    end else begin
        grp_fu_1066_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1066_p1 = mul_4_reg_3893_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_1066_p1 = mul_1_reg_3861_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1066_p1 = tmp_23_reg_3558;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1066_p1 = tmp_15_reg_3531;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1066_p1 = tmp_9_reg_3503;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1066_p1 = tmp_3_reg_3470;
    end else begin
        grp_fu_1066_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1070_p0 = d1_reg_3764;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1070_p0 = tmp_15_reg_3531;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1070_p0 = tmp_9_reg_3503;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1070_p0 = tmp_6_reg_3493;
    end else begin
        grp_fu_1070_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1070_p1 = sub_reg_3774;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1070_p1 = tmp_17_reg_3540;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1070_p1 = tmp_11_reg_3512;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1070_p1 = tmp_7_reg_3498;
    end else begin
        grp_fu_1070_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1075_p0 = overlap_3_reg_4003;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1075_p0 = ov_20_reg_3941;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1075_p0 = d_4_reg_3877;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1075_p0 = d_3_reg_3866;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1075_p0 = d_2_reg_3810;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1075_p0 = reg_1093;
    end else begin
        grp_fu_1075_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1075_p1 = ov_19_reg_3993_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1075_p1 = ov_7_reg_3946;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1075_p1 = d_4_reg_3877;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1075_p1 = d_3_reg_3866;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1075_p1 = d_2_reg_3810;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1075_p1 = reg_1093;
    end else begin
        grp_fu_1075_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1079_p0 = overlap_2_reg_3998;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1079_p0 = overlap_1_reg_3988;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1079_p0 = d_1_reg_3779;
    end else begin
        grp_fu_1079_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1079_p1 = ov_15_reg_3973;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1079_p1 = ov_11_reg_3968;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1079_p1 = d_1_reg_3779;
    end else begin
        grp_fu_1079_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_00001) & (icmp_ln1027_reg_3423_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage5_00001) & (icmp_ln1027_reg_3423_pp0_iter5_reg == 1'd1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        grp_fu_1083_opcode = 5'd2;
    end else if ((((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage7_00001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        grp_fu_1083_opcode = 5'd4;
    end else begin
        grp_fu_1083_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1083_p0 = tmp_score_4_reg_4060;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1083_p0 = overlap_4_reg_4013;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1083_p0 = ov_10_reg_3927;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1083_p0 = ov_2_reg_3903;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1083_p0 = tmp_27_reg_3637;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1083_p0 = tmp_15_reg_3531;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1083_p0 = tmp_3_reg_3470;
    end else begin
        grp_fu_1083_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_1083_p1 = score_fu_300;
    end else if ((((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_1083_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1083_p1 = tmp_29_reg_3646;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1083_p1 = tmp_17_reg_3540;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1083_p1 = tmp_5_reg_3484;
    end else begin
        grp_fu_1083_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_00001) & (icmp_ln1027_reg_3423_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1087_opcode = 5'd2;
    end else if ((((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_3423 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage7_00001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (icmp_ln1027_reg_3423_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage4_00001) & (icmp_ln1027_reg_3423_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_1087_opcode = 5'd4;
    end else begin
        grp_fu_1087_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1087_p0 = sc_2_reg_4035;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_1087_p0 = ov_18_reg_3951;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_1087_p0 = ov_14_reg_3934;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_1087_p0 = ov_6_reg_3910;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1087_p0 = tmp_21_reg_3549;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1087_p0 = tmp_9_reg_3503;
    end else begin
        grp_fu_1087_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_1087_p1 = tmp_score_fu_312;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_1087_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_1087_p1 = tmp_23_reg_3558;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_1087_p1 = tmp_11_reg_3512;
    end else begin
        grp_fu_1087_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_3423_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        merge_1_out_ap_vld = 1'b1;
    end else begin
        merge_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_3423_pp0_iter7_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        merge_2_out_ap_vld = 1'b1;
    end else begin
        merge_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_idle_pp0_1to8 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if (((ap_idle_pp0_0to7 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter8_stage1))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln112_1_fu_1597_p2 = (or_ln112_fu_1584_p2 & and_ln112_fu_1592_p2);

assign and_ln112_2_fu_1611_p2 = (tmp_37_reg_3612 & or_ln112_3_fu_1607_p2);

assign and_ln112_3_fu_1616_p2 = (or_ln112_2_fu_1603_p2 & and_ln112_2_fu_1611_p2);

assign and_ln112_4_fu_1714_p2 = (or_ln112_5_fu_1710_p2 & or_ln112_4_fu_1706_p2);

assign and_ln112_5_fu_1720_p2 = (tmp_42_reg_3685 & and_ln112_4_fu_1714_p2);

assign and_ln112_6_fu_1795_p2 = (or_ln112_7_fu_1789_p2 & or_ln112_6_fu_1771_p2);

assign and_ln112_7_fu_1801_p2 = (tmp_47_reg_3700 & and_ln112_6_fu_1795_p2);

assign and_ln112_8_fu_1928_p2 = (or_ln112_9_fu_1922_p2 & or_ln112_8_fu_1904_p2);

assign and_ln112_9_fu_1934_p2 = (tmp_52_reg_3715 & and_ln112_8_fu_1928_p2);

assign and_ln112_fu_1592_p2 = (tmp_32_reg_3587 & or_ln112_1_fu_1588_p2);

assign and_ln116_1_fu_2119_p2 = (tmp_39_reg_3922 & or_ln116_1_fu_2113_p2);

assign and_ln116_2_fu_2173_p2 = (tmp_44_reg_3958 & or_ln116_2_fu_2167_p2);

assign and_ln116_3_fu_2220_p2 = (tmp_49_reg_3963 & or_ln116_3_fu_2214_p2);

assign and_ln116_4_fu_2267_p2 = (tmp_54_reg_3983 & or_ln116_4_fu_2261_p2);

assign and_ln116_fu_2072_p2 = (tmp_34_reg_3917 & or_ln116_fu_2066_p2);

assign and_ln122_fu_2314_p2 = (tmp_56_reg_4020_pp0_iter6_reg & or_ln122_fu_2308_p2);

assign and_ln130_1_fu_2428_p2 = (tmp_59_reg_4049 & and_ln130_fu_2422_p2);

assign and_ln130_fu_2422_p2 = (or_ln130_2_fu_2416_p2 & or_ln130_1_fu_2398_p2);

assign and_ln139_1_fu_2577_p2 = (tmp_62_reg_4089 & and_ln139_fu_2571_p2);

assign and_ln139_fu_2571_p2 = (or_ln139_2_fu_2565_p2 & or_ln139_1_fu_2547_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage5_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage6_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage7_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage7;

assign bitcast_ln112_1_fu_1407_p1 = tmp_5_reg_3484;

assign bitcast_ln112_2_fu_1448_p1 = tmp_9_reg_3503;

assign bitcast_ln112_3_fu_1465_p1 = tmp_11_reg_3512;

assign bitcast_ln112_4_fu_1622_p1 = tmp_15_reg_3531;

assign bitcast_ln112_5_fu_1639_p1 = tmp_17_reg_3540;

assign bitcast_ln112_6_fu_1725_p1 = tmp_21_reg_3549;

assign bitcast_ln112_7_fu_1742_p1 = tmp_23_reg_3558;

assign bitcast_ln112_8_fu_1858_p1 = tmp_27_reg_3637;

assign bitcast_ln112_9_fu_1875_p1 = tmp_29_reg_3646;

assign bitcast_ln112_fu_1390_p1 = tmp_3_reg_3470;

assign bitcast_ln116_1_fu_2084_p1 = ov_6_reg_3910;

assign bitcast_ln116_2_fu_2138_p1 = ov_10_reg_3927;

assign bitcast_ln116_3_fu_2185_p1 = ov_14_reg_3934;

assign bitcast_ln116_4_fu_2232_p1 = ov_18_reg_3951;

assign bitcast_ln116_fu_2037_p1 = ov_2_reg_3903;

assign bitcast_ln122_fu_2279_p1 = overlap_4_reg_4013_pp0_iter6_reg;

assign bitcast_ln126_fu_2319_p1 = distance_4_reg_4030;

assign bitcast_ln130_1_fu_2369_p1 = tmp_score_load_reg_4042;

assign bitcast_ln130_fu_2352_p1 = sc_2_reg_4035;

assign bitcast_ln139_1_fu_2518_p1 = score_load_reg_4068;

assign bitcast_ln139_fu_2501_p1 = tmp_score_4_reg_4060;

assign grp_fu_5732_p_ce = 1'b1;

assign grp_fu_5732_p_din0 = grp_fu_1054_p0;

assign grp_fu_5732_p_din1 = grp_fu_1054_p1;

assign grp_fu_5732_p_opcode = grp_fu_1054_opcode;

assign grp_fu_5738_p_ce = 1'b1;

assign grp_fu_5738_p_din0 = grp_fu_1075_p0;

assign grp_fu_5738_p_din1 = grp_fu_1075_p1;

assign grp_fu_5743_p_ce = 1'b1;

assign grp_fu_5743_p_din0 = grp_fu_1083_p0;

assign grp_fu_5743_p_din1 = grp_fu_1083_p1;

assign grp_fu_5743_p_opcode = grp_fu_1083_opcode;

assign grp_fu_5748_p_ce = 1'b1;

assign grp_fu_5748_p_din0 = grp_fu_1087_p0;

assign grp_fu_5748_p_din1 = grp_fu_1087_p1;

assign grp_fu_5748_p_opcode = grp_fu_1087_opcode;

assign i_real_2_fu_1993_p3 = ((icmp_ln1019_fu_1965_p2[0:0] == 1'b1) ? i_real_fu_1970_p2 : i_real_3_reg_3408);

assign i_real_fu_1970_p2 = (i_real_3_reg_3408 + 32'd1);

assign icmp_ln1019_fu_1965_p2 = ((k_real_5_reg_3416 == 32'd7) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_1158_p2 = (($signed(merge_1_1_fu_304) < $signed(32'd7)) ? 1'b1 : 1'b0);

assign icmp_ln112_10_fu_1668_p2 = ((tmp_41_fu_1642_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_11_fu_1674_p2 = ((trunc_ln112_5_fu_1652_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_12_fu_1759_p2 = ((tmp_45_fu_1728_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_13_fu_1765_p2 = ((trunc_ln112_6_fu_1738_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_14_fu_1777_p2 = ((tmp_46_fu_1745_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_15_fu_1783_p2 = ((trunc_ln112_7_fu_1755_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_16_fu_1892_p2 = ((tmp_50_fu_1861_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_17_fu_1898_p2 = ((trunc_ln112_8_fu_1871_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_18_fu_1910_p2 = ((tmp_51_fu_1878_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_19_fu_1916_p2 = ((trunc_ln112_9_fu_1888_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_1_fu_1430_p2 = ((trunc_ln112_fu_1403_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_2_fu_1436_p2 = ((tmp_31_fu_1410_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_3_fu_1442_p2 = ((trunc_ln112_1_fu_1420_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_4_fu_1482_p2 = ((tmp_35_fu_1451_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_5_fu_1488_p2 = ((trunc_ln112_2_fu_1461_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_6_fu_1494_p2 = ((tmp_36_fu_1468_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_7_fu_1500_p2 = ((trunc_ln112_3_fu_1478_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_8_fu_1656_p2 = ((tmp_40_fu_1625_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_9_fu_1662_p2 = ((trunc_ln112_4_fu_1635_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_fu_1424_p2 = ((tmp_30_fu_1393_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_1_fu_2060_p2 = ((trunc_ln116_fu_2050_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_2_fu_2101_p2 = ((tmp_38_fu_2087_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_3_fu_2107_p2 = ((trunc_ln116_1_fu_2097_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_4_fu_2155_p2 = ((tmp_43_fu_2141_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_5_fu_2161_p2 = ((trunc_ln116_2_fu_2151_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_6_fu_2202_p2 = ((tmp_48_fu_2188_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_7_fu_2208_p2 = ((trunc_ln116_3_fu_2198_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_8_fu_2249_p2 = ((tmp_53_fu_2235_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_9_fu_2255_p2 = ((trunc_ln116_4_fu_2245_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_2054_p2 = ((tmp_33_fu_2040_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln122_1_fu_2302_p2 = ((trunc_ln122_fu_2292_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_2296_p2 = ((tmp_55_fu_2282_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_1_fu_2386_p2 = ((tmp_57_fu_2355_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_2_fu_2392_p2 = ((trunc_ln130_fu_2365_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_3_fu_2404_p2 = ((tmp_58_fu_2372_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_4_fu_2410_p2 = ((trunc_ln130_1_fu_2382_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_fu_2346_p2 = ((tmp_other_fu_316 == 32'd4294967295) ? 1'b1 : 1'b0);

assign icmp_ln139_1_fu_2541_p2 = ((trunc_ln139_fu_2514_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln139_2_fu_2553_p2 = ((tmp_61_fu_2521_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln139_3_fu_2559_p2 = ((trunc_ln139_1_fu_2531_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln139_fu_2535_p2 = ((tmp_60_fu_2504_p4 != 8'd255) ? 1'b1 : 1'b0);

assign k_real_2_fu_1980_p2 = (k_real_5_reg_3416 + 32'd1);

assign k_real_3_fu_1985_p3 = ((icmp_ln1019_fu_1965_p2[0:0] == 1'b1) ? k_real_fu_1975_p2 : k_real_2_fu_1980_p2);

assign k_real_fu_1975_p2 = (i_real_3_reg_3408 + 32'd2);

assign merge_1_6_fu_2600_p3 = ((or_ln139_fu_2582_p2[0:0] == 1'b1) ? i_real_3_reg_3408_pp0_iter8_reg : merge_1_4_reg_4076);

assign merge_1_7_fu_2618_p3 = ((icmp_ln1019_reg_3755_pp0_iter8_reg[0:0] == 1'b1) ? merge_1_6_fu_2600_p3 : merge_1_4_reg_4076);

assign merge_1_out = merge_1_fu_292[2:0];

assign merge_2_5_fu_2594_p3 = ((or_ln139_fu_2582_p2[0:0] == 1'b1) ? tmp_other_4_reg_4054 : merge_2_1_reg_4083);

assign merge_2_6_fu_2612_p3 = ((icmp_ln1019_reg_3755_pp0_iter8_reg[0:0] == 1'b1) ? merge_2_5_fu_2594_p3 : merge_2_1_reg_4083);

assign merge_2_out = merge_2_fu_296[2:0];

assign or_ln112_1_fu_1588_p2 = (icmp_ln112_3_reg_3582 | icmp_ln112_2_reg_3577);

assign or_ln112_2_fu_1603_p2 = (icmp_ln112_5_reg_3597 | icmp_ln112_4_reg_3592);

assign or_ln112_3_fu_1607_p2 = (icmp_ln112_7_reg_3607 | icmp_ln112_6_reg_3602);

assign or_ln112_4_fu_1706_p2 = (icmp_ln112_9_reg_3670 | icmp_ln112_8_reg_3665);

assign or_ln112_5_fu_1710_p2 = (icmp_ln112_11_reg_3680 | icmp_ln112_10_reg_3675);

assign or_ln112_6_fu_1771_p2 = (icmp_ln112_13_fu_1765_p2 | icmp_ln112_12_fu_1759_p2);

assign or_ln112_7_fu_1789_p2 = (icmp_ln112_15_fu_1783_p2 | icmp_ln112_14_fu_1777_p2);

assign or_ln112_8_fu_1904_p2 = (icmp_ln112_17_fu_1898_p2 | icmp_ln112_16_fu_1892_p2);

assign or_ln112_9_fu_1922_p2 = (icmp_ln112_19_fu_1916_p2 | icmp_ln112_18_fu_1910_p2);

assign or_ln112_fu_1584_p2 = (icmp_ln112_reg_3567 | icmp_ln112_1_reg_3572);

assign or_ln116_1_fu_2113_p2 = (icmp_ln116_3_fu_2107_p2 | icmp_ln116_2_fu_2101_p2);

assign or_ln116_2_fu_2167_p2 = (icmp_ln116_5_fu_2161_p2 | icmp_ln116_4_fu_2155_p2);

assign or_ln116_3_fu_2214_p2 = (icmp_ln116_7_fu_2208_p2 | icmp_ln116_6_fu_2202_p2);

assign or_ln116_4_fu_2261_p2 = (icmp_ln116_9_fu_2255_p2 | icmp_ln116_8_fu_2249_p2);

assign or_ln116_fu_2066_p2 = (icmp_ln116_fu_2054_p2 | icmp_ln116_1_fu_2060_p2);

assign or_ln122_fu_2308_p2 = (icmp_ln122_fu_2296_p2 | icmp_ln122_1_fu_2302_p2);

assign or_ln130_1_fu_2398_p2 = (icmp_ln130_2_fu_2392_p2 | icmp_ln130_1_fu_2386_p2);

assign or_ln130_2_fu_2416_p2 = (icmp_ln130_4_fu_2410_p2 | icmp_ln130_3_fu_2404_p2);

assign or_ln130_fu_2433_p2 = (icmp_ln130_fu_2346_p2 | and_ln130_1_fu_2428_p2);

assign or_ln139_1_fu_2547_p2 = (icmp_ln139_fu_2535_p2 | icmp_ln139_1_fu_2541_p2);

assign or_ln139_2_fu_2565_p2 = (icmp_ln139_3_fu_2559_p2 | icmp_ln139_2_fu_2553_p2);

assign or_ln139_fu_2582_p2 = (tmp_fu_2494_p3 | and_ln139_1_fu_2577_p2);

assign ov_10_fu_2023_p3 = ((and_ln112_5_reg_3705_pp0_iter2_reg[0:0] == 1'b1) ? reg_1093 : reg_1093);

assign ov_11_fu_2178_p3 = ((and_ln116_2_fu_2173_p2[0:0] == 1'b1) ? 32'd0 : ov_10_reg_3927);

assign ov_14_fu_2030_p3 = ((and_ln112_7_reg_3710_pp0_iter2_reg[0:0] == 1'b1) ? reg_1109 : reg_1109);

assign ov_15_fu_2225_p3 = ((and_ln116_3_fu_2220_p2[0:0] == 1'b1) ? 32'd0 : ov_14_reg_3934);

assign ov_18_fu_2131_p3 = ((and_ln112_9_reg_3740_pp0_iter2_reg[0:0] == 1'b1) ? reg_1109 : reg_1109);

assign ov_19_fu_2272_p3 = ((and_ln116_4_fu_2267_p2[0:0] == 1'b1) ? 32'd0 : ov_18_reg_3951);

assign ov_20_fu_2077_p3 = ((and_ln116_fu_2072_p2[0:0] == 1'b1) ? 32'd0 : ov_2_reg_3903);

assign ov_2_fu_2010_p3 = ((and_ln112_1_reg_3655_pp0_iter2_reg[0:0] == 1'b1) ? ov_reg_3888 : reg_1109);

assign ov_6_fu_2016_p3 = ((and_ln112_3_reg_3660_pp0_iter2_reg[0:0] == 1'b1) ? reg_1113 : reg_1113);

assign ov_7_fu_2124_p3 = ((and_ln116_1_fu_2119_p2[0:0] == 1'b1) ? 32'd0 : ov_6_reg_3910);

assign sc_2_fu_2332_p3 = ((and_ln122_fu_2314_p2[0:0] == 1'b1) ? overlap_4_reg_4013_pp0_iter6_reg : sc_fu_2328_p1);

assign sc_fu_2328_p1 = xor_ln126_fu_2322_p2;

assign score_2_fu_2588_p3 = ((or_ln139_fu_2582_p2[0:0] == 1'b1) ? tmp_score_4_reg_4060 : score_load_reg_4068);

assign score_3_fu_2606_p3 = ((icmp_ln1019_reg_3755_pp0_iter8_reg[0:0] == 1'b1) ? score_2_fu_2588_p3 : score_load_reg_4068);

assign tmp_30_fu_1393_p4 = {{bitcast_ln112_fu_1390_p1[30:23]}};

assign tmp_31_fu_1410_p4 = {{bitcast_ln112_1_fu_1407_p1[30:23]}};

assign tmp_33_fu_2040_p4 = {{bitcast_ln116_fu_2037_p1[30:23]}};

assign tmp_35_fu_1451_p4 = {{bitcast_ln112_2_fu_1448_p1[30:23]}};

assign tmp_36_fu_1468_p4 = {{bitcast_ln112_3_fu_1465_p1[30:23]}};

assign tmp_38_fu_2087_p4 = {{bitcast_ln116_1_fu_2084_p1[30:23]}};

assign tmp_40_fu_1625_p4 = {{bitcast_ln112_4_fu_1622_p1[30:23]}};

assign tmp_41_fu_1642_p4 = {{bitcast_ln112_5_fu_1639_p1[30:23]}};

assign tmp_43_fu_2141_p4 = {{bitcast_ln116_2_fu_2138_p1[30:23]}};

assign tmp_45_fu_1728_p4 = {{bitcast_ln112_6_fu_1725_p1[30:23]}};

assign tmp_46_fu_1745_p4 = {{bitcast_ln112_7_fu_1742_p1[30:23]}};

assign tmp_48_fu_2188_p4 = {{bitcast_ln116_3_fu_2185_p1[30:23]}};

assign tmp_50_fu_1861_p4 = {{bitcast_ln112_8_fu_1858_p1[30:23]}};

assign tmp_51_fu_1878_p4 = {{bitcast_ln112_9_fu_1875_p1[30:23]}};

assign tmp_53_fu_2235_p4 = {{bitcast_ln116_4_fu_2232_p1[30:23]}};

assign tmp_55_fu_2282_p4 = {{bitcast_ln122_fu_2279_p1[30:23]}};

assign tmp_57_fu_2355_p4 = {{bitcast_ln130_fu_2352_p1[30:23]}};

assign tmp_58_fu_2372_p4 = {{bitcast_ln130_1_fu_2369_p1[30:23]}};

assign tmp_60_fu_2504_p4 = {{bitcast_ln139_fu_2501_p1[30:23]}};

assign tmp_61_fu_2521_p4 = {{bitcast_ln139_1_fu_2518_p1[30:23]}};

assign tmp_fu_2494_p3 = merge_1_4_reg_4076[32'd31];

assign tmp_other_3_fu_2456_p3 = ((icmp_ln1019_reg_3755_pp0_iter7_reg[0:0] == 1'b1) ? 32'd4294967295 : tmp_other_4_reg_4054);

assign tmp_other_4_fu_2439_p3 = ((or_ln130_fu_2433_p2[0:0] == 1'b1) ? k_real_5_reg_3416_pp0_iter7_reg : tmp_other_fu_316);

assign tmp_score_3_fu_2462_p3 = ((icmp_ln1019_reg_3755_pp0_iter7_reg[0:0] == 1'b1) ? 32'd0 : tmp_score_4_reg_4060);

assign tmp_score_4_fu_2446_p3 = ((or_ln130_fu_2433_p2[0:0] == 1'b1) ? sc_2_reg_4035 : tmp_score_load_reg_4042);

assign trunc_ln104_1_fu_1182_p1 = k_real_4_fu_308[2:0];

assign trunc_ln104_fu_1164_p1 = merge_1_1_fu_304[2:0];

assign trunc_ln112_1_fu_1420_p1 = bitcast_ln112_1_fu_1407_p1[22:0];

assign trunc_ln112_2_fu_1461_p1 = bitcast_ln112_2_fu_1448_p1[22:0];

assign trunc_ln112_3_fu_1478_p1 = bitcast_ln112_3_fu_1465_p1[22:0];

assign trunc_ln112_4_fu_1635_p1 = bitcast_ln112_4_fu_1622_p1[22:0];

assign trunc_ln112_5_fu_1652_p1 = bitcast_ln112_5_fu_1639_p1[22:0];

assign trunc_ln112_6_fu_1738_p1 = bitcast_ln112_6_fu_1725_p1[22:0];

assign trunc_ln112_7_fu_1755_p1 = bitcast_ln112_7_fu_1742_p1[22:0];

assign trunc_ln112_8_fu_1871_p1 = bitcast_ln112_8_fu_1858_p1[22:0];

assign trunc_ln112_9_fu_1888_p1 = bitcast_ln112_9_fu_1875_p1[22:0];

assign trunc_ln112_fu_1403_p1 = bitcast_ln112_fu_1390_p1[22:0];

assign trunc_ln116_1_fu_2097_p1 = bitcast_ln116_1_fu_2084_p1[22:0];

assign trunc_ln116_2_fu_2151_p1 = bitcast_ln116_2_fu_2138_p1[22:0];

assign trunc_ln116_3_fu_2198_p1 = bitcast_ln116_3_fu_2185_p1[22:0];

assign trunc_ln116_4_fu_2245_p1 = bitcast_ln116_4_fu_2232_p1[22:0];

assign trunc_ln116_fu_2050_p1 = bitcast_ln116_fu_2037_p1[22:0];

assign trunc_ln122_fu_2292_p1 = bitcast_ln122_fu_2279_p1[22:0];

assign trunc_ln130_1_fu_2382_p1 = bitcast_ln130_1_fu_2369_p1[22:0];

assign trunc_ln130_fu_2365_p1 = bitcast_ln130_fu_2352_p1[22:0];

assign trunc_ln139_1_fu_2531_p1 = bitcast_ln139_1_fu_2518_p1[22:0];

assign trunc_ln139_fu_2514_p1 = bitcast_ln139_fu_2501_p1[22:0];

assign xor_ln126_fu_2322_p2 = (bitcast_ln126_fu_2319_p1 ^ 32'd2147483648);

endmodule //FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1
