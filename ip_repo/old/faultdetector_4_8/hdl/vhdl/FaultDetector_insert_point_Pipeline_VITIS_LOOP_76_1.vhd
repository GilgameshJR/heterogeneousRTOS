-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    regions_center_0_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    merge_2_out : OUT STD_LOGIC_VECTOR (2 downto 0);
    merge_2_out_ap_vld : OUT STD_LOGIC;
    merge_1_out : OUT STD_LOGIC_VECTOR (2 downto 0);
    merge_1_out_ap_vld : OUT STD_LOGIC;
    grp_fu_4622_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4622_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4622_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_4622_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4622_p_ce : OUT STD_LOGIC;
    grp_fu_4628_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4628_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4628_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4628_p_ce : OUT STD_LOGIC;
    grp_fu_4633_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4633_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4633_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_4633_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_4633_p_ce : OUT STD_LOGIC;
    grp_fu_4638_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4638_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_4638_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_4638_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_4638_p_ce : OUT STD_LOGIC );
end;


architecture behav of FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state24_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_state32_pp0_stage7_iter3 : BOOLEAN;
    signal ap_block_state40_pp0_stage7_iter4 : BOOLEAN;
    signal ap_block_state48_pp0_stage7_iter5 : BOOLEAN;
    signal ap_block_state56_pp0_stage7_iter6 : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal icmp_ln1027_reg_2867 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage7 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal reg_893 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state34_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state42_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state50_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state58_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state23_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_state31_pp0_stage6_iter3 : BOOLEAN;
    signal ap_block_state39_pp0_stage6_iter4 : BOOLEAN;
    signal ap_block_state47_pp0_stage6_iter5 : BOOLEAN;
    signal ap_block_state55_pp0_stage6_iter6 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal icmp_ln1027_reg_2867_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_1_reg_3045 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_1_reg_3045_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state49_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state57_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal and_ln112_7_reg_3090 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_7_reg_3090_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_899 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state22_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_state30_pp0_stage5_iter3 : BOOLEAN;
    signal ap_block_state38_pp0_stage5_iter4 : BOOLEAN;
    signal ap_block_state46_pp0_stage5_iter5 : BOOLEAN;
    signal ap_block_state54_pp0_stage5_iter6 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal icmp_ln1027_reg_2867_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_866_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_905 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln112_3_reg_3050 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_3_reg_3050_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal and_ln112_5_reg_3085 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_5_reg_3085_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_real_3_reg_2852 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_2852_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_2852_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_2852_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_2852_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_2852_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_2852_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_2852_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_2860 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_2860_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_2860_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_2860_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_2860_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_2860_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_2860_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1027_fu_950_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_2867_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_2867_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_2867_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_2867_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_2867_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln104_fu_956_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln104_reg_2871 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_960_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_2882 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln104_1_fu_974_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln104_1_reg_2887 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_1_fu_978_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_2898 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_992_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_2903 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_1006_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_2908 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_1020_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_2917 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_1034_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_2922 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1048_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_2931 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1062_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_2936 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1076_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_2941 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_1090_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_reg_2950 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1104_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_2959 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state35_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state43_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state51_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state59_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp_10_fu_1117_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_reg_2964 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1130_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_reg_2969 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_1143_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_reg_2978 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_1156_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_reg_2987 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_1169_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_reg_2996 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln112_fu_1216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_reg_3005 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state28_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state36_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state44_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state52_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state60_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal icmp_ln112_1_fu_1222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_1_reg_3010 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_2_fu_1228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_2_reg_3015 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_3_fu_1234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_3_reg_3020 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_3025 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_3030 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_14_fu_1240_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_reg_3035 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_1253_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_reg_3040 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln112_1_fu_1279_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state21_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state29_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state37_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state45_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_state53_pp0_stage4_iter6 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal and_ln112_1_reg_3045_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_3_fu_1360_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_3_reg_3050_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_12_fu_1366_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_reg_3055 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1379_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_reg_3060 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_reg_3065 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_20_fu_1392_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_reg_3070 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_1405_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_reg_3075 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_reg_3080 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_5_fu_1494_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_5_reg_3085_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_7_fu_1575_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_7_reg_3090_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_18_fu_1580_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_reg_3095 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_1593_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_reg_3100 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1019_fu_1606_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_3105 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_3105_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_3105_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_3105_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_3105_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_3105_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_3105_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal d1_reg_3114 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_870_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_reg_3119 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_874_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_1_reg_3124 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_reg_3130 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub2_reg_3135 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_1_reg_3140 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_1_reg_3145 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub75_1_reg_3150 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub87_1_reg_3155 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_2_reg_3160 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_2_reg_3165 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_2_reg_3170 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub75_2_reg_3176 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub87_2_reg_3181 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_3_reg_3186 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_3191 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub87_3_reg_3196 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_3201 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_3201_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal d_3_reg_3206 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_3212 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_3212_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_3212_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_3217 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_3217_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_3217_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_reg_3222 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_2_fu_1651_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_2_reg_3227 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_6_fu_1658_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_6_reg_3234 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_10_fu_1665_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_10_reg_3241 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_reg_3248 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_reg_3253 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_14_fu_1672_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_14_reg_3258 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_16_fu_1719_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_16_reg_3265 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_7_fu_1766_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_7_reg_3270 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_reg_3275 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_11_fu_1813_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_11_reg_3280 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_reg_3285 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_15_fu_1860_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_15_reg_3290 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_1_reg_3295 : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_1_reg_3300 : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_2_reg_3305 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_2_reg_3310 : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_3_reg_3315 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_reg_3322 : STD_LOGIC_VECTOR (0 downto 0);
    signal distance_3_reg_3327 : STD_LOGIC_VECTOR (31 downto 0);
    signal sc_2_fu_1920_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sc_2_reg_3332 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_load_reg_3339 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_reg_3346 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_other_4_fu_2027_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_other_4_reg_3351 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_4_fu_2034_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_4_reg_3357 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_load_reg_3365 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_1_4_reg_3373 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_2_1_reg_3380 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_reg_3386 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter7_stage2 : STD_LOGIC;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal merge_1_fu_244 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_1_7_fu_2206_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal merge_2_fu_248 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_2_6_fu_2200_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_fu_252 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_3_fu_2194_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal merge_1_1_fu_256 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_2_fu_1634_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_4_fu_260 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_3_fu_1626_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_fu_264 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_3_fu_2046_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal tmp_other_fu_268 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_other_3_fu_2040_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_fu_862_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_862_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal grp_fu_866_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_866_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_870_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_870_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_874_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_874_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_879_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_879_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_883_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_883_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_887_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_887_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_fu_1182_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_1_fu_1199_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_1185_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_fu_1195_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_25_fu_1202_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_1_fu_1212_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln112_1_fu_1270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_fu_1274_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_fu_1266_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln112_2_fu_1285_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_3_fu_1302_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_1288_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_2_fu_1298_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_5_fu_1325_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_4_fu_1319_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_1305_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_3_fu_1315_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_7_fu_1343_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_6_fu_1337_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_3_fu_1349_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_2_fu_1355_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_2_fu_1331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln112_4_fu_1418_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_5_fu_1435_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_1421_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_4_fu_1431_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_9_fu_1458_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_8_fu_1452_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_1438_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_5_fu_1448_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_11_fu_1476_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_10_fu_1470_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_4_fu_1464_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_5_fu_1482_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_4_fu_1488_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln112_6_fu_1499_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_7_fu_1516_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_1502_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_6_fu_1512_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_13_fu_1539_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_12_fu_1533_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_1519_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_7_fu_1529_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_15_fu_1557_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_14_fu_1551_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_6_fu_1545_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_7_fu_1563_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_6_fu_1569_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_real_fu_1616_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_2_fu_1621_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_fu_1611_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln116_fu_1679_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_1682_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_fu_1692_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_1_fu_1702_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_fu_1696_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_fu_1708_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_fu_1714_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_1_fu_1726_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_1729_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_1_fu_1739_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_3_fu_1749_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_2_fu_1743_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_1_fu_1755_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_1_fu_1761_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_2_fu_1773_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_fu_1776_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_2_fu_1786_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_5_fu_1796_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_4_fu_1790_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_2_fu_1802_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_2_fu_1808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_3_fu_1820_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_fu_1823_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_3_fu_1833_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_7_fu_1843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_6_fu_1837_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_3_fu_1849_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_3_fu_1855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln122_fu_1867_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_fu_1870_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln122_fu_1880_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln122_1_fu_1890_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln122_fu_1884_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln122_fu_1896_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln126_fu_1907_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln126_fu_1910_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln122_fu_1902_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sc_fu_1916_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln130_fu_1940_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln130_1_fu_1957_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_1943_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln130_fu_1953_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln130_2_fu_1980_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_1_fu_1974_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_1960_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln130_1_fu_1970_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln130_4_fu_1998_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_3_fu_1992_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_1_fu_1986_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_2_fu_2004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln130_fu_2010_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_fu_1934_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln130_1_fu_2016_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_fu_2021_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln139_fu_2089_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln139_1_fu_2106_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_fu_2092_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln139_fu_2102_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln139_1_fu_2129_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln139_fu_2123_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_2109_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln139_1_fu_2119_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln139_3_fu_2147_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln139_2_fu_2141_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln139_1_fu_2135_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln139_2_fu_2153_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln139_fu_2159_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_2082_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln139_1_fu_2165_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln139_fu_2170_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal score_2_fu_2176_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_2_5_fu_2182_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_1_6_fu_2188_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp0_stage5_00001 : BOOLEAN;
    signal ap_block_pp0_stage6_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage7_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal grp_fu_866_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_870_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_883_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_887_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_idle_pp0_0to6 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to7 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component FaultDetector_mux_83_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    faddfsub_32ns_32ns_32_8_full_dsp_1_U11 : component FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_866_p0,
        din1 => grp_fu_866_p1,
        opcode => grp_fu_866_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_866_p2);

    faddfsub_32ns_32ns_32_8_full_dsp_1_U12 : component FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_870_p0,
        din1 => grp_fu_870_p1,
        opcode => grp_fu_870_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_870_p2);

    fsub_32ns_32ns_32_8_full_dsp_1_U13 : component FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_874_p0,
        din1 => grp_fu_874_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_874_p2);

    mux_83_32_1_1_U17 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_0_0,
        din1 => regions_center_1_0_0,
        din2 => regions_center_2_0_0,
        din3 => regions_center_3_0_0,
        din4 => regions_center_4_0_0,
        din5 => regions_center_5_0_0,
        din6 => regions_center_6_0_0,
        din7 => regions_center_7_0_0,
        din8 => trunc_ln104_fu_956_p1,
        dout => tmp_s_fu_960_p10);

    mux_83_32_1_1_U18 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_0_0,
        din1 => regions_center_1_0_0,
        din2 => regions_center_2_0_0,
        din3 => regions_center_3_0_0,
        din4 => regions_center_4_0_0,
        din5 => regions_center_5_0_0,
        din6 => regions_center_6_0_0,
        din7 => regions_center_7_0_0,
        din8 => trunc_ln104_1_fu_974_p1,
        dout => tmp_1_fu_978_p10);

    mux_83_32_1_1_U19 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_0_0,
        din1 => regions_max_1_0_0,
        din2 => regions_max_2_0_0,
        din3 => regions_max_3_0_0,
        din4 => regions_max_4_0_0,
        din5 => regions_max_5_0_0,
        din6 => regions_max_6_0_0,
        din7 => regions_max_7_0_0,
        din8 => trunc_ln104_fu_956_p1,
        dout => tmp_2_fu_992_p10);

    mux_83_32_1_1_U20 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_0_0,
        din1 => regions_min_1_0_0,
        din2 => regions_min_2_0_0,
        din3 => regions_min_3_0_0,
        din4 => regions_min_4_0_0,
        din5 => regions_min_5_0_0,
        din6 => regions_min_6_0_0,
        din7 => regions_min_7_0_0,
        din8 => trunc_ln104_fu_956_p1,
        dout => tmp_3_fu_1006_p10);

    mux_83_32_1_1_U21 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_0_0,
        din1 => regions_max_1_0_0,
        din2 => regions_max_2_0_0,
        din3 => regions_max_3_0_0,
        din4 => regions_max_4_0_0,
        din5 => regions_max_5_0_0,
        din6 => regions_max_6_0_0,
        din7 => regions_max_7_0_0,
        din8 => trunc_ln104_1_fu_974_p1,
        dout => tmp_4_fu_1020_p10);

    mux_83_32_1_1_U22 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_0_0,
        din1 => regions_min_1_0_0,
        din2 => regions_min_2_0_0,
        din3 => regions_min_3_0_0,
        din4 => regions_min_4_0_0,
        din5 => regions_min_5_0_0,
        din6 => regions_min_6_0_0,
        din7 => regions_min_7_0_0,
        din8 => trunc_ln104_1_fu_974_p1,
        dout => tmp_5_fu_1034_p10);

    mux_83_32_1_1_U23 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_1_0,
        din1 => regions_center_1_1_0,
        din2 => regions_center_2_1_0,
        din3 => regions_center_3_1_0,
        din4 => regions_center_4_1_0,
        din5 => regions_center_5_1_0,
        din6 => regions_center_6_1_0,
        din7 => regions_center_7_1_0,
        din8 => trunc_ln104_fu_956_p1,
        dout => tmp_6_fu_1048_p10);

    mux_83_32_1_1_U24 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_1_0,
        din1 => regions_center_1_1_0,
        din2 => regions_center_2_1_0,
        din3 => regions_center_3_1_0,
        din4 => regions_center_4_1_0,
        din5 => regions_center_5_1_0,
        din6 => regions_center_6_1_0,
        din7 => regions_center_7_1_0,
        din8 => trunc_ln104_1_fu_974_p1,
        dout => tmp_7_fu_1062_p10);

    mux_83_32_1_1_U25 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_1_0,
        din1 => regions_min_1_1_0,
        din2 => regions_min_2_1_0,
        din3 => regions_min_3_1_0,
        din4 => regions_min_4_1_0,
        din5 => regions_min_5_1_0,
        din6 => regions_min_6_1_0,
        din7 => regions_min_7_1_0,
        din8 => trunc_ln104_fu_956_p1,
        dout => tmp_9_fu_1076_p10);

    mux_83_32_1_1_U26 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_1_0,
        din1 => regions_min_1_1_0,
        din2 => regions_min_2_1_0,
        din3 => regions_min_3_1_0,
        din4 => regions_min_4_1_0,
        din5 => regions_min_5_1_0,
        din6 => regions_min_6_1_0,
        din7 => regions_min_7_1_0,
        din8 => trunc_ln104_1_fu_974_p1,
        dout => tmp_11_fu_1090_p10);

    mux_83_32_1_1_U27 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_1_0,
        din1 => regions_max_1_1_0,
        din2 => regions_max_2_1_0,
        din3 => regions_max_3_1_0,
        din4 => regions_max_4_1_0,
        din5 => regions_max_5_1_0,
        din6 => regions_max_6_1_0,
        din7 => regions_max_7_1_0,
        din8 => trunc_ln104_reg_2871,
        dout => tmp_8_fu_1104_p10);

    mux_83_32_1_1_U28 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_1_0,
        din1 => regions_max_1_1_0,
        din2 => regions_max_2_1_0,
        din3 => regions_max_3_1_0,
        din4 => regions_max_4_1_0,
        din5 => regions_max_5_1_0,
        din6 => regions_max_6_1_0,
        din7 => regions_max_7_1_0,
        din8 => trunc_ln104_1_reg_2887,
        dout => tmp_10_fu_1117_p10);

    mux_83_32_1_1_U29 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_2_0,
        din1 => regions_min_1_2_0,
        din2 => regions_min_2_2_0,
        din3 => regions_min_3_2_0,
        din4 => regions_min_4_2_0,
        din5 => regions_min_5_2_0,
        din6 => regions_min_6_2_0,
        din7 => regions_min_7_2_0,
        din8 => trunc_ln104_reg_2871,
        dout => tmp_15_fu_1130_p10);

    mux_83_32_1_1_U30 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_2_0,
        din1 => regions_min_1_2_0,
        din2 => regions_min_2_2_0,
        din3 => regions_min_3_2_0,
        din4 => regions_min_4_2_0,
        din5 => regions_min_5_2_0,
        din6 => regions_min_6_2_0,
        din7 => regions_min_7_2_0,
        din8 => trunc_ln104_1_reg_2887,
        dout => tmp_17_fu_1143_p10);

    mux_83_32_1_1_U31 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_3_0,
        din1 => regions_min_1_3_0,
        din2 => regions_min_2_3_0,
        din3 => regions_min_3_3_0,
        din4 => regions_min_4_3_0,
        din5 => regions_min_5_3_0,
        din6 => regions_min_6_3_0,
        din7 => regions_min_7_3_0,
        din8 => trunc_ln104_reg_2871,
        dout => tmp_21_fu_1156_p10);

    mux_83_32_1_1_U32 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_3_0,
        din1 => regions_min_1_3_0,
        din2 => regions_min_2_3_0,
        din3 => regions_min_3_3_0,
        din4 => regions_min_4_3_0,
        din5 => regions_min_5_3_0,
        din6 => regions_min_6_3_0,
        din7 => regions_min_7_3_0,
        din8 => trunc_ln104_1_reg_2887,
        dout => tmp_23_fu_1169_p10);

    mux_83_32_1_1_U33 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_2_0,
        din1 => regions_max_1_2_0,
        din2 => regions_max_2_2_0,
        din3 => regions_max_3_2_0,
        din4 => regions_max_4_2_0,
        din5 => regions_max_5_2_0,
        din6 => regions_max_6_2_0,
        din7 => regions_max_7_2_0,
        din8 => trunc_ln104_reg_2871,
        dout => tmp_14_fu_1240_p10);

    mux_83_32_1_1_U34 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_2_0,
        din1 => regions_max_1_2_0,
        din2 => regions_max_2_2_0,
        din3 => regions_max_3_2_0,
        din4 => regions_max_4_2_0,
        din5 => regions_max_5_2_0,
        din6 => regions_max_6_2_0,
        din7 => regions_max_7_2_0,
        din8 => trunc_ln104_1_reg_2887,
        dout => tmp_16_fu_1253_p10);

    mux_83_32_1_1_U35 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_2_0,
        din1 => regions_center_1_2_0,
        din2 => regions_center_2_2_0,
        din3 => regions_center_3_2_0,
        din4 => regions_center_4_2_0,
        din5 => regions_center_5_2_0,
        din6 => regions_center_6_2_0,
        din7 => regions_center_7_2_0,
        din8 => trunc_ln104_reg_2871,
        dout => tmp_12_fu_1366_p10);

    mux_83_32_1_1_U36 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_2_0,
        din1 => regions_center_1_2_0,
        din2 => regions_center_2_2_0,
        din3 => regions_center_3_2_0,
        din4 => regions_center_4_2_0,
        din5 => regions_center_5_2_0,
        din6 => regions_center_6_2_0,
        din7 => regions_center_7_2_0,
        din8 => trunc_ln104_1_reg_2887,
        dout => tmp_13_fu_1379_p10);

    mux_83_32_1_1_U37 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_3_0,
        din1 => regions_max_1_3_0,
        din2 => regions_max_2_3_0,
        din3 => regions_max_3_3_0,
        din4 => regions_max_4_3_0,
        din5 => regions_max_5_3_0,
        din6 => regions_max_6_3_0,
        din7 => regions_max_7_3_0,
        din8 => trunc_ln104_reg_2871,
        dout => tmp_20_fu_1392_p10);

    mux_83_32_1_1_U38 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_3_0,
        din1 => regions_max_1_3_0,
        din2 => regions_max_2_3_0,
        din3 => regions_max_3_3_0,
        din4 => regions_max_4_3_0,
        din5 => regions_max_5_3_0,
        din6 => regions_max_6_3_0,
        din7 => regions_max_7_3_0,
        din8 => trunc_ln104_1_reg_2887,
        dout => tmp_22_fu_1405_p10);

    mux_83_32_1_1_U39 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_3_0,
        din1 => regions_center_1_3_0,
        din2 => regions_center_2_3_0,
        din3 => regions_center_3_3_0,
        din4 => regions_center_4_3_0,
        din5 => regions_center_5_3_0,
        din6 => regions_center_6_3_0,
        din7 => regions_center_7_3_0,
        din8 => trunc_ln104_reg_2871,
        dout => tmp_18_fu_1580_p10);

    mux_83_32_1_1_U40 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_3_0,
        din1 => regions_center_1_3_0,
        din2 => regions_center_2_3_0,
        din3 => regions_center_3_3_0,
        din4 => regions_center_4_3_0,
        din5 => regions_center_5_3_0,
        din6 => regions_center_6_3_0,
        din7 => regions_center_7_3_0,
        din8 => trunc_ln104_1_reg_2887,
        dout => tmp_19_fu_1593_p10);

    flow_control_loop_pipe_sequential_init_U : component FaultDetector_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage7,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2) or ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2)))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    k_real_4_fu_260_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    k_real_4_fu_260 <= ap_const_lv32_1;
                elsif (((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    k_real_4_fu_260 <= k_real_3_fu_1626_p3;
                end if;
            end if; 
        end if;
    end process;

    merge_1_1_fu_256_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    merge_1_1_fu_256 <= ap_const_lv32_0;
                elsif (((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    merge_1_1_fu_256 <= i_real_2_fu_1634_p3;
                end if;
            end if; 
        end if;
    end process;

    merge_1_fu_244_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                merge_1_fu_244 <= ap_const_lv32_FFFFFFFF;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln1027_reg_2867_pp0_iter7_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                merge_1_fu_244 <= merge_1_7_fu_2206_p3;
            end if; 
        end if;
    end process;

    merge_2_fu_248_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                merge_2_fu_248 <= ap_const_lv32_FFFFFFFF;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln1027_reg_2867_pp0_iter7_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                merge_2_fu_248 <= merge_2_6_fu_2200_p3;
            end if; 
        end if;
    end process;

    score_fu_252_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_loop_init = ap_const_logic_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                score_fu_252 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln1027_reg_2867_pp0_iter7_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                score_fu_252 <= score_3_fu_2194_p3;
            end if; 
        end if;
    end process;

    tmp_other_fu_268_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    tmp_other_fu_268 <= ap_const_lv32_FFFFFFFF;
                elsif (((icmp_ln1027_reg_2867_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
                    tmp_other_fu_268 <= tmp_other_3_fu_2040_p3;
                end if;
            end if; 
        end if;
    end process;

    tmp_score_fu_264_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    tmp_score_fu_264 <= ap_const_lv32_0;
                elsif (((icmp_ln1027_reg_2867_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1))) then 
                    tmp_score_fu_264 <= tmp_score_3_fu_2046_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                and_ln112_1_reg_3045 <= and_ln112_1_fu_1279_p2;
                and_ln112_3_reg_3050 <= and_ln112_3_fu_1360_p2;
                tmp_12_reg_3055 <= tmp_12_fu_1366_p10;
                tmp_13_reg_3060 <= tmp_13_fu_1379_p10;
                tmp_20_reg_3070 <= tmp_20_fu_1392_p10;
                tmp_22_reg_3075 <= tmp_22_fu_1405_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                and_ln112_1_reg_3045_pp0_iter1_reg <= and_ln112_1_reg_3045;
                and_ln112_1_reg_3045_pp0_iter2_reg <= and_ln112_1_reg_3045_pp0_iter1_reg;
                and_ln112_3_reg_3050_pp0_iter1_reg <= and_ln112_3_reg_3050;
                and_ln112_3_reg_3050_pp0_iter2_reg <= and_ln112_3_reg_3050_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                and_ln112_5_reg_3085 <= and_ln112_5_fu_1494_p2;
                and_ln112_7_reg_3090 <= and_ln112_7_fu_1575_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                and_ln112_5_reg_3085_pp0_iter1_reg <= and_ln112_5_reg_3085;
                and_ln112_5_reg_3085_pp0_iter2_reg <= and_ln112_5_reg_3085_pp0_iter1_reg;
                and_ln112_7_reg_3090_pp0_iter1_reg <= and_ln112_7_reg_3090;
                and_ln112_7_reg_3090_pp0_iter2_reg <= and_ln112_7_reg_3090_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                d1_1_reg_3140 <= grp_fu_870_p2;
                d2_1_reg_3145 <= grp_fu_874_p2;
                sub2_reg_3135 <= grp_fu_866_p2;
                sub_reg_3130 <= grp_fu_4622_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                d1_2_reg_3160 <= grp_fu_870_p2;
                d2_2_reg_3165 <= grp_fu_874_p2;
                sub75_1_reg_3150 <= grp_fu_4622_p_dout0;
                sub87_1_reg_3155 <= grp_fu_866_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                d1_3_reg_3186 <= grp_fu_874_p2;
                d_2_reg_3170 <= grp_fu_4622_p_dout0;
                sub75_2_reg_3176 <= grp_fu_866_p2;
                sub87_2_reg_3181 <= grp_fu_870_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                d1_reg_3114 <= grp_fu_866_p2;
                d2_reg_3119 <= grp_fu_870_p2;
                d_1_reg_3124 <= grp_fu_874_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                d_3_reg_3206 <= grp_fu_4622_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_2867_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                distance_1_reg_3295 <= grp_fu_870_p2;
                overlap_1_reg_3300 <= grp_fu_4628_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_2867_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                distance_2_reg_3310 <= grp_fu_866_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_2867_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                distance_3_reg_3327 <= grp_fu_870_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                distance_reg_3222 <= grp_fu_870_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                i_real_3_reg_2852 <= merge_1_1_fu_256;
                i_real_3_reg_2852_pp0_iter1_reg <= i_real_3_reg_2852;
                i_real_3_reg_2852_pp0_iter2_reg <= i_real_3_reg_2852_pp0_iter1_reg;
                i_real_3_reg_2852_pp0_iter3_reg <= i_real_3_reg_2852_pp0_iter2_reg;
                i_real_3_reg_2852_pp0_iter4_reg <= i_real_3_reg_2852_pp0_iter3_reg;
                i_real_3_reg_2852_pp0_iter5_reg <= i_real_3_reg_2852_pp0_iter4_reg;
                i_real_3_reg_2852_pp0_iter6_reg <= i_real_3_reg_2852_pp0_iter5_reg;
                i_real_3_reg_2852_pp0_iter7_reg <= i_real_3_reg_2852_pp0_iter6_reg;
                icmp_ln1027_reg_2867 <= icmp_ln1027_fu_950_p2;
                icmp_ln1027_reg_2867_pp0_iter1_reg <= icmp_ln1027_reg_2867;
                icmp_ln1027_reg_2867_pp0_iter2_reg <= icmp_ln1027_reg_2867_pp0_iter1_reg;
                icmp_ln1027_reg_2867_pp0_iter3_reg <= icmp_ln1027_reg_2867_pp0_iter2_reg;
                icmp_ln1027_reg_2867_pp0_iter4_reg <= icmp_ln1027_reg_2867_pp0_iter3_reg;
                icmp_ln1027_reg_2867_pp0_iter5_reg <= icmp_ln1027_reg_2867_pp0_iter4_reg;
                icmp_ln1027_reg_2867_pp0_iter6_reg <= icmp_ln1027_reg_2867_pp0_iter5_reg;
                icmp_ln1027_reg_2867_pp0_iter7_reg <= icmp_ln1027_reg_2867_pp0_iter6_reg;
                k_real_5_reg_2860 <= k_real_4_fu_260;
                k_real_5_reg_2860_pp0_iter1_reg <= k_real_5_reg_2860;
                k_real_5_reg_2860_pp0_iter2_reg <= k_real_5_reg_2860_pp0_iter1_reg;
                k_real_5_reg_2860_pp0_iter3_reg <= k_real_5_reg_2860_pp0_iter2_reg;
                k_real_5_reg_2860_pp0_iter4_reg <= k_real_5_reg_2860_pp0_iter3_reg;
                k_real_5_reg_2860_pp0_iter5_reg <= k_real_5_reg_2860_pp0_iter4_reg;
                k_real_5_reg_2860_pp0_iter6_reg <= k_real_5_reg_2860_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1019_reg_3105 <= icmp_ln1019_fu_1606_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1019_reg_3105_pp0_iter2_reg <= icmp_ln1019_reg_3105;
                icmp_ln1019_reg_3105_pp0_iter3_reg <= icmp_ln1019_reg_3105_pp0_iter2_reg;
                icmp_ln1019_reg_3105_pp0_iter4_reg <= icmp_ln1019_reg_3105_pp0_iter3_reg;
                icmp_ln1019_reg_3105_pp0_iter5_reg <= icmp_ln1019_reg_3105_pp0_iter4_reg;
                icmp_ln1019_reg_3105_pp0_iter6_reg <= icmp_ln1019_reg_3105_pp0_iter5_reg;
                icmp_ln1019_reg_3105_pp0_iter7_reg <= icmp_ln1019_reg_3105_pp0_iter6_reg;
                mul_2_reg_3212_pp0_iter3_reg <= mul_2_reg_3212;
                mul_2_reg_3212_pp0_iter4_reg <= mul_2_reg_3212_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                icmp_ln112_1_reg_3010 <= icmp_ln112_1_fu_1222_p2;
                icmp_ln112_2_reg_3015 <= icmp_ln112_2_fu_1228_p2;
                icmp_ln112_3_reg_3020 <= icmp_ln112_3_fu_1234_p2;
                icmp_ln112_reg_3005 <= icmp_ln112_fu_1216_p2;
                tmp_14_reg_3035 <= tmp_14_fu_1240_p10;
                tmp_16_reg_3040 <= tmp_16_fu_1253_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                merge_1_4_reg_3373 <= merge_1_fu_244;
                merge_2_1_reg_3380 <= merge_2_fu_248;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                mul_1_reg_3201 <= grp_fu_4628_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                mul_1_reg_3201_pp0_iter2_reg <= mul_1_reg_3201;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_2_reg_3212 <= grp_fu_4628_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul_3_reg_3217 <= grp_fu_4628_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul_3_reg_3217_pp0_iter3_reg <= mul_3_reg_3217;
                mul_3_reg_3217_pp0_iter4_reg <= mul_3_reg_3217_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                mul_reg_3191 <= grp_fu_4628_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_2867_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ov_10_reg_3241 <= ov_10_fu_1665_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln1027_reg_2867_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ov_11_reg_3280 <= ov_11_fu_1813_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1027_reg_2867_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                ov_14_reg_3258 <= ov_14_fu_1672_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_2867_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                ov_15_reg_3290 <= ov_15_fu_1860_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1027_reg_2867_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                ov_16_reg_3265 <= ov_16_fu_1719_p3;
                ov_7_reg_3270 <= ov_7_fu_1766_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_2867_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                ov_2_reg_3227 <= ov_2_fu_1651_p3;
                ov_6_reg_3234 <= ov_6_fu_1658_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln1027_reg_2867_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                overlap_2_reg_3305 <= grp_fu_4628_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1027_reg_2867_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                overlap_3_reg_3315 <= grp_fu_4628_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_7_reg_3090_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_7_reg_3090_pp0_iter2_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_0 = and_ln112_1_reg_3045_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_1_reg_3045_pp0_iter2_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_893 <= grp_fu_4622_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_7_reg_3090) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_7_reg_3090) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then
                reg_899 <= grp_fu_4622_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_5_reg_3085_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_5_reg_3085_pp0_iter2_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_lv1_0 = and_ln112_3_reg_3050_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_3_reg_3050_pp0_iter2_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_905 <= grp_fu_866_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1027_reg_2867_pp0_iter5_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                sc_2_reg_3332 <= sc_2_fu_1920_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1027_reg_2867_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                score_load_reg_3365 <= score_fu_252;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln112_7_reg_3090) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                sub87_3_reg_3196 <= grp_fu_866_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_10_reg_2964 <= tmp_10_fu_1117_p10;
                tmp_15_reg_2969 <= tmp_15_fu_1130_p10;
                tmp_17_reg_2978 <= tmp_17_fu_1143_p10;
                tmp_21_reg_2987 <= tmp_21_fu_1156_p10;
                tmp_23_reg_2996 <= tmp_23_fu_1169_p10;
                tmp_8_reg_2959 <= tmp_8_fu_1104_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1027_fu_950_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_11_reg_2950 <= tmp_11_fu_1090_p10;
                tmp_1_reg_2898 <= tmp_1_fu_978_p10;
                tmp_2_reg_2903 <= tmp_2_fu_992_p10;
                tmp_3_reg_2908 <= tmp_3_fu_1006_p10;
                tmp_4_reg_2917 <= tmp_4_fu_1020_p10;
                tmp_5_reg_2922 <= tmp_5_fu_1034_p10;
                tmp_6_reg_2931 <= tmp_6_fu_1048_p10;
                tmp_7_reg_2936 <= tmp_7_fu_1062_p10;
                tmp_9_reg_2941 <= tmp_9_fu_1076_p10;
                tmp_s_reg_2882 <= tmp_s_fu_960_p10;
                trunc_ln104_1_reg_2887 <= trunc_ln104_1_fu_974_p1;
                trunc_ln104_reg_2871 <= trunc_ln104_fu_956_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                tmp_18_reg_3095 <= tmp_18_fu_1580_p10;
                tmp_19_reg_3100 <= tmp_19_fu_1593_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_26_reg_3025 <= grp_fu_4633_p_dout0;
                tmp_31_reg_3030 <= grp_fu_4638_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_28_reg_3248 <= grp_fu_4633_p_dout0;
                tmp_33_reg_3253 <= grp_fu_4638_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                tmp_36_reg_3065 <= grp_fu_4633_p_dout0;
                tmp_41_reg_3080 <= grp_fu_4638_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1027_reg_2867_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_38_reg_3275 <= grp_fu_4633_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_2867_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_43_reg_3285 <= grp_fu_4633_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_2867_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_45_reg_3322 <= grp_fu_4638_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_2867_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_48_reg_3346 <= grp_fu_4633_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1027_reg_2867_pp0_iter7_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_51_reg_3386 <= grp_fu_4638_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_2867_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                tmp_other_4_reg_3351 <= tmp_other_4_fu_2027_p3;
                tmp_score_4_reg_3357 <= tmp_score_4_fu_2034_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_2867_pp0_iter6_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_score_load_reg_3339 <= tmp_score_fu_264;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage7_subdone, ap_block_pp0_stage2_subdone, ap_condition_exit_pp0_iter7_stage2, ap_block_pp0_stage3_subdone, ap_idle_pp0_0to6, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to7, ap_block_pp0_stage1_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to7 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    and_ln112_1_fu_1279_p2 <= (or_ln112_fu_1266_p2 and and_ln112_fu_1274_p2);
    and_ln112_2_fu_1355_p2 <= (tmp_31_reg_3030 and or_ln112_3_fu_1349_p2);
    and_ln112_3_fu_1360_p2 <= (or_ln112_2_fu_1331_p2 and and_ln112_2_fu_1355_p2);
    and_ln112_4_fu_1488_p2 <= (or_ln112_5_fu_1482_p2 and or_ln112_4_fu_1464_p2);
    and_ln112_5_fu_1494_p2 <= (tmp_36_reg_3065 and and_ln112_4_fu_1488_p2);
    and_ln112_6_fu_1569_p2 <= (or_ln112_7_fu_1563_p2 and or_ln112_6_fu_1545_p2);
    and_ln112_7_fu_1575_p2 <= (tmp_41_reg_3080 and and_ln112_6_fu_1569_p2);
    and_ln112_fu_1274_p2 <= (tmp_26_reg_3025 and or_ln112_1_fu_1270_p2);
    and_ln116_1_fu_1761_p2 <= (tmp_33_reg_3253 and or_ln116_1_fu_1755_p2);
    and_ln116_2_fu_1808_p2 <= (tmp_38_reg_3275 and or_ln116_2_fu_1802_p2);
    and_ln116_3_fu_1855_p2 <= (tmp_43_reg_3285 and or_ln116_3_fu_1849_p2);
    and_ln116_fu_1714_p2 <= (tmp_28_reg_3248 and or_ln116_fu_1708_p2);
    and_ln122_fu_1902_p2 <= (tmp_45_reg_3322 and or_ln122_fu_1896_p2);
    and_ln130_1_fu_2016_p2 <= (tmp_48_reg_3346 and and_ln130_fu_2010_p2);
    and_ln130_fu_2010_p2 <= (or_ln130_2_fu_2004_p2 and or_ln130_1_fu_1986_p2);
    and_ln139_1_fu_2165_p2 <= (tmp_51_reg_3386 and and_ln139_fu_2159_p2);
    and_ln139_fu_2159_p2 <= (or_ln139_2_fu_2153_p2 and or_ln139_1_fu_2135_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage7_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage6_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage7_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage6_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage7_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage5_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage6_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage7_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage7_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone, icmp_ln1027_reg_2867)
    begin
        if (((icmp_ln1027_reg_2867 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter7_stage2_assign_proc : process(ap_enable_reg_pp0_iter7, icmp_ln1027_reg_2867_pp0_iter7_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (icmp_ln1027_reg_2867_pp0_iter7_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_condition_exit_pp0_iter7_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter7_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to6_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to6 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to7_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to7 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to7 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage7;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln112_1_fu_1199_p1 <= tmp_5_reg_2922;
    bitcast_ln112_2_fu_1285_p1 <= tmp_9_reg_2941;
    bitcast_ln112_3_fu_1302_p1 <= tmp_11_reg_2950;
    bitcast_ln112_4_fu_1418_p1 <= tmp_15_reg_2969;
    bitcast_ln112_5_fu_1435_p1 <= tmp_17_reg_2978;
    bitcast_ln112_6_fu_1499_p1 <= tmp_21_reg_2987;
    bitcast_ln112_7_fu_1516_p1 <= tmp_23_reg_2996;
    bitcast_ln112_fu_1182_p1 <= tmp_3_reg_2908;
    bitcast_ln116_1_fu_1726_p1 <= ov_6_reg_3234;
    bitcast_ln116_2_fu_1773_p1 <= ov_10_reg_3241;
    bitcast_ln116_3_fu_1820_p1 <= ov_14_reg_3258;
    bitcast_ln116_fu_1679_p1 <= ov_2_reg_3227;
    bitcast_ln122_fu_1867_p1 <= overlap_3_reg_3315;
    bitcast_ln126_fu_1907_p1 <= distance_3_reg_3327;
    bitcast_ln130_1_fu_1957_p1 <= tmp_score_load_reg_3339;
    bitcast_ln130_fu_1940_p1 <= sc_2_reg_3332;
    bitcast_ln139_1_fu_2106_p1 <= score_load_reg_3365;
    bitcast_ln139_fu_2089_p1 <= tmp_score_4_reg_3357;
    grp_fu_4622_p_ce <= ap_const_logic_1;
    grp_fu_4622_p_din0 <= grp_fu_862_p0;
    grp_fu_4622_p_din1 <= grp_fu_862_p1;
    grp_fu_4622_p_opcode <= ap_const_lv2_1(1 - 1 downto 0);
    grp_fu_4628_p_ce <= ap_const_logic_1;
    grp_fu_4628_p_din0 <= grp_fu_879_p0;
    grp_fu_4628_p_din1 <= grp_fu_879_p1;
    grp_fu_4633_p_ce <= ap_const_logic_1;
    grp_fu_4633_p_din0 <= grp_fu_883_p0;
    grp_fu_4633_p_din1 <= grp_fu_883_p1;
    grp_fu_4633_p_opcode <= grp_fu_883_opcode;
    grp_fu_4638_p_ce <= ap_const_logic_1;
    grp_fu_4638_p_din0 <= grp_fu_887_p0;
    grp_fu_4638_p_din1 <= grp_fu_887_p1;
    grp_fu_4638_p_opcode <= grp_fu_887_opcode;

    grp_fu_862_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_2867, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, and_ln112_7_reg_3090, reg_899, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_2867_pp0_iter1_reg, tmp_s_reg_2882, tmp_5_reg_2922, tmp_11_reg_2950, ap_CS_fsm_pp0_stage2, tmp_23_reg_2996, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, and_ln112_1_reg_3045_pp0_iter1_reg, tmp_12_reg_3055, tmp_22_reg_3075, and_ln112_7_reg_3090_pp0_iter1_reg, tmp_18_reg_3095, d1_reg_3114, d2_reg_3119, d1_3_reg_3186, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_lv1_0 = and_ln112_7_reg_3090_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_862_p0 <= reg_899;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_7_reg_3090_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_862_p0 <= d1_3_reg_3186;
        elsif (((ap_const_lv1_0 = and_ln112_1_reg_3045_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_862_p0 <= d2_reg_3119;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_1_reg_3045_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_862_p0 <= d1_reg_3114;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_862_p0 <= tmp_18_reg_3095;
        elsif (((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_7_reg_3090) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_862_p0 <= tmp_23_reg_2996;
        elsif (((ap_const_lv1_0 = and_ln112_7_reg_3090) and (icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_862_p0 <= tmp_22_reg_3075;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_862_p0 <= tmp_12_reg_3055;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_862_p0 <= tmp_11_reg_2950;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_862_p0 <= tmp_5_reg_2922;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_862_p0 <= tmp_s_reg_2882;
        else 
            grp_fu_862_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_862_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_2867, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, and_ln112_7_reg_3090, reg_899, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_2867_pp0_iter1_reg, tmp_1_reg_2898, tmp_3_reg_2908, tmp_9_reg_2941, ap_CS_fsm_pp0_stage2, tmp_21_reg_2987, tmp_23_reg_2996, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, and_ln112_1_reg_3045_pp0_iter1_reg, tmp_13_reg_3060, and_ln112_7_reg_3090_pp0_iter1_reg, tmp_19_reg_3100, sub_reg_3130, sub2_reg_3135, sub87_3_reg_3196, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_lv1_0 = and_ln112_7_reg_3090_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_862_p1 <= sub87_3_reg_3196;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_7_reg_3090_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_862_p1 <= reg_899;
        elsif (((ap_const_lv1_0 = and_ln112_1_reg_3045_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_862_p1 <= sub2_reg_3135;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_1_reg_3045_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_862_p1 <= sub_reg_3130;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_862_p1 <= tmp_19_reg_3100;
        elsif (((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_7_reg_3090) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_862_p1 <= tmp_21_reg_2987;
        elsif (((ap_const_lv1_0 = and_ln112_7_reg_3090) and (icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_862_p1 <= tmp_23_reg_2996;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_862_p1 <= tmp_13_reg_3060;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_862_p1 <= tmp_9_reg_2941;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_862_p1 <= tmp_3_reg_2908;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_862_p1 <= tmp_1_reg_2898;
        else 
            grp_fu_862_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_866_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_2867, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, and_ln112_7_reg_3090, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_2867_pp0_iter1_reg, icmp_ln1027_reg_2867_pp0_iter3_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, and_ln112_3_reg_3050_pp0_iter1_reg, and_ln112_5_reg_3085_pp0_iter1_reg, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage6_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage7_00001, ap_block_pp0_stage1_00001)
    begin
        if ((((ap_const_lv1_0 = and_ln112_7_reg_3090) and (icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_3_reg_3050_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_5_reg_3085_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_0 = and_ln112_5_reg_3085_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_0 = and_ln112_3_reg_3050_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_866_opcode <= ap_const_lv2_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (icmp_ln1027_reg_2867_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_866_opcode <= ap_const_lv2_0;
        else 
            grp_fu_866_opcode <= "XX";
        end if; 
    end process;


    grp_fu_866_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_2867_pp0_iter1_reg, tmp_2_reg_2903, tmp_3_reg_2908, tmp_9_reg_2941, ap_CS_fsm_pp0_stage2, tmp_17_reg_2978, tmp_21_reg_2987, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, and_ln112_3_reg_3050_pp0_iter1_reg, and_ln112_5_reg_3085_pp0_iter1_reg, d1_1_reg_3140, d2_1_reg_3145, d1_2_reg_3160, d2_2_reg_3165, distance_1_reg_3295, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_866_p0 <= distance_1_reg_3295;
        elsif (((ap_const_lv1_0 = and_ln112_5_reg_3085_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_866_p0 <= d2_2_reg_3165;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_5_reg_3085_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_866_p0 <= d1_2_reg_3160;
        elsif (((ap_const_lv1_0 = and_ln112_3_reg_3050_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_866_p0 <= d2_1_reg_3145;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_3_reg_3050_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_866_p0 <= d1_1_reg_3140;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_866_p0 <= tmp_21_reg_2987;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_866_p0 <= tmp_17_reg_2978;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_866_p0 <= tmp_9_reg_2941;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_866_p0 <= tmp_3_reg_2908;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_866_p0 <= tmp_2_reg_2903;
        else 
            grp_fu_866_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_866_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_2867_pp0_iter1_reg, tmp_3_reg_2908, tmp_5_reg_2922, tmp_11_reg_2950, ap_CS_fsm_pp0_stage2, tmp_15_reg_2969, tmp_23_reg_2996, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, and_ln112_3_reg_3050_pp0_iter1_reg, and_ln112_5_reg_3085_pp0_iter1_reg, sub75_1_reg_3150, sub87_1_reg_3155, sub75_2_reg_3176, sub87_2_reg_3181, mul_2_reg_3212_pp0_iter4_reg, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_866_p1 <= mul_2_reg_3212_pp0_iter4_reg;
        elsif (((ap_const_lv1_0 = and_ln112_5_reg_3085_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_866_p1 <= sub87_2_reg_3181;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_5_reg_3085_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_866_p1 <= sub75_2_reg_3176;
        elsif (((ap_const_lv1_0 = and_ln112_3_reg_3050_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_866_p1 <= sub87_1_reg_3155;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_3_reg_3050_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_866_p1 <= sub75_1_reg_3150;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_866_p1 <= tmp_23_reg_2996;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_866_p1 <= tmp_15_reg_2969;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_866_p1 <= tmp_11_reg_2950;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_866_p1 <= tmp_5_reg_2922;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_866_p1 <= tmp_3_reg_2908;
        else 
            grp_fu_866_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_870_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, icmp_ln1027_reg_2867, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_2867_pp0_iter2_reg, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_2867_pp0_iter1_reg, icmp_ln1027_reg_2867_pp0_iter4_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage6_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001)
    begin
        if ((((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_870_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (icmp_ln1027_reg_2867_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_870_opcode <= ap_const_lv2_0;
        else 
            grp_fu_870_opcode <= "XX";
        end if; 
    end process;


    grp_fu_870_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, tmp_4_reg_2917, tmp_8_reg_2959, ap_CS_fsm_pp0_stage2, tmp_15_reg_2969, ap_CS_fsm_pp0_stage3, tmp_14_reg_3035, ap_CS_fsm_pp0_stage4, mul_reg_3191, distance_reg_3222, distance_2_reg_3310, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_870_p0 <= distance_2_reg_3310;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_870_p0 <= distance_reg_3222;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_870_p0 <= mul_reg_3191;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_870_p0 <= tmp_15_reg_2969;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_870_p0 <= tmp_14_reg_3035;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_870_p0 <= tmp_8_reg_2959;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_870_p0 <= tmp_4_reg_2917;
        else 
            grp_fu_870_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_870_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, tmp_5_reg_2922, tmp_9_reg_2941, ap_CS_fsm_pp0_stage2, tmp_15_reg_2969, tmp_17_reg_2978, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, mul_1_reg_3201_pp0_iter2_reg, mul_3_reg_3217_pp0_iter4_reg, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_870_p1 <= mul_3_reg_3217_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_870_p1 <= mul_1_reg_3201_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_870_p1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_870_p1 <= tmp_17_reg_2978;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_870_p1 <= tmp_15_reg_2969;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_870_p1 <= tmp_9_reg_2941;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_870_p1 <= tmp_5_reg_2922;
        else 
            grp_fu_870_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_874_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, tmp_6_reg_2931, ap_CS_fsm_pp0_stage2, tmp_10_reg_2964, ap_CS_fsm_pp0_stage3, tmp_16_reg_3040, ap_CS_fsm_pp0_stage4, tmp_20_reg_3070, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_874_p0 <= tmp_20_reg_3070;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_874_p0 <= tmp_16_reg_3040;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_874_p0 <= tmp_10_reg_2964;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_874_p0 <= tmp_6_reg_2931;
            else 
                grp_fu_874_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_874_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_874_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, tmp_7_reg_2936, tmp_11_reg_2950, ap_CS_fsm_pp0_stage2, tmp_17_reg_2978, tmp_21_reg_2987, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_874_p1 <= tmp_21_reg_2987;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_874_p1 <= tmp_17_reg_2978;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_874_p1 <= tmp_11_reg_2950;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_874_p1 <= tmp_7_reg_2936;
            else 
                grp_fu_874_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_874_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_879_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, reg_893, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, d_1_reg_3124, d_2_reg_3170, d_3_reg_3206, ov_16_reg_3265, overlap_1_reg_3300, overlap_2_reg_3305, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_879_p0 <= overlap_2_reg_3305;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_879_p0 <= overlap_1_reg_3300;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_879_p0 <= ov_16_reg_3265;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_879_p0 <= d_3_reg_3206;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_879_p0 <= d_2_reg_3170;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_879_p0 <= d_1_reg_3124;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_879_p0 <= reg_893;
        else 
            grp_fu_879_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_879_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, reg_893, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, d_1_reg_3124, d_2_reg_3170, d_3_reg_3206, ov_7_reg_3270, ov_11_reg_3280, ov_15_reg_3290, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_879_p1 <= ov_15_reg_3290;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_879_p1 <= ov_11_reg_3280;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_879_p1 <= ov_7_reg_3270;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_879_p1 <= d_3_reg_3206;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_879_p1 <= d_2_reg_3170;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_879_p1 <= d_1_reg_3124;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_879_p1 <= reg_893;
        else 
            grp_fu_879_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_883_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, icmp_ln1027_reg_2867, ap_CS_fsm_pp0_stage1, icmp_ln1027_reg_2867_pp0_iter2_reg, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_2867_pp0_iter3_reg, icmp_ln1027_reg_2867_pp0_iter6_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (icmp_ln1027_reg_2867_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_883_opcode <= ap_const_lv5_2;
        elsif ((((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (icmp_ln1027_reg_2867_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_883_opcode <= ap_const_lv5_4;
        else 
            grp_fu_883_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_883_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, tmp_3_reg_2908, ap_CS_fsm_pp0_stage2, tmp_15_reg_2969, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ov_2_reg_3227, ov_10_reg_3241, ov_14_reg_3258, sc_2_reg_3332, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_883_p0 <= sc_2_reg_3332;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_883_p0 <= ov_14_reg_3258;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_883_p0 <= ov_10_reg_3241;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_883_p0 <= ov_2_reg_3227;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_883_p0 <= tmp_15_reg_2969;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_883_p0 <= tmp_3_reg_2908;
        else 
            grp_fu_883_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_883_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, tmp_5_reg_2922, ap_CS_fsm_pp0_stage2, tmp_17_reg_2978, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage2, ap_block_pp0_stage1, tmp_score_fu_264, ap_block_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_883_p1 <= tmp_score_fu_264;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_883_p1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_883_p1 <= tmp_17_reg_2978;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_883_p1 <= tmp_5_reg_2922;
        else 
            grp_fu_883_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_887_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, icmp_ln1027_reg_2867, ap_CS_fsm_pp0_stage1, icmp_ln1027_reg_2867_pp0_iter2_reg, icmp_ln1027_reg_2867_pp0_iter5_reg, icmp_ln1027_reg_2867_pp0_iter6_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (icmp_ln1027_reg_2867_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (icmp_ln1027_reg_2867_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_887_opcode <= ap_const_lv5_2;
        elsif ((((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_2867 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_2867_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_887_opcode <= ap_const_lv5_4;
        else 
            grp_fu_887_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_887_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, tmp_9_reg_2941, ap_CS_fsm_pp0_stage2, tmp_21_reg_2987, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ov_6_reg_3234, overlap_3_reg_3315, tmp_score_4_reg_3357, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_887_p0 <= tmp_score_4_reg_3357;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_887_p0 <= overlap_3_reg_3315;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_887_p0 <= ov_6_reg_3234;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_887_p0 <= tmp_21_reg_2987;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_887_p0 <= tmp_9_reg_2941;
        else 
            grp_fu_887_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_887_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, tmp_11_reg_2950, ap_CS_fsm_pp0_stage2, tmp_23_reg_2996, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_block_pp0_stage2, score_fu_252, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_887_p1 <= score_fu_252;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_887_p1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_887_p1 <= tmp_23_reg_2996;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_887_p1 <= tmp_11_reg_2950;
        else 
            grp_fu_887_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    i_real_2_fu_1634_p3 <= 
        i_real_fu_1611_p2 when (icmp_ln1019_fu_1606_p2(0) = '1') else 
        i_real_3_reg_2852;
    i_real_fu_1611_p2 <= std_logic_vector(unsigned(i_real_3_reg_2852) + unsigned(ap_const_lv32_1));
    icmp_ln1019_fu_1606_p2 <= "1" when (k_real_5_reg_2860 = ap_const_lv32_7) else "0";
    icmp_ln1027_fu_950_p2 <= "1" when (signed(merge_1_1_fu_256) < signed(ap_const_lv32_7)) else "0";
    icmp_ln112_10_fu_1470_p2 <= "0" when (tmp_35_fu_1438_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_11_fu_1476_p2 <= "1" when (trunc_ln112_5_fu_1448_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_12_fu_1533_p2 <= "0" when (tmp_39_fu_1502_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_13_fu_1539_p2 <= "1" when (trunc_ln112_6_fu_1512_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_14_fu_1551_p2 <= "0" when (tmp_40_fu_1519_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_15_fu_1557_p2 <= "1" when (trunc_ln112_7_fu_1529_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_1_fu_1222_p2 <= "1" when (trunc_ln112_fu_1195_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_2_fu_1228_p2 <= "0" when (tmp_25_fu_1202_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_3_fu_1234_p2 <= "1" when (trunc_ln112_1_fu_1212_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_4_fu_1319_p2 <= "0" when (tmp_29_fu_1288_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_5_fu_1325_p2 <= "1" when (trunc_ln112_2_fu_1298_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_6_fu_1337_p2 <= "0" when (tmp_30_fu_1305_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_7_fu_1343_p2 <= "1" when (trunc_ln112_3_fu_1315_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_8_fu_1452_p2 <= "0" when (tmp_34_fu_1421_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_9_fu_1458_p2 <= "1" when (trunc_ln112_4_fu_1431_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_fu_1216_p2 <= "0" when (tmp_24_fu_1185_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_1_fu_1702_p2 <= "1" when (trunc_ln116_fu_1692_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_2_fu_1743_p2 <= "0" when (tmp_32_fu_1729_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_3_fu_1749_p2 <= "1" when (trunc_ln116_1_fu_1739_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_4_fu_1790_p2 <= "0" when (tmp_37_fu_1776_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_5_fu_1796_p2 <= "1" when (trunc_ln116_2_fu_1786_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_6_fu_1837_p2 <= "0" when (tmp_42_fu_1823_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_7_fu_1843_p2 <= "1" when (trunc_ln116_3_fu_1833_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_fu_1696_p2 <= "0" when (tmp_27_fu_1682_p4 = ap_const_lv8_FF) else "1";
    icmp_ln122_1_fu_1890_p2 <= "1" when (trunc_ln122_fu_1880_p1 = ap_const_lv23_0) else "0";
    icmp_ln122_fu_1884_p2 <= "0" when (tmp_44_fu_1870_p4 = ap_const_lv8_FF) else "1";
    icmp_ln130_1_fu_1974_p2 <= "0" when (tmp_46_fu_1943_p4 = ap_const_lv8_FF) else "1";
    icmp_ln130_2_fu_1980_p2 <= "1" when (trunc_ln130_fu_1953_p1 = ap_const_lv23_0) else "0";
    icmp_ln130_3_fu_1992_p2 <= "0" when (tmp_47_fu_1960_p4 = ap_const_lv8_FF) else "1";
    icmp_ln130_4_fu_1998_p2 <= "1" when (trunc_ln130_1_fu_1970_p1 = ap_const_lv23_0) else "0";
    icmp_ln130_fu_1934_p2 <= "1" when (tmp_other_fu_268 = ap_const_lv32_FFFFFFFF) else "0";
    icmp_ln139_1_fu_2129_p2 <= "1" when (trunc_ln139_fu_2102_p1 = ap_const_lv23_0) else "0";
    icmp_ln139_2_fu_2141_p2 <= "0" when (tmp_50_fu_2109_p4 = ap_const_lv8_FF) else "1";
    icmp_ln139_3_fu_2147_p2 <= "1" when (trunc_ln139_1_fu_2119_p1 = ap_const_lv23_0) else "0";
    icmp_ln139_fu_2123_p2 <= "0" when (tmp_49_fu_2092_p4 = ap_const_lv8_FF) else "1";
    k_real_2_fu_1621_p2 <= std_logic_vector(unsigned(k_real_5_reg_2860) + unsigned(ap_const_lv32_1));
    k_real_3_fu_1626_p3 <= 
        k_real_fu_1616_p2 when (icmp_ln1019_fu_1606_p2(0) = '1') else 
        k_real_2_fu_1621_p2;
    k_real_fu_1616_p2 <= std_logic_vector(unsigned(i_real_3_reg_2852) + unsigned(ap_const_lv32_2));
    merge_1_6_fu_2188_p3 <= 
        i_real_3_reg_2852_pp0_iter7_reg when (or_ln139_fu_2170_p2(0) = '1') else 
        merge_1_4_reg_3373;
    merge_1_7_fu_2206_p3 <= 
        merge_1_6_fu_2188_p3 when (icmp_ln1019_reg_3105_pp0_iter7_reg(0) = '1') else 
        merge_1_4_reg_3373;
    merge_1_out <= merge_1_fu_244(3 - 1 downto 0);

    merge_1_out_ap_vld_assign_proc : process(icmp_ln1027_reg_2867_pp0_iter7_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1027_reg_2867_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            merge_1_out_ap_vld <= ap_const_logic_1;
        else 
            merge_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    merge_2_5_fu_2182_p3 <= 
        tmp_other_4_reg_3351 when (or_ln139_fu_2170_p2(0) = '1') else 
        merge_2_1_reg_3380;
    merge_2_6_fu_2200_p3 <= 
        merge_2_5_fu_2182_p3 when (icmp_ln1019_reg_3105_pp0_iter7_reg(0) = '1') else 
        merge_2_1_reg_3380;
    merge_2_out <= merge_2_fu_248(3 - 1 downto 0);

    merge_2_out_ap_vld_assign_proc : process(icmp_ln1027_reg_2867_pp0_iter7_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1027_reg_2867_pp0_iter7_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            merge_2_out_ap_vld <= ap_const_logic_1;
        else 
            merge_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    or_ln112_1_fu_1270_p2 <= (icmp_ln112_3_reg_3020 or icmp_ln112_2_reg_3015);
    or_ln112_2_fu_1331_p2 <= (icmp_ln112_5_fu_1325_p2 or icmp_ln112_4_fu_1319_p2);
    or_ln112_3_fu_1349_p2 <= (icmp_ln112_7_fu_1343_p2 or icmp_ln112_6_fu_1337_p2);
    or_ln112_4_fu_1464_p2 <= (icmp_ln112_9_fu_1458_p2 or icmp_ln112_8_fu_1452_p2);
    or_ln112_5_fu_1482_p2 <= (icmp_ln112_11_fu_1476_p2 or icmp_ln112_10_fu_1470_p2);
    or_ln112_6_fu_1545_p2 <= (icmp_ln112_13_fu_1539_p2 or icmp_ln112_12_fu_1533_p2);
    or_ln112_7_fu_1563_p2 <= (icmp_ln112_15_fu_1557_p2 or icmp_ln112_14_fu_1551_p2);
    or_ln112_fu_1266_p2 <= (icmp_ln112_reg_3005 or icmp_ln112_1_reg_3010);
    or_ln116_1_fu_1755_p2 <= (icmp_ln116_3_fu_1749_p2 or icmp_ln116_2_fu_1743_p2);
    or_ln116_2_fu_1802_p2 <= (icmp_ln116_5_fu_1796_p2 or icmp_ln116_4_fu_1790_p2);
    or_ln116_3_fu_1849_p2 <= (icmp_ln116_7_fu_1843_p2 or icmp_ln116_6_fu_1837_p2);
    or_ln116_fu_1708_p2 <= (icmp_ln116_fu_1696_p2 or icmp_ln116_1_fu_1702_p2);
    or_ln122_fu_1896_p2 <= (icmp_ln122_fu_1884_p2 or icmp_ln122_1_fu_1890_p2);
    or_ln130_1_fu_1986_p2 <= (icmp_ln130_2_fu_1980_p2 or icmp_ln130_1_fu_1974_p2);
    or_ln130_2_fu_2004_p2 <= (icmp_ln130_4_fu_1998_p2 or icmp_ln130_3_fu_1992_p2);
    or_ln130_fu_2021_p2 <= (icmp_ln130_fu_1934_p2 or and_ln130_1_fu_2016_p2);
    or_ln139_1_fu_2135_p2 <= (icmp_ln139_fu_2123_p2 or icmp_ln139_1_fu_2129_p2);
    or_ln139_2_fu_2153_p2 <= (icmp_ln139_3_fu_2147_p2 or icmp_ln139_2_fu_2141_p2);
    or_ln139_fu_2170_p2 <= (tmp_fu_2082_p3 or and_ln139_1_fu_2165_p2);
    ov_10_fu_1665_p3 <= 
        reg_905 when (and_ln112_5_reg_3085_pp0_iter2_reg(0) = '1') else 
        reg_905;
    ov_11_fu_1813_p3 <= 
        ap_const_lv32_0 when (and_ln116_2_fu_1808_p2(0) = '1') else 
        ov_10_reg_3241;
    ov_14_fu_1672_p3 <= 
        reg_893 when (and_ln112_7_reg_3090_pp0_iter2_reg(0) = '1') else 
        reg_893;
    ov_15_fu_1860_p3 <= 
        ap_const_lv32_0 when (and_ln116_3_fu_1855_p2(0) = '1') else 
        ov_14_reg_3258;
    ov_16_fu_1719_p3 <= 
        ap_const_lv32_0 when (and_ln116_fu_1714_p2(0) = '1') else 
        ov_2_reg_3227;
    ov_2_fu_1651_p3 <= 
        reg_893 when (and_ln112_1_reg_3045_pp0_iter2_reg(0) = '1') else 
        reg_893;
    ov_6_fu_1658_p3 <= 
        reg_905 when (and_ln112_3_reg_3050_pp0_iter2_reg(0) = '1') else 
        reg_905;
    ov_7_fu_1766_p3 <= 
        ap_const_lv32_0 when (and_ln116_1_fu_1761_p2(0) = '1') else 
        ov_6_reg_3234;
    sc_2_fu_1920_p3 <= 
        overlap_3_reg_3315 when (and_ln122_fu_1902_p2(0) = '1') else 
        sc_fu_1916_p1;
    sc_fu_1916_p1 <= xor_ln126_fu_1910_p2;
    score_2_fu_2176_p3 <= 
        tmp_score_4_reg_3357 when (or_ln139_fu_2170_p2(0) = '1') else 
        score_load_reg_3365;
    score_3_fu_2194_p3 <= 
        score_2_fu_2176_p3 when (icmp_ln1019_reg_3105_pp0_iter7_reg(0) = '1') else 
        score_load_reg_3365;
    tmp_24_fu_1185_p4 <= bitcast_ln112_fu_1182_p1(30 downto 23);
    tmp_25_fu_1202_p4 <= bitcast_ln112_1_fu_1199_p1(30 downto 23);
    tmp_27_fu_1682_p4 <= bitcast_ln116_fu_1679_p1(30 downto 23);
    tmp_29_fu_1288_p4 <= bitcast_ln112_2_fu_1285_p1(30 downto 23);
    tmp_30_fu_1305_p4 <= bitcast_ln112_3_fu_1302_p1(30 downto 23);
    tmp_32_fu_1729_p4 <= bitcast_ln116_1_fu_1726_p1(30 downto 23);
    tmp_34_fu_1421_p4 <= bitcast_ln112_4_fu_1418_p1(30 downto 23);
    tmp_35_fu_1438_p4 <= bitcast_ln112_5_fu_1435_p1(30 downto 23);
    tmp_37_fu_1776_p4 <= bitcast_ln116_2_fu_1773_p1(30 downto 23);
    tmp_39_fu_1502_p4 <= bitcast_ln112_6_fu_1499_p1(30 downto 23);
    tmp_40_fu_1519_p4 <= bitcast_ln112_7_fu_1516_p1(30 downto 23);
    tmp_42_fu_1823_p4 <= bitcast_ln116_3_fu_1820_p1(30 downto 23);
    tmp_44_fu_1870_p4 <= bitcast_ln122_fu_1867_p1(30 downto 23);
    tmp_46_fu_1943_p4 <= bitcast_ln130_fu_1940_p1(30 downto 23);
    tmp_47_fu_1960_p4 <= bitcast_ln130_1_fu_1957_p1(30 downto 23);
    tmp_49_fu_2092_p4 <= bitcast_ln139_fu_2089_p1(30 downto 23);
    tmp_50_fu_2109_p4 <= bitcast_ln139_1_fu_2106_p1(30 downto 23);
    tmp_fu_2082_p3 <= merge_1_4_reg_3373(31 downto 31);
    tmp_other_3_fu_2040_p3 <= 
        ap_const_lv32_FFFFFFFF when (icmp_ln1019_reg_3105_pp0_iter6_reg(0) = '1') else 
        tmp_other_4_reg_3351;
    tmp_other_4_fu_2027_p3 <= 
        k_real_5_reg_2860_pp0_iter6_reg when (or_ln130_fu_2021_p2(0) = '1') else 
        tmp_other_fu_268;
    tmp_score_3_fu_2046_p3 <= 
        ap_const_lv32_0 when (icmp_ln1019_reg_3105_pp0_iter6_reg(0) = '1') else 
        tmp_score_4_reg_3357;
    tmp_score_4_fu_2034_p3 <= 
        sc_2_reg_3332 when (or_ln130_fu_2021_p2(0) = '1') else 
        tmp_score_load_reg_3339;
    trunc_ln104_1_fu_974_p1 <= k_real_4_fu_260(3 - 1 downto 0);
    trunc_ln104_fu_956_p1 <= merge_1_1_fu_256(3 - 1 downto 0);
    trunc_ln112_1_fu_1212_p1 <= bitcast_ln112_1_fu_1199_p1(23 - 1 downto 0);
    trunc_ln112_2_fu_1298_p1 <= bitcast_ln112_2_fu_1285_p1(23 - 1 downto 0);
    trunc_ln112_3_fu_1315_p1 <= bitcast_ln112_3_fu_1302_p1(23 - 1 downto 0);
    trunc_ln112_4_fu_1431_p1 <= bitcast_ln112_4_fu_1418_p1(23 - 1 downto 0);
    trunc_ln112_5_fu_1448_p1 <= bitcast_ln112_5_fu_1435_p1(23 - 1 downto 0);
    trunc_ln112_6_fu_1512_p1 <= bitcast_ln112_6_fu_1499_p1(23 - 1 downto 0);
    trunc_ln112_7_fu_1529_p1 <= bitcast_ln112_7_fu_1516_p1(23 - 1 downto 0);
    trunc_ln112_fu_1195_p1 <= bitcast_ln112_fu_1182_p1(23 - 1 downto 0);
    trunc_ln116_1_fu_1739_p1 <= bitcast_ln116_1_fu_1726_p1(23 - 1 downto 0);
    trunc_ln116_2_fu_1786_p1 <= bitcast_ln116_2_fu_1773_p1(23 - 1 downto 0);
    trunc_ln116_3_fu_1833_p1 <= bitcast_ln116_3_fu_1820_p1(23 - 1 downto 0);
    trunc_ln116_fu_1692_p1 <= bitcast_ln116_fu_1679_p1(23 - 1 downto 0);
    trunc_ln122_fu_1880_p1 <= bitcast_ln122_fu_1867_p1(23 - 1 downto 0);
    trunc_ln130_1_fu_1970_p1 <= bitcast_ln130_1_fu_1957_p1(23 - 1 downto 0);
    trunc_ln130_fu_1953_p1 <= bitcast_ln130_fu_1940_p1(23 - 1 downto 0);
    trunc_ln139_1_fu_2119_p1 <= bitcast_ln139_1_fu_2106_p1(23 - 1 downto 0);
    trunc_ln139_fu_2102_p1 <= bitcast_ln139_fu_2089_p1(23 - 1 downto 0);
    xor_ln126_fu_1910_p2 <= (bitcast_ln126_fu_1907_p1 xor ap_const_lv32_80000000);
end behav;
