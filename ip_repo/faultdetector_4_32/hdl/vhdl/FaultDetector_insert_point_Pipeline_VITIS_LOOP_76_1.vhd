-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    regions_center_0_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_8_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_9_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_10_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_11_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_12_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_13_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_14_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_15_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_16_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_17_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_18_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_19_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_20_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_21_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_22_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_23_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_24_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_25_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_26_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_27_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_28_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_29_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_30_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_31_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_8_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_9_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_10_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_11_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_12_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_13_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_14_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_15_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_16_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_17_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_18_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_19_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_20_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_21_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_22_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_23_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_24_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_25_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_26_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_27_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_28_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_29_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_30_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_31_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_8_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_9_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_10_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_11_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_12_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_13_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_14_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_15_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_16_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_17_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_18_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_19_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_20_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_21_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_22_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_23_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_24_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_25_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_26_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_27_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_28_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_29_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_30_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_31_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_8_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_9_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_10_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_11_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_12_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_13_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_14_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_15_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_16_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_17_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_18_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_19_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_20_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_21_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_22_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_23_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_24_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_25_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_26_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_27_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_28_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_29_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_30_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_31_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_8_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_9_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_10_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_11_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_12_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_13_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_14_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_15_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_16_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_17_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_18_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_19_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_20_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_21_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_22_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_23_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_24_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_25_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_26_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_27_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_28_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_29_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_30_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_31_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_8_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_9_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_10_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_11_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_12_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_13_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_14_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_15_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_16_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_17_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_18_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_19_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_20_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_21_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_22_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_23_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_24_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_25_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_26_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_27_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_28_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_29_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_30_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_31_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_8_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_9_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_10_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_11_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_12_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_13_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_14_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_15_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_16_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_17_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_18_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_19_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_20_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_21_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_22_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_23_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_24_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_25_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_26_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_27_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_28_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_29_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_30_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_31_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_8_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_9_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_10_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_11_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_12_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_13_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_14_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_15_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_16_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_17_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_18_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_19_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_20_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_21_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_22_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_23_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_24_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_25_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_26_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_27_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_28_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_29_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_30_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_31_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_8_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_9_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_10_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_11_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_12_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_13_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_14_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_15_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_16_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_17_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_18_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_19_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_20_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_21_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_22_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_23_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_24_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_25_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_26_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_27_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_28_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_29_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_30_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_31_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_8_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_9_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_10_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_11_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_12_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_13_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_14_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_15_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_16_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_17_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_18_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_19_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_20_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_21_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_22_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_23_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_24_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_25_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_26_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_27_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_28_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_29_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_30_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_31_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_8_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_9_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_10_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_11_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_12_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_13_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_14_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_15_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_16_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_17_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_18_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_19_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_20_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_21_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_22_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_23_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_24_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_25_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_26_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_27_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_28_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_29_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_30_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_31_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_8_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_9_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_10_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_11_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_12_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_13_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_14_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_15_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_16_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_17_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_18_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_19_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_20_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_21_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_22_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_23_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_24_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_25_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_26_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_27_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_28_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_29_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_30_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_31_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    merge_2_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    merge_2_out_ap_vld : OUT STD_LOGIC;
    merge_1_out : OUT STD_LOGIC_VECTOR (4 downto 0);
    merge_1_out_ap_vld : OUT STD_LOGIC;
    grp_fu_36416_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_36416_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_36416_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_36416_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_36416_p_ce : OUT STD_LOGIC;
    grp_fu_36422_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_36422_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_36422_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_36422_p_ce : OUT STD_LOGIC;
    grp_fu_36427_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_36427_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_36427_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_36427_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_36427_p_ce : OUT STD_LOGIC;
    grp_fu_36432_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_36432_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_36432_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_36432_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_36432_p_ce : OUT STD_LOGIC );
end;


architecture behav of FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state24_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_state32_pp0_stage7_iter3 : BOOLEAN;
    signal ap_block_state40_pp0_stage7_iter4 : BOOLEAN;
    signal ap_block_state48_pp0_stage7_iter5 : BOOLEAN;
    signal ap_block_state56_pp0_stage7_iter6 : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal icmp_ln1027_reg_7491 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage7 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal reg_3199 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state34_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state42_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state50_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state58_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state23_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_state31_pp0_stage6_iter3 : BOOLEAN;
    signal ap_block_state39_pp0_stage6_iter4 : BOOLEAN;
    signal ap_block_state47_pp0_stage6_iter5 : BOOLEAN;
    signal ap_block_state55_pp0_stage6_iter6 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal icmp_ln1027_reg_7491_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_1_reg_7677 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_1_reg_7677_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state49_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state57_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal and_ln112_7_reg_7702 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_7_reg_7702_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_3205 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state22_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_state30_pp0_stage5_iter3 : BOOLEAN;
    signal ap_block_state38_pp0_stage5_iter4 : BOOLEAN;
    signal ap_block_state46_pp0_stage5_iter5 : BOOLEAN;
    signal ap_block_state54_pp0_stage5_iter6 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal icmp_ln1027_reg_7491_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_3172_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_3211 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln112_3_reg_7682 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_3_reg_7682_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal and_ln112_5_reg_7697 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_5_reg_7697_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_real_3_reg_7476 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_7476_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_7476_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_7476_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_7476_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_7476_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_7476_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_7476_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_7484 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_7484_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_7484_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_7484_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_7484_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_7484_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_7484_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1027_fu_3256_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_7491_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_7491_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_7491_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_7491_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_7491_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_s_fu_3266_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_7495 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_3308_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_7500 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_3346_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_7505 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_3384_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_7510 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_3422_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_7519 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_fu_3460_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_7524 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_3498_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_7533 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_3536_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_7538 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_3574_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_7543 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_3612_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_7548 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_fu_3650_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_reg_7557 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_3688_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_reg_7562 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_3726_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_reg_7571 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_3764_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_reg_7576 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_3802_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_reg_7581 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_3840_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_reg_7586 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_fu_3878_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_reg_7595 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_3916_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_reg_7600 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_3954_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_reg_7609 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_3992_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_reg_7614 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_4030_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_reg_7619 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_4068_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_reg_7624 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_4106_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_reg_7633 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_4144_p34 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_reg_7638 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln112_fu_4216_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_reg_7647 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state28_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state36_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state44_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state52_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state60_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal icmp_ln112_1_fu_4222_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_1_reg_7652 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_2_fu_4228_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_2_reg_7657 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_3_fu_4234_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_3_reg_7662 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_reg_7667 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_31_reg_7672 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_1_fu_4253_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state21_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state29_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state37_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state45_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_state53_pp0_stage4_iter6 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal and_ln112_1_reg_7677_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_3_fu_4334_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_3_reg_7682_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_36_reg_7687 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_41_reg_7692 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_5_fu_4416_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_5_reg_7697_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_7_fu_4497_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_7_reg_7702_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_fu_4502_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_7707 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_7707_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_7707_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_7707_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_7707_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_7707_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_7707_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal d1_reg_7716 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3176_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_reg_7721 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3180_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_1_reg_7726 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_reg_7732 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state35_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state43_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state51_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state59_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal sub2_reg_7737 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_1_reg_7742 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_1_reg_7747 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub75_1_reg_7752 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub87_1_reg_7757 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_2_reg_7762 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_2_reg_7767 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_2_reg_7772 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub75_2_reg_7778 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub87_2_reg_7783 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_3_reg_7788 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_7793 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub87_3_reg_7798 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_7803 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_7803_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal d_3_reg_7808 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_7814 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_7814_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_7814_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_7819 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_7819_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_7819_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_reg_7824 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_2_fu_4547_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_2_reg_7829 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_6_fu_4554_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_6_reg_7836 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_10_fu_4561_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_10_reg_7843 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_reg_7850 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_reg_7855 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_14_fu_4568_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_14_reg_7860 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_16_fu_4615_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_16_reg_7867 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_7_fu_4662_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_7_reg_7872 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_38_reg_7877 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_11_fu_4709_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_11_reg_7882 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_43_reg_7887 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_15_fu_4756_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_15_reg_7892 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_1_reg_7897 : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_1_reg_7902 : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_2_reg_7907 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_2_reg_7912 : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_3_reg_7917 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_45_reg_7924 : STD_LOGIC_VECTOR (0 downto 0);
    signal distance_3_reg_7929 : STD_LOGIC_VECTOR (31 downto 0);
    signal sc_2_fu_4816_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sc_2_reg_7934 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_load_reg_7941 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_48_reg_7948 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_other_4_fu_4923_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_other_4_reg_7953 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_4_fu_4930_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_4_reg_7959 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_load_reg_7967 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_1_4_reg_7975 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_2_1_reg_7982 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_reg_7988 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter7_stage2 : STD_LOGIC;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal merge_1_fu_822 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_1_7_fu_5102_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal merge_2_fu_826 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_2_6_fu_5096_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_fu_830 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_3_fu_5090_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal merge_1_1_fu_834 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_2_fu_4530_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_4_fu_838 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_3_fu_4522_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_fu_842 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_3_fu_4942_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal tmp_other_fu_846 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_other_3_fu_4936_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal ap_block_pp0_stage2_01001 : BOOLEAN;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal grp_fu_3168_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3168_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal grp_fu_3172_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3172_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3176_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3176_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3180_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3180_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3185_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3185_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3189_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3189_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3193_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_3193_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln104_fu_3262_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal trunc_ln104_1_fu_3304_p1 : STD_LOGIC_VECTOR (4 downto 0);
    signal bitcast_ln112_fu_4182_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_1_fu_4199_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_fu_4185_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_fu_4195_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_25_fu_4202_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_1_fu_4212_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln112_1_fu_4244_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_fu_4248_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_fu_4240_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln112_2_fu_4259_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_3_fu_4276_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_4262_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_2_fu_4272_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_5_fu_4299_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_4_fu_4293_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_4279_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_3_fu_4289_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_7_fu_4317_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_6_fu_4311_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_3_fu_4323_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_2_fu_4329_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_2_fu_4305_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln112_4_fu_4340_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_5_fu_4357_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_4343_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_4_fu_4353_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_9_fu_4380_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_8_fu_4374_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_35_fu_4360_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_5_fu_4370_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_11_fu_4398_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_10_fu_4392_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_4_fu_4386_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_5_fu_4404_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_4_fu_4410_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln112_6_fu_4421_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_7_fu_4438_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_4424_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_6_fu_4434_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_13_fu_4461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_12_fu_4455_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_40_fu_4441_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_7_fu_4451_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_15_fu_4479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_14_fu_4473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_6_fu_4467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_7_fu_4485_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_6_fu_4491_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_real_fu_4512_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_2_fu_4517_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_fu_4507_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln116_fu_4575_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_4578_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_fu_4588_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_1_fu_4598_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_fu_4592_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_fu_4604_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_fu_4610_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_1_fu_4622_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_fu_4625_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_1_fu_4635_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_3_fu_4645_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_2_fu_4639_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_1_fu_4651_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_1_fu_4657_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_2_fu_4669_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_37_fu_4672_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_2_fu_4682_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_5_fu_4692_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_4_fu_4686_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_2_fu_4698_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_2_fu_4704_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_3_fu_4716_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_42_fu_4719_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_3_fu_4729_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_7_fu_4739_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_6_fu_4733_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_3_fu_4745_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_3_fu_4751_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln122_fu_4763_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_fu_4766_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln122_fu_4776_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln122_1_fu_4786_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln122_fu_4780_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln122_fu_4792_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln126_fu_4803_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln126_fu_4806_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln122_fu_4798_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sc_fu_4812_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln130_fu_4836_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln130_1_fu_4853_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_4839_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln130_fu_4849_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln130_2_fu_4876_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_1_fu_4870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_47_fu_4856_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln130_1_fu_4866_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln130_4_fu_4894_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_3_fu_4888_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_1_fu_4882_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_2_fu_4900_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln130_fu_4906_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_fu_4830_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln130_1_fu_4912_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_fu_4917_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln139_fu_4985_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln139_1_fu_5002_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_fu_4988_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln139_fu_4998_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln139_1_fu_5025_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln139_fu_5019_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_50_fu_5005_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln139_1_fu_5015_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln139_3_fu_5043_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln139_2_fu_5037_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln139_1_fu_5031_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln139_2_fu_5049_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln139_fu_5055_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_4978_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln139_1_fu_5061_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln139_fu_5066_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal score_2_fu_5072_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_2_5_fu_5078_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_1_6_fu_5084_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp0_stage5_00001 : BOOLEAN;
    signal ap_block_pp0_stage6_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage7_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal grp_fu_3172_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_3176_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_3189_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_3193_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_idle_pp0_0to6 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_idle_pp0_1to7 : STD_LOGIC;
    signal ap_done_pending_pp0 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component FaultDetector_mux_325_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        din11_WIDTH : INTEGER;
        din12_WIDTH : INTEGER;
        din13_WIDTH : INTEGER;
        din14_WIDTH : INTEGER;
        din15_WIDTH : INTEGER;
        din16_WIDTH : INTEGER;
        din17_WIDTH : INTEGER;
        din18_WIDTH : INTEGER;
        din19_WIDTH : INTEGER;
        din20_WIDTH : INTEGER;
        din21_WIDTH : INTEGER;
        din22_WIDTH : INTEGER;
        din23_WIDTH : INTEGER;
        din24_WIDTH : INTEGER;
        din25_WIDTH : INTEGER;
        din26_WIDTH : INTEGER;
        din27_WIDTH : INTEGER;
        din28_WIDTH : INTEGER;
        din29_WIDTH : INTEGER;
        din30_WIDTH : INTEGER;
        din31_WIDTH : INTEGER;
        din32_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (31 downto 0);
        din9 : IN STD_LOGIC_VECTOR (31 downto 0);
        din10 : IN STD_LOGIC_VECTOR (31 downto 0);
        din11 : IN STD_LOGIC_VECTOR (31 downto 0);
        din12 : IN STD_LOGIC_VECTOR (31 downto 0);
        din13 : IN STD_LOGIC_VECTOR (31 downto 0);
        din14 : IN STD_LOGIC_VECTOR (31 downto 0);
        din15 : IN STD_LOGIC_VECTOR (31 downto 0);
        din16 : IN STD_LOGIC_VECTOR (31 downto 0);
        din17 : IN STD_LOGIC_VECTOR (31 downto 0);
        din18 : IN STD_LOGIC_VECTOR (31 downto 0);
        din19 : IN STD_LOGIC_VECTOR (31 downto 0);
        din20 : IN STD_LOGIC_VECTOR (31 downto 0);
        din21 : IN STD_LOGIC_VECTOR (31 downto 0);
        din22 : IN STD_LOGIC_VECTOR (31 downto 0);
        din23 : IN STD_LOGIC_VECTOR (31 downto 0);
        din24 : IN STD_LOGIC_VECTOR (31 downto 0);
        din25 : IN STD_LOGIC_VECTOR (31 downto 0);
        din26 : IN STD_LOGIC_VECTOR (31 downto 0);
        din27 : IN STD_LOGIC_VECTOR (31 downto 0);
        din28 : IN STD_LOGIC_VECTOR (31 downto 0);
        din29 : IN STD_LOGIC_VECTOR (31 downto 0);
        din30 : IN STD_LOGIC_VECTOR (31 downto 0);
        din31 : IN STD_LOGIC_VECTOR (31 downto 0);
        din32 : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    faddfsub_32ns_32ns_32_8_full_dsp_1_U11 : component FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_3172_p0,
        din1 => grp_fu_3172_p1,
        opcode => grp_fu_3172_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_3172_p2);

    faddfsub_32ns_32ns_32_8_full_dsp_1_U12 : component FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_3176_p0,
        din1 => grp_fu_3176_p1,
        opcode => grp_fu_3176_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_3176_p2);

    fsub_32ns_32ns_32_8_full_dsp_1_U13 : component FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_3180_p0,
        din1 => grp_fu_3180_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_3180_p2);

    mux_325_32_1_1_U17 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_0_0,
        din1 => regions_center_1_0_0,
        din2 => regions_center_2_0_0,
        din3 => regions_center_3_0_0,
        din4 => regions_center_4_0_0,
        din5 => regions_center_5_0_0,
        din6 => regions_center_6_0_0,
        din7 => regions_center_7_0_0,
        din8 => regions_center_8_0_0,
        din9 => regions_center_9_0_0,
        din10 => regions_center_10_0_0,
        din11 => regions_center_11_0_0,
        din12 => regions_center_12_0_0,
        din13 => regions_center_13_0_0,
        din14 => regions_center_14_0_0,
        din15 => regions_center_15_0_0,
        din16 => regions_center_16_0_0,
        din17 => regions_center_17_0_0,
        din18 => regions_center_18_0_0,
        din19 => regions_center_19_0_0,
        din20 => regions_center_20_0_0,
        din21 => regions_center_21_0_0,
        din22 => regions_center_22_0_0,
        din23 => regions_center_23_0_0,
        din24 => regions_center_24_0_0,
        din25 => regions_center_25_0_0,
        din26 => regions_center_26_0_0,
        din27 => regions_center_27_0_0,
        din28 => regions_center_28_0_0,
        din29 => regions_center_29_0_0,
        din30 => regions_center_30_0_0,
        din31 => regions_center_31_0_0,
        din32 => trunc_ln104_fu_3262_p1,
        dout => tmp_s_fu_3266_p34);

    mux_325_32_1_1_U18 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_0_0,
        din1 => regions_center_1_0_0,
        din2 => regions_center_2_0_0,
        din3 => regions_center_3_0_0,
        din4 => regions_center_4_0_0,
        din5 => regions_center_5_0_0,
        din6 => regions_center_6_0_0,
        din7 => regions_center_7_0_0,
        din8 => regions_center_8_0_0,
        din9 => regions_center_9_0_0,
        din10 => regions_center_10_0_0,
        din11 => regions_center_11_0_0,
        din12 => regions_center_12_0_0,
        din13 => regions_center_13_0_0,
        din14 => regions_center_14_0_0,
        din15 => regions_center_15_0_0,
        din16 => regions_center_16_0_0,
        din17 => regions_center_17_0_0,
        din18 => regions_center_18_0_0,
        din19 => regions_center_19_0_0,
        din20 => regions_center_20_0_0,
        din21 => regions_center_21_0_0,
        din22 => regions_center_22_0_0,
        din23 => regions_center_23_0_0,
        din24 => regions_center_24_0_0,
        din25 => regions_center_25_0_0,
        din26 => regions_center_26_0_0,
        din27 => regions_center_27_0_0,
        din28 => regions_center_28_0_0,
        din29 => regions_center_29_0_0,
        din30 => regions_center_30_0_0,
        din31 => regions_center_31_0_0,
        din32 => trunc_ln104_1_fu_3304_p1,
        dout => tmp_1_fu_3308_p34);

    mux_325_32_1_1_U19 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_0_0,
        din1 => regions_max_1_0_0,
        din2 => regions_max_2_0_0,
        din3 => regions_max_3_0_0,
        din4 => regions_max_4_0_0,
        din5 => regions_max_5_0_0,
        din6 => regions_max_6_0_0,
        din7 => regions_max_7_0_0,
        din8 => regions_max_8_0_0,
        din9 => regions_max_9_0_0,
        din10 => regions_max_10_0_0,
        din11 => regions_max_11_0_0,
        din12 => regions_max_12_0_0,
        din13 => regions_max_13_0_0,
        din14 => regions_max_14_0_0,
        din15 => regions_max_15_0_0,
        din16 => regions_max_16_0_0,
        din17 => regions_max_17_0_0,
        din18 => regions_max_18_0_0,
        din19 => regions_max_19_0_0,
        din20 => regions_max_20_0_0,
        din21 => regions_max_21_0_0,
        din22 => regions_max_22_0_0,
        din23 => regions_max_23_0_0,
        din24 => regions_max_24_0_0,
        din25 => regions_max_25_0_0,
        din26 => regions_max_26_0_0,
        din27 => regions_max_27_0_0,
        din28 => regions_max_28_0_0,
        din29 => regions_max_29_0_0,
        din30 => regions_max_30_0_0,
        din31 => regions_max_31_0_0,
        din32 => trunc_ln104_fu_3262_p1,
        dout => tmp_2_fu_3346_p34);

    mux_325_32_1_1_U20 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_0_0,
        din1 => regions_min_1_0_0,
        din2 => regions_min_2_0_0,
        din3 => regions_min_3_0_0,
        din4 => regions_min_4_0_0,
        din5 => regions_min_5_0_0,
        din6 => regions_min_6_0_0,
        din7 => regions_min_7_0_0,
        din8 => regions_min_8_0_0,
        din9 => regions_min_9_0_0,
        din10 => regions_min_10_0_0,
        din11 => regions_min_11_0_0,
        din12 => regions_min_12_0_0,
        din13 => regions_min_13_0_0,
        din14 => regions_min_14_0_0,
        din15 => regions_min_15_0_0,
        din16 => regions_min_16_0_0,
        din17 => regions_min_17_0_0,
        din18 => regions_min_18_0_0,
        din19 => regions_min_19_0_0,
        din20 => regions_min_20_0_0,
        din21 => regions_min_21_0_0,
        din22 => regions_min_22_0_0,
        din23 => regions_min_23_0_0,
        din24 => regions_min_24_0_0,
        din25 => regions_min_25_0_0,
        din26 => regions_min_26_0_0,
        din27 => regions_min_27_0_0,
        din28 => regions_min_28_0_0,
        din29 => regions_min_29_0_0,
        din30 => regions_min_30_0_0,
        din31 => regions_min_31_0_0,
        din32 => trunc_ln104_fu_3262_p1,
        dout => tmp_3_fu_3384_p34);

    mux_325_32_1_1_U21 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_0_0,
        din1 => regions_max_1_0_0,
        din2 => regions_max_2_0_0,
        din3 => regions_max_3_0_0,
        din4 => regions_max_4_0_0,
        din5 => regions_max_5_0_0,
        din6 => regions_max_6_0_0,
        din7 => regions_max_7_0_0,
        din8 => regions_max_8_0_0,
        din9 => regions_max_9_0_0,
        din10 => regions_max_10_0_0,
        din11 => regions_max_11_0_0,
        din12 => regions_max_12_0_0,
        din13 => regions_max_13_0_0,
        din14 => regions_max_14_0_0,
        din15 => regions_max_15_0_0,
        din16 => regions_max_16_0_0,
        din17 => regions_max_17_0_0,
        din18 => regions_max_18_0_0,
        din19 => regions_max_19_0_0,
        din20 => regions_max_20_0_0,
        din21 => regions_max_21_0_0,
        din22 => regions_max_22_0_0,
        din23 => regions_max_23_0_0,
        din24 => regions_max_24_0_0,
        din25 => regions_max_25_0_0,
        din26 => regions_max_26_0_0,
        din27 => regions_max_27_0_0,
        din28 => regions_max_28_0_0,
        din29 => regions_max_29_0_0,
        din30 => regions_max_30_0_0,
        din31 => regions_max_31_0_0,
        din32 => trunc_ln104_1_fu_3304_p1,
        dout => tmp_4_fu_3422_p34);

    mux_325_32_1_1_U22 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_0_0,
        din1 => regions_min_1_0_0,
        din2 => regions_min_2_0_0,
        din3 => regions_min_3_0_0,
        din4 => regions_min_4_0_0,
        din5 => regions_min_5_0_0,
        din6 => regions_min_6_0_0,
        din7 => regions_min_7_0_0,
        din8 => regions_min_8_0_0,
        din9 => regions_min_9_0_0,
        din10 => regions_min_10_0_0,
        din11 => regions_min_11_0_0,
        din12 => regions_min_12_0_0,
        din13 => regions_min_13_0_0,
        din14 => regions_min_14_0_0,
        din15 => regions_min_15_0_0,
        din16 => regions_min_16_0_0,
        din17 => regions_min_17_0_0,
        din18 => regions_min_18_0_0,
        din19 => regions_min_19_0_0,
        din20 => regions_min_20_0_0,
        din21 => regions_min_21_0_0,
        din22 => regions_min_22_0_0,
        din23 => regions_min_23_0_0,
        din24 => regions_min_24_0_0,
        din25 => regions_min_25_0_0,
        din26 => regions_min_26_0_0,
        din27 => regions_min_27_0_0,
        din28 => regions_min_28_0_0,
        din29 => regions_min_29_0_0,
        din30 => regions_min_30_0_0,
        din31 => regions_min_31_0_0,
        din32 => trunc_ln104_1_fu_3304_p1,
        dout => tmp_5_fu_3460_p34);

    mux_325_32_1_1_U23 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_1_0,
        din1 => regions_center_1_1_0,
        din2 => regions_center_2_1_0,
        din3 => regions_center_3_1_0,
        din4 => regions_center_4_1_0,
        din5 => regions_center_5_1_0,
        din6 => regions_center_6_1_0,
        din7 => regions_center_7_1_0,
        din8 => regions_center_8_1_0,
        din9 => regions_center_9_1_0,
        din10 => regions_center_10_1_0,
        din11 => regions_center_11_1_0,
        din12 => regions_center_12_1_0,
        din13 => regions_center_13_1_0,
        din14 => regions_center_14_1_0,
        din15 => regions_center_15_1_0,
        din16 => regions_center_16_1_0,
        din17 => regions_center_17_1_0,
        din18 => regions_center_18_1_0,
        din19 => regions_center_19_1_0,
        din20 => regions_center_20_1_0,
        din21 => regions_center_21_1_0,
        din22 => regions_center_22_1_0,
        din23 => regions_center_23_1_0,
        din24 => regions_center_24_1_0,
        din25 => regions_center_25_1_0,
        din26 => regions_center_26_1_0,
        din27 => regions_center_27_1_0,
        din28 => regions_center_28_1_0,
        din29 => regions_center_29_1_0,
        din30 => regions_center_30_1_0,
        din31 => regions_center_31_1_0,
        din32 => trunc_ln104_fu_3262_p1,
        dout => tmp_6_fu_3498_p34);

    mux_325_32_1_1_U24 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_1_0,
        din1 => regions_center_1_1_0,
        din2 => regions_center_2_1_0,
        din3 => regions_center_3_1_0,
        din4 => regions_center_4_1_0,
        din5 => regions_center_5_1_0,
        din6 => regions_center_6_1_0,
        din7 => regions_center_7_1_0,
        din8 => regions_center_8_1_0,
        din9 => regions_center_9_1_0,
        din10 => regions_center_10_1_0,
        din11 => regions_center_11_1_0,
        din12 => regions_center_12_1_0,
        din13 => regions_center_13_1_0,
        din14 => regions_center_14_1_0,
        din15 => regions_center_15_1_0,
        din16 => regions_center_16_1_0,
        din17 => regions_center_17_1_0,
        din18 => regions_center_18_1_0,
        din19 => regions_center_19_1_0,
        din20 => regions_center_20_1_0,
        din21 => regions_center_21_1_0,
        din22 => regions_center_22_1_0,
        din23 => regions_center_23_1_0,
        din24 => regions_center_24_1_0,
        din25 => regions_center_25_1_0,
        din26 => regions_center_26_1_0,
        din27 => regions_center_27_1_0,
        din28 => regions_center_28_1_0,
        din29 => regions_center_29_1_0,
        din30 => regions_center_30_1_0,
        din31 => regions_center_31_1_0,
        din32 => trunc_ln104_1_fu_3304_p1,
        dout => tmp_7_fu_3536_p34);

    mux_325_32_1_1_U25 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_1_0,
        din1 => regions_max_1_1_0,
        din2 => regions_max_2_1_0,
        din3 => regions_max_3_1_0,
        din4 => regions_max_4_1_0,
        din5 => regions_max_5_1_0,
        din6 => regions_max_6_1_0,
        din7 => regions_max_7_1_0,
        din8 => regions_max_8_1_0,
        din9 => regions_max_9_1_0,
        din10 => regions_max_10_1_0,
        din11 => regions_max_11_1_0,
        din12 => regions_max_12_1_0,
        din13 => regions_max_13_1_0,
        din14 => regions_max_14_1_0,
        din15 => regions_max_15_1_0,
        din16 => regions_max_16_1_0,
        din17 => regions_max_17_1_0,
        din18 => regions_max_18_1_0,
        din19 => regions_max_19_1_0,
        din20 => regions_max_20_1_0,
        din21 => regions_max_21_1_0,
        din22 => regions_max_22_1_0,
        din23 => regions_max_23_1_0,
        din24 => regions_max_24_1_0,
        din25 => regions_max_25_1_0,
        din26 => regions_max_26_1_0,
        din27 => regions_max_27_1_0,
        din28 => regions_max_28_1_0,
        din29 => regions_max_29_1_0,
        din30 => regions_max_30_1_0,
        din31 => regions_max_31_1_0,
        din32 => trunc_ln104_fu_3262_p1,
        dout => tmp_8_fu_3574_p34);

    mux_325_32_1_1_U26 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_1_0,
        din1 => regions_min_1_1_0,
        din2 => regions_min_2_1_0,
        din3 => regions_min_3_1_0,
        din4 => regions_min_4_1_0,
        din5 => regions_min_5_1_0,
        din6 => regions_min_6_1_0,
        din7 => regions_min_7_1_0,
        din8 => regions_min_8_1_0,
        din9 => regions_min_9_1_0,
        din10 => regions_min_10_1_0,
        din11 => regions_min_11_1_0,
        din12 => regions_min_12_1_0,
        din13 => regions_min_13_1_0,
        din14 => regions_min_14_1_0,
        din15 => regions_min_15_1_0,
        din16 => regions_min_16_1_0,
        din17 => regions_min_17_1_0,
        din18 => regions_min_18_1_0,
        din19 => regions_min_19_1_0,
        din20 => regions_min_20_1_0,
        din21 => regions_min_21_1_0,
        din22 => regions_min_22_1_0,
        din23 => regions_min_23_1_0,
        din24 => regions_min_24_1_0,
        din25 => regions_min_25_1_0,
        din26 => regions_min_26_1_0,
        din27 => regions_min_27_1_0,
        din28 => regions_min_28_1_0,
        din29 => regions_min_29_1_0,
        din30 => regions_min_30_1_0,
        din31 => regions_min_31_1_0,
        din32 => trunc_ln104_fu_3262_p1,
        dout => tmp_9_fu_3612_p34);

    mux_325_32_1_1_U27 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_1_0,
        din1 => regions_max_1_1_0,
        din2 => regions_max_2_1_0,
        din3 => regions_max_3_1_0,
        din4 => regions_max_4_1_0,
        din5 => regions_max_5_1_0,
        din6 => regions_max_6_1_0,
        din7 => regions_max_7_1_0,
        din8 => regions_max_8_1_0,
        din9 => regions_max_9_1_0,
        din10 => regions_max_10_1_0,
        din11 => regions_max_11_1_0,
        din12 => regions_max_12_1_0,
        din13 => regions_max_13_1_0,
        din14 => regions_max_14_1_0,
        din15 => regions_max_15_1_0,
        din16 => regions_max_16_1_0,
        din17 => regions_max_17_1_0,
        din18 => regions_max_18_1_0,
        din19 => regions_max_19_1_0,
        din20 => regions_max_20_1_0,
        din21 => regions_max_21_1_0,
        din22 => regions_max_22_1_0,
        din23 => regions_max_23_1_0,
        din24 => regions_max_24_1_0,
        din25 => regions_max_25_1_0,
        din26 => regions_max_26_1_0,
        din27 => regions_max_27_1_0,
        din28 => regions_max_28_1_0,
        din29 => regions_max_29_1_0,
        din30 => regions_max_30_1_0,
        din31 => regions_max_31_1_0,
        din32 => trunc_ln104_1_fu_3304_p1,
        dout => tmp_10_fu_3650_p34);

    mux_325_32_1_1_U28 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_1_0,
        din1 => regions_min_1_1_0,
        din2 => regions_min_2_1_0,
        din3 => regions_min_3_1_0,
        din4 => regions_min_4_1_0,
        din5 => regions_min_5_1_0,
        din6 => regions_min_6_1_0,
        din7 => regions_min_7_1_0,
        din8 => regions_min_8_1_0,
        din9 => regions_min_9_1_0,
        din10 => regions_min_10_1_0,
        din11 => regions_min_11_1_0,
        din12 => regions_min_12_1_0,
        din13 => regions_min_13_1_0,
        din14 => regions_min_14_1_0,
        din15 => regions_min_15_1_0,
        din16 => regions_min_16_1_0,
        din17 => regions_min_17_1_0,
        din18 => regions_min_18_1_0,
        din19 => regions_min_19_1_0,
        din20 => regions_min_20_1_0,
        din21 => regions_min_21_1_0,
        din22 => regions_min_22_1_0,
        din23 => regions_min_23_1_0,
        din24 => regions_min_24_1_0,
        din25 => regions_min_25_1_0,
        din26 => regions_min_26_1_0,
        din27 => regions_min_27_1_0,
        din28 => regions_min_28_1_0,
        din29 => regions_min_29_1_0,
        din30 => regions_min_30_1_0,
        din31 => regions_min_31_1_0,
        din32 => trunc_ln104_1_fu_3304_p1,
        dout => tmp_11_fu_3688_p34);

    mux_325_32_1_1_U29 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_2_0,
        din1 => regions_center_1_2_0,
        din2 => regions_center_2_2_0,
        din3 => regions_center_3_2_0,
        din4 => regions_center_4_2_0,
        din5 => regions_center_5_2_0,
        din6 => regions_center_6_2_0,
        din7 => regions_center_7_2_0,
        din8 => regions_center_8_2_0,
        din9 => regions_center_9_2_0,
        din10 => regions_center_10_2_0,
        din11 => regions_center_11_2_0,
        din12 => regions_center_12_2_0,
        din13 => regions_center_13_2_0,
        din14 => regions_center_14_2_0,
        din15 => regions_center_15_2_0,
        din16 => regions_center_16_2_0,
        din17 => regions_center_17_2_0,
        din18 => regions_center_18_2_0,
        din19 => regions_center_19_2_0,
        din20 => regions_center_20_2_0,
        din21 => regions_center_21_2_0,
        din22 => regions_center_22_2_0,
        din23 => regions_center_23_2_0,
        din24 => regions_center_24_2_0,
        din25 => regions_center_25_2_0,
        din26 => regions_center_26_2_0,
        din27 => regions_center_27_2_0,
        din28 => regions_center_28_2_0,
        din29 => regions_center_29_2_0,
        din30 => regions_center_30_2_0,
        din31 => regions_center_31_2_0,
        din32 => trunc_ln104_fu_3262_p1,
        dout => tmp_12_fu_3726_p34);

    mux_325_32_1_1_U30 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_2_0,
        din1 => regions_center_1_2_0,
        din2 => regions_center_2_2_0,
        din3 => regions_center_3_2_0,
        din4 => regions_center_4_2_0,
        din5 => regions_center_5_2_0,
        din6 => regions_center_6_2_0,
        din7 => regions_center_7_2_0,
        din8 => regions_center_8_2_0,
        din9 => regions_center_9_2_0,
        din10 => regions_center_10_2_0,
        din11 => regions_center_11_2_0,
        din12 => regions_center_12_2_0,
        din13 => regions_center_13_2_0,
        din14 => regions_center_14_2_0,
        din15 => regions_center_15_2_0,
        din16 => regions_center_16_2_0,
        din17 => regions_center_17_2_0,
        din18 => regions_center_18_2_0,
        din19 => regions_center_19_2_0,
        din20 => regions_center_20_2_0,
        din21 => regions_center_21_2_0,
        din22 => regions_center_22_2_0,
        din23 => regions_center_23_2_0,
        din24 => regions_center_24_2_0,
        din25 => regions_center_25_2_0,
        din26 => regions_center_26_2_0,
        din27 => regions_center_27_2_0,
        din28 => regions_center_28_2_0,
        din29 => regions_center_29_2_0,
        din30 => regions_center_30_2_0,
        din31 => regions_center_31_2_0,
        din32 => trunc_ln104_1_fu_3304_p1,
        dout => tmp_13_fu_3764_p34);

    mux_325_32_1_1_U31 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_2_0,
        din1 => regions_max_1_2_0,
        din2 => regions_max_2_2_0,
        din3 => regions_max_3_2_0,
        din4 => regions_max_4_2_0,
        din5 => regions_max_5_2_0,
        din6 => regions_max_6_2_0,
        din7 => regions_max_7_2_0,
        din8 => regions_max_8_2_0,
        din9 => regions_max_9_2_0,
        din10 => regions_max_10_2_0,
        din11 => regions_max_11_2_0,
        din12 => regions_max_12_2_0,
        din13 => regions_max_13_2_0,
        din14 => regions_max_14_2_0,
        din15 => regions_max_15_2_0,
        din16 => regions_max_16_2_0,
        din17 => regions_max_17_2_0,
        din18 => regions_max_18_2_0,
        din19 => regions_max_19_2_0,
        din20 => regions_max_20_2_0,
        din21 => regions_max_21_2_0,
        din22 => regions_max_22_2_0,
        din23 => regions_max_23_2_0,
        din24 => regions_max_24_2_0,
        din25 => regions_max_25_2_0,
        din26 => regions_max_26_2_0,
        din27 => regions_max_27_2_0,
        din28 => regions_max_28_2_0,
        din29 => regions_max_29_2_0,
        din30 => regions_max_30_2_0,
        din31 => regions_max_31_2_0,
        din32 => trunc_ln104_fu_3262_p1,
        dout => tmp_14_fu_3802_p34);

    mux_325_32_1_1_U32 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_2_0,
        din1 => regions_min_1_2_0,
        din2 => regions_min_2_2_0,
        din3 => regions_min_3_2_0,
        din4 => regions_min_4_2_0,
        din5 => regions_min_5_2_0,
        din6 => regions_min_6_2_0,
        din7 => regions_min_7_2_0,
        din8 => regions_min_8_2_0,
        din9 => regions_min_9_2_0,
        din10 => regions_min_10_2_0,
        din11 => regions_min_11_2_0,
        din12 => regions_min_12_2_0,
        din13 => regions_min_13_2_0,
        din14 => regions_min_14_2_0,
        din15 => regions_min_15_2_0,
        din16 => regions_min_16_2_0,
        din17 => regions_min_17_2_0,
        din18 => regions_min_18_2_0,
        din19 => regions_min_19_2_0,
        din20 => regions_min_20_2_0,
        din21 => regions_min_21_2_0,
        din22 => regions_min_22_2_0,
        din23 => regions_min_23_2_0,
        din24 => regions_min_24_2_0,
        din25 => regions_min_25_2_0,
        din26 => regions_min_26_2_0,
        din27 => regions_min_27_2_0,
        din28 => regions_min_28_2_0,
        din29 => regions_min_29_2_0,
        din30 => regions_min_30_2_0,
        din31 => regions_min_31_2_0,
        din32 => trunc_ln104_fu_3262_p1,
        dout => tmp_15_fu_3840_p34);

    mux_325_32_1_1_U33 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_2_0,
        din1 => regions_max_1_2_0,
        din2 => regions_max_2_2_0,
        din3 => regions_max_3_2_0,
        din4 => regions_max_4_2_0,
        din5 => regions_max_5_2_0,
        din6 => regions_max_6_2_0,
        din7 => regions_max_7_2_0,
        din8 => regions_max_8_2_0,
        din9 => regions_max_9_2_0,
        din10 => regions_max_10_2_0,
        din11 => regions_max_11_2_0,
        din12 => regions_max_12_2_0,
        din13 => regions_max_13_2_0,
        din14 => regions_max_14_2_0,
        din15 => regions_max_15_2_0,
        din16 => regions_max_16_2_0,
        din17 => regions_max_17_2_0,
        din18 => regions_max_18_2_0,
        din19 => regions_max_19_2_0,
        din20 => regions_max_20_2_0,
        din21 => regions_max_21_2_0,
        din22 => regions_max_22_2_0,
        din23 => regions_max_23_2_0,
        din24 => regions_max_24_2_0,
        din25 => regions_max_25_2_0,
        din26 => regions_max_26_2_0,
        din27 => regions_max_27_2_0,
        din28 => regions_max_28_2_0,
        din29 => regions_max_29_2_0,
        din30 => regions_max_30_2_0,
        din31 => regions_max_31_2_0,
        din32 => trunc_ln104_1_fu_3304_p1,
        dout => tmp_16_fu_3878_p34);

    mux_325_32_1_1_U34 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_2_0,
        din1 => regions_min_1_2_0,
        din2 => regions_min_2_2_0,
        din3 => regions_min_3_2_0,
        din4 => regions_min_4_2_0,
        din5 => regions_min_5_2_0,
        din6 => regions_min_6_2_0,
        din7 => regions_min_7_2_0,
        din8 => regions_min_8_2_0,
        din9 => regions_min_9_2_0,
        din10 => regions_min_10_2_0,
        din11 => regions_min_11_2_0,
        din12 => regions_min_12_2_0,
        din13 => regions_min_13_2_0,
        din14 => regions_min_14_2_0,
        din15 => regions_min_15_2_0,
        din16 => regions_min_16_2_0,
        din17 => regions_min_17_2_0,
        din18 => regions_min_18_2_0,
        din19 => regions_min_19_2_0,
        din20 => regions_min_20_2_0,
        din21 => regions_min_21_2_0,
        din22 => regions_min_22_2_0,
        din23 => regions_min_23_2_0,
        din24 => regions_min_24_2_0,
        din25 => regions_min_25_2_0,
        din26 => regions_min_26_2_0,
        din27 => regions_min_27_2_0,
        din28 => regions_min_28_2_0,
        din29 => regions_min_29_2_0,
        din30 => regions_min_30_2_0,
        din31 => regions_min_31_2_0,
        din32 => trunc_ln104_1_fu_3304_p1,
        dout => tmp_17_fu_3916_p34);

    mux_325_32_1_1_U35 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_3_0,
        din1 => regions_center_1_3_0,
        din2 => regions_center_2_3_0,
        din3 => regions_center_3_3_0,
        din4 => regions_center_4_3_0,
        din5 => regions_center_5_3_0,
        din6 => regions_center_6_3_0,
        din7 => regions_center_7_3_0,
        din8 => regions_center_8_3_0,
        din9 => regions_center_9_3_0,
        din10 => regions_center_10_3_0,
        din11 => regions_center_11_3_0,
        din12 => regions_center_12_3_0,
        din13 => regions_center_13_3_0,
        din14 => regions_center_14_3_0,
        din15 => regions_center_15_3_0,
        din16 => regions_center_16_3_0,
        din17 => regions_center_17_3_0,
        din18 => regions_center_18_3_0,
        din19 => regions_center_19_3_0,
        din20 => regions_center_20_3_0,
        din21 => regions_center_21_3_0,
        din22 => regions_center_22_3_0,
        din23 => regions_center_23_3_0,
        din24 => regions_center_24_3_0,
        din25 => regions_center_25_3_0,
        din26 => regions_center_26_3_0,
        din27 => regions_center_27_3_0,
        din28 => regions_center_28_3_0,
        din29 => regions_center_29_3_0,
        din30 => regions_center_30_3_0,
        din31 => regions_center_31_3_0,
        din32 => trunc_ln104_fu_3262_p1,
        dout => tmp_18_fu_3954_p34);

    mux_325_32_1_1_U36 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_3_0,
        din1 => regions_center_1_3_0,
        din2 => regions_center_2_3_0,
        din3 => regions_center_3_3_0,
        din4 => regions_center_4_3_0,
        din5 => regions_center_5_3_0,
        din6 => regions_center_6_3_0,
        din7 => regions_center_7_3_0,
        din8 => regions_center_8_3_0,
        din9 => regions_center_9_3_0,
        din10 => regions_center_10_3_0,
        din11 => regions_center_11_3_0,
        din12 => regions_center_12_3_0,
        din13 => regions_center_13_3_0,
        din14 => regions_center_14_3_0,
        din15 => regions_center_15_3_0,
        din16 => regions_center_16_3_0,
        din17 => regions_center_17_3_0,
        din18 => regions_center_18_3_0,
        din19 => regions_center_19_3_0,
        din20 => regions_center_20_3_0,
        din21 => regions_center_21_3_0,
        din22 => regions_center_22_3_0,
        din23 => regions_center_23_3_0,
        din24 => regions_center_24_3_0,
        din25 => regions_center_25_3_0,
        din26 => regions_center_26_3_0,
        din27 => regions_center_27_3_0,
        din28 => regions_center_28_3_0,
        din29 => regions_center_29_3_0,
        din30 => regions_center_30_3_0,
        din31 => regions_center_31_3_0,
        din32 => trunc_ln104_1_fu_3304_p1,
        dout => tmp_19_fu_3992_p34);

    mux_325_32_1_1_U37 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_3_0,
        din1 => regions_max_1_3_0,
        din2 => regions_max_2_3_0,
        din3 => regions_max_3_3_0,
        din4 => regions_max_4_3_0,
        din5 => regions_max_5_3_0,
        din6 => regions_max_6_3_0,
        din7 => regions_max_7_3_0,
        din8 => regions_max_8_3_0,
        din9 => regions_max_9_3_0,
        din10 => regions_max_10_3_0,
        din11 => regions_max_11_3_0,
        din12 => regions_max_12_3_0,
        din13 => regions_max_13_3_0,
        din14 => regions_max_14_3_0,
        din15 => regions_max_15_3_0,
        din16 => regions_max_16_3_0,
        din17 => regions_max_17_3_0,
        din18 => regions_max_18_3_0,
        din19 => regions_max_19_3_0,
        din20 => regions_max_20_3_0,
        din21 => regions_max_21_3_0,
        din22 => regions_max_22_3_0,
        din23 => regions_max_23_3_0,
        din24 => regions_max_24_3_0,
        din25 => regions_max_25_3_0,
        din26 => regions_max_26_3_0,
        din27 => regions_max_27_3_0,
        din28 => regions_max_28_3_0,
        din29 => regions_max_29_3_0,
        din30 => regions_max_30_3_0,
        din31 => regions_max_31_3_0,
        din32 => trunc_ln104_fu_3262_p1,
        dout => tmp_20_fu_4030_p34);

    mux_325_32_1_1_U38 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_3_0,
        din1 => regions_min_1_3_0,
        din2 => regions_min_2_3_0,
        din3 => regions_min_3_3_0,
        din4 => regions_min_4_3_0,
        din5 => regions_min_5_3_0,
        din6 => regions_min_6_3_0,
        din7 => regions_min_7_3_0,
        din8 => regions_min_8_3_0,
        din9 => regions_min_9_3_0,
        din10 => regions_min_10_3_0,
        din11 => regions_min_11_3_0,
        din12 => regions_min_12_3_0,
        din13 => regions_min_13_3_0,
        din14 => regions_min_14_3_0,
        din15 => regions_min_15_3_0,
        din16 => regions_min_16_3_0,
        din17 => regions_min_17_3_0,
        din18 => regions_min_18_3_0,
        din19 => regions_min_19_3_0,
        din20 => regions_min_20_3_0,
        din21 => regions_min_21_3_0,
        din22 => regions_min_22_3_0,
        din23 => regions_min_23_3_0,
        din24 => regions_min_24_3_0,
        din25 => regions_min_25_3_0,
        din26 => regions_min_26_3_0,
        din27 => regions_min_27_3_0,
        din28 => regions_min_28_3_0,
        din29 => regions_min_29_3_0,
        din30 => regions_min_30_3_0,
        din31 => regions_min_31_3_0,
        din32 => trunc_ln104_fu_3262_p1,
        dout => tmp_21_fu_4068_p34);

    mux_325_32_1_1_U39 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_3_0,
        din1 => regions_max_1_3_0,
        din2 => regions_max_2_3_0,
        din3 => regions_max_3_3_0,
        din4 => regions_max_4_3_0,
        din5 => regions_max_5_3_0,
        din6 => regions_max_6_3_0,
        din7 => regions_max_7_3_0,
        din8 => regions_max_8_3_0,
        din9 => regions_max_9_3_0,
        din10 => regions_max_10_3_0,
        din11 => regions_max_11_3_0,
        din12 => regions_max_12_3_0,
        din13 => regions_max_13_3_0,
        din14 => regions_max_14_3_0,
        din15 => regions_max_15_3_0,
        din16 => regions_max_16_3_0,
        din17 => regions_max_17_3_0,
        din18 => regions_max_18_3_0,
        din19 => regions_max_19_3_0,
        din20 => regions_max_20_3_0,
        din21 => regions_max_21_3_0,
        din22 => regions_max_22_3_0,
        din23 => regions_max_23_3_0,
        din24 => regions_max_24_3_0,
        din25 => regions_max_25_3_0,
        din26 => regions_max_26_3_0,
        din27 => regions_max_27_3_0,
        din28 => regions_max_28_3_0,
        din29 => regions_max_29_3_0,
        din30 => regions_max_30_3_0,
        din31 => regions_max_31_3_0,
        din32 => trunc_ln104_1_fu_3304_p1,
        dout => tmp_22_fu_4106_p34);

    mux_325_32_1_1_U40 : component FaultDetector_mux_325_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 32,
        din9_WIDTH => 32,
        din10_WIDTH => 32,
        din11_WIDTH => 32,
        din12_WIDTH => 32,
        din13_WIDTH => 32,
        din14_WIDTH => 32,
        din15_WIDTH => 32,
        din16_WIDTH => 32,
        din17_WIDTH => 32,
        din18_WIDTH => 32,
        din19_WIDTH => 32,
        din20_WIDTH => 32,
        din21_WIDTH => 32,
        din22_WIDTH => 32,
        din23_WIDTH => 32,
        din24_WIDTH => 32,
        din25_WIDTH => 32,
        din26_WIDTH => 32,
        din27_WIDTH => 32,
        din28_WIDTH => 32,
        din29_WIDTH => 32,
        din30_WIDTH => 32,
        din31_WIDTH => 32,
        din32_WIDTH => 5,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_3_0,
        din1 => regions_min_1_3_0,
        din2 => regions_min_2_3_0,
        din3 => regions_min_3_3_0,
        din4 => regions_min_4_3_0,
        din5 => regions_min_5_3_0,
        din6 => regions_min_6_3_0,
        din7 => regions_min_7_3_0,
        din8 => regions_min_8_3_0,
        din9 => regions_min_9_3_0,
        din10 => regions_min_10_3_0,
        din11 => regions_min_11_3_0,
        din12 => regions_min_12_3_0,
        din13 => regions_min_13_3_0,
        din14 => regions_min_14_3_0,
        din15 => regions_min_15_3_0,
        din16 => regions_min_16_3_0,
        din17 => regions_min_17_3_0,
        din18 => regions_min_18_3_0,
        din19 => regions_min_19_3_0,
        din20 => regions_min_20_3_0,
        din21 => regions_min_21_3_0,
        din22 => regions_min_22_3_0,
        din23 => regions_min_23_3_0,
        din24 => regions_min_24_3_0,
        din25 => regions_min_25_3_0,
        din26 => regions_min_26_3_0,
        din27 => regions_min_27_3_0,
        din28 => regions_min_28_3_0,
        din29 => regions_min_29_3_0,
        din30 => regions_min_30_3_0,
        din31 => regions_min_31_3_0,
        din32 => trunc_ln104_1_fu_3304_p1,
        dout => tmp_23_fu_4144_p34);

    flow_control_loop_pipe_sequential_init_U : component FaultDetector_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage7,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2) or ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
                    ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    k_real_4_fu_838_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    k_real_4_fu_838 <= ap_const_lv32_1;
                elsif (((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    k_real_4_fu_838 <= k_real_3_fu_4522_p3;
                end if;
            end if; 
        end if;
    end process;

    merge_1_1_fu_834_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    merge_1_1_fu_834 <= ap_const_lv32_0;
                elsif (((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    merge_1_1_fu_834 <= i_real_2_fu_4530_p3;
                end if;
            end if; 
        end if;
    end process;

    merge_1_fu_822_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                merge_1_fu_822 <= ap_const_lv32_FFFFFFFF;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln1027_reg_7491_pp0_iter7_reg = ap_const_lv1_1))) then 
                merge_1_fu_822 <= merge_1_7_fu_5102_p3;
            end if; 
        end if;
    end process;

    merge_2_fu_826_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                merge_2_fu_826 <= ap_const_lv32_FFFFFFFF;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln1027_reg_7491_pp0_iter7_reg = ap_const_lv1_1))) then 
                merge_2_fu_826 <= merge_2_6_fu_5096_p3;
            end if; 
        end if;
    end process;

    score_fu_830_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                score_fu_830 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln1027_reg_7491_pp0_iter7_reg = ap_const_lv1_1))) then 
                score_fu_830 <= score_3_fu_5090_p3;
            end if; 
        end if;
    end process;

    tmp_other_fu_846_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    tmp_other_fu_846 <= ap_const_lv32_FFFFFFFF;
                elsif (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1027_reg_7491_pp0_iter6_reg = ap_const_lv1_1))) then 
                    tmp_other_fu_846 <= tmp_other_3_fu_4936_p3;
                end if;
            end if; 
        end if;
    end process;

    tmp_score_fu_842_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    tmp_score_fu_842 <= ap_const_lv32_0;
                elsif (((ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (icmp_ln1027_reg_7491_pp0_iter6_reg = ap_const_lv1_1))) then 
                    tmp_score_fu_842 <= tmp_score_3_fu_4942_p3;
                end if;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                and_ln112_1_reg_7677 <= and_ln112_1_fu_4253_p2;
                and_ln112_3_reg_7682 <= and_ln112_3_fu_4334_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                and_ln112_1_reg_7677_pp0_iter1_reg <= and_ln112_1_reg_7677;
                and_ln112_1_reg_7677_pp0_iter2_reg <= and_ln112_1_reg_7677_pp0_iter1_reg;
                and_ln112_3_reg_7682_pp0_iter1_reg <= and_ln112_3_reg_7682;
                and_ln112_3_reg_7682_pp0_iter2_reg <= and_ln112_3_reg_7682_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                and_ln112_5_reg_7697 <= and_ln112_5_fu_4416_p2;
                and_ln112_7_reg_7702 <= and_ln112_7_fu_4497_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                and_ln112_5_reg_7697_pp0_iter1_reg <= and_ln112_5_reg_7697;
                and_ln112_5_reg_7697_pp0_iter2_reg <= and_ln112_5_reg_7697_pp0_iter1_reg;
                and_ln112_7_reg_7702_pp0_iter1_reg <= and_ln112_7_reg_7702;
                and_ln112_7_reg_7702_pp0_iter2_reg <= and_ln112_7_reg_7702_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                d1_1_reg_7742 <= grp_fu_3176_p2;
                d2_1_reg_7747 <= grp_fu_3180_p2;
                sub2_reg_7737 <= grp_fu_3172_p2;
                sub_reg_7732 <= grp_fu_36416_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                d1_2_reg_7762 <= grp_fu_3176_p2;
                d2_2_reg_7767 <= grp_fu_3180_p2;
                sub75_1_reg_7752 <= grp_fu_36416_p_dout0;
                sub87_1_reg_7757 <= grp_fu_3172_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                d1_3_reg_7788 <= grp_fu_3180_p2;
                d_2_reg_7772 <= grp_fu_36416_p_dout0;
                sub75_2_reg_7778 <= grp_fu_3172_p2;
                sub87_2_reg_7783 <= grp_fu_3176_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                d1_reg_7716 <= grp_fu_3172_p2;
                d2_reg_7721 <= grp_fu_3176_p2;
                d_1_reg_7726 <= grp_fu_3180_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                d_3_reg_7808 <= grp_fu_36416_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln1027_reg_7491_pp0_iter3_reg = ap_const_lv1_1))) then
                distance_1_reg_7897 <= grp_fu_3176_p2;
                overlap_1_reg_7902 <= grp_fu_36422_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_7491_pp0_iter4_reg = ap_const_lv1_1))) then
                distance_2_reg_7912 <= grp_fu_3172_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (icmp_ln1027_reg_7491_pp0_iter5_reg = ap_const_lv1_1))) then
                distance_3_reg_7929 <= grp_fu_3176_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_7491_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                distance_reg_7824 <= grp_fu_3176_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                i_real_3_reg_7476 <= merge_1_1_fu_834;
                i_real_3_reg_7476_pp0_iter1_reg <= i_real_3_reg_7476;
                i_real_3_reg_7476_pp0_iter2_reg <= i_real_3_reg_7476_pp0_iter1_reg;
                i_real_3_reg_7476_pp0_iter3_reg <= i_real_3_reg_7476_pp0_iter2_reg;
                i_real_3_reg_7476_pp0_iter4_reg <= i_real_3_reg_7476_pp0_iter3_reg;
                i_real_3_reg_7476_pp0_iter5_reg <= i_real_3_reg_7476_pp0_iter4_reg;
                i_real_3_reg_7476_pp0_iter6_reg <= i_real_3_reg_7476_pp0_iter5_reg;
                i_real_3_reg_7476_pp0_iter7_reg <= i_real_3_reg_7476_pp0_iter6_reg;
                icmp_ln1027_reg_7491 <= icmp_ln1027_fu_3256_p2;
                icmp_ln1027_reg_7491_pp0_iter1_reg <= icmp_ln1027_reg_7491;
                icmp_ln1027_reg_7491_pp0_iter2_reg <= icmp_ln1027_reg_7491_pp0_iter1_reg;
                icmp_ln1027_reg_7491_pp0_iter3_reg <= icmp_ln1027_reg_7491_pp0_iter2_reg;
                icmp_ln1027_reg_7491_pp0_iter4_reg <= icmp_ln1027_reg_7491_pp0_iter3_reg;
                icmp_ln1027_reg_7491_pp0_iter5_reg <= icmp_ln1027_reg_7491_pp0_iter4_reg;
                icmp_ln1027_reg_7491_pp0_iter6_reg <= icmp_ln1027_reg_7491_pp0_iter5_reg;
                icmp_ln1027_reg_7491_pp0_iter7_reg <= icmp_ln1027_reg_7491_pp0_iter6_reg;
                k_real_5_reg_7484 <= k_real_4_fu_838;
                k_real_5_reg_7484_pp0_iter1_reg <= k_real_5_reg_7484;
                k_real_5_reg_7484_pp0_iter2_reg <= k_real_5_reg_7484_pp0_iter1_reg;
                k_real_5_reg_7484_pp0_iter3_reg <= k_real_5_reg_7484_pp0_iter2_reg;
                k_real_5_reg_7484_pp0_iter4_reg <= k_real_5_reg_7484_pp0_iter3_reg;
                k_real_5_reg_7484_pp0_iter5_reg <= k_real_5_reg_7484_pp0_iter4_reg;
                k_real_5_reg_7484_pp0_iter6_reg <= k_real_5_reg_7484_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1019_reg_7707 <= icmp_ln1019_fu_4502_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1019_reg_7707_pp0_iter2_reg <= icmp_ln1019_reg_7707;
                icmp_ln1019_reg_7707_pp0_iter3_reg <= icmp_ln1019_reg_7707_pp0_iter2_reg;
                icmp_ln1019_reg_7707_pp0_iter4_reg <= icmp_ln1019_reg_7707_pp0_iter3_reg;
                icmp_ln1019_reg_7707_pp0_iter5_reg <= icmp_ln1019_reg_7707_pp0_iter4_reg;
                icmp_ln1019_reg_7707_pp0_iter6_reg <= icmp_ln1019_reg_7707_pp0_iter5_reg;
                icmp_ln1019_reg_7707_pp0_iter7_reg <= icmp_ln1019_reg_7707_pp0_iter6_reg;
                mul_2_reg_7814_pp0_iter3_reg <= mul_2_reg_7814;
                mul_2_reg_7814_pp0_iter4_reg <= mul_2_reg_7814_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                icmp_ln112_1_reg_7652 <= icmp_ln112_1_fu_4222_p2;
                icmp_ln112_2_reg_7657 <= icmp_ln112_2_fu_4228_p2;
                icmp_ln112_3_reg_7662 <= icmp_ln112_3_fu_4234_p2;
                icmp_ln112_reg_7647 <= icmp_ln112_fu_4216_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                merge_1_4_reg_7975 <= merge_1_fu_822;
                merge_2_1_reg_7982 <= merge_2_fu_826;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                mul_1_reg_7803 <= grp_fu_36422_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                mul_1_reg_7803_pp0_iter2_reg <= mul_1_reg_7803;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                mul_2_reg_7814 <= grp_fu_36422_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln1027_reg_7491_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul_3_reg_7819 <= grp_fu_36422_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                mul_3_reg_7819_pp0_iter3_reg <= mul_3_reg_7819;
                mul_3_reg_7819_pp0_iter4_reg <= mul_3_reg_7819_pp0_iter3_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                mul_reg_7793 <= grp_fu_36422_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_7491_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ov_10_reg_7843 <= ov_10_fu_4561_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3) and (icmp_ln1027_reg_7491_pp0_iter3_reg = ap_const_lv1_1))) then
                ov_11_reg_7882 <= ov_11_fu_4709_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1027_reg_7491_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                ov_14_reg_7860 <= ov_14_fu_4568_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln1027_reg_7491_pp0_iter3_reg = ap_const_lv1_1))) then
                ov_15_reg_7892 <= ov_15_fu_4756_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln1027_reg_7491_pp0_iter3_reg = ap_const_lv1_1))) then
                ov_16_reg_7867 <= ov_16_fu_4615_p3;
                ov_7_reg_7872 <= ov_7_fu_4662_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_7491_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                ov_2_reg_7829 <= ov_2_fu_4547_p3;
                ov_6_reg_7836 <= ov_6_fu_4554_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln1027_reg_7491_pp0_iter4_reg = ap_const_lv1_1))) then
                overlap_2_reg_7907 <= grp_fu_36422_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_reg_7491_pp0_iter4_reg = ap_const_lv1_1))) then
                overlap_3_reg_7917 <= grp_fu_36422_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_7_reg_7702_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_7491_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_7491_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_7_reg_7702_pp0_iter2_reg) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_0 = and_ln112_1_reg_7677_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_7491_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_7491_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_1_reg_7677_pp0_iter2_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_3199 <= grp_fu_36416_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_7_reg_7702) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_7_reg_7702) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then
                reg_3205 <= grp_fu_36416_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_5_reg_7697_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_7491_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_7491_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_5_reg_7697_pp0_iter2_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_lv1_0 = and_ln112_3_reg_7682_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_7491_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_7491_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_3_reg_7682_pp0_iter2_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then
                reg_3211 <= grp_fu_3172_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_reg_7491_pp0_iter5_reg = ap_const_lv1_1))) then
                sc_2_reg_7934 <= sc_2_fu_4816_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_reg_7491_pp0_iter6_reg = ap_const_lv1_1))) then
                score_load_reg_7967 <= score_fu_830;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln112_7_reg_7702) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                sub87_3_reg_7798 <= grp_fu_3172_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_fu_3256_p2 = ap_const_lv1_1))) then
                tmp_10_reg_7557 <= tmp_10_fu_3650_p34;
                tmp_11_reg_7562 <= tmp_11_fu_3688_p34;
                tmp_12_reg_7571 <= tmp_12_fu_3726_p34;
                tmp_13_reg_7576 <= tmp_13_fu_3764_p34;
                tmp_14_reg_7581 <= tmp_14_fu_3802_p34;
                tmp_15_reg_7586 <= tmp_15_fu_3840_p34;
                tmp_16_reg_7595 <= tmp_16_fu_3878_p34;
                tmp_17_reg_7600 <= tmp_17_fu_3916_p34;
                tmp_18_reg_7609 <= tmp_18_fu_3954_p34;
                tmp_19_reg_7614 <= tmp_19_fu_3992_p34;
                tmp_1_reg_7500 <= tmp_1_fu_3308_p34;
                tmp_20_reg_7619 <= tmp_20_fu_4030_p34;
                tmp_21_reg_7624 <= tmp_21_fu_4068_p34;
                tmp_22_reg_7633 <= tmp_22_fu_4106_p34;
                tmp_23_reg_7638 <= tmp_23_fu_4144_p34;
                tmp_2_reg_7505 <= tmp_2_fu_3346_p34;
                tmp_3_reg_7510 <= tmp_3_fu_3384_p34;
                tmp_4_reg_7519 <= tmp_4_fu_3422_p34;
                tmp_5_reg_7524 <= tmp_5_fu_3460_p34;
                tmp_6_reg_7533 <= tmp_6_fu_3498_p34;
                tmp_7_reg_7538 <= tmp_7_fu_3536_p34;
                tmp_8_reg_7543 <= tmp_8_fu_3574_p34;
                tmp_9_reg_7548 <= tmp_9_fu_3612_p34;
                tmp_s_reg_7495 <= tmp_s_fu_3266_p34;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_26_reg_7667 <= grp_fu_36427_p_dout0;
                tmp_31_reg_7672 <= grp_fu_36432_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1027_reg_7491_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_28_reg_7850 <= grp_fu_36427_p_dout0;
                tmp_33_reg_7855 <= grp_fu_36432_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                tmp_36_reg_7687 <= grp_fu_36427_p_dout0;
                tmp_41_reg_7692 <= grp_fu_36432_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln1027_reg_7491_pp0_iter3_reg = ap_const_lv1_1))) then
                tmp_38_reg_7877 <= grp_fu_36427_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln1027_reg_7491_pp0_iter3_reg = ap_const_lv1_1))) then
                tmp_43_reg_7887 <= grp_fu_36427_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln1027_reg_7491_pp0_iter5_reg = ap_const_lv1_1))) then
                tmp_45_reg_7924 <= grp_fu_36432_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6) and (icmp_ln1027_reg_7491_pp0_iter6_reg = ap_const_lv1_1))) then
                tmp_48_reg_7948 <= grp_fu_36427_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln1027_reg_7491_pp0_iter7_reg = ap_const_lv1_1))) then
                tmp_51_reg_7988 <= grp_fu_36432_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7) and (icmp_ln1027_reg_7491_pp0_iter6_reg = ap_const_lv1_1))) then
                tmp_other_4_reg_7953 <= tmp_other_4_fu_4923_p3;
                tmp_score_4_reg_7959 <= tmp_score_4_fu_4930_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln1027_reg_7491_pp0_iter6_reg = ap_const_lv1_1))) then
                tmp_score_load_reg_7941 <= tmp_score_fu_842;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage7_subdone, ap_block_pp0_stage2_subdone, ap_condition_exit_pp0_iter7_stage2, ap_block_pp0_stage3_subdone, ap_idle_pp0_0to6, ap_block_pp0_stage0_subdone, ap_idle_pp0_1to7, ap_done_pending_pp0, ap_block_pp0_stage1_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if ((not(((ap_start_int = ap_const_logic_0) and (ap_done_pending_pp0 = ap_const_logic_0) and (ap_idle_pp0_1to7 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if (((ap_idle_pp0_0to6 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter7_stage2))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    and_ln112_1_fu_4253_p2 <= (or_ln112_fu_4240_p2 and and_ln112_fu_4248_p2);
    and_ln112_2_fu_4329_p2 <= (tmp_31_reg_7672 and or_ln112_3_fu_4323_p2);
    and_ln112_3_fu_4334_p2 <= (or_ln112_2_fu_4305_p2 and and_ln112_2_fu_4329_p2);
    and_ln112_4_fu_4410_p2 <= (or_ln112_5_fu_4404_p2 and or_ln112_4_fu_4386_p2);
    and_ln112_5_fu_4416_p2 <= (tmp_36_reg_7687 and and_ln112_4_fu_4410_p2);
    and_ln112_6_fu_4491_p2 <= (or_ln112_7_fu_4485_p2 and or_ln112_6_fu_4467_p2);
    and_ln112_7_fu_4497_p2 <= (tmp_41_reg_7692 and and_ln112_6_fu_4491_p2);
    and_ln112_fu_4248_p2 <= (tmp_26_reg_7667 and or_ln112_1_fu_4244_p2);
    and_ln116_1_fu_4657_p2 <= (tmp_33_reg_7855 and or_ln116_1_fu_4651_p2);
    and_ln116_2_fu_4704_p2 <= (tmp_38_reg_7877 and or_ln116_2_fu_4698_p2);
    and_ln116_3_fu_4751_p2 <= (tmp_43_reg_7887 and or_ln116_3_fu_4745_p2);
    and_ln116_fu_4610_p2 <= (tmp_28_reg_7850 and or_ln116_fu_4604_p2);
    and_ln122_fu_4798_p2 <= (tmp_45_reg_7924 and or_ln122_fu_4792_p2);
    and_ln130_1_fu_4912_p2 <= (tmp_48_reg_7948 and and_ln130_fu_4906_p2);
    and_ln130_fu_4906_p2 <= (or_ln130_2_fu_4900_p2 and or_ln130_1_fu_4882_p2);
    and_ln139_1_fu_5061_p2 <= (tmp_51_reg_7988 and and_ln139_fu_5055_p2);
    and_ln139_fu_5055_p2 <= (or_ln139_2_fu_5049_p2 and or_ln139_1_fu_5031_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage7_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage6_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage7_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage6_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage7_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage5_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage6_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage7_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage7_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone, icmp_ln1027_reg_7491)
    begin
        if (((icmp_ln1027_reg_7491 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter7_stage2_assign_proc : process(ap_enable_reg_pp0_iter7, icmp_ln1027_reg_7491_pp0_iter7_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln1027_reg_7491_pp0_iter7_reg = ap_const_lv1_0))) then 
            ap_condition_exit_pp0_iter7_stage2 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter7_stage2 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_subdone) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;


    ap_done_pending_pp0_assign_proc : process(ap_loop_exit_ready, ap_loop_exit_ready_pp0_iter1_reg, ap_loop_exit_ready_pp0_iter2_reg, ap_loop_exit_ready_pp0_iter3_reg, ap_loop_exit_ready_pp0_iter4_reg, ap_loop_exit_ready_pp0_iter5_reg, ap_loop_exit_ready_pp0_iter6_reg, ap_loop_exit_ready_pp0_iter7_reg)
    begin
        if (not(((ap_loop_exit_ready = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter7_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter6_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter5_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter4_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter3_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter2_reg = ap_const_logic_0) and (ap_loop_exit_ready_pp0_iter1_reg = ap_const_logic_0)))) then 
            ap_done_pending_pp0 <= ap_const_logic_1;
        else 
            ap_done_pending_pp0 <= ap_const_logic_0;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to6_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6)
    begin
        if (((ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to6 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to6 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to7_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7)
    begin
        if (((ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to7 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to7 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage7;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln112_1_fu_4199_p1 <= tmp_5_reg_7524;
    bitcast_ln112_2_fu_4259_p1 <= tmp_9_reg_7548;
    bitcast_ln112_3_fu_4276_p1 <= tmp_11_reg_7562;
    bitcast_ln112_4_fu_4340_p1 <= tmp_15_reg_7586;
    bitcast_ln112_5_fu_4357_p1 <= tmp_17_reg_7600;
    bitcast_ln112_6_fu_4421_p1 <= tmp_21_reg_7624;
    bitcast_ln112_7_fu_4438_p1 <= tmp_23_reg_7638;
    bitcast_ln112_fu_4182_p1 <= tmp_3_reg_7510;
    bitcast_ln116_1_fu_4622_p1 <= ov_6_reg_7836;
    bitcast_ln116_2_fu_4669_p1 <= ov_10_reg_7843;
    bitcast_ln116_3_fu_4716_p1 <= ov_14_reg_7860;
    bitcast_ln116_fu_4575_p1 <= ov_2_reg_7829;
    bitcast_ln122_fu_4763_p1 <= overlap_3_reg_7917;
    bitcast_ln126_fu_4803_p1 <= distance_3_reg_7929;
    bitcast_ln130_1_fu_4853_p1 <= tmp_score_load_reg_7941;
    bitcast_ln130_fu_4836_p1 <= sc_2_reg_7934;
    bitcast_ln139_1_fu_5002_p1 <= score_load_reg_7967;
    bitcast_ln139_fu_4985_p1 <= tmp_score_4_reg_7959;

    grp_fu_3168_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_7491, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, and_ln112_7_reg_7702, reg_3205, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_7491_pp0_iter1_reg, tmp_s_reg_7495, tmp_5_reg_7524, tmp_11_reg_7562, tmp_12_reg_7571, tmp_18_reg_7609, tmp_22_reg_7633, tmp_23_reg_7638, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, and_ln112_1_reg_7677_pp0_iter1_reg, and_ln112_7_reg_7702_pp0_iter1_reg, d1_reg_7716, d2_reg_7721, ap_CS_fsm_pp0_stage2, d1_3_reg_7788, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_lv1_0 = and_ln112_7_reg_7702_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3168_p0 <= reg_3205;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_7_reg_7702_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3168_p0 <= d1_3_reg_7788;
        elsif (((ap_const_lv1_0 = and_ln112_1_reg_7677_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_3168_p0 <= d2_reg_7721;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_1_reg_7677_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_3168_p0 <= d1_reg_7716;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3168_p0 <= tmp_18_reg_7609;
        elsif (((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_lv1_1 = and_ln112_7_reg_7702) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_3168_p0 <= tmp_23_reg_7638;
        elsif (((ap_const_lv1_0 = and_ln112_7_reg_7702) and (icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_3168_p0 <= tmp_22_reg_7633;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_3168_p0 <= tmp_12_reg_7571;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_3168_p0 <= tmp_11_reg_7562;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_3168_p0 <= tmp_5_reg_7524;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3168_p0 <= tmp_s_reg_7495;
        else 
            grp_fu_3168_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3168_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_7491, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, and_ln112_7_reg_7702, reg_3205, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_7491_pp0_iter1_reg, tmp_1_reg_7500, tmp_3_reg_7510, tmp_9_reg_7548, tmp_13_reg_7576, tmp_19_reg_7614, tmp_21_reg_7624, tmp_23_reg_7638, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, and_ln112_1_reg_7677_pp0_iter1_reg, and_ln112_7_reg_7702_pp0_iter1_reg, sub_reg_7732, ap_CS_fsm_pp0_stage2, sub2_reg_7737, sub87_3_reg_7798, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_lv1_0 = and_ln112_7_reg_7702_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3168_p1 <= sub87_3_reg_7798;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_7_reg_7702_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3168_p1 <= reg_3205;
        elsif (((ap_const_lv1_0 = and_ln112_1_reg_7677_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_3168_p1 <= sub2_reg_7737;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_1_reg_7677_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_3168_p1 <= sub_reg_7732;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3168_p1 <= tmp_19_reg_7614;
        elsif (((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_const_lv1_1 = and_ln112_7_reg_7702) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_3168_p1 <= tmp_21_reg_7624;
        elsif (((ap_const_lv1_0 = and_ln112_7_reg_7702) and (icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_3168_p1 <= tmp_23_reg_7638;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_3168_p1 <= tmp_13_reg_7576;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_3168_p1 <= tmp_9_reg_7548;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_3168_p1 <= tmp_3_reg_7510;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3168_p1 <= tmp_1_reg_7500;
        else 
            grp_fu_3168_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3172_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_7491, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, and_ln112_7_reg_7702, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_7491_pp0_iter1_reg, icmp_ln1027_reg_7491_pp0_iter3_reg, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, and_ln112_3_reg_7682_pp0_iter1_reg, and_ln112_5_reg_7697_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage6_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage7_00001, ap_block_pp0_stage1_00001)
    begin
        if ((((ap_const_lv1_0 = and_ln112_7_reg_7702) and (icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_3_reg_7682_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_5_reg_7697_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_0 = and_ln112_5_reg_7697_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_0 = and_ln112_3_reg_7682_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_3172_opcode <= ap_const_lv2_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_reg_7491_pp0_iter3_reg = ap_const_lv1_1))) then 
            grp_fu_3172_opcode <= ap_const_lv2_0;
        else 
            grp_fu_3172_opcode <= "XX";
        end if; 
    end process;


    grp_fu_3172_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_7491_pp0_iter1_reg, tmp_2_reg_7505, tmp_3_reg_7510, tmp_9_reg_7548, tmp_17_reg_7600, tmp_21_reg_7624, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, and_ln112_3_reg_7682_pp0_iter1_reg, and_ln112_5_reg_7697_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, d1_1_reg_7742, d2_1_reg_7747, d1_2_reg_7762, d2_2_reg_7767, distance_1_reg_7897, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3172_p0 <= distance_1_reg_7897;
        elsif (((ap_const_lv1_0 = and_ln112_5_reg_7697_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3172_p0 <= d2_2_reg_7767;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_5_reg_7697_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3172_p0 <= d1_2_reg_7762;
        elsif (((ap_const_lv1_0 = and_ln112_3_reg_7682_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_3172_p0 <= d2_1_reg_7747;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_3_reg_7682_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_3172_p0 <= d1_1_reg_7742;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_3172_p0 <= tmp_21_reg_7624;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_3172_p0 <= tmp_17_reg_7600;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_3172_p0 <= tmp_9_reg_7548;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_3172_p0 <= tmp_3_reg_7510;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3172_p0 <= tmp_2_reg_7505;
        else 
            grp_fu_3172_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3172_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_7491_pp0_iter1_reg, tmp_3_reg_7510, tmp_5_reg_7524, tmp_11_reg_7562, tmp_15_reg_7586, tmp_23_reg_7638, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, and_ln112_3_reg_7682_pp0_iter1_reg, and_ln112_5_reg_7697_pp0_iter1_reg, ap_CS_fsm_pp0_stage2, sub75_1_reg_7752, sub87_1_reg_7757, sub75_2_reg_7778, sub87_2_reg_7783, mul_2_reg_7814_pp0_iter4_reg, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage7, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3172_p1 <= mul_2_reg_7814_pp0_iter4_reg;
        elsif (((ap_const_lv1_0 = and_ln112_5_reg_7697_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3172_p1 <= sub87_2_reg_7783;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_5_reg_7697_pp0_iter1_reg) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3172_p1 <= sub75_2_reg_7778;
        elsif (((ap_const_lv1_0 = and_ln112_3_reg_7682_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_3172_p1 <= sub87_1_reg_7757;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_3_reg_7682_pp0_iter1_reg) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_3172_p1 <= sub75_1_reg_7752;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_3172_p1 <= tmp_23_reg_7638;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_3172_p1 <= tmp_15_reg_7586;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_3172_p1 <= tmp_11_reg_7562;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_3172_p1 <= tmp_5_reg_7524;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3172_p1 <= tmp_3_reg_7510;
        else 
            grp_fu_3172_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3176_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, icmp_ln1027_reg_7491, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_7491_pp0_iter2_reg, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_7491_pp0_iter1_reg, icmp_ln1027_reg_7491_pp0_iter4_reg, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage6_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001)
    begin
        if ((((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_3176_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_reg_7491_pp0_iter4_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (icmp_ln1027_reg_7491_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (icmp_ln1027_reg_7491_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_3176_opcode <= ap_const_lv2_0;
        else 
            grp_fu_3176_opcode <= "XX";
        end if; 
    end process;


    grp_fu_3176_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, tmp_4_reg_7519, tmp_8_reg_7543, tmp_14_reg_7581, tmp_15_reg_7586, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, mul_reg_7793, distance_reg_7824, distance_2_reg_7912, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3176_p0 <= distance_2_reg_7912;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3176_p0 <= distance_reg_7824;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_3176_p0 <= mul_reg_7793;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_3176_p0 <= tmp_15_reg_7586;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_3176_p0 <= tmp_14_reg_7581;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_3176_p0 <= tmp_8_reg_7543;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3176_p0 <= tmp_4_reg_7519;
        else 
            grp_fu_3176_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3176_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, tmp_5_reg_7524, tmp_9_reg_7548, tmp_15_reg_7586, tmp_17_reg_7600, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, mul_1_reg_7803_pp0_iter2_reg, mul_3_reg_7819_pp0_iter4_reg, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3176_p1 <= mul_3_reg_7819_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3176_p1 <= mul_1_reg_7803_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_3176_p1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_3176_p1 <= tmp_17_reg_7600;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_3176_p1 <= tmp_15_reg_7586;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_3176_p1 <= tmp_9_reg_7548;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3176_p1 <= tmp_5_reg_7524;
        else 
            grp_fu_3176_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3180_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, tmp_6_reg_7533, tmp_10_reg_7557, tmp_16_reg_7595, tmp_20_reg_7619, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_3180_p0 <= tmp_20_reg_7619;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_3180_p0 <= tmp_16_reg_7595;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_3180_p0 <= tmp_10_reg_7557;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_3180_p0 <= tmp_6_reg_7533;
            else 
                grp_fu_3180_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_3180_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3180_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage5, tmp_7_reg_7538, tmp_11_reg_7562, tmp_17_reg_7600, tmp_21_reg_7624, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage5, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if ((ap_enable_reg_pp0_iter0 = ap_const_logic_1)) then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
                grp_fu_3180_p1 <= tmp_21_reg_7624;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
                grp_fu_3180_p1 <= tmp_17_reg_7600;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
                grp_fu_3180_p1 <= tmp_11_reg_7562;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                grp_fu_3180_p1 <= tmp_7_reg_7538;
            else 
                grp_fu_3180_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
            end if;
        else 
            grp_fu_3180_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3185_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, reg_3199, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, d_1_reg_7726, ap_CS_fsm_pp0_stage2, d_2_reg_7772, d_3_reg_7808, ov_16_reg_7867, overlap_1_reg_7902, overlap_2_reg_7907, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_3185_p0 <= overlap_2_reg_7907;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3185_p0 <= overlap_1_reg_7902;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_3185_p0 <= ov_16_reg_7867;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3185_p0 <= d_3_reg_7808;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_3185_p0 <= d_2_reg_7772;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_3185_p0 <= d_1_reg_7726;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3185_p0 <= reg_3199;
        else 
            grp_fu_3185_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3185_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, reg_3199, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage5, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, d_1_reg_7726, ap_CS_fsm_pp0_stage2, d_2_reg_7772, d_3_reg_7808, ov_7_reg_7872, ov_11_reg_7882, ov_15_reg_7892, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_3185_p1 <= ov_15_reg_7892;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3185_p1 <= ov_11_reg_7882;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_3185_p1 <= ov_7_reg_7872;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3185_p1 <= d_3_reg_7808;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_3185_p1 <= d_2_reg_7772;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_3185_p1 <= d_1_reg_7726;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3185_p1 <= reg_3199;
        else 
            grp_fu_3185_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3189_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, icmp_ln1027_reg_7491, ap_CS_fsm_pp0_stage1, icmp_ln1027_reg_7491_pp0_iter2_reg, ap_CS_fsm_pp0_stage5, icmp_ln1027_reg_7491_pp0_iter3_reg, icmp_ln1027_reg_7491_pp0_iter6_reg, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5) and (icmp_ln1027_reg_7491_pp0_iter6_reg = ap_const_lv1_1))) then 
            grp_fu_3189_opcode <= ap_const_lv5_2;
        elsif ((((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (icmp_ln1027_reg_7491_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (icmp_ln1027_reg_7491_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln1027_reg_7491_pp0_iter3_reg = ap_const_lv1_1)))) then 
            grp_fu_3189_opcode <= ap_const_lv5_4;
        else 
            grp_fu_3189_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_3189_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, tmp_3_reg_7510, tmp_15_reg_7586, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ov_2_reg_7829, ov_10_reg_7843, ov_14_reg_7860, sc_2_reg_7934, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_3189_p0 <= sc_2_reg_7934;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_3189_p0 <= ov_14_reg_7860;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3189_p0 <= ov_10_reg_7843;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3189_p0 <= ov_2_reg_7829;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_3189_p0 <= tmp_15_reg_7586;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3189_p0 <= tmp_3_reg_7510;
        else 
            grp_fu_3189_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3189_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage5, tmp_5_reg_7524, tmp_17_reg_7600, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, ap_block_pp0_stage1, tmp_score_fu_842, ap_block_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_3189_p1 <= tmp_score_fu_842;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_3189_p1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_3189_p1 <= tmp_17_reg_7600;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3189_p1 <= tmp_5_reg_7524;
        else 
            grp_fu_3189_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3193_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, icmp_ln1027_reg_7491, ap_CS_fsm_pp0_stage1, icmp_ln1027_reg_7491_pp0_iter2_reg, icmp_ln1027_reg_7491_pp0_iter5_reg, icmp_ln1027_reg_7491_pp0_iter6_reg, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1) and (icmp_ln1027_reg_7491_pp0_iter6_reg = ap_const_lv1_1)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4) and (icmp_ln1027_reg_7491_pp0_iter5_reg = ap_const_lv1_1)))) then 
            grp_fu_3193_opcode <= ap_const_lv5_2;
        elsif ((((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_7491 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (icmp_ln1027_reg_7491_pp0_iter2_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_3193_opcode <= ap_const_lv5_4;
        else 
            grp_fu_3193_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_3193_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, tmp_9_reg_7548, tmp_21_reg_7624, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ov_6_reg_7836, overlap_3_reg_7917, tmp_score_4_reg_7959, ap_block_pp0_stage2, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3193_p0 <= tmp_score_4_reg_7959;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_3193_p0 <= overlap_3_reg_7917;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_3193_p0 <= ov_6_reg_7836;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_3193_p0 <= tmp_21_reg_7624;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3193_p0 <= tmp_9_reg_7548;
        else 
            grp_fu_3193_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_3193_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage1, tmp_11_reg_7562, tmp_23_reg_7638, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2, score_fu_830, ap_block_pp0_stage1, ap_block_pp0_stage0, ap_block_pp0_stage3, ap_block_pp0_stage4)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_3193_p1 <= score_fu_830;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_3193_p1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_3193_p1 <= tmp_23_reg_7638;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_3193_p1 <= tmp_11_reg_7562;
        else 
            grp_fu_3193_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_36416_p_ce <= ap_const_logic_1;
    grp_fu_36416_p_din0 <= grp_fu_3168_p0;
    grp_fu_36416_p_din1 <= grp_fu_3168_p1;
    grp_fu_36416_p_opcode <= ap_const_lv2_1(1 - 1 downto 0);
    grp_fu_36422_p_ce <= ap_const_logic_1;
    grp_fu_36422_p_din0 <= grp_fu_3185_p0;
    grp_fu_36422_p_din1 <= grp_fu_3185_p1;
    grp_fu_36427_p_ce <= ap_const_logic_1;
    grp_fu_36427_p_din0 <= grp_fu_3189_p0;
    grp_fu_36427_p_din1 <= grp_fu_3189_p1;
    grp_fu_36427_p_opcode <= grp_fu_3189_opcode;
    grp_fu_36432_p_ce <= ap_const_logic_1;
    grp_fu_36432_p_din0 <= grp_fu_3193_p0;
    grp_fu_36432_p_din1 <= grp_fu_3193_p1;
    grp_fu_36432_p_opcode <= grp_fu_3193_opcode;
    i_real_2_fu_4530_p3 <= 
        i_real_fu_4507_p2 when (icmp_ln1019_fu_4502_p2(0) = '1') else 
        i_real_3_reg_7476;
    i_real_fu_4507_p2 <= std_logic_vector(unsigned(i_real_3_reg_7476) + unsigned(ap_const_lv32_1));
    icmp_ln1019_fu_4502_p2 <= "1" when (k_real_5_reg_7484 = ap_const_lv32_1F) else "0";
    icmp_ln1027_fu_3256_p2 <= "1" when (signed(merge_1_1_fu_834) < signed(ap_const_lv32_1F)) else "0";
    icmp_ln112_10_fu_4392_p2 <= "0" when (tmp_35_fu_4360_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_11_fu_4398_p2 <= "1" when (trunc_ln112_5_fu_4370_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_12_fu_4455_p2 <= "0" when (tmp_39_fu_4424_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_13_fu_4461_p2 <= "1" when (trunc_ln112_6_fu_4434_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_14_fu_4473_p2 <= "0" when (tmp_40_fu_4441_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_15_fu_4479_p2 <= "1" when (trunc_ln112_7_fu_4451_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_1_fu_4222_p2 <= "1" when (trunc_ln112_fu_4195_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_2_fu_4228_p2 <= "0" when (tmp_25_fu_4202_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_3_fu_4234_p2 <= "1" when (trunc_ln112_1_fu_4212_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_4_fu_4293_p2 <= "0" when (tmp_29_fu_4262_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_5_fu_4299_p2 <= "1" when (trunc_ln112_2_fu_4272_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_6_fu_4311_p2 <= "0" when (tmp_30_fu_4279_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_7_fu_4317_p2 <= "1" when (trunc_ln112_3_fu_4289_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_8_fu_4374_p2 <= "0" when (tmp_34_fu_4343_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_9_fu_4380_p2 <= "1" when (trunc_ln112_4_fu_4353_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_fu_4216_p2 <= "0" when (tmp_24_fu_4185_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_1_fu_4598_p2 <= "1" when (trunc_ln116_fu_4588_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_2_fu_4639_p2 <= "0" when (tmp_32_fu_4625_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_3_fu_4645_p2 <= "1" when (trunc_ln116_1_fu_4635_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_4_fu_4686_p2 <= "0" when (tmp_37_fu_4672_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_5_fu_4692_p2 <= "1" when (trunc_ln116_2_fu_4682_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_6_fu_4733_p2 <= "0" when (tmp_42_fu_4719_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_7_fu_4739_p2 <= "1" when (trunc_ln116_3_fu_4729_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_fu_4592_p2 <= "0" when (tmp_27_fu_4578_p4 = ap_const_lv8_FF) else "1";
    icmp_ln122_1_fu_4786_p2 <= "1" when (trunc_ln122_fu_4776_p1 = ap_const_lv23_0) else "0";
    icmp_ln122_fu_4780_p2 <= "0" when (tmp_44_fu_4766_p4 = ap_const_lv8_FF) else "1";
    icmp_ln130_1_fu_4870_p2 <= "0" when (tmp_46_fu_4839_p4 = ap_const_lv8_FF) else "1";
    icmp_ln130_2_fu_4876_p2 <= "1" when (trunc_ln130_fu_4849_p1 = ap_const_lv23_0) else "0";
    icmp_ln130_3_fu_4888_p2 <= "0" when (tmp_47_fu_4856_p4 = ap_const_lv8_FF) else "1";
    icmp_ln130_4_fu_4894_p2 <= "1" when (trunc_ln130_1_fu_4866_p1 = ap_const_lv23_0) else "0";
    icmp_ln130_fu_4830_p2 <= "1" when (tmp_other_fu_846 = ap_const_lv32_FFFFFFFF) else "0";
    icmp_ln139_1_fu_5025_p2 <= "1" when (trunc_ln139_fu_4998_p1 = ap_const_lv23_0) else "0";
    icmp_ln139_2_fu_5037_p2 <= "0" when (tmp_50_fu_5005_p4 = ap_const_lv8_FF) else "1";
    icmp_ln139_3_fu_5043_p2 <= "1" when (trunc_ln139_1_fu_5015_p1 = ap_const_lv23_0) else "0";
    icmp_ln139_fu_5019_p2 <= "0" when (tmp_49_fu_4988_p4 = ap_const_lv8_FF) else "1";
    k_real_2_fu_4517_p2 <= std_logic_vector(unsigned(k_real_5_reg_7484) + unsigned(ap_const_lv32_1));
    k_real_3_fu_4522_p3 <= 
        k_real_fu_4512_p2 when (icmp_ln1019_fu_4502_p2(0) = '1') else 
        k_real_2_fu_4517_p2;
    k_real_fu_4512_p2 <= std_logic_vector(unsigned(i_real_3_reg_7476) + unsigned(ap_const_lv32_2));
    merge_1_6_fu_5084_p3 <= 
        i_real_3_reg_7476_pp0_iter7_reg when (or_ln139_fu_5066_p2(0) = '1') else 
        merge_1_4_reg_7975;
    merge_1_7_fu_5102_p3 <= 
        merge_1_6_fu_5084_p3 when (icmp_ln1019_reg_7707_pp0_iter7_reg(0) = '1') else 
        merge_1_4_reg_7975;
    merge_1_out <= merge_1_fu_822(5 - 1 downto 0);

    merge_1_out_ap_vld_assign_proc : process(icmp_ln1027_reg_7491_pp0_iter7_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln1027_reg_7491_pp0_iter7_reg = ap_const_lv1_0))) then 
            merge_1_out_ap_vld <= ap_const_logic_1;
        else 
            merge_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    merge_2_5_fu_5078_p3 <= 
        tmp_other_4_reg_7953 when (or_ln139_fu_5066_p2(0) = '1') else 
        merge_2_1_reg_7982;
    merge_2_6_fu_5096_p3 <= 
        merge_2_5_fu_5078_p3 when (icmp_ln1019_reg_7707_pp0_iter7_reg(0) = '1') else 
        merge_2_1_reg_7982;
    merge_2_out <= merge_2_fu_826(5 - 1 downto 0);

    merge_2_out_ap_vld_assign_proc : process(icmp_ln1027_reg_7491_pp0_iter7_reg, ap_CS_fsm_pp0_stage2, ap_block_pp0_stage2_11001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2) and (icmp_ln1027_reg_7491_pp0_iter7_reg = ap_const_lv1_0))) then 
            merge_2_out_ap_vld <= ap_const_logic_1;
        else 
            merge_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    or_ln112_1_fu_4244_p2 <= (icmp_ln112_3_reg_7662 or icmp_ln112_2_reg_7657);
    or_ln112_2_fu_4305_p2 <= (icmp_ln112_5_fu_4299_p2 or icmp_ln112_4_fu_4293_p2);
    or_ln112_3_fu_4323_p2 <= (icmp_ln112_7_fu_4317_p2 or icmp_ln112_6_fu_4311_p2);
    or_ln112_4_fu_4386_p2 <= (icmp_ln112_9_fu_4380_p2 or icmp_ln112_8_fu_4374_p2);
    or_ln112_5_fu_4404_p2 <= (icmp_ln112_11_fu_4398_p2 or icmp_ln112_10_fu_4392_p2);
    or_ln112_6_fu_4467_p2 <= (icmp_ln112_13_fu_4461_p2 or icmp_ln112_12_fu_4455_p2);
    or_ln112_7_fu_4485_p2 <= (icmp_ln112_15_fu_4479_p2 or icmp_ln112_14_fu_4473_p2);
    or_ln112_fu_4240_p2 <= (icmp_ln112_reg_7647 or icmp_ln112_1_reg_7652);
    or_ln116_1_fu_4651_p2 <= (icmp_ln116_3_fu_4645_p2 or icmp_ln116_2_fu_4639_p2);
    or_ln116_2_fu_4698_p2 <= (icmp_ln116_5_fu_4692_p2 or icmp_ln116_4_fu_4686_p2);
    or_ln116_3_fu_4745_p2 <= (icmp_ln116_7_fu_4739_p2 or icmp_ln116_6_fu_4733_p2);
    or_ln116_fu_4604_p2 <= (icmp_ln116_fu_4592_p2 or icmp_ln116_1_fu_4598_p2);
    or_ln122_fu_4792_p2 <= (icmp_ln122_fu_4780_p2 or icmp_ln122_1_fu_4786_p2);
    or_ln130_1_fu_4882_p2 <= (icmp_ln130_2_fu_4876_p2 or icmp_ln130_1_fu_4870_p2);
    or_ln130_2_fu_4900_p2 <= (icmp_ln130_4_fu_4894_p2 or icmp_ln130_3_fu_4888_p2);
    or_ln130_fu_4917_p2 <= (icmp_ln130_fu_4830_p2 or and_ln130_1_fu_4912_p2);
    or_ln139_1_fu_5031_p2 <= (icmp_ln139_fu_5019_p2 or icmp_ln139_1_fu_5025_p2);
    or_ln139_2_fu_5049_p2 <= (icmp_ln139_3_fu_5043_p2 or icmp_ln139_2_fu_5037_p2);
    or_ln139_fu_5066_p2 <= (tmp_fu_4978_p3 or and_ln139_1_fu_5061_p2);
    ov_10_fu_4561_p3 <= 
        reg_3211 when (and_ln112_5_reg_7697_pp0_iter2_reg(0) = '1') else 
        reg_3211;
    ov_11_fu_4709_p3 <= 
        ap_const_lv32_0 when (and_ln116_2_fu_4704_p2(0) = '1') else 
        ov_10_reg_7843;
    ov_14_fu_4568_p3 <= 
        reg_3199 when (and_ln112_7_reg_7702_pp0_iter2_reg(0) = '1') else 
        reg_3199;
    ov_15_fu_4756_p3 <= 
        ap_const_lv32_0 when (and_ln116_3_fu_4751_p2(0) = '1') else 
        ov_14_reg_7860;
    ov_16_fu_4615_p3 <= 
        ap_const_lv32_0 when (and_ln116_fu_4610_p2(0) = '1') else 
        ov_2_reg_7829;
    ov_2_fu_4547_p3 <= 
        reg_3199 when (and_ln112_1_reg_7677_pp0_iter2_reg(0) = '1') else 
        reg_3199;
    ov_6_fu_4554_p3 <= 
        reg_3211 when (and_ln112_3_reg_7682_pp0_iter2_reg(0) = '1') else 
        reg_3211;
    ov_7_fu_4662_p3 <= 
        ap_const_lv32_0 when (and_ln116_1_fu_4657_p2(0) = '1') else 
        ov_6_reg_7836;
    sc_2_fu_4816_p3 <= 
        overlap_3_reg_7917 when (and_ln122_fu_4798_p2(0) = '1') else 
        sc_fu_4812_p1;
    sc_fu_4812_p1 <= xor_ln126_fu_4806_p2;
    score_2_fu_5072_p3 <= 
        tmp_score_4_reg_7959 when (or_ln139_fu_5066_p2(0) = '1') else 
        score_load_reg_7967;
    score_3_fu_5090_p3 <= 
        score_2_fu_5072_p3 when (icmp_ln1019_reg_7707_pp0_iter7_reg(0) = '1') else 
        score_load_reg_7967;
    tmp_24_fu_4185_p4 <= bitcast_ln112_fu_4182_p1(30 downto 23);
    tmp_25_fu_4202_p4 <= bitcast_ln112_1_fu_4199_p1(30 downto 23);
    tmp_27_fu_4578_p4 <= bitcast_ln116_fu_4575_p1(30 downto 23);
    tmp_29_fu_4262_p4 <= bitcast_ln112_2_fu_4259_p1(30 downto 23);
    tmp_30_fu_4279_p4 <= bitcast_ln112_3_fu_4276_p1(30 downto 23);
    tmp_32_fu_4625_p4 <= bitcast_ln116_1_fu_4622_p1(30 downto 23);
    tmp_34_fu_4343_p4 <= bitcast_ln112_4_fu_4340_p1(30 downto 23);
    tmp_35_fu_4360_p4 <= bitcast_ln112_5_fu_4357_p1(30 downto 23);
    tmp_37_fu_4672_p4 <= bitcast_ln116_2_fu_4669_p1(30 downto 23);
    tmp_39_fu_4424_p4 <= bitcast_ln112_6_fu_4421_p1(30 downto 23);
    tmp_40_fu_4441_p4 <= bitcast_ln112_7_fu_4438_p1(30 downto 23);
    tmp_42_fu_4719_p4 <= bitcast_ln116_3_fu_4716_p1(30 downto 23);
    tmp_44_fu_4766_p4 <= bitcast_ln122_fu_4763_p1(30 downto 23);
    tmp_46_fu_4839_p4 <= bitcast_ln130_fu_4836_p1(30 downto 23);
    tmp_47_fu_4856_p4 <= bitcast_ln130_1_fu_4853_p1(30 downto 23);
    tmp_49_fu_4988_p4 <= bitcast_ln139_fu_4985_p1(30 downto 23);
    tmp_50_fu_5005_p4 <= bitcast_ln139_1_fu_5002_p1(30 downto 23);
    tmp_fu_4978_p3 <= merge_1_4_reg_7975(31 downto 31);
    tmp_other_3_fu_4936_p3 <= 
        ap_const_lv32_FFFFFFFF when (icmp_ln1019_reg_7707_pp0_iter6_reg(0) = '1') else 
        tmp_other_4_reg_7953;
    tmp_other_4_fu_4923_p3 <= 
        k_real_5_reg_7484_pp0_iter6_reg when (or_ln130_fu_4917_p2(0) = '1') else 
        tmp_other_fu_846;
    tmp_score_3_fu_4942_p3 <= 
        ap_const_lv32_0 when (icmp_ln1019_reg_7707_pp0_iter6_reg(0) = '1') else 
        tmp_score_4_reg_7959;
    tmp_score_4_fu_4930_p3 <= 
        sc_2_reg_7934 when (or_ln130_fu_4917_p2(0) = '1') else 
        tmp_score_load_reg_7941;
    trunc_ln104_1_fu_3304_p1 <= k_real_4_fu_838(5 - 1 downto 0);
    trunc_ln104_fu_3262_p1 <= merge_1_1_fu_834(5 - 1 downto 0);
    trunc_ln112_1_fu_4212_p1 <= bitcast_ln112_1_fu_4199_p1(23 - 1 downto 0);
    trunc_ln112_2_fu_4272_p1 <= bitcast_ln112_2_fu_4259_p1(23 - 1 downto 0);
    trunc_ln112_3_fu_4289_p1 <= bitcast_ln112_3_fu_4276_p1(23 - 1 downto 0);
    trunc_ln112_4_fu_4353_p1 <= bitcast_ln112_4_fu_4340_p1(23 - 1 downto 0);
    trunc_ln112_5_fu_4370_p1 <= bitcast_ln112_5_fu_4357_p1(23 - 1 downto 0);
    trunc_ln112_6_fu_4434_p1 <= bitcast_ln112_6_fu_4421_p1(23 - 1 downto 0);
    trunc_ln112_7_fu_4451_p1 <= bitcast_ln112_7_fu_4438_p1(23 - 1 downto 0);
    trunc_ln112_fu_4195_p1 <= bitcast_ln112_fu_4182_p1(23 - 1 downto 0);
    trunc_ln116_1_fu_4635_p1 <= bitcast_ln116_1_fu_4622_p1(23 - 1 downto 0);
    trunc_ln116_2_fu_4682_p1 <= bitcast_ln116_2_fu_4669_p1(23 - 1 downto 0);
    trunc_ln116_3_fu_4729_p1 <= bitcast_ln116_3_fu_4716_p1(23 - 1 downto 0);
    trunc_ln116_fu_4588_p1 <= bitcast_ln116_fu_4575_p1(23 - 1 downto 0);
    trunc_ln122_fu_4776_p1 <= bitcast_ln122_fu_4763_p1(23 - 1 downto 0);
    trunc_ln130_1_fu_4866_p1 <= bitcast_ln130_1_fu_4853_p1(23 - 1 downto 0);
    trunc_ln130_fu_4849_p1 <= bitcast_ln130_fu_4836_p1(23 - 1 downto 0);
    trunc_ln139_1_fu_5015_p1 <= bitcast_ln139_1_fu_5002_p1(23 - 1 downto 0);
    trunc_ln139_fu_4998_p1 <= bitcast_ln139_fu_4985_p1(23 - 1 downto 0);
    xor_ln126_fu_4806_p2 <= (bitcast_ln126_fu_4803_p1 xor ap_const_lv32_80000000);
end behav;
