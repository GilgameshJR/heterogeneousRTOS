// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        regions_center_0_0_0,
        regions_center_1_0_0,
        regions_center_2_0_0,
        regions_center_3_0_0,
        regions_center_4_0_0,
        regions_center_5_0_0,
        regions_center_6_0_0,
        regions_center_7_0_0,
        regions_center_8_0_0,
        regions_center_9_0_0,
        regions_center_10_0_0,
        regions_center_11_0_0,
        regions_center_12_0_0,
        regions_center_13_0_0,
        regions_center_14_0_0,
        regions_center_15_0_0,
        regions_center_16_0_0,
        regions_center_17_0_0,
        regions_center_18_0_0,
        regions_center_19_0_0,
        regions_center_20_0_0,
        regions_center_21_0_0,
        regions_center_22_0_0,
        regions_center_23_0_0,
        regions_center_24_0_0,
        regions_center_25_0_0,
        regions_center_26_0_0,
        regions_center_27_0_0,
        regions_center_28_0_0,
        regions_center_29_0_0,
        regions_center_30_0_0,
        regions_center_31_0_0,
        regions_max_0_0_0,
        regions_max_1_0_0,
        regions_max_2_0_0,
        regions_max_3_0_0,
        regions_max_4_0_0,
        regions_max_5_0_0,
        regions_max_6_0_0,
        regions_max_7_0_0,
        regions_max_8_0_0,
        regions_max_9_0_0,
        regions_max_10_0_0,
        regions_max_11_0_0,
        regions_max_12_0_0,
        regions_max_13_0_0,
        regions_max_14_0_0,
        regions_max_15_0_0,
        regions_max_16_0_0,
        regions_max_17_0_0,
        regions_max_18_0_0,
        regions_max_19_0_0,
        regions_max_20_0_0,
        regions_max_21_0_0,
        regions_max_22_0_0,
        regions_max_23_0_0,
        regions_max_24_0_0,
        regions_max_25_0_0,
        regions_max_26_0_0,
        regions_max_27_0_0,
        regions_max_28_0_0,
        regions_max_29_0_0,
        regions_max_30_0_0,
        regions_max_31_0_0,
        regions_min_0_0_0,
        regions_min_1_0_0,
        regions_min_2_0_0,
        regions_min_3_0_0,
        regions_min_4_0_0,
        regions_min_5_0_0,
        regions_min_6_0_0,
        regions_min_7_0_0,
        regions_min_8_0_0,
        regions_min_9_0_0,
        regions_min_10_0_0,
        regions_min_11_0_0,
        regions_min_12_0_0,
        regions_min_13_0_0,
        regions_min_14_0_0,
        regions_min_15_0_0,
        regions_min_16_0_0,
        regions_min_17_0_0,
        regions_min_18_0_0,
        regions_min_19_0_0,
        regions_min_20_0_0,
        regions_min_21_0_0,
        regions_min_22_0_0,
        regions_min_23_0_0,
        regions_min_24_0_0,
        regions_min_25_0_0,
        regions_min_26_0_0,
        regions_min_27_0_0,
        regions_min_28_0_0,
        regions_min_29_0_0,
        regions_min_30_0_0,
        regions_min_31_0_0,
        regions_center_0_1_0,
        regions_center_1_1_0,
        regions_center_2_1_0,
        regions_center_3_1_0,
        regions_center_4_1_0,
        regions_center_5_1_0,
        regions_center_6_1_0,
        regions_center_7_1_0,
        regions_center_8_1_0,
        regions_center_9_1_0,
        regions_center_10_1_0,
        regions_center_11_1_0,
        regions_center_12_1_0,
        regions_center_13_1_0,
        regions_center_14_1_0,
        regions_center_15_1_0,
        regions_center_16_1_0,
        regions_center_17_1_0,
        regions_center_18_1_0,
        regions_center_19_1_0,
        regions_center_20_1_0,
        regions_center_21_1_0,
        regions_center_22_1_0,
        regions_center_23_1_0,
        regions_center_24_1_0,
        regions_center_25_1_0,
        regions_center_26_1_0,
        regions_center_27_1_0,
        regions_center_28_1_0,
        regions_center_29_1_0,
        regions_center_30_1_0,
        regions_center_31_1_0,
        regions_max_0_1_0,
        regions_max_1_1_0,
        regions_max_2_1_0,
        regions_max_3_1_0,
        regions_max_4_1_0,
        regions_max_5_1_0,
        regions_max_6_1_0,
        regions_max_7_1_0,
        regions_max_8_1_0,
        regions_max_9_1_0,
        regions_max_10_1_0,
        regions_max_11_1_0,
        regions_max_12_1_0,
        regions_max_13_1_0,
        regions_max_14_1_0,
        regions_max_15_1_0,
        regions_max_16_1_0,
        regions_max_17_1_0,
        regions_max_18_1_0,
        regions_max_19_1_0,
        regions_max_20_1_0,
        regions_max_21_1_0,
        regions_max_22_1_0,
        regions_max_23_1_0,
        regions_max_24_1_0,
        regions_max_25_1_0,
        regions_max_26_1_0,
        regions_max_27_1_0,
        regions_max_28_1_0,
        regions_max_29_1_0,
        regions_max_30_1_0,
        regions_max_31_1_0,
        regions_min_0_1_0,
        regions_min_1_1_0,
        regions_min_2_1_0,
        regions_min_3_1_0,
        regions_min_4_1_0,
        regions_min_5_1_0,
        regions_min_6_1_0,
        regions_min_7_1_0,
        regions_min_8_1_0,
        regions_min_9_1_0,
        regions_min_10_1_0,
        regions_min_11_1_0,
        regions_min_12_1_0,
        regions_min_13_1_0,
        regions_min_14_1_0,
        regions_min_15_1_0,
        regions_min_16_1_0,
        regions_min_17_1_0,
        regions_min_18_1_0,
        regions_min_19_1_0,
        regions_min_20_1_0,
        regions_min_21_1_0,
        regions_min_22_1_0,
        regions_min_23_1_0,
        regions_min_24_1_0,
        regions_min_25_1_0,
        regions_min_26_1_0,
        regions_min_27_1_0,
        regions_min_28_1_0,
        regions_min_29_1_0,
        regions_min_30_1_0,
        regions_min_31_1_0,
        regions_center_0_2_0,
        regions_center_1_2_0,
        regions_center_2_2_0,
        regions_center_3_2_0,
        regions_center_4_2_0,
        regions_center_5_2_0,
        regions_center_6_2_0,
        regions_center_7_2_0,
        regions_center_8_2_0,
        regions_center_9_2_0,
        regions_center_10_2_0,
        regions_center_11_2_0,
        regions_center_12_2_0,
        regions_center_13_2_0,
        regions_center_14_2_0,
        regions_center_15_2_0,
        regions_center_16_2_0,
        regions_center_17_2_0,
        regions_center_18_2_0,
        regions_center_19_2_0,
        regions_center_20_2_0,
        regions_center_21_2_0,
        regions_center_22_2_0,
        regions_center_23_2_0,
        regions_center_24_2_0,
        regions_center_25_2_0,
        regions_center_26_2_0,
        regions_center_27_2_0,
        regions_center_28_2_0,
        regions_center_29_2_0,
        regions_center_30_2_0,
        regions_center_31_2_0,
        regions_max_0_2_0,
        regions_max_1_2_0,
        regions_max_2_2_0,
        regions_max_3_2_0,
        regions_max_4_2_0,
        regions_max_5_2_0,
        regions_max_6_2_0,
        regions_max_7_2_0,
        regions_max_8_2_0,
        regions_max_9_2_0,
        regions_max_10_2_0,
        regions_max_11_2_0,
        regions_max_12_2_0,
        regions_max_13_2_0,
        regions_max_14_2_0,
        regions_max_15_2_0,
        regions_max_16_2_0,
        regions_max_17_2_0,
        regions_max_18_2_0,
        regions_max_19_2_0,
        regions_max_20_2_0,
        regions_max_21_2_0,
        regions_max_22_2_0,
        regions_max_23_2_0,
        regions_max_24_2_0,
        regions_max_25_2_0,
        regions_max_26_2_0,
        regions_max_27_2_0,
        regions_max_28_2_0,
        regions_max_29_2_0,
        regions_max_30_2_0,
        regions_max_31_2_0,
        regions_min_0_2_0,
        regions_min_1_2_0,
        regions_min_2_2_0,
        regions_min_3_2_0,
        regions_min_4_2_0,
        regions_min_5_2_0,
        regions_min_6_2_0,
        regions_min_7_2_0,
        regions_min_8_2_0,
        regions_min_9_2_0,
        regions_min_10_2_0,
        regions_min_11_2_0,
        regions_min_12_2_0,
        regions_min_13_2_0,
        regions_min_14_2_0,
        regions_min_15_2_0,
        regions_min_16_2_0,
        regions_min_17_2_0,
        regions_min_18_2_0,
        regions_min_19_2_0,
        regions_min_20_2_0,
        regions_min_21_2_0,
        regions_min_22_2_0,
        regions_min_23_2_0,
        regions_min_24_2_0,
        regions_min_25_2_0,
        regions_min_26_2_0,
        regions_min_27_2_0,
        regions_min_28_2_0,
        regions_min_29_2_0,
        regions_min_30_2_0,
        regions_min_31_2_0,
        regions_center_0_3_0,
        regions_center_1_3_0,
        regions_center_2_3_0,
        regions_center_3_3_0,
        regions_center_4_3_0,
        regions_center_5_3_0,
        regions_center_6_3_0,
        regions_center_7_3_0,
        regions_center_8_3_0,
        regions_center_9_3_0,
        regions_center_10_3_0,
        regions_center_11_3_0,
        regions_center_12_3_0,
        regions_center_13_3_0,
        regions_center_14_3_0,
        regions_center_15_3_0,
        regions_center_16_3_0,
        regions_center_17_3_0,
        regions_center_18_3_0,
        regions_center_19_3_0,
        regions_center_20_3_0,
        regions_center_21_3_0,
        regions_center_22_3_0,
        regions_center_23_3_0,
        regions_center_24_3_0,
        regions_center_25_3_0,
        regions_center_26_3_0,
        regions_center_27_3_0,
        regions_center_28_3_0,
        regions_center_29_3_0,
        regions_center_30_3_0,
        regions_center_31_3_0,
        regions_max_0_3_0,
        regions_max_1_3_0,
        regions_max_2_3_0,
        regions_max_3_3_0,
        regions_max_4_3_0,
        regions_max_5_3_0,
        regions_max_6_3_0,
        regions_max_7_3_0,
        regions_max_8_3_0,
        regions_max_9_3_0,
        regions_max_10_3_0,
        regions_max_11_3_0,
        regions_max_12_3_0,
        regions_max_13_3_0,
        regions_max_14_3_0,
        regions_max_15_3_0,
        regions_max_16_3_0,
        regions_max_17_3_0,
        regions_max_18_3_0,
        regions_max_19_3_0,
        regions_max_20_3_0,
        regions_max_21_3_0,
        regions_max_22_3_0,
        regions_max_23_3_0,
        regions_max_24_3_0,
        regions_max_25_3_0,
        regions_max_26_3_0,
        regions_max_27_3_0,
        regions_max_28_3_0,
        regions_max_29_3_0,
        regions_max_30_3_0,
        regions_max_31_3_0,
        regions_min_0_3_0,
        regions_min_1_3_0,
        regions_min_2_3_0,
        regions_min_3_3_0,
        regions_min_4_3_0,
        regions_min_5_3_0,
        regions_min_6_3_0,
        regions_min_7_3_0,
        regions_min_8_3_0,
        regions_min_9_3_0,
        regions_min_10_3_0,
        regions_min_11_3_0,
        regions_min_12_3_0,
        regions_min_13_3_0,
        regions_min_14_3_0,
        regions_min_15_3_0,
        regions_min_16_3_0,
        regions_min_17_3_0,
        regions_min_18_3_0,
        regions_min_19_3_0,
        regions_min_20_3_0,
        regions_min_21_3_0,
        regions_min_22_3_0,
        regions_min_23_3_0,
        regions_min_24_3_0,
        regions_min_25_3_0,
        regions_min_26_3_0,
        regions_min_27_3_0,
        regions_min_28_3_0,
        regions_min_29_3_0,
        regions_min_30_3_0,
        regions_min_31_3_0,
        merge_2_out,
        merge_2_out_ap_vld,
        merge_1_out,
        merge_1_out_ap_vld,
        grp_fu_36416_p_din0,
        grp_fu_36416_p_din1,
        grp_fu_36416_p_opcode,
        grp_fu_36416_p_dout0,
        grp_fu_36416_p_ce,
        grp_fu_36422_p_din0,
        grp_fu_36422_p_din1,
        grp_fu_36422_p_dout0,
        grp_fu_36422_p_ce,
        grp_fu_36427_p_din0,
        grp_fu_36427_p_din1,
        grp_fu_36427_p_opcode,
        grp_fu_36427_p_dout0,
        grp_fu_36427_p_ce,
        grp_fu_36432_p_din0,
        grp_fu_36432_p_din1,
        grp_fu_36432_p_opcode,
        grp_fu_36432_p_dout0,
        grp_fu_36432_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] regions_center_0_0_0;
input  [31:0] regions_center_1_0_0;
input  [31:0] regions_center_2_0_0;
input  [31:0] regions_center_3_0_0;
input  [31:0] regions_center_4_0_0;
input  [31:0] regions_center_5_0_0;
input  [31:0] regions_center_6_0_0;
input  [31:0] regions_center_7_0_0;
input  [31:0] regions_center_8_0_0;
input  [31:0] regions_center_9_0_0;
input  [31:0] regions_center_10_0_0;
input  [31:0] regions_center_11_0_0;
input  [31:0] regions_center_12_0_0;
input  [31:0] regions_center_13_0_0;
input  [31:0] regions_center_14_0_0;
input  [31:0] regions_center_15_0_0;
input  [31:0] regions_center_16_0_0;
input  [31:0] regions_center_17_0_0;
input  [31:0] regions_center_18_0_0;
input  [31:0] regions_center_19_0_0;
input  [31:0] regions_center_20_0_0;
input  [31:0] regions_center_21_0_0;
input  [31:0] regions_center_22_0_0;
input  [31:0] regions_center_23_0_0;
input  [31:0] regions_center_24_0_0;
input  [31:0] regions_center_25_0_0;
input  [31:0] regions_center_26_0_0;
input  [31:0] regions_center_27_0_0;
input  [31:0] regions_center_28_0_0;
input  [31:0] regions_center_29_0_0;
input  [31:0] regions_center_30_0_0;
input  [31:0] regions_center_31_0_0;
input  [31:0] regions_max_0_0_0;
input  [31:0] regions_max_1_0_0;
input  [31:0] regions_max_2_0_0;
input  [31:0] regions_max_3_0_0;
input  [31:0] regions_max_4_0_0;
input  [31:0] regions_max_5_0_0;
input  [31:0] regions_max_6_0_0;
input  [31:0] regions_max_7_0_0;
input  [31:0] regions_max_8_0_0;
input  [31:0] regions_max_9_0_0;
input  [31:0] regions_max_10_0_0;
input  [31:0] regions_max_11_0_0;
input  [31:0] regions_max_12_0_0;
input  [31:0] regions_max_13_0_0;
input  [31:0] regions_max_14_0_0;
input  [31:0] regions_max_15_0_0;
input  [31:0] regions_max_16_0_0;
input  [31:0] regions_max_17_0_0;
input  [31:0] regions_max_18_0_0;
input  [31:0] regions_max_19_0_0;
input  [31:0] regions_max_20_0_0;
input  [31:0] regions_max_21_0_0;
input  [31:0] regions_max_22_0_0;
input  [31:0] regions_max_23_0_0;
input  [31:0] regions_max_24_0_0;
input  [31:0] regions_max_25_0_0;
input  [31:0] regions_max_26_0_0;
input  [31:0] regions_max_27_0_0;
input  [31:0] regions_max_28_0_0;
input  [31:0] regions_max_29_0_0;
input  [31:0] regions_max_30_0_0;
input  [31:0] regions_max_31_0_0;
input  [31:0] regions_min_0_0_0;
input  [31:0] regions_min_1_0_0;
input  [31:0] regions_min_2_0_0;
input  [31:0] regions_min_3_0_0;
input  [31:0] regions_min_4_0_0;
input  [31:0] regions_min_5_0_0;
input  [31:0] regions_min_6_0_0;
input  [31:0] regions_min_7_0_0;
input  [31:0] regions_min_8_0_0;
input  [31:0] regions_min_9_0_0;
input  [31:0] regions_min_10_0_0;
input  [31:0] regions_min_11_0_0;
input  [31:0] regions_min_12_0_0;
input  [31:0] regions_min_13_0_0;
input  [31:0] regions_min_14_0_0;
input  [31:0] regions_min_15_0_0;
input  [31:0] regions_min_16_0_0;
input  [31:0] regions_min_17_0_0;
input  [31:0] regions_min_18_0_0;
input  [31:0] regions_min_19_0_0;
input  [31:0] regions_min_20_0_0;
input  [31:0] regions_min_21_0_0;
input  [31:0] regions_min_22_0_0;
input  [31:0] regions_min_23_0_0;
input  [31:0] regions_min_24_0_0;
input  [31:0] regions_min_25_0_0;
input  [31:0] regions_min_26_0_0;
input  [31:0] regions_min_27_0_0;
input  [31:0] regions_min_28_0_0;
input  [31:0] regions_min_29_0_0;
input  [31:0] regions_min_30_0_0;
input  [31:0] regions_min_31_0_0;
input  [31:0] regions_center_0_1_0;
input  [31:0] regions_center_1_1_0;
input  [31:0] regions_center_2_1_0;
input  [31:0] regions_center_3_1_0;
input  [31:0] regions_center_4_1_0;
input  [31:0] regions_center_5_1_0;
input  [31:0] regions_center_6_1_0;
input  [31:0] regions_center_7_1_0;
input  [31:0] regions_center_8_1_0;
input  [31:0] regions_center_9_1_0;
input  [31:0] regions_center_10_1_0;
input  [31:0] regions_center_11_1_0;
input  [31:0] regions_center_12_1_0;
input  [31:0] regions_center_13_1_0;
input  [31:0] regions_center_14_1_0;
input  [31:0] regions_center_15_1_0;
input  [31:0] regions_center_16_1_0;
input  [31:0] regions_center_17_1_0;
input  [31:0] regions_center_18_1_0;
input  [31:0] regions_center_19_1_0;
input  [31:0] regions_center_20_1_0;
input  [31:0] regions_center_21_1_0;
input  [31:0] regions_center_22_1_0;
input  [31:0] regions_center_23_1_0;
input  [31:0] regions_center_24_1_0;
input  [31:0] regions_center_25_1_0;
input  [31:0] regions_center_26_1_0;
input  [31:0] regions_center_27_1_0;
input  [31:0] regions_center_28_1_0;
input  [31:0] regions_center_29_1_0;
input  [31:0] regions_center_30_1_0;
input  [31:0] regions_center_31_1_0;
input  [31:0] regions_max_0_1_0;
input  [31:0] regions_max_1_1_0;
input  [31:0] regions_max_2_1_0;
input  [31:0] regions_max_3_1_0;
input  [31:0] regions_max_4_1_0;
input  [31:0] regions_max_5_1_0;
input  [31:0] regions_max_6_1_0;
input  [31:0] regions_max_7_1_0;
input  [31:0] regions_max_8_1_0;
input  [31:0] regions_max_9_1_0;
input  [31:0] regions_max_10_1_0;
input  [31:0] regions_max_11_1_0;
input  [31:0] regions_max_12_1_0;
input  [31:0] regions_max_13_1_0;
input  [31:0] regions_max_14_1_0;
input  [31:0] regions_max_15_1_0;
input  [31:0] regions_max_16_1_0;
input  [31:0] regions_max_17_1_0;
input  [31:0] regions_max_18_1_0;
input  [31:0] regions_max_19_1_0;
input  [31:0] regions_max_20_1_0;
input  [31:0] regions_max_21_1_0;
input  [31:0] regions_max_22_1_0;
input  [31:0] regions_max_23_1_0;
input  [31:0] regions_max_24_1_0;
input  [31:0] regions_max_25_1_0;
input  [31:0] regions_max_26_1_0;
input  [31:0] regions_max_27_1_0;
input  [31:0] regions_max_28_1_0;
input  [31:0] regions_max_29_1_0;
input  [31:0] regions_max_30_1_0;
input  [31:0] regions_max_31_1_0;
input  [31:0] regions_min_0_1_0;
input  [31:0] regions_min_1_1_0;
input  [31:0] regions_min_2_1_0;
input  [31:0] regions_min_3_1_0;
input  [31:0] regions_min_4_1_0;
input  [31:0] regions_min_5_1_0;
input  [31:0] regions_min_6_1_0;
input  [31:0] regions_min_7_1_0;
input  [31:0] regions_min_8_1_0;
input  [31:0] regions_min_9_1_0;
input  [31:0] regions_min_10_1_0;
input  [31:0] regions_min_11_1_0;
input  [31:0] regions_min_12_1_0;
input  [31:0] regions_min_13_1_0;
input  [31:0] regions_min_14_1_0;
input  [31:0] regions_min_15_1_0;
input  [31:0] regions_min_16_1_0;
input  [31:0] regions_min_17_1_0;
input  [31:0] regions_min_18_1_0;
input  [31:0] regions_min_19_1_0;
input  [31:0] regions_min_20_1_0;
input  [31:0] regions_min_21_1_0;
input  [31:0] regions_min_22_1_0;
input  [31:0] regions_min_23_1_0;
input  [31:0] regions_min_24_1_0;
input  [31:0] regions_min_25_1_0;
input  [31:0] regions_min_26_1_0;
input  [31:0] regions_min_27_1_0;
input  [31:0] regions_min_28_1_0;
input  [31:0] regions_min_29_1_0;
input  [31:0] regions_min_30_1_0;
input  [31:0] regions_min_31_1_0;
input  [31:0] regions_center_0_2_0;
input  [31:0] regions_center_1_2_0;
input  [31:0] regions_center_2_2_0;
input  [31:0] regions_center_3_2_0;
input  [31:0] regions_center_4_2_0;
input  [31:0] regions_center_5_2_0;
input  [31:0] regions_center_6_2_0;
input  [31:0] regions_center_7_2_0;
input  [31:0] regions_center_8_2_0;
input  [31:0] regions_center_9_2_0;
input  [31:0] regions_center_10_2_0;
input  [31:0] regions_center_11_2_0;
input  [31:0] regions_center_12_2_0;
input  [31:0] regions_center_13_2_0;
input  [31:0] regions_center_14_2_0;
input  [31:0] regions_center_15_2_0;
input  [31:0] regions_center_16_2_0;
input  [31:0] regions_center_17_2_0;
input  [31:0] regions_center_18_2_0;
input  [31:0] regions_center_19_2_0;
input  [31:0] regions_center_20_2_0;
input  [31:0] regions_center_21_2_0;
input  [31:0] regions_center_22_2_0;
input  [31:0] regions_center_23_2_0;
input  [31:0] regions_center_24_2_0;
input  [31:0] regions_center_25_2_0;
input  [31:0] regions_center_26_2_0;
input  [31:0] regions_center_27_2_0;
input  [31:0] regions_center_28_2_0;
input  [31:0] regions_center_29_2_0;
input  [31:0] regions_center_30_2_0;
input  [31:0] regions_center_31_2_0;
input  [31:0] regions_max_0_2_0;
input  [31:0] regions_max_1_2_0;
input  [31:0] regions_max_2_2_0;
input  [31:0] regions_max_3_2_0;
input  [31:0] regions_max_4_2_0;
input  [31:0] regions_max_5_2_0;
input  [31:0] regions_max_6_2_0;
input  [31:0] regions_max_7_2_0;
input  [31:0] regions_max_8_2_0;
input  [31:0] regions_max_9_2_0;
input  [31:0] regions_max_10_2_0;
input  [31:0] regions_max_11_2_0;
input  [31:0] regions_max_12_2_0;
input  [31:0] regions_max_13_2_0;
input  [31:0] regions_max_14_2_0;
input  [31:0] regions_max_15_2_0;
input  [31:0] regions_max_16_2_0;
input  [31:0] regions_max_17_2_0;
input  [31:0] regions_max_18_2_0;
input  [31:0] regions_max_19_2_0;
input  [31:0] regions_max_20_2_0;
input  [31:0] regions_max_21_2_0;
input  [31:0] regions_max_22_2_0;
input  [31:0] regions_max_23_2_0;
input  [31:0] regions_max_24_2_0;
input  [31:0] regions_max_25_2_0;
input  [31:0] regions_max_26_2_0;
input  [31:0] regions_max_27_2_0;
input  [31:0] regions_max_28_2_0;
input  [31:0] regions_max_29_2_0;
input  [31:0] regions_max_30_2_0;
input  [31:0] regions_max_31_2_0;
input  [31:0] regions_min_0_2_0;
input  [31:0] regions_min_1_2_0;
input  [31:0] regions_min_2_2_0;
input  [31:0] regions_min_3_2_0;
input  [31:0] regions_min_4_2_0;
input  [31:0] regions_min_5_2_0;
input  [31:0] regions_min_6_2_0;
input  [31:0] regions_min_7_2_0;
input  [31:0] regions_min_8_2_0;
input  [31:0] regions_min_9_2_0;
input  [31:0] regions_min_10_2_0;
input  [31:0] regions_min_11_2_0;
input  [31:0] regions_min_12_2_0;
input  [31:0] regions_min_13_2_0;
input  [31:0] regions_min_14_2_0;
input  [31:0] regions_min_15_2_0;
input  [31:0] regions_min_16_2_0;
input  [31:0] regions_min_17_2_0;
input  [31:0] regions_min_18_2_0;
input  [31:0] regions_min_19_2_0;
input  [31:0] regions_min_20_2_0;
input  [31:0] regions_min_21_2_0;
input  [31:0] regions_min_22_2_0;
input  [31:0] regions_min_23_2_0;
input  [31:0] regions_min_24_2_0;
input  [31:0] regions_min_25_2_0;
input  [31:0] regions_min_26_2_0;
input  [31:0] regions_min_27_2_0;
input  [31:0] regions_min_28_2_0;
input  [31:0] regions_min_29_2_0;
input  [31:0] regions_min_30_2_0;
input  [31:0] regions_min_31_2_0;
input  [31:0] regions_center_0_3_0;
input  [31:0] regions_center_1_3_0;
input  [31:0] regions_center_2_3_0;
input  [31:0] regions_center_3_3_0;
input  [31:0] regions_center_4_3_0;
input  [31:0] regions_center_5_3_0;
input  [31:0] regions_center_6_3_0;
input  [31:0] regions_center_7_3_0;
input  [31:0] regions_center_8_3_0;
input  [31:0] regions_center_9_3_0;
input  [31:0] regions_center_10_3_0;
input  [31:0] regions_center_11_3_0;
input  [31:0] regions_center_12_3_0;
input  [31:0] regions_center_13_3_0;
input  [31:0] regions_center_14_3_0;
input  [31:0] regions_center_15_3_0;
input  [31:0] regions_center_16_3_0;
input  [31:0] regions_center_17_3_0;
input  [31:0] regions_center_18_3_0;
input  [31:0] regions_center_19_3_0;
input  [31:0] regions_center_20_3_0;
input  [31:0] regions_center_21_3_0;
input  [31:0] regions_center_22_3_0;
input  [31:0] regions_center_23_3_0;
input  [31:0] regions_center_24_3_0;
input  [31:0] regions_center_25_3_0;
input  [31:0] regions_center_26_3_0;
input  [31:0] regions_center_27_3_0;
input  [31:0] regions_center_28_3_0;
input  [31:0] regions_center_29_3_0;
input  [31:0] regions_center_30_3_0;
input  [31:0] regions_center_31_3_0;
input  [31:0] regions_max_0_3_0;
input  [31:0] regions_max_1_3_0;
input  [31:0] regions_max_2_3_0;
input  [31:0] regions_max_3_3_0;
input  [31:0] regions_max_4_3_0;
input  [31:0] regions_max_5_3_0;
input  [31:0] regions_max_6_3_0;
input  [31:0] regions_max_7_3_0;
input  [31:0] regions_max_8_3_0;
input  [31:0] regions_max_9_3_0;
input  [31:0] regions_max_10_3_0;
input  [31:0] regions_max_11_3_0;
input  [31:0] regions_max_12_3_0;
input  [31:0] regions_max_13_3_0;
input  [31:0] regions_max_14_3_0;
input  [31:0] regions_max_15_3_0;
input  [31:0] regions_max_16_3_0;
input  [31:0] regions_max_17_3_0;
input  [31:0] regions_max_18_3_0;
input  [31:0] regions_max_19_3_0;
input  [31:0] regions_max_20_3_0;
input  [31:0] regions_max_21_3_0;
input  [31:0] regions_max_22_3_0;
input  [31:0] regions_max_23_3_0;
input  [31:0] regions_max_24_3_0;
input  [31:0] regions_max_25_3_0;
input  [31:0] regions_max_26_3_0;
input  [31:0] regions_max_27_3_0;
input  [31:0] regions_max_28_3_0;
input  [31:0] regions_max_29_3_0;
input  [31:0] regions_max_30_3_0;
input  [31:0] regions_max_31_3_0;
input  [31:0] regions_min_0_3_0;
input  [31:0] regions_min_1_3_0;
input  [31:0] regions_min_2_3_0;
input  [31:0] regions_min_3_3_0;
input  [31:0] regions_min_4_3_0;
input  [31:0] regions_min_5_3_0;
input  [31:0] regions_min_6_3_0;
input  [31:0] regions_min_7_3_0;
input  [31:0] regions_min_8_3_0;
input  [31:0] regions_min_9_3_0;
input  [31:0] regions_min_10_3_0;
input  [31:0] regions_min_11_3_0;
input  [31:0] regions_min_12_3_0;
input  [31:0] regions_min_13_3_0;
input  [31:0] regions_min_14_3_0;
input  [31:0] regions_min_15_3_0;
input  [31:0] regions_min_16_3_0;
input  [31:0] regions_min_17_3_0;
input  [31:0] regions_min_18_3_0;
input  [31:0] regions_min_19_3_0;
input  [31:0] regions_min_20_3_0;
input  [31:0] regions_min_21_3_0;
input  [31:0] regions_min_22_3_0;
input  [31:0] regions_min_23_3_0;
input  [31:0] regions_min_24_3_0;
input  [31:0] regions_min_25_3_0;
input  [31:0] regions_min_26_3_0;
input  [31:0] regions_min_27_3_0;
input  [31:0] regions_min_28_3_0;
input  [31:0] regions_min_29_3_0;
input  [31:0] regions_min_30_3_0;
input  [31:0] regions_min_31_3_0;
output  [4:0] merge_2_out;
output   merge_2_out_ap_vld;
output  [4:0] merge_1_out;
output   merge_1_out_ap_vld;
output  [31:0] grp_fu_36416_p_din0;
output  [31:0] grp_fu_36416_p_din1;
output  [0:0] grp_fu_36416_p_opcode;
input  [31:0] grp_fu_36416_p_dout0;
output   grp_fu_36416_p_ce;
output  [31:0] grp_fu_36422_p_din0;
output  [31:0] grp_fu_36422_p_din1;
input  [31:0] grp_fu_36422_p_dout0;
output   grp_fu_36422_p_ce;
output  [31:0] grp_fu_36427_p_din0;
output  [31:0] grp_fu_36427_p_din1;
output  [4:0] grp_fu_36427_p_opcode;
input  [0:0] grp_fu_36427_p_dout0;
output   grp_fu_36427_p_ce;
output  [31:0] grp_fu_36432_p_din0;
output  [31:0] grp_fu_36432_p_din1;
output  [4:0] grp_fu_36432_p_opcode;
input  [0:0] grp_fu_36432_p_dout0;
output   grp_fu_36432_p_ce;

reg ap_idle;
reg merge_2_out_ap_vld;
reg merge_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state16_pp0_stage7_iter1;
wire    ap_block_state24_pp0_stage7_iter2;
wire    ap_block_state32_pp0_stage7_iter3;
wire    ap_block_state40_pp0_stage7_iter4;
wire    ap_block_state48_pp0_stage7_iter5;
wire    ap_block_state56_pp0_stage7_iter6;
wire    ap_block_pp0_stage7_subdone;
reg   [0:0] icmp_ln1027_reg_7491;
reg    ap_condition_exit_pp0_iter0_stage7;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
reg   [31:0] reg_3199;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state10_pp0_stage1_iter1;
wire    ap_block_state18_pp0_stage1_iter2;
wire    ap_block_state26_pp0_stage1_iter3;
wire    ap_block_state34_pp0_stage1_iter4;
wire    ap_block_state42_pp0_stage1_iter5;
wire    ap_block_state50_pp0_stage1_iter6;
wire    ap_block_state58_pp0_stage1_iter7;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state15_pp0_stage6_iter1;
wire    ap_block_state23_pp0_stage6_iter2;
wire    ap_block_state31_pp0_stage6_iter3;
wire    ap_block_state39_pp0_stage6_iter4;
wire    ap_block_state47_pp0_stage6_iter5;
wire    ap_block_state55_pp0_stage6_iter6;
wire    ap_block_pp0_stage6_11001;
reg   [0:0] icmp_ln1027_reg_7491_pp0_iter2_reg;
reg   [0:0] and_ln112_1_reg_7677;
reg   [0:0] and_ln112_1_reg_7677_pp0_iter2_reg;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_state17_pp0_stage0_iter2;
wire    ap_block_state25_pp0_stage0_iter3;
wire    ap_block_state33_pp0_stage0_iter4;
wire    ap_block_state41_pp0_stage0_iter5;
wire    ap_block_state49_pp0_stage0_iter6;
wire    ap_block_state57_pp0_stage0_iter7;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] and_ln112_7_reg_7702;
reg   [0:0] and_ln112_7_reg_7702_pp0_iter2_reg;
reg   [31:0] reg_3205;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state14_pp0_stage5_iter1;
wire    ap_block_state22_pp0_stage5_iter2;
wire    ap_block_state30_pp0_stage5_iter3;
wire    ap_block_state38_pp0_stage5_iter4;
wire    ap_block_state46_pp0_stage5_iter5;
wire    ap_block_state54_pp0_stage5_iter6;
wire    ap_block_pp0_stage5_11001;
reg   [0:0] icmp_ln1027_reg_7491_pp0_iter1_reg;
wire   [31:0] grp_fu_3172_p2;
reg   [31:0] reg_3211;
reg   [0:0] and_ln112_3_reg_7682;
reg   [0:0] and_ln112_3_reg_7682_pp0_iter2_reg;
wire    ap_block_pp0_stage7_11001;
reg   [0:0] and_ln112_5_reg_7697;
reg   [0:0] and_ln112_5_reg_7697_pp0_iter2_reg;
reg   [31:0] i_real_3_reg_7476;
reg   [31:0] i_real_3_reg_7476_pp0_iter1_reg;
reg   [31:0] i_real_3_reg_7476_pp0_iter2_reg;
reg   [31:0] i_real_3_reg_7476_pp0_iter3_reg;
reg   [31:0] i_real_3_reg_7476_pp0_iter4_reg;
reg   [31:0] i_real_3_reg_7476_pp0_iter5_reg;
reg   [31:0] i_real_3_reg_7476_pp0_iter6_reg;
reg   [31:0] i_real_3_reg_7476_pp0_iter7_reg;
reg   [31:0] k_real_5_reg_7484;
reg   [31:0] k_real_5_reg_7484_pp0_iter1_reg;
reg   [31:0] k_real_5_reg_7484_pp0_iter2_reg;
reg   [31:0] k_real_5_reg_7484_pp0_iter3_reg;
reg   [31:0] k_real_5_reg_7484_pp0_iter4_reg;
reg   [31:0] k_real_5_reg_7484_pp0_iter5_reg;
reg   [31:0] k_real_5_reg_7484_pp0_iter6_reg;
wire   [0:0] icmp_ln1027_fu_3256_p2;
reg   [0:0] icmp_ln1027_reg_7491_pp0_iter3_reg;
reg   [0:0] icmp_ln1027_reg_7491_pp0_iter4_reg;
reg   [0:0] icmp_ln1027_reg_7491_pp0_iter5_reg;
reg   [0:0] icmp_ln1027_reg_7491_pp0_iter6_reg;
reg   [0:0] icmp_ln1027_reg_7491_pp0_iter7_reg;
wire   [31:0] tmp_s_fu_3266_p34;
reg   [31:0] tmp_s_reg_7495;
wire   [31:0] tmp_1_fu_3308_p34;
reg   [31:0] tmp_1_reg_7500;
wire   [31:0] tmp_2_fu_3346_p34;
reg   [31:0] tmp_2_reg_7505;
wire   [31:0] tmp_3_fu_3384_p34;
reg   [31:0] tmp_3_reg_7510;
wire   [31:0] tmp_4_fu_3422_p34;
reg   [31:0] tmp_4_reg_7519;
wire   [31:0] tmp_5_fu_3460_p34;
reg   [31:0] tmp_5_reg_7524;
wire   [31:0] tmp_6_fu_3498_p34;
reg   [31:0] tmp_6_reg_7533;
wire   [31:0] tmp_7_fu_3536_p34;
reg   [31:0] tmp_7_reg_7538;
wire   [31:0] tmp_8_fu_3574_p34;
reg   [31:0] tmp_8_reg_7543;
wire   [31:0] tmp_9_fu_3612_p34;
reg   [31:0] tmp_9_reg_7548;
wire   [31:0] tmp_10_fu_3650_p34;
reg   [31:0] tmp_10_reg_7557;
wire   [31:0] tmp_11_fu_3688_p34;
reg   [31:0] tmp_11_reg_7562;
wire   [31:0] tmp_12_fu_3726_p34;
reg   [31:0] tmp_12_reg_7571;
wire   [31:0] tmp_13_fu_3764_p34;
reg   [31:0] tmp_13_reg_7576;
wire   [31:0] tmp_14_fu_3802_p34;
reg   [31:0] tmp_14_reg_7581;
wire   [31:0] tmp_15_fu_3840_p34;
reg   [31:0] tmp_15_reg_7586;
wire   [31:0] tmp_16_fu_3878_p34;
reg   [31:0] tmp_16_reg_7595;
wire   [31:0] tmp_17_fu_3916_p34;
reg   [31:0] tmp_17_reg_7600;
wire   [31:0] tmp_18_fu_3954_p34;
reg   [31:0] tmp_18_reg_7609;
wire   [31:0] tmp_19_fu_3992_p34;
reg   [31:0] tmp_19_reg_7614;
wire   [31:0] tmp_20_fu_4030_p34;
reg   [31:0] tmp_20_reg_7619;
wire   [31:0] tmp_21_fu_4068_p34;
reg   [31:0] tmp_21_reg_7624;
wire   [31:0] tmp_22_fu_4106_p34;
reg   [31:0] tmp_22_reg_7633;
wire   [31:0] tmp_23_fu_4144_p34;
reg   [31:0] tmp_23_reg_7638;
wire   [0:0] icmp_ln112_fu_4216_p2;
reg   [0:0] icmp_ln112_reg_7647;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state12_pp0_stage3_iter1;
wire    ap_block_state20_pp0_stage3_iter2;
wire    ap_block_state28_pp0_stage3_iter3;
wire    ap_block_state36_pp0_stage3_iter4;
wire    ap_block_state44_pp0_stage3_iter5;
wire    ap_block_state52_pp0_stage3_iter6;
wire    ap_block_state60_pp0_stage3_iter7;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] icmp_ln112_1_fu_4222_p2;
reg   [0:0] icmp_ln112_1_reg_7652;
wire   [0:0] icmp_ln112_2_fu_4228_p2;
reg   [0:0] icmp_ln112_2_reg_7657;
wire   [0:0] icmp_ln112_3_fu_4234_p2;
reg   [0:0] icmp_ln112_3_reg_7662;
reg   [0:0] tmp_26_reg_7667;
reg   [0:0] tmp_31_reg_7672;
wire   [0:0] and_ln112_1_fu_4253_p2;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state13_pp0_stage4_iter1;
wire    ap_block_state21_pp0_stage4_iter2;
wire    ap_block_state29_pp0_stage4_iter3;
wire    ap_block_state37_pp0_stage4_iter4;
wire    ap_block_state45_pp0_stage4_iter5;
wire    ap_block_state53_pp0_stage4_iter6;
wire    ap_block_pp0_stage4_11001;
reg   [0:0] and_ln112_1_reg_7677_pp0_iter1_reg;
wire   [0:0] and_ln112_3_fu_4334_p2;
reg   [0:0] and_ln112_3_reg_7682_pp0_iter1_reg;
reg   [0:0] tmp_36_reg_7687;
reg   [0:0] tmp_41_reg_7692;
wire   [0:0] and_ln112_5_fu_4416_p2;
reg   [0:0] and_ln112_5_reg_7697_pp0_iter1_reg;
wire   [0:0] and_ln112_7_fu_4497_p2;
reg   [0:0] and_ln112_7_reg_7702_pp0_iter1_reg;
wire   [0:0] icmp_ln1019_fu_4502_p2;
reg   [0:0] icmp_ln1019_reg_7707;
reg   [0:0] icmp_ln1019_reg_7707_pp0_iter2_reg;
reg   [0:0] icmp_ln1019_reg_7707_pp0_iter3_reg;
reg   [0:0] icmp_ln1019_reg_7707_pp0_iter4_reg;
reg   [0:0] icmp_ln1019_reg_7707_pp0_iter5_reg;
reg   [0:0] icmp_ln1019_reg_7707_pp0_iter6_reg;
reg   [0:0] icmp_ln1019_reg_7707_pp0_iter7_reg;
reg   [31:0] d1_reg_7716;
wire   [31:0] grp_fu_3176_p2;
reg   [31:0] d2_reg_7721;
wire   [31:0] grp_fu_3180_p2;
reg   [31:0] d_1_reg_7726;
reg   [31:0] sub_reg_7732;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state11_pp0_stage2_iter1;
wire    ap_block_state19_pp0_stage2_iter2;
wire    ap_block_state27_pp0_stage2_iter3;
wire    ap_block_state35_pp0_stage2_iter4;
wire    ap_block_state43_pp0_stage2_iter5;
wire    ap_block_state51_pp0_stage2_iter6;
wire    ap_block_state59_pp0_stage2_iter7;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] sub2_reg_7737;
reg   [31:0] d1_1_reg_7742;
reg   [31:0] d2_1_reg_7747;
reg   [31:0] sub75_1_reg_7752;
reg   [31:0] sub87_1_reg_7757;
reg   [31:0] d1_2_reg_7762;
reg   [31:0] d2_2_reg_7767;
reg   [31:0] d_2_reg_7772;
reg   [31:0] sub75_2_reg_7778;
reg   [31:0] sub87_2_reg_7783;
reg   [31:0] d1_3_reg_7788;
reg   [31:0] mul_reg_7793;
reg   [31:0] sub87_3_reg_7798;
reg   [31:0] mul_1_reg_7803;
reg   [31:0] mul_1_reg_7803_pp0_iter2_reg;
reg   [31:0] d_3_reg_7808;
reg   [31:0] mul_2_reg_7814;
reg   [31:0] mul_2_reg_7814_pp0_iter3_reg;
reg   [31:0] mul_2_reg_7814_pp0_iter4_reg;
reg   [31:0] mul_3_reg_7819;
reg   [31:0] mul_3_reg_7819_pp0_iter3_reg;
reg   [31:0] mul_3_reg_7819_pp0_iter4_reg;
reg   [31:0] distance_reg_7824;
wire   [31:0] ov_2_fu_4547_p3;
reg   [31:0] ov_2_reg_7829;
wire   [31:0] ov_6_fu_4554_p3;
reg   [31:0] ov_6_reg_7836;
wire   [31:0] ov_10_fu_4561_p3;
reg   [31:0] ov_10_reg_7843;
reg   [0:0] tmp_28_reg_7850;
reg   [0:0] tmp_33_reg_7855;
wire   [31:0] ov_14_fu_4568_p3;
reg   [31:0] ov_14_reg_7860;
wire   [31:0] ov_16_fu_4615_p3;
reg   [31:0] ov_16_reg_7867;
wire   [31:0] ov_7_fu_4662_p3;
reg   [31:0] ov_7_reg_7872;
reg   [0:0] tmp_38_reg_7877;
wire   [31:0] ov_11_fu_4709_p3;
reg   [31:0] ov_11_reg_7882;
reg   [0:0] tmp_43_reg_7887;
wire   [31:0] ov_15_fu_4756_p3;
reg   [31:0] ov_15_reg_7892;
reg   [31:0] distance_1_reg_7897;
reg   [31:0] overlap_1_reg_7902;
reg   [31:0] overlap_2_reg_7907;
reg   [31:0] distance_2_reg_7912;
reg   [31:0] overlap_3_reg_7917;
reg   [0:0] tmp_45_reg_7924;
reg   [31:0] distance_3_reg_7929;
wire   [31:0] sc_2_fu_4816_p3;
reg   [31:0] sc_2_reg_7934;
reg   [31:0] tmp_score_load_reg_7941;
reg   [0:0] tmp_48_reg_7948;
wire   [31:0] tmp_other_4_fu_4923_p3;
reg   [31:0] tmp_other_4_reg_7953;
wire   [31:0] tmp_score_4_fu_4930_p3;
reg   [31:0] tmp_score_4_reg_7959;
reg   [31:0] score_load_reg_7967;
reg   [31:0] merge_1_4_reg_7975;
reg   [31:0] merge_2_1_reg_7982;
reg   [0:0] tmp_51_reg_7988;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage2_subdone;
reg    ap_condition_exit_pp0_iter7_stage2;
wire    ap_block_pp0_stage3_subdone;
reg   [31:0] merge_1_fu_822;
wire   [31:0] merge_1_7_fu_5102_p3;
wire    ap_loop_init;
wire    ap_block_pp0_stage2;
reg   [31:0] merge_2_fu_826;
wire   [31:0] merge_2_6_fu_5096_p3;
reg   [31:0] score_fu_830;
wire   [31:0] score_3_fu_5090_p3;
wire    ap_block_pp0_stage1;
reg   [31:0] merge_1_1_fu_834;
wire   [31:0] i_real_2_fu_4530_p3;
reg   [31:0] k_real_4_fu_838;
wire   [31:0] k_real_3_fu_4522_p3;
reg   [31:0] tmp_score_fu_842;
wire   [31:0] tmp_score_3_fu_4942_p3;
wire    ap_block_pp0_stage5;
reg   [31:0] tmp_other_fu_846;
wire   [31:0] tmp_other_3_fu_4936_p3;
wire    ap_block_pp0_stage7;
wire    ap_block_pp0_stage2_01001;
wire    ap_block_pp0_stage0;
reg   [31:0] grp_fu_3168_p0;
reg   [31:0] grp_fu_3168_p1;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage6;
reg   [31:0] grp_fu_3172_p0;
reg   [31:0] grp_fu_3172_p1;
reg   [31:0] grp_fu_3176_p0;
reg   [31:0] grp_fu_3176_p1;
reg   [31:0] grp_fu_3180_p0;
reg   [31:0] grp_fu_3180_p1;
reg   [31:0] grp_fu_3185_p0;
reg   [31:0] grp_fu_3185_p1;
reg   [31:0] grp_fu_3189_p0;
reg   [31:0] grp_fu_3189_p1;
reg   [31:0] grp_fu_3193_p0;
reg   [31:0] grp_fu_3193_p1;
wire   [4:0] trunc_ln104_fu_3262_p1;
wire   [4:0] trunc_ln104_1_fu_3304_p1;
wire   [31:0] bitcast_ln112_fu_4182_p1;
wire   [31:0] bitcast_ln112_1_fu_4199_p1;
wire   [7:0] tmp_24_fu_4185_p4;
wire   [22:0] trunc_ln112_fu_4195_p1;
wire   [7:0] tmp_25_fu_4202_p4;
wire   [22:0] trunc_ln112_1_fu_4212_p1;
wire   [0:0] or_ln112_1_fu_4244_p2;
wire   [0:0] and_ln112_fu_4248_p2;
wire   [0:0] or_ln112_fu_4240_p2;
wire   [31:0] bitcast_ln112_2_fu_4259_p1;
wire   [31:0] bitcast_ln112_3_fu_4276_p1;
wire   [7:0] tmp_29_fu_4262_p4;
wire   [22:0] trunc_ln112_2_fu_4272_p1;
wire   [0:0] icmp_ln112_5_fu_4299_p2;
wire   [0:0] icmp_ln112_4_fu_4293_p2;
wire   [7:0] tmp_30_fu_4279_p4;
wire   [22:0] trunc_ln112_3_fu_4289_p1;
wire   [0:0] icmp_ln112_7_fu_4317_p2;
wire   [0:0] icmp_ln112_6_fu_4311_p2;
wire   [0:0] or_ln112_3_fu_4323_p2;
wire   [0:0] and_ln112_2_fu_4329_p2;
wire   [0:0] or_ln112_2_fu_4305_p2;
wire   [31:0] bitcast_ln112_4_fu_4340_p1;
wire   [31:0] bitcast_ln112_5_fu_4357_p1;
wire   [7:0] tmp_34_fu_4343_p4;
wire   [22:0] trunc_ln112_4_fu_4353_p1;
wire   [0:0] icmp_ln112_9_fu_4380_p2;
wire   [0:0] icmp_ln112_8_fu_4374_p2;
wire   [7:0] tmp_35_fu_4360_p4;
wire   [22:0] trunc_ln112_5_fu_4370_p1;
wire   [0:0] icmp_ln112_11_fu_4398_p2;
wire   [0:0] icmp_ln112_10_fu_4392_p2;
wire   [0:0] or_ln112_4_fu_4386_p2;
wire   [0:0] or_ln112_5_fu_4404_p2;
wire   [0:0] and_ln112_4_fu_4410_p2;
wire   [31:0] bitcast_ln112_6_fu_4421_p1;
wire   [31:0] bitcast_ln112_7_fu_4438_p1;
wire   [7:0] tmp_39_fu_4424_p4;
wire   [22:0] trunc_ln112_6_fu_4434_p1;
wire   [0:0] icmp_ln112_13_fu_4461_p2;
wire   [0:0] icmp_ln112_12_fu_4455_p2;
wire   [7:0] tmp_40_fu_4441_p4;
wire   [22:0] trunc_ln112_7_fu_4451_p1;
wire   [0:0] icmp_ln112_15_fu_4479_p2;
wire   [0:0] icmp_ln112_14_fu_4473_p2;
wire   [0:0] or_ln112_6_fu_4467_p2;
wire   [0:0] or_ln112_7_fu_4485_p2;
wire   [0:0] and_ln112_6_fu_4491_p2;
wire   [31:0] k_real_fu_4512_p2;
wire   [31:0] k_real_2_fu_4517_p2;
wire   [31:0] i_real_fu_4507_p2;
wire   [31:0] bitcast_ln116_fu_4575_p1;
wire   [7:0] tmp_27_fu_4578_p4;
wire   [22:0] trunc_ln116_fu_4588_p1;
wire   [0:0] icmp_ln116_1_fu_4598_p2;
wire   [0:0] icmp_ln116_fu_4592_p2;
wire   [0:0] or_ln116_fu_4604_p2;
wire   [0:0] and_ln116_fu_4610_p2;
wire   [31:0] bitcast_ln116_1_fu_4622_p1;
wire   [7:0] tmp_32_fu_4625_p4;
wire   [22:0] trunc_ln116_1_fu_4635_p1;
wire   [0:0] icmp_ln116_3_fu_4645_p2;
wire   [0:0] icmp_ln116_2_fu_4639_p2;
wire   [0:0] or_ln116_1_fu_4651_p2;
wire   [0:0] and_ln116_1_fu_4657_p2;
wire   [31:0] bitcast_ln116_2_fu_4669_p1;
wire   [7:0] tmp_37_fu_4672_p4;
wire   [22:0] trunc_ln116_2_fu_4682_p1;
wire   [0:0] icmp_ln116_5_fu_4692_p2;
wire   [0:0] icmp_ln116_4_fu_4686_p2;
wire   [0:0] or_ln116_2_fu_4698_p2;
wire   [0:0] and_ln116_2_fu_4704_p2;
wire   [31:0] bitcast_ln116_3_fu_4716_p1;
wire   [7:0] tmp_42_fu_4719_p4;
wire   [22:0] trunc_ln116_3_fu_4729_p1;
wire   [0:0] icmp_ln116_7_fu_4739_p2;
wire   [0:0] icmp_ln116_6_fu_4733_p2;
wire   [0:0] or_ln116_3_fu_4745_p2;
wire   [0:0] and_ln116_3_fu_4751_p2;
wire   [31:0] bitcast_ln122_fu_4763_p1;
wire   [7:0] tmp_44_fu_4766_p4;
wire   [22:0] trunc_ln122_fu_4776_p1;
wire   [0:0] icmp_ln122_1_fu_4786_p2;
wire   [0:0] icmp_ln122_fu_4780_p2;
wire   [0:0] or_ln122_fu_4792_p2;
wire   [31:0] bitcast_ln126_fu_4803_p1;
wire   [31:0] xor_ln126_fu_4806_p2;
wire   [0:0] and_ln122_fu_4798_p2;
wire   [31:0] sc_fu_4812_p1;
wire   [31:0] bitcast_ln130_fu_4836_p1;
wire   [31:0] bitcast_ln130_1_fu_4853_p1;
wire   [7:0] tmp_46_fu_4839_p4;
wire   [22:0] trunc_ln130_fu_4849_p1;
wire   [0:0] icmp_ln130_2_fu_4876_p2;
wire   [0:0] icmp_ln130_1_fu_4870_p2;
wire   [7:0] tmp_47_fu_4856_p4;
wire   [22:0] trunc_ln130_1_fu_4866_p1;
wire   [0:0] icmp_ln130_4_fu_4894_p2;
wire   [0:0] icmp_ln130_3_fu_4888_p2;
wire   [0:0] or_ln130_1_fu_4882_p2;
wire   [0:0] or_ln130_2_fu_4900_p2;
wire   [0:0] and_ln130_fu_4906_p2;
wire   [0:0] icmp_ln130_fu_4830_p2;
wire   [0:0] and_ln130_1_fu_4912_p2;
wire   [0:0] or_ln130_fu_4917_p2;
wire   [31:0] bitcast_ln139_fu_4985_p1;
wire   [31:0] bitcast_ln139_1_fu_5002_p1;
wire   [7:0] tmp_49_fu_4988_p4;
wire   [22:0] trunc_ln139_fu_4998_p1;
wire   [0:0] icmp_ln139_1_fu_5025_p2;
wire   [0:0] icmp_ln139_fu_5019_p2;
wire   [7:0] tmp_50_fu_5005_p4;
wire   [22:0] trunc_ln139_1_fu_5015_p1;
wire   [0:0] icmp_ln139_3_fu_5043_p2;
wire   [0:0] icmp_ln139_2_fu_5037_p2;
wire   [0:0] or_ln139_1_fu_5031_p2;
wire   [0:0] or_ln139_2_fu_5049_p2;
wire   [0:0] and_ln139_fu_5055_p2;
wire   [0:0] tmp_fu_4978_p3;
wire   [0:0] and_ln139_1_fu_5061_p2;
wire   [0:0] or_ln139_fu_5066_p2;
wire   [31:0] score_2_fu_5072_p3;
wire   [31:0] merge_2_5_fu_5078_p3;
wire   [31:0] merge_1_6_fu_5084_p3;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage5_00001;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage7_00001;
wire    ap_block_pp0_stage1_00001;
reg   [1:0] grp_fu_3172_opcode;
reg   [1:0] grp_fu_3176_opcode;
reg   [4:0] grp_fu_3189_opcode;
reg   [4:0] grp_fu_3193_opcode;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_idle_pp0_0to6;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg   [7:0] ap_NS_fsm;
wire    ap_block_pp0_stage0_subdone;
reg    ap_idle_pp0_1to7;
reg    ap_done_pending_pp0;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_8_full_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3172_p0),
    .din1(grp_fu_3172_p1),
    .opcode(grp_fu_3172_opcode),
    .ce(1'b1),
    .dout(grp_fu_3172_p2)
);

FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_8_full_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3176_p0),
    .din1(grp_fu_3176_p1),
    .opcode(grp_fu_3176_opcode),
    .ce(1'b1),
    .dout(grp_fu_3176_p2)
);

FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_8_full_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_3180_p0),
    .din1(grp_fu_3180_p1),
    .ce(1'b1),
    .dout(grp_fu_3180_p2)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U17(
    .din0(regions_center_0_0_0),
    .din1(regions_center_1_0_0),
    .din2(regions_center_2_0_0),
    .din3(regions_center_3_0_0),
    .din4(regions_center_4_0_0),
    .din5(regions_center_5_0_0),
    .din6(regions_center_6_0_0),
    .din7(regions_center_7_0_0),
    .din8(regions_center_8_0_0),
    .din9(regions_center_9_0_0),
    .din10(regions_center_10_0_0),
    .din11(regions_center_11_0_0),
    .din12(regions_center_12_0_0),
    .din13(regions_center_13_0_0),
    .din14(regions_center_14_0_0),
    .din15(regions_center_15_0_0),
    .din16(regions_center_16_0_0),
    .din17(regions_center_17_0_0),
    .din18(regions_center_18_0_0),
    .din19(regions_center_19_0_0),
    .din20(regions_center_20_0_0),
    .din21(regions_center_21_0_0),
    .din22(regions_center_22_0_0),
    .din23(regions_center_23_0_0),
    .din24(regions_center_24_0_0),
    .din25(regions_center_25_0_0),
    .din26(regions_center_26_0_0),
    .din27(regions_center_27_0_0),
    .din28(regions_center_28_0_0),
    .din29(regions_center_29_0_0),
    .din30(regions_center_30_0_0),
    .din31(regions_center_31_0_0),
    .din32(trunc_ln104_fu_3262_p1),
    .dout(tmp_s_fu_3266_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U18(
    .din0(regions_center_0_0_0),
    .din1(regions_center_1_0_0),
    .din2(regions_center_2_0_0),
    .din3(regions_center_3_0_0),
    .din4(regions_center_4_0_0),
    .din5(regions_center_5_0_0),
    .din6(regions_center_6_0_0),
    .din7(regions_center_7_0_0),
    .din8(regions_center_8_0_0),
    .din9(regions_center_9_0_0),
    .din10(regions_center_10_0_0),
    .din11(regions_center_11_0_0),
    .din12(regions_center_12_0_0),
    .din13(regions_center_13_0_0),
    .din14(regions_center_14_0_0),
    .din15(regions_center_15_0_0),
    .din16(regions_center_16_0_0),
    .din17(regions_center_17_0_0),
    .din18(regions_center_18_0_0),
    .din19(regions_center_19_0_0),
    .din20(regions_center_20_0_0),
    .din21(regions_center_21_0_0),
    .din22(regions_center_22_0_0),
    .din23(regions_center_23_0_0),
    .din24(regions_center_24_0_0),
    .din25(regions_center_25_0_0),
    .din26(regions_center_26_0_0),
    .din27(regions_center_27_0_0),
    .din28(regions_center_28_0_0),
    .din29(regions_center_29_0_0),
    .din30(regions_center_30_0_0),
    .din31(regions_center_31_0_0),
    .din32(trunc_ln104_1_fu_3304_p1),
    .dout(tmp_1_fu_3308_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U19(
    .din0(regions_max_0_0_0),
    .din1(regions_max_1_0_0),
    .din2(regions_max_2_0_0),
    .din3(regions_max_3_0_0),
    .din4(regions_max_4_0_0),
    .din5(regions_max_5_0_0),
    .din6(regions_max_6_0_0),
    .din7(regions_max_7_0_0),
    .din8(regions_max_8_0_0),
    .din9(regions_max_9_0_0),
    .din10(regions_max_10_0_0),
    .din11(regions_max_11_0_0),
    .din12(regions_max_12_0_0),
    .din13(regions_max_13_0_0),
    .din14(regions_max_14_0_0),
    .din15(regions_max_15_0_0),
    .din16(regions_max_16_0_0),
    .din17(regions_max_17_0_0),
    .din18(regions_max_18_0_0),
    .din19(regions_max_19_0_0),
    .din20(regions_max_20_0_0),
    .din21(regions_max_21_0_0),
    .din22(regions_max_22_0_0),
    .din23(regions_max_23_0_0),
    .din24(regions_max_24_0_0),
    .din25(regions_max_25_0_0),
    .din26(regions_max_26_0_0),
    .din27(regions_max_27_0_0),
    .din28(regions_max_28_0_0),
    .din29(regions_max_29_0_0),
    .din30(regions_max_30_0_0),
    .din31(regions_max_31_0_0),
    .din32(trunc_ln104_fu_3262_p1),
    .dout(tmp_2_fu_3346_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U20(
    .din0(regions_min_0_0_0),
    .din1(regions_min_1_0_0),
    .din2(regions_min_2_0_0),
    .din3(regions_min_3_0_0),
    .din4(regions_min_4_0_0),
    .din5(regions_min_5_0_0),
    .din6(regions_min_6_0_0),
    .din7(regions_min_7_0_0),
    .din8(regions_min_8_0_0),
    .din9(regions_min_9_0_0),
    .din10(regions_min_10_0_0),
    .din11(regions_min_11_0_0),
    .din12(regions_min_12_0_0),
    .din13(regions_min_13_0_0),
    .din14(regions_min_14_0_0),
    .din15(regions_min_15_0_0),
    .din16(regions_min_16_0_0),
    .din17(regions_min_17_0_0),
    .din18(regions_min_18_0_0),
    .din19(regions_min_19_0_0),
    .din20(regions_min_20_0_0),
    .din21(regions_min_21_0_0),
    .din22(regions_min_22_0_0),
    .din23(regions_min_23_0_0),
    .din24(regions_min_24_0_0),
    .din25(regions_min_25_0_0),
    .din26(regions_min_26_0_0),
    .din27(regions_min_27_0_0),
    .din28(regions_min_28_0_0),
    .din29(regions_min_29_0_0),
    .din30(regions_min_30_0_0),
    .din31(regions_min_31_0_0),
    .din32(trunc_ln104_fu_3262_p1),
    .dout(tmp_3_fu_3384_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U21(
    .din0(regions_max_0_0_0),
    .din1(regions_max_1_0_0),
    .din2(regions_max_2_0_0),
    .din3(regions_max_3_0_0),
    .din4(regions_max_4_0_0),
    .din5(regions_max_5_0_0),
    .din6(regions_max_6_0_0),
    .din7(regions_max_7_0_0),
    .din8(regions_max_8_0_0),
    .din9(regions_max_9_0_0),
    .din10(regions_max_10_0_0),
    .din11(regions_max_11_0_0),
    .din12(regions_max_12_0_0),
    .din13(regions_max_13_0_0),
    .din14(regions_max_14_0_0),
    .din15(regions_max_15_0_0),
    .din16(regions_max_16_0_0),
    .din17(regions_max_17_0_0),
    .din18(regions_max_18_0_0),
    .din19(regions_max_19_0_0),
    .din20(regions_max_20_0_0),
    .din21(regions_max_21_0_0),
    .din22(regions_max_22_0_0),
    .din23(regions_max_23_0_0),
    .din24(regions_max_24_0_0),
    .din25(regions_max_25_0_0),
    .din26(regions_max_26_0_0),
    .din27(regions_max_27_0_0),
    .din28(regions_max_28_0_0),
    .din29(regions_max_29_0_0),
    .din30(regions_max_30_0_0),
    .din31(regions_max_31_0_0),
    .din32(trunc_ln104_1_fu_3304_p1),
    .dout(tmp_4_fu_3422_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U22(
    .din0(regions_min_0_0_0),
    .din1(regions_min_1_0_0),
    .din2(regions_min_2_0_0),
    .din3(regions_min_3_0_0),
    .din4(regions_min_4_0_0),
    .din5(regions_min_5_0_0),
    .din6(regions_min_6_0_0),
    .din7(regions_min_7_0_0),
    .din8(regions_min_8_0_0),
    .din9(regions_min_9_0_0),
    .din10(regions_min_10_0_0),
    .din11(regions_min_11_0_0),
    .din12(regions_min_12_0_0),
    .din13(regions_min_13_0_0),
    .din14(regions_min_14_0_0),
    .din15(regions_min_15_0_0),
    .din16(regions_min_16_0_0),
    .din17(regions_min_17_0_0),
    .din18(regions_min_18_0_0),
    .din19(regions_min_19_0_0),
    .din20(regions_min_20_0_0),
    .din21(regions_min_21_0_0),
    .din22(regions_min_22_0_0),
    .din23(regions_min_23_0_0),
    .din24(regions_min_24_0_0),
    .din25(regions_min_25_0_0),
    .din26(regions_min_26_0_0),
    .din27(regions_min_27_0_0),
    .din28(regions_min_28_0_0),
    .din29(regions_min_29_0_0),
    .din30(regions_min_30_0_0),
    .din31(regions_min_31_0_0),
    .din32(trunc_ln104_1_fu_3304_p1),
    .dout(tmp_5_fu_3460_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U23(
    .din0(regions_center_0_1_0),
    .din1(regions_center_1_1_0),
    .din2(regions_center_2_1_0),
    .din3(regions_center_3_1_0),
    .din4(regions_center_4_1_0),
    .din5(regions_center_5_1_0),
    .din6(regions_center_6_1_0),
    .din7(regions_center_7_1_0),
    .din8(regions_center_8_1_0),
    .din9(regions_center_9_1_0),
    .din10(regions_center_10_1_0),
    .din11(regions_center_11_1_0),
    .din12(regions_center_12_1_0),
    .din13(regions_center_13_1_0),
    .din14(regions_center_14_1_0),
    .din15(regions_center_15_1_0),
    .din16(regions_center_16_1_0),
    .din17(regions_center_17_1_0),
    .din18(regions_center_18_1_0),
    .din19(regions_center_19_1_0),
    .din20(regions_center_20_1_0),
    .din21(regions_center_21_1_0),
    .din22(regions_center_22_1_0),
    .din23(regions_center_23_1_0),
    .din24(regions_center_24_1_0),
    .din25(regions_center_25_1_0),
    .din26(regions_center_26_1_0),
    .din27(regions_center_27_1_0),
    .din28(regions_center_28_1_0),
    .din29(regions_center_29_1_0),
    .din30(regions_center_30_1_0),
    .din31(regions_center_31_1_0),
    .din32(trunc_ln104_fu_3262_p1),
    .dout(tmp_6_fu_3498_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U24(
    .din0(regions_center_0_1_0),
    .din1(regions_center_1_1_0),
    .din2(regions_center_2_1_0),
    .din3(regions_center_3_1_0),
    .din4(regions_center_4_1_0),
    .din5(regions_center_5_1_0),
    .din6(regions_center_6_1_0),
    .din7(regions_center_7_1_0),
    .din8(regions_center_8_1_0),
    .din9(regions_center_9_1_0),
    .din10(regions_center_10_1_0),
    .din11(regions_center_11_1_0),
    .din12(regions_center_12_1_0),
    .din13(regions_center_13_1_0),
    .din14(regions_center_14_1_0),
    .din15(regions_center_15_1_0),
    .din16(regions_center_16_1_0),
    .din17(regions_center_17_1_0),
    .din18(regions_center_18_1_0),
    .din19(regions_center_19_1_0),
    .din20(regions_center_20_1_0),
    .din21(regions_center_21_1_0),
    .din22(regions_center_22_1_0),
    .din23(regions_center_23_1_0),
    .din24(regions_center_24_1_0),
    .din25(regions_center_25_1_0),
    .din26(regions_center_26_1_0),
    .din27(regions_center_27_1_0),
    .din28(regions_center_28_1_0),
    .din29(regions_center_29_1_0),
    .din30(regions_center_30_1_0),
    .din31(regions_center_31_1_0),
    .din32(trunc_ln104_1_fu_3304_p1),
    .dout(tmp_7_fu_3536_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U25(
    .din0(regions_max_0_1_0),
    .din1(regions_max_1_1_0),
    .din2(regions_max_2_1_0),
    .din3(regions_max_3_1_0),
    .din4(regions_max_4_1_0),
    .din5(regions_max_5_1_0),
    .din6(regions_max_6_1_0),
    .din7(regions_max_7_1_0),
    .din8(regions_max_8_1_0),
    .din9(regions_max_9_1_0),
    .din10(regions_max_10_1_0),
    .din11(regions_max_11_1_0),
    .din12(regions_max_12_1_0),
    .din13(regions_max_13_1_0),
    .din14(regions_max_14_1_0),
    .din15(regions_max_15_1_0),
    .din16(regions_max_16_1_0),
    .din17(regions_max_17_1_0),
    .din18(regions_max_18_1_0),
    .din19(regions_max_19_1_0),
    .din20(regions_max_20_1_0),
    .din21(regions_max_21_1_0),
    .din22(regions_max_22_1_0),
    .din23(regions_max_23_1_0),
    .din24(regions_max_24_1_0),
    .din25(regions_max_25_1_0),
    .din26(regions_max_26_1_0),
    .din27(regions_max_27_1_0),
    .din28(regions_max_28_1_0),
    .din29(regions_max_29_1_0),
    .din30(regions_max_30_1_0),
    .din31(regions_max_31_1_0),
    .din32(trunc_ln104_fu_3262_p1),
    .dout(tmp_8_fu_3574_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U26(
    .din0(regions_min_0_1_0),
    .din1(regions_min_1_1_0),
    .din2(regions_min_2_1_0),
    .din3(regions_min_3_1_0),
    .din4(regions_min_4_1_0),
    .din5(regions_min_5_1_0),
    .din6(regions_min_6_1_0),
    .din7(regions_min_7_1_0),
    .din8(regions_min_8_1_0),
    .din9(regions_min_9_1_0),
    .din10(regions_min_10_1_0),
    .din11(regions_min_11_1_0),
    .din12(regions_min_12_1_0),
    .din13(regions_min_13_1_0),
    .din14(regions_min_14_1_0),
    .din15(regions_min_15_1_0),
    .din16(regions_min_16_1_0),
    .din17(regions_min_17_1_0),
    .din18(regions_min_18_1_0),
    .din19(regions_min_19_1_0),
    .din20(regions_min_20_1_0),
    .din21(regions_min_21_1_0),
    .din22(regions_min_22_1_0),
    .din23(regions_min_23_1_0),
    .din24(regions_min_24_1_0),
    .din25(regions_min_25_1_0),
    .din26(regions_min_26_1_0),
    .din27(regions_min_27_1_0),
    .din28(regions_min_28_1_0),
    .din29(regions_min_29_1_0),
    .din30(regions_min_30_1_0),
    .din31(regions_min_31_1_0),
    .din32(trunc_ln104_fu_3262_p1),
    .dout(tmp_9_fu_3612_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U27(
    .din0(regions_max_0_1_0),
    .din1(regions_max_1_1_0),
    .din2(regions_max_2_1_0),
    .din3(regions_max_3_1_0),
    .din4(regions_max_4_1_0),
    .din5(regions_max_5_1_0),
    .din6(regions_max_6_1_0),
    .din7(regions_max_7_1_0),
    .din8(regions_max_8_1_0),
    .din9(regions_max_9_1_0),
    .din10(regions_max_10_1_0),
    .din11(regions_max_11_1_0),
    .din12(regions_max_12_1_0),
    .din13(regions_max_13_1_0),
    .din14(regions_max_14_1_0),
    .din15(regions_max_15_1_0),
    .din16(regions_max_16_1_0),
    .din17(regions_max_17_1_0),
    .din18(regions_max_18_1_0),
    .din19(regions_max_19_1_0),
    .din20(regions_max_20_1_0),
    .din21(regions_max_21_1_0),
    .din22(regions_max_22_1_0),
    .din23(regions_max_23_1_0),
    .din24(regions_max_24_1_0),
    .din25(regions_max_25_1_0),
    .din26(regions_max_26_1_0),
    .din27(regions_max_27_1_0),
    .din28(regions_max_28_1_0),
    .din29(regions_max_29_1_0),
    .din30(regions_max_30_1_0),
    .din31(regions_max_31_1_0),
    .din32(trunc_ln104_1_fu_3304_p1),
    .dout(tmp_10_fu_3650_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U28(
    .din0(regions_min_0_1_0),
    .din1(regions_min_1_1_0),
    .din2(regions_min_2_1_0),
    .din3(regions_min_3_1_0),
    .din4(regions_min_4_1_0),
    .din5(regions_min_5_1_0),
    .din6(regions_min_6_1_0),
    .din7(regions_min_7_1_0),
    .din8(regions_min_8_1_0),
    .din9(regions_min_9_1_0),
    .din10(regions_min_10_1_0),
    .din11(regions_min_11_1_0),
    .din12(regions_min_12_1_0),
    .din13(regions_min_13_1_0),
    .din14(regions_min_14_1_0),
    .din15(regions_min_15_1_0),
    .din16(regions_min_16_1_0),
    .din17(regions_min_17_1_0),
    .din18(regions_min_18_1_0),
    .din19(regions_min_19_1_0),
    .din20(regions_min_20_1_0),
    .din21(regions_min_21_1_0),
    .din22(regions_min_22_1_0),
    .din23(regions_min_23_1_0),
    .din24(regions_min_24_1_0),
    .din25(regions_min_25_1_0),
    .din26(regions_min_26_1_0),
    .din27(regions_min_27_1_0),
    .din28(regions_min_28_1_0),
    .din29(regions_min_29_1_0),
    .din30(regions_min_30_1_0),
    .din31(regions_min_31_1_0),
    .din32(trunc_ln104_1_fu_3304_p1),
    .dout(tmp_11_fu_3688_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U29(
    .din0(regions_center_0_2_0),
    .din1(regions_center_1_2_0),
    .din2(regions_center_2_2_0),
    .din3(regions_center_3_2_0),
    .din4(regions_center_4_2_0),
    .din5(regions_center_5_2_0),
    .din6(regions_center_6_2_0),
    .din7(regions_center_7_2_0),
    .din8(regions_center_8_2_0),
    .din9(regions_center_9_2_0),
    .din10(regions_center_10_2_0),
    .din11(regions_center_11_2_0),
    .din12(regions_center_12_2_0),
    .din13(regions_center_13_2_0),
    .din14(regions_center_14_2_0),
    .din15(regions_center_15_2_0),
    .din16(regions_center_16_2_0),
    .din17(regions_center_17_2_0),
    .din18(regions_center_18_2_0),
    .din19(regions_center_19_2_0),
    .din20(regions_center_20_2_0),
    .din21(regions_center_21_2_0),
    .din22(regions_center_22_2_0),
    .din23(regions_center_23_2_0),
    .din24(regions_center_24_2_0),
    .din25(regions_center_25_2_0),
    .din26(regions_center_26_2_0),
    .din27(regions_center_27_2_0),
    .din28(regions_center_28_2_0),
    .din29(regions_center_29_2_0),
    .din30(regions_center_30_2_0),
    .din31(regions_center_31_2_0),
    .din32(trunc_ln104_fu_3262_p1),
    .dout(tmp_12_fu_3726_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U30(
    .din0(regions_center_0_2_0),
    .din1(regions_center_1_2_0),
    .din2(regions_center_2_2_0),
    .din3(regions_center_3_2_0),
    .din4(regions_center_4_2_0),
    .din5(regions_center_5_2_0),
    .din6(regions_center_6_2_0),
    .din7(regions_center_7_2_0),
    .din8(regions_center_8_2_0),
    .din9(regions_center_9_2_0),
    .din10(regions_center_10_2_0),
    .din11(regions_center_11_2_0),
    .din12(regions_center_12_2_0),
    .din13(regions_center_13_2_0),
    .din14(regions_center_14_2_0),
    .din15(regions_center_15_2_0),
    .din16(regions_center_16_2_0),
    .din17(regions_center_17_2_0),
    .din18(regions_center_18_2_0),
    .din19(regions_center_19_2_0),
    .din20(regions_center_20_2_0),
    .din21(regions_center_21_2_0),
    .din22(regions_center_22_2_0),
    .din23(regions_center_23_2_0),
    .din24(regions_center_24_2_0),
    .din25(regions_center_25_2_0),
    .din26(regions_center_26_2_0),
    .din27(regions_center_27_2_0),
    .din28(regions_center_28_2_0),
    .din29(regions_center_29_2_0),
    .din30(regions_center_30_2_0),
    .din31(regions_center_31_2_0),
    .din32(trunc_ln104_1_fu_3304_p1),
    .dout(tmp_13_fu_3764_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U31(
    .din0(regions_max_0_2_0),
    .din1(regions_max_1_2_0),
    .din2(regions_max_2_2_0),
    .din3(regions_max_3_2_0),
    .din4(regions_max_4_2_0),
    .din5(regions_max_5_2_0),
    .din6(regions_max_6_2_0),
    .din7(regions_max_7_2_0),
    .din8(regions_max_8_2_0),
    .din9(regions_max_9_2_0),
    .din10(regions_max_10_2_0),
    .din11(regions_max_11_2_0),
    .din12(regions_max_12_2_0),
    .din13(regions_max_13_2_0),
    .din14(regions_max_14_2_0),
    .din15(regions_max_15_2_0),
    .din16(regions_max_16_2_0),
    .din17(regions_max_17_2_0),
    .din18(regions_max_18_2_0),
    .din19(regions_max_19_2_0),
    .din20(regions_max_20_2_0),
    .din21(regions_max_21_2_0),
    .din22(regions_max_22_2_0),
    .din23(regions_max_23_2_0),
    .din24(regions_max_24_2_0),
    .din25(regions_max_25_2_0),
    .din26(regions_max_26_2_0),
    .din27(regions_max_27_2_0),
    .din28(regions_max_28_2_0),
    .din29(regions_max_29_2_0),
    .din30(regions_max_30_2_0),
    .din31(regions_max_31_2_0),
    .din32(trunc_ln104_fu_3262_p1),
    .dout(tmp_14_fu_3802_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U32(
    .din0(regions_min_0_2_0),
    .din1(regions_min_1_2_0),
    .din2(regions_min_2_2_0),
    .din3(regions_min_3_2_0),
    .din4(regions_min_4_2_0),
    .din5(regions_min_5_2_0),
    .din6(regions_min_6_2_0),
    .din7(regions_min_7_2_0),
    .din8(regions_min_8_2_0),
    .din9(regions_min_9_2_0),
    .din10(regions_min_10_2_0),
    .din11(regions_min_11_2_0),
    .din12(regions_min_12_2_0),
    .din13(regions_min_13_2_0),
    .din14(regions_min_14_2_0),
    .din15(regions_min_15_2_0),
    .din16(regions_min_16_2_0),
    .din17(regions_min_17_2_0),
    .din18(regions_min_18_2_0),
    .din19(regions_min_19_2_0),
    .din20(regions_min_20_2_0),
    .din21(regions_min_21_2_0),
    .din22(regions_min_22_2_0),
    .din23(regions_min_23_2_0),
    .din24(regions_min_24_2_0),
    .din25(regions_min_25_2_0),
    .din26(regions_min_26_2_0),
    .din27(regions_min_27_2_0),
    .din28(regions_min_28_2_0),
    .din29(regions_min_29_2_0),
    .din30(regions_min_30_2_0),
    .din31(regions_min_31_2_0),
    .din32(trunc_ln104_fu_3262_p1),
    .dout(tmp_15_fu_3840_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U33(
    .din0(regions_max_0_2_0),
    .din1(regions_max_1_2_0),
    .din2(regions_max_2_2_0),
    .din3(regions_max_3_2_0),
    .din4(regions_max_4_2_0),
    .din5(regions_max_5_2_0),
    .din6(regions_max_6_2_0),
    .din7(regions_max_7_2_0),
    .din8(regions_max_8_2_0),
    .din9(regions_max_9_2_0),
    .din10(regions_max_10_2_0),
    .din11(regions_max_11_2_0),
    .din12(regions_max_12_2_0),
    .din13(regions_max_13_2_0),
    .din14(regions_max_14_2_0),
    .din15(regions_max_15_2_0),
    .din16(regions_max_16_2_0),
    .din17(regions_max_17_2_0),
    .din18(regions_max_18_2_0),
    .din19(regions_max_19_2_0),
    .din20(regions_max_20_2_0),
    .din21(regions_max_21_2_0),
    .din22(regions_max_22_2_0),
    .din23(regions_max_23_2_0),
    .din24(regions_max_24_2_0),
    .din25(regions_max_25_2_0),
    .din26(regions_max_26_2_0),
    .din27(regions_max_27_2_0),
    .din28(regions_max_28_2_0),
    .din29(regions_max_29_2_0),
    .din30(regions_max_30_2_0),
    .din31(regions_max_31_2_0),
    .din32(trunc_ln104_1_fu_3304_p1),
    .dout(tmp_16_fu_3878_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U34(
    .din0(regions_min_0_2_0),
    .din1(regions_min_1_2_0),
    .din2(regions_min_2_2_0),
    .din3(regions_min_3_2_0),
    .din4(regions_min_4_2_0),
    .din5(regions_min_5_2_0),
    .din6(regions_min_6_2_0),
    .din7(regions_min_7_2_0),
    .din8(regions_min_8_2_0),
    .din9(regions_min_9_2_0),
    .din10(regions_min_10_2_0),
    .din11(regions_min_11_2_0),
    .din12(regions_min_12_2_0),
    .din13(regions_min_13_2_0),
    .din14(regions_min_14_2_0),
    .din15(regions_min_15_2_0),
    .din16(regions_min_16_2_0),
    .din17(regions_min_17_2_0),
    .din18(regions_min_18_2_0),
    .din19(regions_min_19_2_0),
    .din20(regions_min_20_2_0),
    .din21(regions_min_21_2_0),
    .din22(regions_min_22_2_0),
    .din23(regions_min_23_2_0),
    .din24(regions_min_24_2_0),
    .din25(regions_min_25_2_0),
    .din26(regions_min_26_2_0),
    .din27(regions_min_27_2_0),
    .din28(regions_min_28_2_0),
    .din29(regions_min_29_2_0),
    .din30(regions_min_30_2_0),
    .din31(regions_min_31_2_0),
    .din32(trunc_ln104_1_fu_3304_p1),
    .dout(tmp_17_fu_3916_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U35(
    .din0(regions_center_0_3_0),
    .din1(regions_center_1_3_0),
    .din2(regions_center_2_3_0),
    .din3(regions_center_3_3_0),
    .din4(regions_center_4_3_0),
    .din5(regions_center_5_3_0),
    .din6(regions_center_6_3_0),
    .din7(regions_center_7_3_0),
    .din8(regions_center_8_3_0),
    .din9(regions_center_9_3_0),
    .din10(regions_center_10_3_0),
    .din11(regions_center_11_3_0),
    .din12(regions_center_12_3_0),
    .din13(regions_center_13_3_0),
    .din14(regions_center_14_3_0),
    .din15(regions_center_15_3_0),
    .din16(regions_center_16_3_0),
    .din17(regions_center_17_3_0),
    .din18(regions_center_18_3_0),
    .din19(regions_center_19_3_0),
    .din20(regions_center_20_3_0),
    .din21(regions_center_21_3_0),
    .din22(regions_center_22_3_0),
    .din23(regions_center_23_3_0),
    .din24(regions_center_24_3_0),
    .din25(regions_center_25_3_0),
    .din26(regions_center_26_3_0),
    .din27(regions_center_27_3_0),
    .din28(regions_center_28_3_0),
    .din29(regions_center_29_3_0),
    .din30(regions_center_30_3_0),
    .din31(regions_center_31_3_0),
    .din32(trunc_ln104_fu_3262_p1),
    .dout(tmp_18_fu_3954_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U36(
    .din0(regions_center_0_3_0),
    .din1(regions_center_1_3_0),
    .din2(regions_center_2_3_0),
    .din3(regions_center_3_3_0),
    .din4(regions_center_4_3_0),
    .din5(regions_center_5_3_0),
    .din6(regions_center_6_3_0),
    .din7(regions_center_7_3_0),
    .din8(regions_center_8_3_0),
    .din9(regions_center_9_3_0),
    .din10(regions_center_10_3_0),
    .din11(regions_center_11_3_0),
    .din12(regions_center_12_3_0),
    .din13(regions_center_13_3_0),
    .din14(regions_center_14_3_0),
    .din15(regions_center_15_3_0),
    .din16(regions_center_16_3_0),
    .din17(regions_center_17_3_0),
    .din18(regions_center_18_3_0),
    .din19(regions_center_19_3_0),
    .din20(regions_center_20_3_0),
    .din21(regions_center_21_3_0),
    .din22(regions_center_22_3_0),
    .din23(regions_center_23_3_0),
    .din24(regions_center_24_3_0),
    .din25(regions_center_25_3_0),
    .din26(regions_center_26_3_0),
    .din27(regions_center_27_3_0),
    .din28(regions_center_28_3_0),
    .din29(regions_center_29_3_0),
    .din30(regions_center_30_3_0),
    .din31(regions_center_31_3_0),
    .din32(trunc_ln104_1_fu_3304_p1),
    .dout(tmp_19_fu_3992_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U37(
    .din0(regions_max_0_3_0),
    .din1(regions_max_1_3_0),
    .din2(regions_max_2_3_0),
    .din3(regions_max_3_3_0),
    .din4(regions_max_4_3_0),
    .din5(regions_max_5_3_0),
    .din6(regions_max_6_3_0),
    .din7(regions_max_7_3_0),
    .din8(regions_max_8_3_0),
    .din9(regions_max_9_3_0),
    .din10(regions_max_10_3_0),
    .din11(regions_max_11_3_0),
    .din12(regions_max_12_3_0),
    .din13(regions_max_13_3_0),
    .din14(regions_max_14_3_0),
    .din15(regions_max_15_3_0),
    .din16(regions_max_16_3_0),
    .din17(regions_max_17_3_0),
    .din18(regions_max_18_3_0),
    .din19(regions_max_19_3_0),
    .din20(regions_max_20_3_0),
    .din21(regions_max_21_3_0),
    .din22(regions_max_22_3_0),
    .din23(regions_max_23_3_0),
    .din24(regions_max_24_3_0),
    .din25(regions_max_25_3_0),
    .din26(regions_max_26_3_0),
    .din27(regions_max_27_3_0),
    .din28(regions_max_28_3_0),
    .din29(regions_max_29_3_0),
    .din30(regions_max_30_3_0),
    .din31(regions_max_31_3_0),
    .din32(trunc_ln104_fu_3262_p1),
    .dout(tmp_20_fu_4030_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U38(
    .din0(regions_min_0_3_0),
    .din1(regions_min_1_3_0),
    .din2(regions_min_2_3_0),
    .din3(regions_min_3_3_0),
    .din4(regions_min_4_3_0),
    .din5(regions_min_5_3_0),
    .din6(regions_min_6_3_0),
    .din7(regions_min_7_3_0),
    .din8(regions_min_8_3_0),
    .din9(regions_min_9_3_0),
    .din10(regions_min_10_3_0),
    .din11(regions_min_11_3_0),
    .din12(regions_min_12_3_0),
    .din13(regions_min_13_3_0),
    .din14(regions_min_14_3_0),
    .din15(regions_min_15_3_0),
    .din16(regions_min_16_3_0),
    .din17(regions_min_17_3_0),
    .din18(regions_min_18_3_0),
    .din19(regions_min_19_3_0),
    .din20(regions_min_20_3_0),
    .din21(regions_min_21_3_0),
    .din22(regions_min_22_3_0),
    .din23(regions_min_23_3_0),
    .din24(regions_min_24_3_0),
    .din25(regions_min_25_3_0),
    .din26(regions_min_26_3_0),
    .din27(regions_min_27_3_0),
    .din28(regions_min_28_3_0),
    .din29(regions_min_29_3_0),
    .din30(regions_min_30_3_0),
    .din31(regions_min_31_3_0),
    .din32(trunc_ln104_fu_3262_p1),
    .dout(tmp_21_fu_4068_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U39(
    .din0(regions_max_0_3_0),
    .din1(regions_max_1_3_0),
    .din2(regions_max_2_3_0),
    .din3(regions_max_3_3_0),
    .din4(regions_max_4_3_0),
    .din5(regions_max_5_3_0),
    .din6(regions_max_6_3_0),
    .din7(regions_max_7_3_0),
    .din8(regions_max_8_3_0),
    .din9(regions_max_9_3_0),
    .din10(regions_max_10_3_0),
    .din11(regions_max_11_3_0),
    .din12(regions_max_12_3_0),
    .din13(regions_max_13_3_0),
    .din14(regions_max_14_3_0),
    .din15(regions_max_15_3_0),
    .din16(regions_max_16_3_0),
    .din17(regions_max_17_3_0),
    .din18(regions_max_18_3_0),
    .din19(regions_max_19_3_0),
    .din20(regions_max_20_3_0),
    .din21(regions_max_21_3_0),
    .din22(regions_max_22_3_0),
    .din23(regions_max_23_3_0),
    .din24(regions_max_24_3_0),
    .din25(regions_max_25_3_0),
    .din26(regions_max_26_3_0),
    .din27(regions_max_27_3_0),
    .din28(regions_max_28_3_0),
    .din29(regions_max_29_3_0),
    .din30(regions_max_30_3_0),
    .din31(regions_max_31_3_0),
    .din32(trunc_ln104_1_fu_3304_p1),
    .dout(tmp_22_fu_4106_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U40(
    .din0(regions_min_0_3_0),
    .din1(regions_min_1_3_0),
    .din2(regions_min_2_3_0),
    .din3(regions_min_3_3_0),
    .din4(regions_min_4_3_0),
    .din5(regions_min_5_3_0),
    .din6(regions_min_6_3_0),
    .din7(regions_min_7_3_0),
    .din8(regions_min_8_3_0),
    .din9(regions_min_9_3_0),
    .din10(regions_min_10_3_0),
    .din11(regions_min_11_3_0),
    .din12(regions_min_12_3_0),
    .din13(regions_min_13_3_0),
    .din14(regions_min_14_3_0),
    .din15(regions_min_15_3_0),
    .din16(regions_min_16_3_0),
    .din17(regions_min_17_3_0),
    .din18(regions_min_18_3_0),
    .din19(regions_min_19_3_0),
    .din20(regions_min_20_3_0),
    .din21(regions_min_21_3_0),
    .din22(regions_min_22_3_0),
    .din23(regions_min_23_3_0),
    .din24(regions_min_24_3_0),
    .din25(regions_min_25_3_0),
    .din26(regions_min_26_3_0),
    .din27(regions_min_27_3_0),
    .din28(regions_min_28_3_0),
    .din29(regions_min_29_3_0),
    .din30(regions_min_30_3_0),
    .din31(regions_min_31_3_0),
    .din32(trunc_ln104_1_fu_3304_p1),
    .dout(tmp_23_fu_4144_p34)
);

FaultDetector_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage7),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter7_stage2) | ((1'b0 == ap_block_pp0_stage3_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
            ap_enable_reg_pp0_iter7 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage2))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage2))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage2))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage2))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage2))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage2))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage2)) | ((1'b0 == ap_block_pp0_stage3_subdone) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage3)))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_real_4_fu_838 <= 32'd1;
        end else if (((icmp_ln1027_reg_7491 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            k_real_4_fu_838 <= k_real_3_fu_4522_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            merge_1_1_fu_834 <= 32'd0;
        end else if (((icmp_ln1027_reg_7491 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            merge_1_1_fu_834 <= i_real_2_fu_4530_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        merge_1_fu_822 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln1027_reg_7491_pp0_iter7_reg == 1'd1))) begin
        merge_1_fu_822 <= merge_1_7_fu_5102_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        merge_2_fu_826 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln1027_reg_7491_pp0_iter7_reg == 1'd1))) begin
        merge_2_fu_826 <= merge_2_6_fu_5096_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        score_fu_830 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln1027_reg_7491_pp0_iter7_reg == 1'd1))) begin
        score_fu_830 <= score_3_fu_5090_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_other_fu_846 <= 32'd4294967295;
        end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln1027_reg_7491_pp0_iter6_reg == 1'd1))) begin
            tmp_other_fu_846 <= tmp_other_3_fu_4936_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            tmp_score_fu_842 <= 32'd0;
        end else if (((ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln1027_reg_7491_pp0_iter6_reg == 1'd1))) begin
            tmp_score_fu_842 <= tmp_score_3_fu_4942_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln112_1_reg_7677 <= and_ln112_1_fu_4253_p2;
        and_ln112_3_reg_7682 <= and_ln112_3_fu_4334_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln112_1_reg_7677_pp0_iter1_reg <= and_ln112_1_reg_7677;
        and_ln112_1_reg_7677_pp0_iter2_reg <= and_ln112_1_reg_7677_pp0_iter1_reg;
        and_ln112_3_reg_7682_pp0_iter1_reg <= and_ln112_3_reg_7682;
        and_ln112_3_reg_7682_pp0_iter2_reg <= and_ln112_3_reg_7682_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        and_ln112_5_reg_7697 <= and_ln112_5_fu_4416_p2;
        and_ln112_7_reg_7702 <= and_ln112_7_fu_4497_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        and_ln112_5_reg_7697_pp0_iter1_reg <= and_ln112_5_reg_7697;
        and_ln112_5_reg_7697_pp0_iter2_reg <= and_ln112_5_reg_7697_pp0_iter1_reg;
        and_ln112_7_reg_7702_pp0_iter1_reg <= and_ln112_7_reg_7702;
        and_ln112_7_reg_7702_pp0_iter2_reg <= and_ln112_7_reg_7702_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        d1_1_reg_7742 <= grp_fu_3176_p2;
        d2_1_reg_7747 <= grp_fu_3180_p2;
        sub2_reg_7737 <= grp_fu_3172_p2;
        sub_reg_7732 <= grp_fu_36416_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        d1_2_reg_7762 <= grp_fu_3176_p2;
        d2_2_reg_7767 <= grp_fu_3180_p2;
        sub75_1_reg_7752 <= grp_fu_36416_p_dout0;
        sub87_1_reg_7757 <= grp_fu_3172_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        d1_3_reg_7788 <= grp_fu_3180_p2;
        d_2_reg_7772 <= grp_fu_36416_p_dout0;
        sub75_2_reg_7778 <= grp_fu_3172_p2;
        sub87_2_reg_7783 <= grp_fu_3176_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        d1_reg_7716 <= grp_fu_3172_p2;
        d2_reg_7721 <= grp_fu_3176_p2;
        d_1_reg_7726 <= grp_fu_3180_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        d_3_reg_7808 <= grp_fu_36416_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln1027_reg_7491_pp0_iter3_reg == 1'd1))) begin
        distance_1_reg_7897 <= grp_fu_3176_p2;
        overlap_1_reg_7902 <= grp_fu_36422_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_7491_pp0_iter4_reg == 1'd1))) begin
        distance_2_reg_7912 <= grp_fu_3172_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_7491_pp0_iter5_reg == 1'd1))) begin
        distance_3_reg_7929 <= grp_fu_3176_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_7491_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        distance_reg_7824 <= grp_fu_3176_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_real_3_reg_7476 <= merge_1_1_fu_834;
        i_real_3_reg_7476_pp0_iter1_reg <= i_real_3_reg_7476;
        i_real_3_reg_7476_pp0_iter2_reg <= i_real_3_reg_7476_pp0_iter1_reg;
        i_real_3_reg_7476_pp0_iter3_reg <= i_real_3_reg_7476_pp0_iter2_reg;
        i_real_3_reg_7476_pp0_iter4_reg <= i_real_3_reg_7476_pp0_iter3_reg;
        i_real_3_reg_7476_pp0_iter5_reg <= i_real_3_reg_7476_pp0_iter4_reg;
        i_real_3_reg_7476_pp0_iter6_reg <= i_real_3_reg_7476_pp0_iter5_reg;
        i_real_3_reg_7476_pp0_iter7_reg <= i_real_3_reg_7476_pp0_iter6_reg;
        icmp_ln1027_reg_7491 <= icmp_ln1027_fu_3256_p2;
        icmp_ln1027_reg_7491_pp0_iter1_reg <= icmp_ln1027_reg_7491;
        icmp_ln1027_reg_7491_pp0_iter2_reg <= icmp_ln1027_reg_7491_pp0_iter1_reg;
        icmp_ln1027_reg_7491_pp0_iter3_reg <= icmp_ln1027_reg_7491_pp0_iter2_reg;
        icmp_ln1027_reg_7491_pp0_iter4_reg <= icmp_ln1027_reg_7491_pp0_iter3_reg;
        icmp_ln1027_reg_7491_pp0_iter5_reg <= icmp_ln1027_reg_7491_pp0_iter4_reg;
        icmp_ln1027_reg_7491_pp0_iter6_reg <= icmp_ln1027_reg_7491_pp0_iter5_reg;
        icmp_ln1027_reg_7491_pp0_iter7_reg <= icmp_ln1027_reg_7491_pp0_iter6_reg;
        k_real_5_reg_7484 <= k_real_4_fu_838;
        k_real_5_reg_7484_pp0_iter1_reg <= k_real_5_reg_7484;
        k_real_5_reg_7484_pp0_iter2_reg <= k_real_5_reg_7484_pp0_iter1_reg;
        k_real_5_reg_7484_pp0_iter3_reg <= k_real_5_reg_7484_pp0_iter2_reg;
        k_real_5_reg_7484_pp0_iter4_reg <= k_real_5_reg_7484_pp0_iter3_reg;
        k_real_5_reg_7484_pp0_iter5_reg <= k_real_5_reg_7484_pp0_iter4_reg;
        k_real_5_reg_7484_pp0_iter6_reg <= k_real_5_reg_7484_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1019_reg_7707 <= icmp_ln1019_fu_4502_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1019_reg_7707_pp0_iter2_reg <= icmp_ln1019_reg_7707;
        icmp_ln1019_reg_7707_pp0_iter3_reg <= icmp_ln1019_reg_7707_pp0_iter2_reg;
        icmp_ln1019_reg_7707_pp0_iter4_reg <= icmp_ln1019_reg_7707_pp0_iter3_reg;
        icmp_ln1019_reg_7707_pp0_iter5_reg <= icmp_ln1019_reg_7707_pp0_iter4_reg;
        icmp_ln1019_reg_7707_pp0_iter6_reg <= icmp_ln1019_reg_7707_pp0_iter5_reg;
        icmp_ln1019_reg_7707_pp0_iter7_reg <= icmp_ln1019_reg_7707_pp0_iter6_reg;
        mul_2_reg_7814_pp0_iter3_reg <= mul_2_reg_7814;
        mul_2_reg_7814_pp0_iter4_reg <= mul_2_reg_7814_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        icmp_ln112_1_reg_7652 <= icmp_ln112_1_fu_4222_p2;
        icmp_ln112_2_reg_7657 <= icmp_ln112_2_fu_4228_p2;
        icmp_ln112_3_reg_7662 <= icmp_ln112_3_fu_4234_p2;
        icmp_ln112_reg_7647 <= icmp_ln112_fu_4216_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        merge_1_4_reg_7975 <= merge_1_fu_822;
        merge_2_1_reg_7982 <= merge_2_fu_826;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul_1_reg_7803 <= grp_fu_36422_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul_1_reg_7803_pp0_iter2_reg <= mul_1_reg_7803;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        mul_2_reg_7814 <= grp_fu_36422_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln1027_reg_7491_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_3_reg_7819 <= grp_fu_36422_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_3_reg_7819_pp0_iter3_reg <= mul_3_reg_7819;
        mul_3_reg_7819_pp0_iter4_reg <= mul_3_reg_7819_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        mul_reg_7793 <= grp_fu_36422_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_7491_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ov_10_reg_7843 <= ov_10_fu_4561_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3) & (icmp_ln1027_reg_7491_pp0_iter3_reg == 1'd1))) begin
        ov_11_reg_7882 <= ov_11_fu_4709_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_7491_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ov_14_reg_7860 <= ov_14_fu_4568_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln1027_reg_7491_pp0_iter3_reg == 1'd1))) begin
        ov_15_reg_7892 <= ov_15_fu_4756_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_7491_pp0_iter3_reg == 1'd1))) begin
        ov_16_reg_7867 <= ov_16_fu_4615_p3;
        ov_7_reg_7872 <= ov_7_fu_4662_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_7491_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ov_2_reg_7829 <= ov_2_fu_4547_p3;
        ov_6_reg_7836 <= ov_6_fu_4554_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln1027_reg_7491_pp0_iter4_reg == 1'd1))) begin
        overlap_2_reg_7907 <= grp_fu_36422_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_7491_pp0_iter4_reg == 1'd1))) begin
        overlap_3_reg_7917 <= grp_fu_36422_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_7_reg_7702_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_7491_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_7491_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_7_reg_7702_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln112_1_reg_7677_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_7491_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_7491_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_1_reg_7677_pp0_iter2_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_3199 <= grp_fu_36416_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_7_reg_7702) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_7_reg_7702) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        reg_3205 <= grp_fu_36416_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_5_reg_7697_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_7491_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_7491_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_5_reg_7697_pp0_iter2_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'd0 == and_ln112_3_reg_7682_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_7491_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_7491_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_3_reg_7682_pp0_iter2_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        reg_3211 <= grp_fu_3172_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_7491_pp0_iter5_reg == 1'd1))) begin
        sc_2_reg_7934 <= sc_2_fu_4816_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_7491_pp0_iter6_reg == 1'd1))) begin
        score_load_reg_7967 <= score_fu_830;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln112_7_reg_7702) & (1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        sub87_3_reg_7798 <= grp_fu_3172_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_fu_3256_p2 == 1'd1))) begin
        tmp_10_reg_7557 <= tmp_10_fu_3650_p34;
        tmp_11_reg_7562 <= tmp_11_fu_3688_p34;
        tmp_12_reg_7571 <= tmp_12_fu_3726_p34;
        tmp_13_reg_7576 <= tmp_13_fu_3764_p34;
        tmp_14_reg_7581 <= tmp_14_fu_3802_p34;
        tmp_15_reg_7586 <= tmp_15_fu_3840_p34;
        tmp_16_reg_7595 <= tmp_16_fu_3878_p34;
        tmp_17_reg_7600 <= tmp_17_fu_3916_p34;
        tmp_18_reg_7609 <= tmp_18_fu_3954_p34;
        tmp_19_reg_7614 <= tmp_19_fu_3992_p34;
        tmp_1_reg_7500 <= tmp_1_fu_3308_p34;
        tmp_20_reg_7619 <= tmp_20_fu_4030_p34;
        tmp_21_reg_7624 <= tmp_21_fu_4068_p34;
        tmp_22_reg_7633 <= tmp_22_fu_4106_p34;
        tmp_23_reg_7638 <= tmp_23_fu_4144_p34;
        tmp_2_reg_7505 <= tmp_2_fu_3346_p34;
        tmp_3_reg_7510 <= tmp_3_fu_3384_p34;
        tmp_4_reg_7519 <= tmp_4_fu_3422_p34;
        tmp_5_reg_7524 <= tmp_5_fu_3460_p34;
        tmp_6_reg_7533 <= tmp_6_fu_3498_p34;
        tmp_7_reg_7538 <= tmp_7_fu_3536_p34;
        tmp_8_reg_7543 <= tmp_8_fu_3574_p34;
        tmp_9_reg_7548 <= tmp_9_fu_3612_p34;
        tmp_s_reg_7495 <= tmp_s_fu_3266_p34;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_26_reg_7667 <= grp_fu_36427_p_dout0;
        tmp_31_reg_7672 <= grp_fu_36432_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_7491_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_28_reg_7850 <= grp_fu_36427_p_dout0;
        tmp_33_reg_7855 <= grp_fu_36432_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_36_reg_7687 <= grp_fu_36427_p_dout0;
        tmp_41_reg_7692 <= grp_fu_36432_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_7491_pp0_iter3_reg == 1'd1))) begin
        tmp_38_reg_7877 <= grp_fu_36427_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln1027_reg_7491_pp0_iter3_reg == 1'd1))) begin
        tmp_43_reg_7887 <= grp_fu_36427_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln1027_reg_7491_pp0_iter5_reg == 1'd1))) begin
        tmp_45_reg_7924 <= grp_fu_36432_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6) & (icmp_ln1027_reg_7491_pp0_iter6_reg == 1'd1))) begin
        tmp_48_reg_7948 <= grp_fu_36427_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_7491_pp0_iter7_reg == 1'd1))) begin
        tmp_51_reg_7988 <= grp_fu_36432_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln1027_reg_7491_pp0_iter6_reg == 1'd1))) begin
        tmp_other_4_reg_7953 <= tmp_other_4_fu_4923_p3;
        tmp_score_4_reg_7959 <= tmp_score_4_fu_4930_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln1027_reg_7491_pp0_iter6_reg == 1'd1))) begin
        tmp_score_load_reg_7941 <= tmp_score_fu_842;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_7491 == 1'd0) & (1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_7491_pp0_iter7_reg == 1'd0))) begin
        ap_condition_exit_pp0_iter7_stage2 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter7_stage2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_subdone) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to6 = 1'b1;
    end else begin
        ap_idle_pp0_0to6 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to7 = 1'b1;
    end else begin
        ap_idle_pp0_1to7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln112_7_reg_7702_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3168_p0 = reg_3205;
    end else if (((1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_7_reg_7702_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3168_p0 = d1_3_reg_7788;
    end else if (((1'd0 == and_ln112_1_reg_7677_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3168_p0 = d2_reg_7721;
    end else if (((1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_1_reg_7677_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3168_p0 = d1_reg_7716;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3168_p0 = tmp_18_reg_7609;
    end else if (((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage6) & (1'd1 == and_ln112_7_reg_7702) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3168_p0 = tmp_23_reg_7638;
    end else if (((1'd0 == and_ln112_7_reg_7702) & (icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3168_p0 = tmp_22_reg_7633;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3168_p0 = tmp_12_reg_7571;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3168_p0 = tmp_11_reg_7562;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3168_p0 = tmp_5_reg_7524;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3168_p0 = tmp_s_reg_7495;
    end else begin
        grp_fu_3168_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln112_7_reg_7702_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3168_p1 = sub87_3_reg_7798;
    end else if (((1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_7_reg_7702_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3168_p1 = reg_3205;
    end else if (((1'd0 == and_ln112_1_reg_7677_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3168_p1 = sub2_reg_7737;
    end else if (((1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_1_reg_7677_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3168_p1 = sub_reg_7732;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3168_p1 = tmp_19_reg_7614;
    end else if (((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage6) & (1'd1 == and_ln112_7_reg_7702) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3168_p1 = tmp_21_reg_7624;
    end else if (((1'd0 == and_ln112_7_reg_7702) & (icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3168_p1 = tmp_23_reg_7638;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3168_p1 = tmp_13_reg_7576;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3168_p1 = tmp_9_reg_7548;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3168_p1 = tmp_3_reg_7510;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3168_p1 = tmp_1_reg_7500;
    end else begin
        grp_fu_3168_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_7_reg_7702) & (icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage6_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage7_00001) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_3_reg_7682_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage0_00001) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_5_reg_7697_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln112_5_reg_7697_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0_00001) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln112_3_reg_7682_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage7_00001) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        grp_fu_3172_opcode = 2'd1;
    end else if (((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_7491_pp0_iter3_reg == 1'd1))) begin
        grp_fu_3172_opcode = 2'd0;
    end else begin
        grp_fu_3172_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3172_p0 = distance_1_reg_7897;
    end else if (((1'd0 == and_ln112_5_reg_7697_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3172_p0 = d2_2_reg_7767;
    end else if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_5_reg_7697_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3172_p0 = d1_2_reg_7762;
    end else if (((1'd0 == and_ln112_3_reg_7682_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3172_p0 = d2_1_reg_7747;
    end else if (((1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_3_reg_7682_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3172_p0 = d1_1_reg_7742;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3172_p0 = tmp_21_reg_7624;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3172_p0 = tmp_17_reg_7600;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3172_p0 = tmp_9_reg_7548;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3172_p0 = tmp_3_reg_7510;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3172_p0 = tmp_2_reg_7505;
    end else begin
        grp_fu_3172_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3172_p1 = mul_2_reg_7814_pp0_iter4_reg;
    end else if (((1'd0 == and_ln112_5_reg_7697_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3172_p1 = sub87_2_reg_7783;
    end else if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_5_reg_7697_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3172_p1 = sub75_2_reg_7778;
    end else if (((1'd0 == and_ln112_3_reg_7682_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3172_p1 = sub87_1_reg_7757;
    end else if (((1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_3_reg_7682_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_3172_p1 = sub75_1_reg_7752;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3172_p1 = tmp_23_reg_7638;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3172_p1 = tmp_15_reg_7586;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3172_p1 = tmp_11_reg_7562;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3172_p1 = tmp_5_reg_7524;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3172_p1 = tmp_3_reg_7510;
    end else begin
        grp_fu_3172_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_3176_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_7491_pp0_iter4_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_00001) & (icmp_ln1027_reg_7491_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_7491_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_3176_opcode = 2'd0;
    end else begin
        grp_fu_3176_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3176_p0 = distance_2_reg_7912;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3176_p0 = distance_reg_7824;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3176_p0 = mul_reg_7793;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3176_p0 = tmp_15_reg_7586;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3176_p0 = tmp_14_reg_7581;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3176_p0 = tmp_8_reg_7543;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3176_p0 = tmp_4_reg_7519;
    end else begin
        grp_fu_3176_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3176_p1 = mul_3_reg_7819_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3176_p1 = mul_1_reg_7803_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3176_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3176_p1 = tmp_17_reg_7600;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3176_p1 = tmp_15_reg_7586;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3176_p1 = tmp_9_reg_7548;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3176_p1 = tmp_5_reg_7524;
    end else begin
        grp_fu_3176_p1 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_fu_3180_p0 = tmp_20_reg_7619;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_3180_p0 = tmp_16_reg_7595;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_3180_p0 = tmp_10_reg_7557;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_3180_p0 = tmp_6_reg_7533;
        end else begin
            grp_fu_3180_p0 = 'bx;
        end
    end else begin
        grp_fu_3180_p0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage5) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
            grp_fu_3180_p1 = tmp_21_reg_7624;
        end else if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            grp_fu_3180_p1 = tmp_17_reg_7600;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            grp_fu_3180_p1 = tmp_11_reg_7562;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            grp_fu_3180_p1 = tmp_7_reg_7538;
        end else begin
            grp_fu_3180_p1 = 'bx;
        end
    end else begin
        grp_fu_3180_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3185_p0 = overlap_2_reg_7907;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3185_p0 = overlap_1_reg_7902;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3185_p0 = ov_16_reg_7867;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3185_p0 = d_3_reg_7808;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3185_p0 = d_2_reg_7772;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3185_p0 = d_1_reg_7726;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3185_p0 = reg_3199;
    end else begin
        grp_fu_3185_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_3185_p1 = ov_15_reg_7892;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3185_p1 = ov_11_reg_7882;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3185_p1 = ov_7_reg_7872;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3185_p1 = d_3_reg_7808;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3185_p1 = d_2_reg_7772;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3185_p1 = d_1_reg_7726;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3185_p1 = reg_3199;
    end else begin
        grp_fu_3185_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln1027_reg_7491_pp0_iter6_reg == 1'd1))) begin
        grp_fu_3189_opcode = 5'd2;
    end else if ((((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_00001) & (icmp_ln1027_reg_7491_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_00001) & (icmp_ln1027_reg_7491_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln1027_reg_7491_pp0_iter3_reg == 1'd1)))) begin
        grp_fu_3189_opcode = 5'd4;
    end else begin
        grp_fu_3189_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3189_p0 = sc_2_reg_7934;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3189_p0 = ov_14_reg_7860;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3189_p0 = ov_10_reg_7843;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3189_p0 = ov_2_reg_7829;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3189_p0 = tmp_15_reg_7586;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3189_p0 = tmp_3_reg_7510;
    end else begin
        grp_fu_3189_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_3189_p1 = tmp_score_fu_842;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_3189_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3189_p1 = tmp_17_reg_7600;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3189_p1 = tmp_5_reg_7524;
    end else begin
        grp_fu_3189_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_7491_pp0_iter6_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln1027_reg_7491_pp0_iter5_reg == 1'd1)))) begin
        grp_fu_3193_opcode = 5'd2;
    end else if ((((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_7491 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage0_00001) & (icmp_ln1027_reg_7491_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_3193_opcode = 5'd4;
    end else begin
        grp_fu_3193_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3193_p0 = tmp_score_4_reg_7959;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_3193_p0 = overlap_3_reg_7917;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_3193_p0 = ov_6_reg_7836;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3193_p0 = tmp_21_reg_7624;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3193_p0 = tmp_9_reg_7548;
    end else begin
        grp_fu_3193_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_3193_p1 = score_fu_830;
    end else if ((((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_3193_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_3193_p1 = tmp_23_reg_7638;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_3193_p1 = tmp_11_reg_7562;
    end else begin
        grp_fu_3193_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_7491_pp0_iter7_reg == 1'd0))) begin
        merge_1_out_ap_vld = 1'b1;
    end else begin
        merge_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_7491_pp0_iter7_reg == 1'd0))) begin
        merge_2_out_ap_vld = 1'b1;
    end else begin
        merge_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to7 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if (((ap_idle_pp0_0to6 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter7_stage2))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln112_1_fu_4253_p2 = (or_ln112_fu_4240_p2 & and_ln112_fu_4248_p2);

assign and_ln112_2_fu_4329_p2 = (tmp_31_reg_7672 & or_ln112_3_fu_4323_p2);

assign and_ln112_3_fu_4334_p2 = (or_ln112_2_fu_4305_p2 & and_ln112_2_fu_4329_p2);

assign and_ln112_4_fu_4410_p2 = (or_ln112_5_fu_4404_p2 & or_ln112_4_fu_4386_p2);

assign and_ln112_5_fu_4416_p2 = (tmp_36_reg_7687 & and_ln112_4_fu_4410_p2);

assign and_ln112_6_fu_4491_p2 = (or_ln112_7_fu_4485_p2 & or_ln112_6_fu_4467_p2);

assign and_ln112_7_fu_4497_p2 = (tmp_41_reg_7692 & and_ln112_6_fu_4491_p2);

assign and_ln112_fu_4248_p2 = (tmp_26_reg_7667 & or_ln112_1_fu_4244_p2);

assign and_ln116_1_fu_4657_p2 = (tmp_33_reg_7855 & or_ln116_1_fu_4651_p2);

assign and_ln116_2_fu_4704_p2 = (tmp_38_reg_7877 & or_ln116_2_fu_4698_p2);

assign and_ln116_3_fu_4751_p2 = (tmp_43_reg_7887 & or_ln116_3_fu_4745_p2);

assign and_ln116_fu_4610_p2 = (tmp_28_reg_7850 & or_ln116_fu_4604_p2);

assign and_ln122_fu_4798_p2 = (tmp_45_reg_7924 & or_ln122_fu_4792_p2);

assign and_ln130_1_fu_4912_p2 = (tmp_48_reg_7948 & and_ln130_fu_4906_p2);

assign and_ln130_fu_4906_p2 = (or_ln130_2_fu_4900_p2 & or_ln130_1_fu_4882_p2);

assign and_ln139_1_fu_5061_p2 = (tmp_51_reg_7988 & and_ln139_fu_5055_p2);

assign and_ln139_fu_5055_p2 = (or_ln139_2_fu_5049_p2 & or_ln139_1_fu_5031_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage7;

assign bitcast_ln112_1_fu_4199_p1 = tmp_5_reg_7524;

assign bitcast_ln112_2_fu_4259_p1 = tmp_9_reg_7548;

assign bitcast_ln112_3_fu_4276_p1 = tmp_11_reg_7562;

assign bitcast_ln112_4_fu_4340_p1 = tmp_15_reg_7586;

assign bitcast_ln112_5_fu_4357_p1 = tmp_17_reg_7600;

assign bitcast_ln112_6_fu_4421_p1 = tmp_21_reg_7624;

assign bitcast_ln112_7_fu_4438_p1 = tmp_23_reg_7638;

assign bitcast_ln112_fu_4182_p1 = tmp_3_reg_7510;

assign bitcast_ln116_1_fu_4622_p1 = ov_6_reg_7836;

assign bitcast_ln116_2_fu_4669_p1 = ov_10_reg_7843;

assign bitcast_ln116_3_fu_4716_p1 = ov_14_reg_7860;

assign bitcast_ln116_fu_4575_p1 = ov_2_reg_7829;

assign bitcast_ln122_fu_4763_p1 = overlap_3_reg_7917;

assign bitcast_ln126_fu_4803_p1 = distance_3_reg_7929;

assign bitcast_ln130_1_fu_4853_p1 = tmp_score_load_reg_7941;

assign bitcast_ln130_fu_4836_p1 = sc_2_reg_7934;

assign bitcast_ln139_1_fu_5002_p1 = score_load_reg_7967;

assign bitcast_ln139_fu_4985_p1 = tmp_score_4_reg_7959;

assign grp_fu_36416_p_ce = 1'b1;

assign grp_fu_36416_p_din0 = grp_fu_3168_p0;

assign grp_fu_36416_p_din1 = grp_fu_3168_p1;

assign grp_fu_36416_p_opcode = 2'd1;

assign grp_fu_36422_p_ce = 1'b1;

assign grp_fu_36422_p_din0 = grp_fu_3185_p0;

assign grp_fu_36422_p_din1 = grp_fu_3185_p1;

assign grp_fu_36427_p_ce = 1'b1;

assign grp_fu_36427_p_din0 = grp_fu_3189_p0;

assign grp_fu_36427_p_din1 = grp_fu_3189_p1;

assign grp_fu_36427_p_opcode = grp_fu_3189_opcode;

assign grp_fu_36432_p_ce = 1'b1;

assign grp_fu_36432_p_din0 = grp_fu_3193_p0;

assign grp_fu_36432_p_din1 = grp_fu_3193_p1;

assign grp_fu_36432_p_opcode = grp_fu_3193_opcode;

assign i_real_2_fu_4530_p3 = ((icmp_ln1019_fu_4502_p2[0:0] == 1'b1) ? i_real_fu_4507_p2 : i_real_3_reg_7476);

assign i_real_fu_4507_p2 = (i_real_3_reg_7476 + 32'd1);

assign icmp_ln1019_fu_4502_p2 = ((k_real_5_reg_7484 == 32'd31) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_3256_p2 = (($signed(merge_1_1_fu_834) < $signed(32'd31)) ? 1'b1 : 1'b0);

assign icmp_ln112_10_fu_4392_p2 = ((tmp_35_fu_4360_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_11_fu_4398_p2 = ((trunc_ln112_5_fu_4370_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_12_fu_4455_p2 = ((tmp_39_fu_4424_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_13_fu_4461_p2 = ((trunc_ln112_6_fu_4434_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_14_fu_4473_p2 = ((tmp_40_fu_4441_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_15_fu_4479_p2 = ((trunc_ln112_7_fu_4451_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_1_fu_4222_p2 = ((trunc_ln112_fu_4195_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_2_fu_4228_p2 = ((tmp_25_fu_4202_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_3_fu_4234_p2 = ((trunc_ln112_1_fu_4212_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_4_fu_4293_p2 = ((tmp_29_fu_4262_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_5_fu_4299_p2 = ((trunc_ln112_2_fu_4272_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_6_fu_4311_p2 = ((tmp_30_fu_4279_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_7_fu_4317_p2 = ((trunc_ln112_3_fu_4289_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_8_fu_4374_p2 = ((tmp_34_fu_4343_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_9_fu_4380_p2 = ((trunc_ln112_4_fu_4353_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_fu_4216_p2 = ((tmp_24_fu_4185_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_1_fu_4598_p2 = ((trunc_ln116_fu_4588_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_2_fu_4639_p2 = ((tmp_32_fu_4625_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_3_fu_4645_p2 = ((trunc_ln116_1_fu_4635_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_4_fu_4686_p2 = ((tmp_37_fu_4672_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_5_fu_4692_p2 = ((trunc_ln116_2_fu_4682_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_6_fu_4733_p2 = ((tmp_42_fu_4719_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_7_fu_4739_p2 = ((trunc_ln116_3_fu_4729_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_4592_p2 = ((tmp_27_fu_4578_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln122_1_fu_4786_p2 = ((trunc_ln122_fu_4776_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_4780_p2 = ((tmp_44_fu_4766_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_1_fu_4870_p2 = ((tmp_46_fu_4839_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_2_fu_4876_p2 = ((trunc_ln130_fu_4849_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_3_fu_4888_p2 = ((tmp_47_fu_4856_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_4_fu_4894_p2 = ((trunc_ln130_1_fu_4866_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_fu_4830_p2 = ((tmp_other_fu_846 == 32'd4294967295) ? 1'b1 : 1'b0);

assign icmp_ln139_1_fu_5025_p2 = ((trunc_ln139_fu_4998_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln139_2_fu_5037_p2 = ((tmp_50_fu_5005_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln139_3_fu_5043_p2 = ((trunc_ln139_1_fu_5015_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln139_fu_5019_p2 = ((tmp_49_fu_4988_p4 != 8'd255) ? 1'b1 : 1'b0);

assign k_real_2_fu_4517_p2 = (k_real_5_reg_7484 + 32'd1);

assign k_real_3_fu_4522_p3 = ((icmp_ln1019_fu_4502_p2[0:0] == 1'b1) ? k_real_fu_4512_p2 : k_real_2_fu_4517_p2);

assign k_real_fu_4512_p2 = (i_real_3_reg_7476 + 32'd2);

assign merge_1_6_fu_5084_p3 = ((or_ln139_fu_5066_p2[0:0] == 1'b1) ? i_real_3_reg_7476_pp0_iter7_reg : merge_1_4_reg_7975);

assign merge_1_7_fu_5102_p3 = ((icmp_ln1019_reg_7707_pp0_iter7_reg[0:0] == 1'b1) ? merge_1_6_fu_5084_p3 : merge_1_4_reg_7975);

assign merge_1_out = merge_1_fu_822[4:0];

assign merge_2_5_fu_5078_p3 = ((or_ln139_fu_5066_p2[0:0] == 1'b1) ? tmp_other_4_reg_7953 : merge_2_1_reg_7982);

assign merge_2_6_fu_5096_p3 = ((icmp_ln1019_reg_7707_pp0_iter7_reg[0:0] == 1'b1) ? merge_2_5_fu_5078_p3 : merge_2_1_reg_7982);

assign merge_2_out = merge_2_fu_826[4:0];

assign or_ln112_1_fu_4244_p2 = (icmp_ln112_3_reg_7662 | icmp_ln112_2_reg_7657);

assign or_ln112_2_fu_4305_p2 = (icmp_ln112_5_fu_4299_p2 | icmp_ln112_4_fu_4293_p2);

assign or_ln112_3_fu_4323_p2 = (icmp_ln112_7_fu_4317_p2 | icmp_ln112_6_fu_4311_p2);

assign or_ln112_4_fu_4386_p2 = (icmp_ln112_9_fu_4380_p2 | icmp_ln112_8_fu_4374_p2);

assign or_ln112_5_fu_4404_p2 = (icmp_ln112_11_fu_4398_p2 | icmp_ln112_10_fu_4392_p2);

assign or_ln112_6_fu_4467_p2 = (icmp_ln112_13_fu_4461_p2 | icmp_ln112_12_fu_4455_p2);

assign or_ln112_7_fu_4485_p2 = (icmp_ln112_15_fu_4479_p2 | icmp_ln112_14_fu_4473_p2);

assign or_ln112_fu_4240_p2 = (icmp_ln112_reg_7647 | icmp_ln112_1_reg_7652);

assign or_ln116_1_fu_4651_p2 = (icmp_ln116_3_fu_4645_p2 | icmp_ln116_2_fu_4639_p2);

assign or_ln116_2_fu_4698_p2 = (icmp_ln116_5_fu_4692_p2 | icmp_ln116_4_fu_4686_p2);

assign or_ln116_3_fu_4745_p2 = (icmp_ln116_7_fu_4739_p2 | icmp_ln116_6_fu_4733_p2);

assign or_ln116_fu_4604_p2 = (icmp_ln116_fu_4592_p2 | icmp_ln116_1_fu_4598_p2);

assign or_ln122_fu_4792_p2 = (icmp_ln122_fu_4780_p2 | icmp_ln122_1_fu_4786_p2);

assign or_ln130_1_fu_4882_p2 = (icmp_ln130_2_fu_4876_p2 | icmp_ln130_1_fu_4870_p2);

assign or_ln130_2_fu_4900_p2 = (icmp_ln130_4_fu_4894_p2 | icmp_ln130_3_fu_4888_p2);

assign or_ln130_fu_4917_p2 = (icmp_ln130_fu_4830_p2 | and_ln130_1_fu_4912_p2);

assign or_ln139_1_fu_5031_p2 = (icmp_ln139_fu_5019_p2 | icmp_ln139_1_fu_5025_p2);

assign or_ln139_2_fu_5049_p2 = (icmp_ln139_3_fu_5043_p2 | icmp_ln139_2_fu_5037_p2);

assign or_ln139_fu_5066_p2 = (tmp_fu_4978_p3 | and_ln139_1_fu_5061_p2);

assign ov_10_fu_4561_p3 = ((and_ln112_5_reg_7697_pp0_iter2_reg[0:0] == 1'b1) ? reg_3211 : reg_3211);

assign ov_11_fu_4709_p3 = ((and_ln116_2_fu_4704_p2[0:0] == 1'b1) ? 32'd0 : ov_10_reg_7843);

assign ov_14_fu_4568_p3 = ((and_ln112_7_reg_7702_pp0_iter2_reg[0:0] == 1'b1) ? reg_3199 : reg_3199);

assign ov_15_fu_4756_p3 = ((and_ln116_3_fu_4751_p2[0:0] == 1'b1) ? 32'd0 : ov_14_reg_7860);

assign ov_16_fu_4615_p3 = ((and_ln116_fu_4610_p2[0:0] == 1'b1) ? 32'd0 : ov_2_reg_7829);

assign ov_2_fu_4547_p3 = ((and_ln112_1_reg_7677_pp0_iter2_reg[0:0] == 1'b1) ? reg_3199 : reg_3199);

assign ov_6_fu_4554_p3 = ((and_ln112_3_reg_7682_pp0_iter2_reg[0:0] == 1'b1) ? reg_3211 : reg_3211);

assign ov_7_fu_4662_p3 = ((and_ln116_1_fu_4657_p2[0:0] == 1'b1) ? 32'd0 : ov_6_reg_7836);

assign sc_2_fu_4816_p3 = ((and_ln122_fu_4798_p2[0:0] == 1'b1) ? overlap_3_reg_7917 : sc_fu_4812_p1);

assign sc_fu_4812_p1 = xor_ln126_fu_4806_p2;

assign score_2_fu_5072_p3 = ((or_ln139_fu_5066_p2[0:0] == 1'b1) ? tmp_score_4_reg_7959 : score_load_reg_7967);

assign score_3_fu_5090_p3 = ((icmp_ln1019_reg_7707_pp0_iter7_reg[0:0] == 1'b1) ? score_2_fu_5072_p3 : score_load_reg_7967);

assign tmp_24_fu_4185_p4 = {{bitcast_ln112_fu_4182_p1[30:23]}};

assign tmp_25_fu_4202_p4 = {{bitcast_ln112_1_fu_4199_p1[30:23]}};

assign tmp_27_fu_4578_p4 = {{bitcast_ln116_fu_4575_p1[30:23]}};

assign tmp_29_fu_4262_p4 = {{bitcast_ln112_2_fu_4259_p1[30:23]}};

assign tmp_30_fu_4279_p4 = {{bitcast_ln112_3_fu_4276_p1[30:23]}};

assign tmp_32_fu_4625_p4 = {{bitcast_ln116_1_fu_4622_p1[30:23]}};

assign tmp_34_fu_4343_p4 = {{bitcast_ln112_4_fu_4340_p1[30:23]}};

assign tmp_35_fu_4360_p4 = {{bitcast_ln112_5_fu_4357_p1[30:23]}};

assign tmp_37_fu_4672_p4 = {{bitcast_ln116_2_fu_4669_p1[30:23]}};

assign tmp_39_fu_4424_p4 = {{bitcast_ln112_6_fu_4421_p1[30:23]}};

assign tmp_40_fu_4441_p4 = {{bitcast_ln112_7_fu_4438_p1[30:23]}};

assign tmp_42_fu_4719_p4 = {{bitcast_ln116_3_fu_4716_p1[30:23]}};

assign tmp_44_fu_4766_p4 = {{bitcast_ln122_fu_4763_p1[30:23]}};

assign tmp_46_fu_4839_p4 = {{bitcast_ln130_fu_4836_p1[30:23]}};

assign tmp_47_fu_4856_p4 = {{bitcast_ln130_1_fu_4853_p1[30:23]}};

assign tmp_49_fu_4988_p4 = {{bitcast_ln139_fu_4985_p1[30:23]}};

assign tmp_50_fu_5005_p4 = {{bitcast_ln139_1_fu_5002_p1[30:23]}};

assign tmp_fu_4978_p3 = merge_1_4_reg_7975[32'd31];

assign tmp_other_3_fu_4936_p3 = ((icmp_ln1019_reg_7707_pp0_iter6_reg[0:0] == 1'b1) ? 32'd4294967295 : tmp_other_4_reg_7953);

assign tmp_other_4_fu_4923_p3 = ((or_ln130_fu_4917_p2[0:0] == 1'b1) ? k_real_5_reg_7484_pp0_iter6_reg : tmp_other_fu_846);

assign tmp_score_3_fu_4942_p3 = ((icmp_ln1019_reg_7707_pp0_iter6_reg[0:0] == 1'b1) ? 32'd0 : tmp_score_4_reg_7959);

assign tmp_score_4_fu_4930_p3 = ((or_ln130_fu_4917_p2[0:0] == 1'b1) ? sc_2_reg_7934 : tmp_score_load_reg_7941);

assign trunc_ln104_1_fu_3304_p1 = k_real_4_fu_838[4:0];

assign trunc_ln104_fu_3262_p1 = merge_1_1_fu_834[4:0];

assign trunc_ln112_1_fu_4212_p1 = bitcast_ln112_1_fu_4199_p1[22:0];

assign trunc_ln112_2_fu_4272_p1 = bitcast_ln112_2_fu_4259_p1[22:0];

assign trunc_ln112_3_fu_4289_p1 = bitcast_ln112_3_fu_4276_p1[22:0];

assign trunc_ln112_4_fu_4353_p1 = bitcast_ln112_4_fu_4340_p1[22:0];

assign trunc_ln112_5_fu_4370_p1 = bitcast_ln112_5_fu_4357_p1[22:0];

assign trunc_ln112_6_fu_4434_p1 = bitcast_ln112_6_fu_4421_p1[22:0];

assign trunc_ln112_7_fu_4451_p1 = bitcast_ln112_7_fu_4438_p1[22:0];

assign trunc_ln112_fu_4195_p1 = bitcast_ln112_fu_4182_p1[22:0];

assign trunc_ln116_1_fu_4635_p1 = bitcast_ln116_1_fu_4622_p1[22:0];

assign trunc_ln116_2_fu_4682_p1 = bitcast_ln116_2_fu_4669_p1[22:0];

assign trunc_ln116_3_fu_4729_p1 = bitcast_ln116_3_fu_4716_p1[22:0];

assign trunc_ln116_fu_4588_p1 = bitcast_ln116_fu_4575_p1[22:0];

assign trunc_ln122_fu_4776_p1 = bitcast_ln122_fu_4763_p1[22:0];

assign trunc_ln130_1_fu_4866_p1 = bitcast_ln130_1_fu_4853_p1[22:0];

assign trunc_ln130_fu_4849_p1 = bitcast_ln130_fu_4836_p1[22:0];

assign trunc_ln139_1_fu_5015_p1 = bitcast_ln139_1_fu_5002_p1[22:0];

assign trunc_ln139_fu_4998_p1 = bitcast_ln139_fu_4985_p1[22:0];

assign xor_ln126_fu_4806_p2 = (bitcast_ln126_fu_4803_p1 ^ 32'd2147483648);

endmodule //FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1
