// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        regions_center_0_0_0,
        regions_center_1_0_0,
        regions_center_2_0_0,
        regions_center_3_0_0,
        regions_center_4_0_0,
        regions_center_5_0_0,
        regions_center_6_0_0,
        regions_center_7_0_0,
        regions_center_8_0_0,
        regions_center_9_0_0,
        regions_center_10_0_0,
        regions_center_11_0_0,
        regions_center_12_0_0,
        regions_center_13_0_0,
        regions_center_14_0_0,
        regions_center_15_0_0,
        regions_max_0_0_0,
        regions_max_1_0_0,
        regions_max_2_0_0,
        regions_max_3_0_0,
        regions_max_4_0_0,
        regions_max_5_0_0,
        regions_max_6_0_0,
        regions_max_7_0_0,
        regions_max_8_0_0,
        regions_max_9_0_0,
        regions_max_10_0_0,
        regions_max_11_0_0,
        regions_max_12_0_0,
        regions_max_13_0_0,
        regions_max_14_0_0,
        regions_max_15_0_0,
        regions_min_0_0_0,
        regions_min_1_0_0,
        regions_min_2_0_0,
        regions_min_3_0_0,
        regions_min_4_0_0,
        regions_min_5_0_0,
        regions_min_6_0_0,
        regions_min_7_0_0,
        regions_min_8_0_0,
        regions_min_9_0_0,
        regions_min_10_0_0,
        regions_min_11_0_0,
        regions_min_12_0_0,
        regions_min_13_0_0,
        regions_min_14_0_0,
        regions_min_15_0_0,
        regions_center_0_1_0,
        regions_center_1_1_0,
        regions_center_2_1_0,
        regions_center_3_1_0,
        regions_center_4_1_0,
        regions_center_5_1_0,
        regions_center_6_1_0,
        regions_center_7_1_0,
        regions_center_8_1_0,
        regions_center_9_1_0,
        regions_center_10_1_0,
        regions_center_11_1_0,
        regions_center_12_1_0,
        regions_center_13_1_0,
        regions_center_14_1_0,
        regions_center_15_1_0,
        regions_max_0_1_0,
        regions_max_1_1_0,
        regions_max_2_1_0,
        regions_max_3_1_0,
        regions_max_4_1_0,
        regions_max_5_1_0,
        regions_max_6_1_0,
        regions_max_7_1_0,
        regions_max_8_1_0,
        regions_max_9_1_0,
        regions_max_10_1_0,
        regions_max_11_1_0,
        regions_max_12_1_0,
        regions_max_13_1_0,
        regions_max_14_1_0,
        regions_max_15_1_0,
        regions_min_0_1_0,
        regions_min_1_1_0,
        regions_min_2_1_0,
        regions_min_3_1_0,
        regions_min_4_1_0,
        regions_min_5_1_0,
        regions_min_6_1_0,
        regions_min_7_1_0,
        regions_min_8_1_0,
        regions_min_9_1_0,
        regions_min_10_1_0,
        regions_min_11_1_0,
        regions_min_12_1_0,
        regions_min_13_1_0,
        regions_min_14_1_0,
        regions_min_15_1_0,
        regions_center_0_2_0,
        regions_center_1_2_0,
        regions_center_2_2_0,
        regions_center_3_2_0,
        regions_center_4_2_0,
        regions_center_5_2_0,
        regions_center_6_2_0,
        regions_center_7_2_0,
        regions_center_8_2_0,
        regions_center_9_2_0,
        regions_center_10_2_0,
        regions_center_11_2_0,
        regions_center_12_2_0,
        regions_center_13_2_0,
        regions_center_14_2_0,
        regions_center_15_2_0,
        regions_max_0_2_0,
        regions_max_1_2_0,
        regions_max_2_2_0,
        regions_max_3_2_0,
        regions_max_4_2_0,
        regions_max_5_2_0,
        regions_max_6_2_0,
        regions_max_7_2_0,
        regions_max_8_2_0,
        regions_max_9_2_0,
        regions_max_10_2_0,
        regions_max_11_2_0,
        regions_max_12_2_0,
        regions_max_13_2_0,
        regions_max_14_2_0,
        regions_max_15_2_0,
        regions_min_0_2_0,
        regions_min_1_2_0,
        regions_min_2_2_0,
        regions_min_3_2_0,
        regions_min_4_2_0,
        regions_min_5_2_0,
        regions_min_6_2_0,
        regions_min_7_2_0,
        regions_min_8_2_0,
        regions_min_9_2_0,
        regions_min_10_2_0,
        regions_min_11_2_0,
        regions_min_12_2_0,
        regions_min_13_2_0,
        regions_min_14_2_0,
        regions_min_15_2_0,
        regions_center_0_3_0,
        regions_center_1_3_0,
        regions_center_2_3_0,
        regions_center_3_3_0,
        regions_center_4_3_0,
        regions_center_5_3_0,
        regions_center_6_3_0,
        regions_center_7_3_0,
        regions_center_8_3_0,
        regions_center_9_3_0,
        regions_center_10_3_0,
        regions_center_11_3_0,
        regions_center_12_3_0,
        regions_center_13_3_0,
        regions_center_14_3_0,
        regions_center_15_3_0,
        regions_max_0_3_0,
        regions_max_1_3_0,
        regions_max_2_3_0,
        regions_max_3_3_0,
        regions_max_4_3_0,
        regions_max_5_3_0,
        regions_max_6_3_0,
        regions_max_7_3_0,
        regions_max_8_3_0,
        regions_max_9_3_0,
        regions_max_10_3_0,
        regions_max_11_3_0,
        regions_max_12_3_0,
        regions_max_13_3_0,
        regions_max_14_3_0,
        regions_max_15_3_0,
        regions_min_0_3_0,
        regions_min_1_3_0,
        regions_min_2_3_0,
        regions_min_3_3_0,
        regions_min_4_3_0,
        regions_min_5_3_0,
        regions_min_6_3_0,
        regions_min_7_3_0,
        regions_min_8_3_0,
        regions_min_9_3_0,
        regions_min_10_3_0,
        regions_min_11_3_0,
        regions_min_12_3_0,
        regions_min_13_3_0,
        regions_min_14_3_0,
        regions_min_15_3_0,
        regions_center_0_4_0,
        regions_center_1_4_0,
        regions_center_2_4_0,
        regions_center_3_4_0,
        regions_center_4_4_0,
        regions_center_5_4_0,
        regions_center_6_4_0,
        regions_center_7_4_0,
        regions_center_8_4_0,
        regions_center_9_4_0,
        regions_center_10_4_0,
        regions_center_11_4_0,
        regions_center_12_4_0,
        regions_center_13_4_0,
        regions_center_14_4_0,
        regions_center_15_4_0,
        regions_max_0_4_0,
        regions_max_1_4_0,
        regions_max_2_4_0,
        regions_max_3_4_0,
        regions_max_4_4_0,
        regions_max_5_4_0,
        regions_max_6_4_0,
        regions_max_7_4_0,
        regions_max_8_4_0,
        regions_max_9_4_0,
        regions_max_10_4_0,
        regions_max_11_4_0,
        regions_max_12_4_0,
        regions_max_13_4_0,
        regions_max_14_4_0,
        regions_max_15_4_0,
        regions_min_0_4_0,
        regions_min_1_4_0,
        regions_min_2_4_0,
        regions_min_3_4_0,
        regions_min_4_4_0,
        regions_min_5_4_0,
        regions_min_6_4_0,
        regions_min_7_4_0,
        regions_min_8_4_0,
        regions_min_9_4_0,
        regions_min_10_4_0,
        regions_min_11_4_0,
        regions_min_12_4_0,
        regions_min_13_4_0,
        regions_min_14_4_0,
        regions_min_15_4_0,
        regions_center_0_5_0,
        regions_center_1_5_0,
        regions_center_2_5_0,
        regions_center_3_5_0,
        regions_center_4_5_0,
        regions_center_5_5_0,
        regions_center_6_5_0,
        regions_center_7_5_0,
        regions_center_8_5_0,
        regions_center_9_5_0,
        regions_center_10_5_0,
        regions_center_11_5_0,
        regions_center_12_5_0,
        regions_center_13_5_0,
        regions_center_14_5_0,
        regions_center_15_5_0,
        regions_max_0_5_0,
        regions_max_1_5_0,
        regions_max_2_5_0,
        regions_max_3_5_0,
        regions_max_4_5_0,
        regions_max_5_5_0,
        regions_max_6_5_0,
        regions_max_7_5_0,
        regions_max_8_5_0,
        regions_max_9_5_0,
        regions_max_10_5_0,
        regions_max_11_5_0,
        regions_max_12_5_0,
        regions_max_13_5_0,
        regions_max_14_5_0,
        regions_max_15_5_0,
        regions_min_0_5_0,
        regions_min_1_5_0,
        regions_min_2_5_0,
        regions_min_3_5_0,
        regions_min_4_5_0,
        regions_min_5_5_0,
        regions_min_6_5_0,
        regions_min_7_5_0,
        regions_min_8_5_0,
        regions_min_9_5_0,
        regions_min_10_5_0,
        regions_min_11_5_0,
        regions_min_12_5_0,
        regions_min_13_5_0,
        regions_min_14_5_0,
        regions_min_15_5_0,
        merge_2_out,
        merge_2_out_ap_vld,
        merge_1_out,
        merge_1_out_ap_vld,
        grp_fu_18132_p_din0,
        grp_fu_18132_p_din1,
        grp_fu_18132_p_opcode,
        grp_fu_18132_p_dout0,
        grp_fu_18132_p_ce,
        grp_fu_18138_p_din0,
        grp_fu_18138_p_din1,
        grp_fu_18138_p_dout0,
        grp_fu_18138_p_ce,
        grp_fu_18143_p_din0,
        grp_fu_18143_p_din1,
        grp_fu_18143_p_opcode,
        grp_fu_18143_p_dout0,
        grp_fu_18143_p_ce,
        grp_fu_18148_p_din0,
        grp_fu_18148_p_din1,
        grp_fu_18148_p_opcode,
        grp_fu_18148_p_dout0,
        grp_fu_18148_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] regions_center_0_0_0;
input  [31:0] regions_center_1_0_0;
input  [31:0] regions_center_2_0_0;
input  [31:0] regions_center_3_0_0;
input  [31:0] regions_center_4_0_0;
input  [31:0] regions_center_5_0_0;
input  [31:0] regions_center_6_0_0;
input  [31:0] regions_center_7_0_0;
input  [31:0] regions_center_8_0_0;
input  [31:0] regions_center_9_0_0;
input  [31:0] regions_center_10_0_0;
input  [31:0] regions_center_11_0_0;
input  [31:0] regions_center_12_0_0;
input  [31:0] regions_center_13_0_0;
input  [31:0] regions_center_14_0_0;
input  [31:0] regions_center_15_0_0;
input  [31:0] regions_max_0_0_0;
input  [31:0] regions_max_1_0_0;
input  [31:0] regions_max_2_0_0;
input  [31:0] regions_max_3_0_0;
input  [31:0] regions_max_4_0_0;
input  [31:0] regions_max_5_0_0;
input  [31:0] regions_max_6_0_0;
input  [31:0] regions_max_7_0_0;
input  [31:0] regions_max_8_0_0;
input  [31:0] regions_max_9_0_0;
input  [31:0] regions_max_10_0_0;
input  [31:0] regions_max_11_0_0;
input  [31:0] regions_max_12_0_0;
input  [31:0] regions_max_13_0_0;
input  [31:0] regions_max_14_0_0;
input  [31:0] regions_max_15_0_0;
input  [31:0] regions_min_0_0_0;
input  [31:0] regions_min_1_0_0;
input  [31:0] regions_min_2_0_0;
input  [31:0] regions_min_3_0_0;
input  [31:0] regions_min_4_0_0;
input  [31:0] regions_min_5_0_0;
input  [31:0] regions_min_6_0_0;
input  [31:0] regions_min_7_0_0;
input  [31:0] regions_min_8_0_0;
input  [31:0] regions_min_9_0_0;
input  [31:0] regions_min_10_0_0;
input  [31:0] regions_min_11_0_0;
input  [31:0] regions_min_12_0_0;
input  [31:0] regions_min_13_0_0;
input  [31:0] regions_min_14_0_0;
input  [31:0] regions_min_15_0_0;
input  [31:0] regions_center_0_1_0;
input  [31:0] regions_center_1_1_0;
input  [31:0] regions_center_2_1_0;
input  [31:0] regions_center_3_1_0;
input  [31:0] regions_center_4_1_0;
input  [31:0] regions_center_5_1_0;
input  [31:0] regions_center_6_1_0;
input  [31:0] regions_center_7_1_0;
input  [31:0] regions_center_8_1_0;
input  [31:0] regions_center_9_1_0;
input  [31:0] regions_center_10_1_0;
input  [31:0] regions_center_11_1_0;
input  [31:0] regions_center_12_1_0;
input  [31:0] regions_center_13_1_0;
input  [31:0] regions_center_14_1_0;
input  [31:0] regions_center_15_1_0;
input  [31:0] regions_max_0_1_0;
input  [31:0] regions_max_1_1_0;
input  [31:0] regions_max_2_1_0;
input  [31:0] regions_max_3_1_0;
input  [31:0] regions_max_4_1_0;
input  [31:0] regions_max_5_1_0;
input  [31:0] regions_max_6_1_0;
input  [31:0] regions_max_7_1_0;
input  [31:0] regions_max_8_1_0;
input  [31:0] regions_max_9_1_0;
input  [31:0] regions_max_10_1_0;
input  [31:0] regions_max_11_1_0;
input  [31:0] regions_max_12_1_0;
input  [31:0] regions_max_13_1_0;
input  [31:0] regions_max_14_1_0;
input  [31:0] regions_max_15_1_0;
input  [31:0] regions_min_0_1_0;
input  [31:0] regions_min_1_1_0;
input  [31:0] regions_min_2_1_0;
input  [31:0] regions_min_3_1_0;
input  [31:0] regions_min_4_1_0;
input  [31:0] regions_min_5_1_0;
input  [31:0] regions_min_6_1_0;
input  [31:0] regions_min_7_1_0;
input  [31:0] regions_min_8_1_0;
input  [31:0] regions_min_9_1_0;
input  [31:0] regions_min_10_1_0;
input  [31:0] regions_min_11_1_0;
input  [31:0] regions_min_12_1_0;
input  [31:0] regions_min_13_1_0;
input  [31:0] regions_min_14_1_0;
input  [31:0] regions_min_15_1_0;
input  [31:0] regions_center_0_2_0;
input  [31:0] regions_center_1_2_0;
input  [31:0] regions_center_2_2_0;
input  [31:0] regions_center_3_2_0;
input  [31:0] regions_center_4_2_0;
input  [31:0] regions_center_5_2_0;
input  [31:0] regions_center_6_2_0;
input  [31:0] regions_center_7_2_0;
input  [31:0] regions_center_8_2_0;
input  [31:0] regions_center_9_2_0;
input  [31:0] regions_center_10_2_0;
input  [31:0] regions_center_11_2_0;
input  [31:0] regions_center_12_2_0;
input  [31:0] regions_center_13_2_0;
input  [31:0] regions_center_14_2_0;
input  [31:0] regions_center_15_2_0;
input  [31:0] regions_max_0_2_0;
input  [31:0] regions_max_1_2_0;
input  [31:0] regions_max_2_2_0;
input  [31:0] regions_max_3_2_0;
input  [31:0] regions_max_4_2_0;
input  [31:0] regions_max_5_2_0;
input  [31:0] regions_max_6_2_0;
input  [31:0] regions_max_7_2_0;
input  [31:0] regions_max_8_2_0;
input  [31:0] regions_max_9_2_0;
input  [31:0] regions_max_10_2_0;
input  [31:0] regions_max_11_2_0;
input  [31:0] regions_max_12_2_0;
input  [31:0] regions_max_13_2_0;
input  [31:0] regions_max_14_2_0;
input  [31:0] regions_max_15_2_0;
input  [31:0] regions_min_0_2_0;
input  [31:0] regions_min_1_2_0;
input  [31:0] regions_min_2_2_0;
input  [31:0] regions_min_3_2_0;
input  [31:0] regions_min_4_2_0;
input  [31:0] regions_min_5_2_0;
input  [31:0] regions_min_6_2_0;
input  [31:0] regions_min_7_2_0;
input  [31:0] regions_min_8_2_0;
input  [31:0] regions_min_9_2_0;
input  [31:0] regions_min_10_2_0;
input  [31:0] regions_min_11_2_0;
input  [31:0] regions_min_12_2_0;
input  [31:0] regions_min_13_2_0;
input  [31:0] regions_min_14_2_0;
input  [31:0] regions_min_15_2_0;
input  [31:0] regions_center_0_3_0;
input  [31:0] regions_center_1_3_0;
input  [31:0] regions_center_2_3_0;
input  [31:0] regions_center_3_3_0;
input  [31:0] regions_center_4_3_0;
input  [31:0] regions_center_5_3_0;
input  [31:0] regions_center_6_3_0;
input  [31:0] regions_center_7_3_0;
input  [31:0] regions_center_8_3_0;
input  [31:0] regions_center_9_3_0;
input  [31:0] regions_center_10_3_0;
input  [31:0] regions_center_11_3_0;
input  [31:0] regions_center_12_3_0;
input  [31:0] regions_center_13_3_0;
input  [31:0] regions_center_14_3_0;
input  [31:0] regions_center_15_3_0;
input  [31:0] regions_max_0_3_0;
input  [31:0] regions_max_1_3_0;
input  [31:0] regions_max_2_3_0;
input  [31:0] regions_max_3_3_0;
input  [31:0] regions_max_4_3_0;
input  [31:0] regions_max_5_3_0;
input  [31:0] regions_max_6_3_0;
input  [31:0] regions_max_7_3_0;
input  [31:0] regions_max_8_3_0;
input  [31:0] regions_max_9_3_0;
input  [31:0] regions_max_10_3_0;
input  [31:0] regions_max_11_3_0;
input  [31:0] regions_max_12_3_0;
input  [31:0] regions_max_13_3_0;
input  [31:0] regions_max_14_3_0;
input  [31:0] regions_max_15_3_0;
input  [31:0] regions_min_0_3_0;
input  [31:0] regions_min_1_3_0;
input  [31:0] regions_min_2_3_0;
input  [31:0] regions_min_3_3_0;
input  [31:0] regions_min_4_3_0;
input  [31:0] regions_min_5_3_0;
input  [31:0] regions_min_6_3_0;
input  [31:0] regions_min_7_3_0;
input  [31:0] regions_min_8_3_0;
input  [31:0] regions_min_9_3_0;
input  [31:0] regions_min_10_3_0;
input  [31:0] regions_min_11_3_0;
input  [31:0] regions_min_12_3_0;
input  [31:0] regions_min_13_3_0;
input  [31:0] regions_min_14_3_0;
input  [31:0] regions_min_15_3_0;
input  [31:0] regions_center_0_4_0;
input  [31:0] regions_center_1_4_0;
input  [31:0] regions_center_2_4_0;
input  [31:0] regions_center_3_4_0;
input  [31:0] regions_center_4_4_0;
input  [31:0] regions_center_5_4_0;
input  [31:0] regions_center_6_4_0;
input  [31:0] regions_center_7_4_0;
input  [31:0] regions_center_8_4_0;
input  [31:0] regions_center_9_4_0;
input  [31:0] regions_center_10_4_0;
input  [31:0] regions_center_11_4_0;
input  [31:0] regions_center_12_4_0;
input  [31:0] regions_center_13_4_0;
input  [31:0] regions_center_14_4_0;
input  [31:0] regions_center_15_4_0;
input  [31:0] regions_max_0_4_0;
input  [31:0] regions_max_1_4_0;
input  [31:0] regions_max_2_4_0;
input  [31:0] regions_max_3_4_0;
input  [31:0] regions_max_4_4_0;
input  [31:0] regions_max_5_4_0;
input  [31:0] regions_max_6_4_0;
input  [31:0] regions_max_7_4_0;
input  [31:0] regions_max_8_4_0;
input  [31:0] regions_max_9_4_0;
input  [31:0] regions_max_10_4_0;
input  [31:0] regions_max_11_4_0;
input  [31:0] regions_max_12_4_0;
input  [31:0] regions_max_13_4_0;
input  [31:0] regions_max_14_4_0;
input  [31:0] regions_max_15_4_0;
input  [31:0] regions_min_0_4_0;
input  [31:0] regions_min_1_4_0;
input  [31:0] regions_min_2_4_0;
input  [31:0] regions_min_3_4_0;
input  [31:0] regions_min_4_4_0;
input  [31:0] regions_min_5_4_0;
input  [31:0] regions_min_6_4_0;
input  [31:0] regions_min_7_4_0;
input  [31:0] regions_min_8_4_0;
input  [31:0] regions_min_9_4_0;
input  [31:0] regions_min_10_4_0;
input  [31:0] regions_min_11_4_0;
input  [31:0] regions_min_12_4_0;
input  [31:0] regions_min_13_4_0;
input  [31:0] regions_min_14_4_0;
input  [31:0] regions_min_15_4_0;
input  [31:0] regions_center_0_5_0;
input  [31:0] regions_center_1_5_0;
input  [31:0] regions_center_2_5_0;
input  [31:0] regions_center_3_5_0;
input  [31:0] regions_center_4_5_0;
input  [31:0] regions_center_5_5_0;
input  [31:0] regions_center_6_5_0;
input  [31:0] regions_center_7_5_0;
input  [31:0] regions_center_8_5_0;
input  [31:0] regions_center_9_5_0;
input  [31:0] regions_center_10_5_0;
input  [31:0] regions_center_11_5_0;
input  [31:0] regions_center_12_5_0;
input  [31:0] regions_center_13_5_0;
input  [31:0] regions_center_14_5_0;
input  [31:0] regions_center_15_5_0;
input  [31:0] regions_max_0_5_0;
input  [31:0] regions_max_1_5_0;
input  [31:0] regions_max_2_5_0;
input  [31:0] regions_max_3_5_0;
input  [31:0] regions_max_4_5_0;
input  [31:0] regions_max_5_5_0;
input  [31:0] regions_max_6_5_0;
input  [31:0] regions_max_7_5_0;
input  [31:0] regions_max_8_5_0;
input  [31:0] regions_max_9_5_0;
input  [31:0] regions_max_10_5_0;
input  [31:0] regions_max_11_5_0;
input  [31:0] regions_max_12_5_0;
input  [31:0] regions_max_13_5_0;
input  [31:0] regions_max_14_5_0;
input  [31:0] regions_max_15_5_0;
input  [31:0] regions_min_0_5_0;
input  [31:0] regions_min_1_5_0;
input  [31:0] regions_min_2_5_0;
input  [31:0] regions_min_3_5_0;
input  [31:0] regions_min_4_5_0;
input  [31:0] regions_min_5_5_0;
input  [31:0] regions_min_6_5_0;
input  [31:0] regions_min_7_5_0;
input  [31:0] regions_min_8_5_0;
input  [31:0] regions_min_9_5_0;
input  [31:0] regions_min_10_5_0;
input  [31:0] regions_min_11_5_0;
input  [31:0] regions_min_12_5_0;
input  [31:0] regions_min_13_5_0;
input  [31:0] regions_min_14_5_0;
input  [31:0] regions_min_15_5_0;
output  [3:0] merge_2_out;
output   merge_2_out_ap_vld;
output  [3:0] merge_1_out;
output   merge_1_out_ap_vld;
output  [31:0] grp_fu_18132_p_din0;
output  [31:0] grp_fu_18132_p_din1;
output  [0:0] grp_fu_18132_p_opcode;
input  [31:0] grp_fu_18132_p_dout0;
output   grp_fu_18132_p_ce;
output  [31:0] grp_fu_18138_p_din0;
output  [31:0] grp_fu_18138_p_din1;
input  [31:0] grp_fu_18138_p_dout0;
output   grp_fu_18138_p_ce;
output  [31:0] grp_fu_18143_p_din0;
output  [31:0] grp_fu_18143_p_din1;
output  [4:0] grp_fu_18143_p_opcode;
input  [0:0] grp_fu_18143_p_dout0;
output   grp_fu_18143_p_ce;
output  [31:0] grp_fu_18148_p_din0;
output  [31:0] grp_fu_18148_p_din1;
output  [4:0] grp_fu_18148_p_opcode;
input  [0:0] grp_fu_18148_p_dout0;
output   grp_fu_18148_p_ce;

reg ap_idle;
reg merge_2_out_ap_vld;
reg merge_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state16_pp0_stage7_iter1;
wire    ap_block_state24_pp0_stage7_iter2;
wire    ap_block_state32_pp0_stage7_iter3;
wire    ap_block_state40_pp0_stage7_iter4;
wire    ap_block_state48_pp0_stage7_iter5;
wire    ap_block_state56_pp0_stage7_iter6;
wire    ap_block_state64_pp0_stage7_iter7;
wire    ap_block_state72_pp0_stage7_iter8;
wire    ap_block_state80_pp0_stage7_iter9;
wire    ap_block_pp0_stage7_subdone;
reg   [0:0] icmp_ln1027_reg_6297;
reg    ap_condition_exit_pp0_iter0_stage7;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [31:0] grp_fu_2418_p2;
reg   [31:0] reg_2445;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state10_pp0_stage1_iter1;
wire    ap_block_state18_pp0_stage1_iter2;
wire    ap_block_state26_pp0_stage1_iter3;
wire    ap_block_state34_pp0_stage1_iter4;
wire    ap_block_state42_pp0_stage1_iter5;
wire    ap_block_state50_pp0_stage1_iter6;
wire    ap_block_state58_pp0_stage1_iter7;
wire    ap_block_state66_pp0_stage1_iter8;
wire    ap_block_state74_pp0_stage1_iter9;
wire    ap_block_state82_pp0_stage1_iter10;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state15_pp0_stage6_iter1;
wire    ap_block_state23_pp0_stage6_iter2;
wire    ap_block_state31_pp0_stage6_iter3;
wire    ap_block_state39_pp0_stage6_iter4;
wire    ap_block_state47_pp0_stage6_iter5;
wire    ap_block_state55_pp0_stage6_iter6;
wire    ap_block_state63_pp0_stage6_iter7;
wire    ap_block_state71_pp0_stage6_iter8;
wire    ap_block_state79_pp0_stage6_iter9;
wire    ap_block_pp0_stage6_11001;
reg   [0:0] icmp_ln1027_reg_6297_pp0_iter2_reg;
reg   [0:0] and_ln112_5_reg_6610;
reg   [0:0] and_ln112_5_reg_6610_pp0_iter2_reg;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_state17_pp0_stage0_iter2;
wire    ap_block_state25_pp0_stage0_iter3;
wire    ap_block_state33_pp0_stage0_iter4;
wire    ap_block_state41_pp0_stage0_iter5;
wire    ap_block_state49_pp0_stage0_iter6;
wire    ap_block_state57_pp0_stage0_iter7;
wire    ap_block_state65_pp0_stage0_iter8;
wire    ap_block_state73_pp0_stage0_iter9;
wire    ap_block_state81_pp0_stage0_iter10;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln1027_reg_6297_pp0_iter7_reg;
reg   [31:0] reg_2451;
wire    ap_block_pp0_stage7_11001;
reg   [0:0] icmp_ln1027_reg_6297_pp0_iter1_reg;
reg   [0:0] and_ln112_11_reg_6665;
wire   [31:0] grp_fu_2410_p2;
reg   [31:0] reg_2456;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state13_pp0_stage4_iter1;
wire    ap_block_state21_pp0_stage4_iter2;
wire    ap_block_state29_pp0_stage4_iter3;
wire    ap_block_state37_pp0_stage4_iter4;
wire    ap_block_state45_pp0_stage4_iter5;
wire    ap_block_state53_pp0_stage4_iter6;
wire    ap_block_state61_pp0_stage4_iter7;
wire    ap_block_state69_pp0_stage4_iter8;
wire    ap_block_state77_pp0_stage4_iter9;
wire    ap_block_pp0_stage4_11001;
reg   [0:0] and_ln112_1_reg_6552;
reg   [0:0] and_ln112_1_reg_6552_pp0_iter1_reg;
reg   [0:0] and_ln112_9_reg_6645;
reg   [0:0] and_ln112_9_reg_6645_pp0_iter2_reg;
wire   [31:0] grp_fu_2414_p2;
reg   [31:0] reg_2460;
reg   [0:0] and_ln112_3_reg_6557;
reg   [0:0] and_ln112_3_reg_6557_pp0_iter1_reg;
wire   [31:0] grp_fu_2406_p2;
reg   [31:0] reg_2464;
reg   [0:0] and_ln112_7_reg_6615;
reg   [0:0] and_ln112_7_reg_6615_pp0_iter2_reg;
reg   [31:0] reg_2468;
reg   [0:0] and_ln112_11_reg_6665_pp0_iter2_reg;
reg   [31:0] reg_2472;
reg   [0:0] icmp_ln1027_reg_6297_pp0_iter3_reg;
reg   [31:0] i_real_3_reg_6282;
reg   [31:0] i_real_3_reg_6282_pp0_iter1_reg;
reg   [31:0] i_real_3_reg_6282_pp0_iter2_reg;
reg   [31:0] i_real_3_reg_6282_pp0_iter3_reg;
reg   [31:0] i_real_3_reg_6282_pp0_iter4_reg;
reg   [31:0] i_real_3_reg_6282_pp0_iter5_reg;
reg   [31:0] i_real_3_reg_6282_pp0_iter6_reg;
reg   [31:0] i_real_3_reg_6282_pp0_iter7_reg;
reg   [31:0] i_real_3_reg_6282_pp0_iter8_reg;
reg   [31:0] i_real_3_reg_6282_pp0_iter9_reg;
reg   [31:0] k_real_5_reg_6290;
reg   [31:0] k_real_5_reg_6290_pp0_iter1_reg;
reg   [31:0] k_real_5_reg_6290_pp0_iter2_reg;
reg   [31:0] k_real_5_reg_6290_pp0_iter3_reg;
reg   [31:0] k_real_5_reg_6290_pp0_iter4_reg;
reg   [31:0] k_real_5_reg_6290_pp0_iter5_reg;
reg   [31:0] k_real_5_reg_6290_pp0_iter6_reg;
reg   [31:0] k_real_5_reg_6290_pp0_iter7_reg;
reg   [31:0] k_real_5_reg_6290_pp0_iter8_reg;
wire   [0:0] icmp_ln1027_fu_2519_p2;
reg   [0:0] icmp_ln1027_reg_6297_pp0_iter4_reg;
reg   [0:0] icmp_ln1027_reg_6297_pp0_iter5_reg;
reg   [0:0] icmp_ln1027_reg_6297_pp0_iter6_reg;
reg   [0:0] icmp_ln1027_reg_6297_pp0_iter8_reg;
reg   [0:0] icmp_ln1027_reg_6297_pp0_iter9_reg;
wire   [3:0] trunc_ln104_fu_2525_p1;
reg   [3:0] trunc_ln104_reg_6301;
wire   [31:0] tmp_s_fu_2529_p18;
reg   [31:0] tmp_s_reg_6317;
wire   [3:0] trunc_ln104_1_fu_2551_p1;
reg   [3:0] trunc_ln104_1_reg_6322;
wire   [31:0] tmp_5_fu_2555_p18;
reg   [31:0] tmp_5_reg_6338;
wire   [31:0] tmp_6_fu_2577_p18;
reg   [31:0] tmp_6_reg_6343;
wire   [31:0] tmp_7_fu_2599_p18;
reg   [31:0] tmp_7_reg_6348;
wire   [31:0] tmp_8_fu_2621_p18;
reg   [31:0] tmp_8_reg_6357;
wire   [31:0] tmp_9_fu_2643_p18;
reg   [31:0] tmp_9_reg_6362;
wire   [31:0] tmp_1_fu_2665_p18;
reg   [31:0] tmp_1_reg_6371;
wire   [31:0] tmp_2_fu_2687_p18;
reg   [31:0] tmp_2_reg_6376;
wire   [31:0] tmp_4_fu_2709_p18;
reg   [31:0] tmp_4_reg_6381;
wire   [31:0] tmp_11_fu_2731_p18;
reg   [31:0] tmp_11_reg_6390;
wire   [31:0] tmp_12_fu_2753_p18;
reg   [31:0] tmp_12_reg_6399;
wire   [31:0] tmp_13_fu_2775_p18;
reg   [31:0] tmp_13_reg_6404;
wire   [31:0] tmp_3_fu_2797_p18;
reg   [31:0] tmp_3_reg_6409;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state11_pp0_stage2_iter1;
wire    ap_block_state19_pp0_stage2_iter2;
wire    ap_block_state27_pp0_stage2_iter3;
wire    ap_block_state35_pp0_stage2_iter4;
wire    ap_block_state43_pp0_stage2_iter5;
wire    ap_block_state51_pp0_stage2_iter6;
wire    ap_block_state59_pp0_stage2_iter7;
wire    ap_block_state67_pp0_stage2_iter8;
wire    ap_block_state75_pp0_stage2_iter9;
wire    ap_block_pp0_stage2_11001;
wire   [31:0] tmp_10_fu_2818_p18;
reg   [31:0] tmp_10_reg_6414;
wire   [31:0] tmp_14_fu_2839_p18;
reg   [31:0] tmp_14_reg_6419;
wire   [31:0] tmp_15_fu_2860_p18;
reg   [31:0] tmp_15_reg_6424;
wire   [31:0] tmp_16_fu_2881_p18;
reg   [31:0] tmp_16_reg_6433;
wire   [31:0] tmp_17_fu_2902_p18;
reg   [31:0] tmp_17_reg_6438;
wire   [31:0] tmp_21_fu_2923_p18;
reg   [31:0] tmp_21_reg_6447;
wire   [31:0] tmp_23_fu_2944_p18;
reg   [31:0] tmp_23_reg_6456;
wire   [0:0] icmp_ln112_fu_2999_p2;
reg   [0:0] icmp_ln112_reg_6465;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state12_pp0_stage3_iter1;
wire    ap_block_state20_pp0_stage3_iter2;
wire    ap_block_state28_pp0_stage3_iter3;
wire    ap_block_state36_pp0_stage3_iter4;
wire    ap_block_state44_pp0_stage3_iter5;
wire    ap_block_state52_pp0_stage3_iter6;
wire    ap_block_state60_pp0_stage3_iter7;
wire    ap_block_state68_pp0_stage3_iter8;
wire    ap_block_state76_pp0_stage3_iter9;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] icmp_ln112_1_fu_3005_p2;
reg   [0:0] icmp_ln112_1_reg_6470;
wire   [0:0] icmp_ln112_2_fu_3011_p2;
reg   [0:0] icmp_ln112_2_reg_6475;
wire   [0:0] icmp_ln112_3_fu_3017_p2;
reg   [0:0] icmp_ln112_3_reg_6480;
reg   [0:0] tmp_38_reg_6485;
wire   [0:0] icmp_ln112_4_fu_3057_p2;
reg   [0:0] icmp_ln112_4_reg_6490;
wire   [0:0] icmp_ln112_5_fu_3063_p2;
reg   [0:0] icmp_ln112_5_reg_6495;
wire   [0:0] icmp_ln112_6_fu_3069_p2;
reg   [0:0] icmp_ln112_6_reg_6500;
wire   [0:0] icmp_ln112_7_fu_3075_p2;
reg   [0:0] icmp_ln112_7_reg_6505;
reg   [0:0] tmp_43_reg_6510;
wire   [31:0] tmp_18_fu_3081_p18;
reg   [31:0] tmp_18_reg_6515;
wire   [31:0] tmp_19_fu_3102_p18;
reg   [31:0] tmp_19_reg_6520;
wire   [31:0] tmp_20_fu_3123_p18;
reg   [31:0] tmp_20_reg_6525;
wire   [31:0] tmp_22_fu_3144_p18;
reg   [31:0] tmp_22_reg_6530;
wire   [31:0] tmp_27_fu_3165_p18;
reg   [31:0] tmp_27_reg_6535;
wire   [31:0] tmp_29_fu_3186_p18;
reg   [31:0] tmp_29_reg_6544;
wire   [0:0] and_ln112_1_fu_3220_p2;
reg   [0:0] and_ln112_1_reg_6552_pp0_iter2_reg;
wire   [0:0] and_ln112_3_fu_3239_p2;
reg   [0:0] and_ln112_3_reg_6557_pp0_iter2_reg;
wire   [0:0] icmp_ln112_8_fu_3279_p2;
reg   [0:0] icmp_ln112_8_reg_6562;
wire   [0:0] icmp_ln112_9_fu_3285_p2;
reg   [0:0] icmp_ln112_9_reg_6567;
wire   [0:0] icmp_ln112_10_fu_3291_p2;
reg   [0:0] icmp_ln112_10_reg_6572;
wire   [0:0] icmp_ln112_11_fu_3297_p2;
reg   [0:0] icmp_ln112_11_reg_6577;
reg   [0:0] tmp_48_reg_6582;
reg   [0:0] tmp_53_reg_6587;
wire   [31:0] tmp_33_fu_3303_p18;
reg   [31:0] tmp_33_reg_6592;
wire   [31:0] tmp_35_fu_3324_p18;
reg   [31:0] tmp_35_reg_6601;
wire   [0:0] and_ln112_5_fu_3359_p2;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state14_pp0_stage5_iter1;
wire    ap_block_state22_pp0_stage5_iter2;
wire    ap_block_state30_pp0_stage5_iter3;
wire    ap_block_state38_pp0_stage5_iter4;
wire    ap_block_state46_pp0_stage5_iter5;
wire    ap_block_state54_pp0_stage5_iter6;
wire    ap_block_state62_pp0_stage5_iter7;
wire    ap_block_state70_pp0_stage5_iter8;
wire    ap_block_state78_pp0_stage5_iter9;
wire    ap_block_pp0_stage5_11001;
reg   [0:0] and_ln112_5_reg_6610_pp0_iter1_reg;
wire   [0:0] and_ln112_7_fu_3440_p2;
reg   [0:0] and_ln112_7_reg_6615_pp0_iter1_reg;
wire   [31:0] tmp_26_fu_3445_p18;
reg   [31:0] tmp_26_reg_6620;
wire   [31:0] tmp_28_fu_3466_p18;
reg   [31:0] tmp_28_reg_6625;
reg   [0:0] tmp_58_reg_6630;
wire   [31:0] tmp_24_fu_3487_p18;
reg   [31:0] tmp_24_reg_6635;
wire   [31:0] tmp_25_fu_3508_p18;
reg   [31:0] tmp_25_reg_6640;
wire   [0:0] and_ln112_9_fu_3605_p2;
reg   [0:0] and_ln112_9_reg_6645_pp0_iter1_reg;
wire   [31:0] tmp_32_fu_3610_p18;
reg   [31:0] tmp_32_reg_6650;
wire   [31:0] tmp_34_fu_3631_p18;
reg   [31:0] tmp_34_reg_6655;
reg   [0:0] tmp_63_reg_6660;
wire   [0:0] and_ln112_11_fu_3728_p2;
reg   [0:0] and_ln112_11_reg_6665_pp0_iter1_reg;
wire   [31:0] tmp_30_fu_3733_p18;
reg   [31:0] tmp_30_reg_6670;
wire   [31:0] tmp_31_fu_3754_p18;
reg   [31:0] tmp_31_reg_6675;
wire   [0:0] icmp_ln1019_fu_3775_p2;
reg   [0:0] icmp_ln1019_reg_6680;
reg   [0:0] icmp_ln1019_reg_6680_pp0_iter2_reg;
reg   [0:0] icmp_ln1019_reg_6680_pp0_iter3_reg;
reg   [0:0] icmp_ln1019_reg_6680_pp0_iter4_reg;
reg   [0:0] icmp_ln1019_reg_6680_pp0_iter5_reg;
reg   [0:0] icmp_ln1019_reg_6680_pp0_iter6_reg;
reg   [0:0] icmp_ln1019_reg_6680_pp0_iter7_reg;
reg   [0:0] icmp_ln1019_reg_6680_pp0_iter8_reg;
reg   [0:0] icmp_ln1019_reg_6680_pp0_iter9_reg;
reg   [0:0] icmp_ln1019_reg_6680_pp0_iter10_reg;
reg   [31:0] d_reg_6689;
reg   [31:0] d1_reg_6695;
reg   [31:0] d2_reg_6700;
reg   [31:0] sub_reg_6705;
wire   [31:0] grp_fu_2422_p2;
reg   [31:0] d_2_reg_6710;
reg   [31:0] sub2_reg_6716;
reg   [31:0] d1_1_reg_6721;
reg   [31:0] d2_1_reg_6726;
reg   [31:0] sub75_1_reg_6731;
reg   [31:0] sub87_1_reg_6736;
reg   [31:0] d1_2_reg_6741;
reg   [31:0] d2_2_reg_6746;
reg   [31:0] sub75_2_reg_6751;
reg   [31:0] sub87_2_reg_6756;
reg   [31:0] d_3_reg_6761;
reg   [31:0] d1_3_reg_6767;
reg   [31:0] d2_3_reg_6772;
reg   [31:0] sub75_3_reg_6777;
reg   [31:0] sub87_3_reg_6782;
reg   [31:0] mul_reg_6787;
wire   [31:0] grp_fu_2431_p2;
reg   [31:0] mul_1_reg_6792;
reg   [31:0] mul_1_reg_6792_pp0_iter2_reg;
reg   [31:0] d1_4_reg_6797;
reg   [31:0] d2_4_reg_6802;
reg   [31:0] sub75_4_reg_6807;
reg   [31:0] mul_2_reg_6812;
reg   [31:0] mul_2_reg_6812_pp0_iter2_reg;
reg   [31:0] d_4_reg_6817;
reg   [31:0] sub87_4_reg_6823;
reg   [31:0] d1_5_reg_6828;
reg   [31:0] d2_5_reg_6833;
reg   [31:0] mul_3_reg_6838;
reg   [31:0] mul_3_reg_6838_pp0_iter2_reg;
reg   [31:0] mul_3_reg_6838_pp0_iter3_reg;
reg   [31:0] mul_3_reg_6838_pp0_iter4_reg;
reg   [31:0] d_5_reg_6843;
reg   [31:0] mul_4_reg_6849;
reg   [31:0] mul_4_reg_6849_pp0_iter3_reg;
reg   [31:0] mul_4_reg_6849_pp0_iter4_reg;
reg   [31:0] mul_4_reg_6849_pp0_iter5_reg;
reg   [31:0] distance_reg_6854;
wire   [31:0] ov_2_fu_3820_p3;
reg   [31:0] ov_2_reg_6859;
wire   [31:0] ov_6_fu_3827_p3;
reg   [31:0] ov_6_reg_6866;
reg   [31:0] mul_5_reg_6873;
reg   [31:0] mul_5_reg_6873_pp0_iter3_reg;
reg   [31:0] mul_5_reg_6873_pp0_iter4_reg;
reg   [31:0] mul_5_reg_6873_pp0_iter5_reg;
reg   [31:0] mul_5_reg_6873_pp0_iter6_reg;
reg   [0:0] tmp_40_reg_6878;
reg   [0:0] tmp_45_reg_6883;
wire   [31:0] ov_10_fu_3834_p3;
reg   [31:0] ov_10_reg_6888;
wire   [31:0] ov_24_fu_3881_p3;
reg   [31:0] ov_24_reg_6895;
wire   [31:0] ov_7_fu_3928_p3;
reg   [31:0] ov_7_reg_6900;
wire   [31:0] ov_14_fu_3935_p3;
reg   [31:0] ov_14_reg_6905;
reg   [0:0] tmp_50_reg_6912;
wire   [31:0] ov_18_fu_3942_p3;
reg   [31:0] ov_18_reg_6917;
wire   [31:0] ov_22_fu_3949_p3;
reg   [31:0] ov_22_reg_6924;
wire   [31:0] ov_11_fu_3996_p3;
reg   [31:0] ov_11_reg_6931;
reg   [0:0] tmp_55_reg_6936;
wire   [31:0] ov_15_fu_4043_p3;
reg   [31:0] ov_15_reg_6941;
reg   [31:0] distance_1_reg_6946;
reg   [0:0] tmp_60_reg_6951;
wire   [31:0] ov_19_fu_4090_p3;
reg   [31:0] ov_19_reg_6956;
reg   [0:0] tmp_65_reg_6961;
wire   [31:0] ov_23_fu_4137_p3;
reg   [31:0] ov_23_reg_6966;
reg   [31:0] ov_23_reg_6966_pp0_iter4_reg;
reg   [31:0] overlap_3_reg_6971;
reg   [31:0] distance_2_reg_6976;
reg   [31:0] overlap_4_reg_6981;
reg   [31:0] distance_3_reg_6986;
reg   [31:0] overlap_5_reg_6991;
reg   [31:0] overlap_5_reg_6991_pp0_iter6_reg;
reg   [31:0] overlap_5_reg_6991_pp0_iter7_reg;
reg   [0:0] tmp_67_reg_6998;
reg   [0:0] tmp_67_reg_6998_pp0_iter7_reg;
reg   [31:0] distance_4_reg_7003;
wire   [31:0] sc_2_fu_4198_p3;
reg   [31:0] sc_2_reg_7008;
reg   [31:0] tmp_score_load_reg_7015;
reg   [0:0] tmp_70_reg_7022;
wire   [31:0] tmp_other_4_fu_4305_p3;
reg   [31:0] tmp_other_4_reg_7027;
wire   [31:0] tmp_score_4_fu_4312_p3;
reg   [31:0] tmp_score_4_reg_7033;
reg   [31:0] score_load_reg_7041;
reg   [31:0] merge_1_4_reg_7049;
reg   [31:0] merge_2_1_reg_7056;
reg   [0:0] tmp_73_reg_7062;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter10_stage0;
wire    ap_block_pp0_stage1_subdone;
reg   [31:0] merge_1_fu_632;
wire   [31:0] merge_1_7_fu_4484_p3;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [31:0] merge_2_fu_636;
wire   [31:0] merge_2_6_fu_4478_p3;
reg   [31:0] score_fu_640;
wire   [31:0] score_3_fu_4472_p3;
wire    ap_block_pp0_stage7;
reg   [31:0] merge_1_1_fu_644;
wire   [31:0] i_real_2_fu_3803_p3;
wire    ap_block_pp0_stage1;
reg   [31:0] k_real_4_fu_648;
wire   [31:0] k_real_3_fu_3795_p3;
reg   [31:0] tmp_score_fu_652;
wire   [31:0] tmp_score_3_fu_4324_p3;
reg   [31:0] tmp_other_fu_656;
wire   [31:0] tmp_other_3_fu_4318_p3;
wire    ap_block_pp0_stage0_01001;
reg   [31:0] grp_fu_2402_p0;
reg   [31:0] grp_fu_2402_p1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
reg   [31:0] grp_fu_2406_p0;
reg   [31:0] grp_fu_2406_p1;
reg   [31:0] grp_fu_2410_p0;
reg   [31:0] grp_fu_2410_p1;
reg   [31:0] grp_fu_2414_p0;
reg   [31:0] grp_fu_2414_p1;
reg   [31:0] grp_fu_2418_p0;
reg   [31:0] grp_fu_2418_p1;
reg   [31:0] grp_fu_2422_p0;
reg   [31:0] grp_fu_2422_p1;
reg   [31:0] grp_fu_2427_p0;
reg   [31:0] grp_fu_2427_p1;
reg   [31:0] grp_fu_2431_p0;
reg   [31:0] grp_fu_2431_p1;
reg   [31:0] grp_fu_2435_p0;
reg   [31:0] grp_fu_2435_p1;
reg   [31:0] grp_fu_2439_p0;
reg   [31:0] grp_fu_2439_p1;
wire   [31:0] bitcast_ln112_fu_2965_p1;
wire   [31:0] bitcast_ln112_1_fu_2982_p1;
wire   [7:0] tmp_36_fu_2968_p4;
wire   [22:0] trunc_ln112_fu_2978_p1;
wire   [7:0] tmp_37_fu_2985_p4;
wire   [22:0] trunc_ln112_1_fu_2995_p1;
wire   [31:0] bitcast_ln112_2_fu_3023_p1;
wire   [31:0] bitcast_ln112_3_fu_3040_p1;
wire   [7:0] tmp_41_fu_3026_p4;
wire   [22:0] trunc_ln112_2_fu_3036_p1;
wire   [7:0] tmp_42_fu_3043_p4;
wire   [22:0] trunc_ln112_3_fu_3053_p1;
wire   [0:0] or_ln112_1_fu_3211_p2;
wire   [0:0] and_ln112_fu_3215_p2;
wire   [0:0] or_ln112_fu_3207_p2;
wire   [0:0] or_ln112_3_fu_3230_p2;
wire   [0:0] and_ln112_2_fu_3234_p2;
wire   [0:0] or_ln112_2_fu_3226_p2;
wire   [31:0] bitcast_ln112_4_fu_3245_p1;
wire   [31:0] bitcast_ln112_5_fu_3262_p1;
wire   [7:0] tmp_46_fu_3248_p4;
wire   [22:0] trunc_ln112_4_fu_3258_p1;
wire   [7:0] tmp_47_fu_3265_p4;
wire   [22:0] trunc_ln112_5_fu_3275_p1;
wire   [0:0] or_ln112_4_fu_3345_p2;
wire   [0:0] or_ln112_5_fu_3349_p2;
wire   [0:0] and_ln112_4_fu_3353_p2;
wire   [31:0] bitcast_ln112_6_fu_3364_p1;
wire   [31:0] bitcast_ln112_7_fu_3381_p1;
wire   [7:0] tmp_51_fu_3367_p4;
wire   [22:0] trunc_ln112_6_fu_3377_p1;
wire   [0:0] icmp_ln112_13_fu_3404_p2;
wire   [0:0] icmp_ln112_12_fu_3398_p2;
wire   [7:0] tmp_52_fu_3384_p4;
wire   [22:0] trunc_ln112_7_fu_3394_p1;
wire   [0:0] icmp_ln112_15_fu_3422_p2;
wire   [0:0] icmp_ln112_14_fu_3416_p2;
wire   [0:0] or_ln112_6_fu_3410_p2;
wire   [0:0] or_ln112_7_fu_3428_p2;
wire   [0:0] and_ln112_6_fu_3434_p2;
wire   [31:0] bitcast_ln112_8_fu_3529_p1;
wire   [31:0] bitcast_ln112_9_fu_3546_p1;
wire   [7:0] tmp_56_fu_3532_p4;
wire   [22:0] trunc_ln112_8_fu_3542_p1;
wire   [0:0] icmp_ln112_17_fu_3569_p2;
wire   [0:0] icmp_ln112_16_fu_3563_p2;
wire   [7:0] tmp_57_fu_3549_p4;
wire   [22:0] trunc_ln112_9_fu_3559_p1;
wire   [0:0] icmp_ln112_19_fu_3587_p2;
wire   [0:0] icmp_ln112_18_fu_3581_p2;
wire   [0:0] or_ln112_8_fu_3575_p2;
wire   [0:0] or_ln112_9_fu_3593_p2;
wire   [0:0] and_ln112_8_fu_3599_p2;
wire   [31:0] bitcast_ln112_10_fu_3652_p1;
wire   [31:0] bitcast_ln112_11_fu_3669_p1;
wire   [7:0] tmp_61_fu_3655_p4;
wire   [22:0] trunc_ln112_10_fu_3665_p1;
wire   [0:0] icmp_ln112_21_fu_3692_p2;
wire   [0:0] icmp_ln112_20_fu_3686_p2;
wire   [7:0] tmp_62_fu_3672_p4;
wire   [22:0] trunc_ln112_11_fu_3682_p1;
wire   [0:0] icmp_ln112_23_fu_3710_p2;
wire   [0:0] icmp_ln112_22_fu_3704_p2;
wire   [0:0] or_ln112_10_fu_3698_p2;
wire   [0:0] or_ln112_11_fu_3716_p2;
wire   [0:0] and_ln112_10_fu_3722_p2;
wire   [31:0] k_real_fu_3785_p2;
wire   [31:0] k_real_2_fu_3790_p2;
wire   [31:0] i_real_fu_3780_p2;
wire   [31:0] bitcast_ln116_fu_3841_p1;
wire   [7:0] tmp_39_fu_3844_p4;
wire   [22:0] trunc_ln116_fu_3854_p1;
wire   [0:0] icmp_ln116_1_fu_3864_p2;
wire   [0:0] icmp_ln116_fu_3858_p2;
wire   [0:0] or_ln116_fu_3870_p2;
wire   [0:0] and_ln116_fu_3876_p2;
wire   [31:0] bitcast_ln116_1_fu_3888_p1;
wire   [7:0] tmp_44_fu_3891_p4;
wire   [22:0] trunc_ln116_1_fu_3901_p1;
wire   [0:0] icmp_ln116_3_fu_3911_p2;
wire   [0:0] icmp_ln116_2_fu_3905_p2;
wire   [0:0] or_ln116_1_fu_3917_p2;
wire   [0:0] and_ln116_1_fu_3923_p2;
wire   [31:0] bitcast_ln116_2_fu_3956_p1;
wire   [7:0] tmp_49_fu_3959_p4;
wire   [22:0] trunc_ln116_2_fu_3969_p1;
wire   [0:0] icmp_ln116_5_fu_3979_p2;
wire   [0:0] icmp_ln116_4_fu_3973_p2;
wire   [0:0] or_ln116_2_fu_3985_p2;
wire   [0:0] and_ln116_2_fu_3991_p2;
wire   [31:0] bitcast_ln116_3_fu_4003_p1;
wire   [7:0] tmp_54_fu_4006_p4;
wire   [22:0] trunc_ln116_3_fu_4016_p1;
wire   [0:0] icmp_ln116_7_fu_4026_p2;
wire   [0:0] icmp_ln116_6_fu_4020_p2;
wire   [0:0] or_ln116_3_fu_4032_p2;
wire   [0:0] and_ln116_3_fu_4038_p2;
wire   [31:0] bitcast_ln116_4_fu_4050_p1;
wire   [7:0] tmp_59_fu_4053_p4;
wire   [22:0] trunc_ln116_4_fu_4063_p1;
wire   [0:0] icmp_ln116_9_fu_4073_p2;
wire   [0:0] icmp_ln116_8_fu_4067_p2;
wire   [0:0] or_ln116_4_fu_4079_p2;
wire   [0:0] and_ln116_4_fu_4085_p2;
wire   [31:0] bitcast_ln116_5_fu_4097_p1;
wire   [7:0] tmp_64_fu_4100_p4;
wire   [22:0] trunc_ln116_5_fu_4110_p1;
wire   [0:0] icmp_ln116_11_fu_4120_p2;
wire   [0:0] icmp_ln116_10_fu_4114_p2;
wire   [0:0] or_ln116_5_fu_4126_p2;
wire   [0:0] and_ln116_5_fu_4132_p2;
wire   [31:0] bitcast_ln122_fu_4144_p1;
wire   [7:0] tmp_66_fu_4147_p4;
wire   [22:0] trunc_ln122_fu_4157_p1;
wire   [0:0] icmp_ln122_1_fu_4167_p2;
wire   [0:0] icmp_ln122_fu_4161_p2;
wire   [0:0] or_ln122_fu_4173_p2;
wire   [31:0] bitcast_ln126_fu_4184_p1;
wire   [31:0] xor_ln126_fu_4188_p2;
wire   [0:0] and_ln122_fu_4179_p2;
wire   [31:0] sc_fu_4194_p1;
wire   [31:0] bitcast_ln130_fu_4218_p1;
wire   [31:0] bitcast_ln130_1_fu_4235_p1;
wire   [7:0] tmp_68_fu_4221_p4;
wire   [22:0] trunc_ln130_fu_4231_p1;
wire   [0:0] icmp_ln130_2_fu_4258_p2;
wire   [0:0] icmp_ln130_1_fu_4252_p2;
wire   [7:0] tmp_69_fu_4238_p4;
wire   [22:0] trunc_ln130_1_fu_4248_p1;
wire   [0:0] icmp_ln130_4_fu_4276_p2;
wire   [0:0] icmp_ln130_3_fu_4270_p2;
wire   [0:0] or_ln130_1_fu_4264_p2;
wire   [0:0] or_ln130_2_fu_4282_p2;
wire   [0:0] and_ln130_fu_4288_p2;
wire   [0:0] icmp_ln130_fu_4212_p2;
wire   [0:0] and_ln130_1_fu_4294_p2;
wire   [0:0] or_ln130_fu_4299_p2;
wire   [31:0] bitcast_ln139_fu_4367_p1;
wire   [31:0] bitcast_ln139_1_fu_4384_p1;
wire   [7:0] tmp_71_fu_4370_p4;
wire   [22:0] trunc_ln139_fu_4380_p1;
wire   [0:0] icmp_ln139_1_fu_4407_p2;
wire   [0:0] icmp_ln139_fu_4401_p2;
wire   [7:0] tmp_72_fu_4387_p4;
wire   [22:0] trunc_ln139_1_fu_4397_p1;
wire   [0:0] icmp_ln139_3_fu_4425_p2;
wire   [0:0] icmp_ln139_2_fu_4419_p2;
wire   [0:0] or_ln139_1_fu_4413_p2;
wire   [0:0] or_ln139_2_fu_4431_p2;
wire   [0:0] and_ln139_fu_4437_p2;
wire   [0:0] tmp_fu_4360_p3;
wire   [0:0] and_ln139_1_fu_4443_p2;
wire   [0:0] or_ln139_fu_4448_p2;
wire   [31:0] score_2_fu_4454_p3;
wire   [31:0] merge_2_5_fu_4460_p3;
wire   [31:0] merge_1_6_fu_4466_p3;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage5_00001;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage7_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
reg   [1:0] grp_fu_2414_opcode;
reg   [1:0] grp_fu_2418_opcode;
reg   [1:0] grp_fu_2422_opcode;
reg   [4:0] grp_fu_2435_opcode;
reg   [4:0] grp_fu_2439_opcode;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_idle_pp0_0to9;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp0_1to10;
reg    ap_done_pending_pp0;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_8_full_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2406_p0),
    .din1(grp_fu_2406_p1),
    .ce(1'b1),
    .dout(grp_fu_2406_p2)
);

FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_8_full_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2410_p0),
    .din1(grp_fu_2410_p1),
    .ce(1'b1),
    .dout(grp_fu_2410_p2)
);

FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_8_full_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2414_p0),
    .din1(grp_fu_2414_p1),
    .opcode(grp_fu_2414_opcode),
    .ce(1'b1),
    .dout(grp_fu_2414_p2)
);

FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_8_full_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2418_p0),
    .din1(grp_fu_2418_p1),
    .opcode(grp_fu_2418_opcode),
    .ce(1'b1),
    .dout(grp_fu_2418_p2)
);

FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_8_full_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2422_p0),
    .din1(grp_fu_2422_p1),
    .opcode(grp_fu_2422_opcode),
    .ce(1'b1),
    .dout(grp_fu_2422_p2)
);

FaultDetector_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_2431_p0),
    .din1(grp_fu_2431_p1),
    .ce(1'b1),
    .dout(grp_fu_2431_p2)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U20(
    .din0(regions_center_0_0_0),
    .din1(regions_center_1_0_0),
    .din2(regions_center_2_0_0),
    .din3(regions_center_3_0_0),
    .din4(regions_center_4_0_0),
    .din5(regions_center_5_0_0),
    .din6(regions_center_6_0_0),
    .din7(regions_center_7_0_0),
    .din8(regions_center_8_0_0),
    .din9(regions_center_9_0_0),
    .din10(regions_center_10_0_0),
    .din11(regions_center_11_0_0),
    .din12(regions_center_12_0_0),
    .din13(regions_center_13_0_0),
    .din14(regions_center_14_0_0),
    .din15(regions_center_15_0_0),
    .din16(trunc_ln104_fu_2525_p1),
    .dout(tmp_s_fu_2529_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U21(
    .din0(regions_center_0_0_0),
    .din1(regions_center_1_0_0),
    .din2(regions_center_2_0_0),
    .din3(regions_center_3_0_0),
    .din4(regions_center_4_0_0),
    .din5(regions_center_5_0_0),
    .din6(regions_center_6_0_0),
    .din7(regions_center_7_0_0),
    .din8(regions_center_8_0_0),
    .din9(regions_center_9_0_0),
    .din10(regions_center_10_0_0),
    .din11(regions_center_11_0_0),
    .din12(regions_center_12_0_0),
    .din13(regions_center_13_0_0),
    .din14(regions_center_14_0_0),
    .din15(regions_center_15_0_0),
    .din16(trunc_ln104_1_fu_2551_p1),
    .dout(tmp_5_fu_2555_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U22(
    .din0(regions_max_0_0_0),
    .din1(regions_max_1_0_0),
    .din2(regions_max_2_0_0),
    .din3(regions_max_3_0_0),
    .din4(regions_max_4_0_0),
    .din5(regions_max_5_0_0),
    .din6(regions_max_6_0_0),
    .din7(regions_max_7_0_0),
    .din8(regions_max_8_0_0),
    .din9(regions_max_9_0_0),
    .din10(regions_max_10_0_0),
    .din11(regions_max_11_0_0),
    .din12(regions_max_12_0_0),
    .din13(regions_max_13_0_0),
    .din14(regions_max_14_0_0),
    .din15(regions_max_15_0_0),
    .din16(trunc_ln104_fu_2525_p1),
    .dout(tmp_6_fu_2577_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U23(
    .din0(regions_min_0_0_0),
    .din1(regions_min_1_0_0),
    .din2(regions_min_2_0_0),
    .din3(regions_min_3_0_0),
    .din4(regions_min_4_0_0),
    .din5(regions_min_5_0_0),
    .din6(regions_min_6_0_0),
    .din7(regions_min_7_0_0),
    .din8(regions_min_8_0_0),
    .din9(regions_min_9_0_0),
    .din10(regions_min_10_0_0),
    .din11(regions_min_11_0_0),
    .din12(regions_min_12_0_0),
    .din13(regions_min_13_0_0),
    .din14(regions_min_14_0_0),
    .din15(regions_min_15_0_0),
    .din16(trunc_ln104_fu_2525_p1),
    .dout(tmp_7_fu_2599_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U24(
    .din0(regions_max_0_0_0),
    .din1(regions_max_1_0_0),
    .din2(regions_max_2_0_0),
    .din3(regions_max_3_0_0),
    .din4(regions_max_4_0_0),
    .din5(regions_max_5_0_0),
    .din6(regions_max_6_0_0),
    .din7(regions_max_7_0_0),
    .din8(regions_max_8_0_0),
    .din9(regions_max_9_0_0),
    .din10(regions_max_10_0_0),
    .din11(regions_max_11_0_0),
    .din12(regions_max_12_0_0),
    .din13(regions_max_13_0_0),
    .din14(regions_max_14_0_0),
    .din15(regions_max_15_0_0),
    .din16(trunc_ln104_1_fu_2551_p1),
    .dout(tmp_8_fu_2621_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U25(
    .din0(regions_min_0_0_0),
    .din1(regions_min_1_0_0),
    .din2(regions_min_2_0_0),
    .din3(regions_min_3_0_0),
    .din4(regions_min_4_0_0),
    .din5(regions_min_5_0_0),
    .din6(regions_min_6_0_0),
    .din7(regions_min_7_0_0),
    .din8(regions_min_8_0_0),
    .din9(regions_min_9_0_0),
    .din10(regions_min_10_0_0),
    .din11(regions_min_11_0_0),
    .din12(regions_min_12_0_0),
    .din13(regions_min_13_0_0),
    .din14(regions_min_14_0_0),
    .din15(regions_min_15_0_0),
    .din16(trunc_ln104_1_fu_2551_p1),
    .dout(tmp_9_fu_2643_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U26(
    .din0(regions_center_0_1_0),
    .din1(regions_center_1_1_0),
    .din2(regions_center_2_1_0),
    .din3(regions_center_3_1_0),
    .din4(regions_center_4_1_0),
    .din5(regions_center_5_1_0),
    .din6(regions_center_6_1_0),
    .din7(regions_center_7_1_0),
    .din8(regions_center_8_1_0),
    .din9(regions_center_9_1_0),
    .din10(regions_center_10_1_0),
    .din11(regions_center_11_1_0),
    .din12(regions_center_12_1_0),
    .din13(regions_center_13_1_0),
    .din14(regions_center_14_1_0),
    .din15(regions_center_15_1_0),
    .din16(trunc_ln104_fu_2525_p1),
    .dout(tmp_1_fu_2665_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U27(
    .din0(regions_center_0_1_0),
    .din1(regions_center_1_1_0),
    .din2(regions_center_2_1_0),
    .din3(regions_center_3_1_0),
    .din4(regions_center_4_1_0),
    .din5(regions_center_5_1_0),
    .din6(regions_center_6_1_0),
    .din7(regions_center_7_1_0),
    .din8(regions_center_8_1_0),
    .din9(regions_center_9_1_0),
    .din10(regions_center_10_1_0),
    .din11(regions_center_11_1_0),
    .din12(regions_center_12_1_0),
    .din13(regions_center_13_1_0),
    .din14(regions_center_14_1_0),
    .din15(regions_center_15_1_0),
    .din16(trunc_ln104_1_fu_2551_p1),
    .dout(tmp_2_fu_2687_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U28(
    .din0(regions_min_0_1_0),
    .din1(regions_min_1_1_0),
    .din2(regions_min_2_1_0),
    .din3(regions_min_3_1_0),
    .din4(regions_min_4_1_0),
    .din5(regions_min_5_1_0),
    .din6(regions_min_6_1_0),
    .din7(regions_min_7_1_0),
    .din8(regions_min_8_1_0),
    .din9(regions_min_9_1_0),
    .din10(regions_min_10_1_0),
    .din11(regions_min_11_1_0),
    .din12(regions_min_12_1_0),
    .din13(regions_min_13_1_0),
    .din14(regions_min_14_1_0),
    .din15(regions_min_15_1_0),
    .din16(trunc_ln104_fu_2525_p1),
    .dout(tmp_4_fu_2709_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U29(
    .din0(regions_min_0_1_0),
    .din1(regions_min_1_1_0),
    .din2(regions_min_2_1_0),
    .din3(regions_min_3_1_0),
    .din4(regions_min_4_1_0),
    .din5(regions_min_5_1_0),
    .din6(regions_min_6_1_0),
    .din7(regions_min_7_1_0),
    .din8(regions_min_8_1_0),
    .din9(regions_min_9_1_0),
    .din10(regions_min_10_1_0),
    .din11(regions_min_11_1_0),
    .din12(regions_min_12_1_0),
    .din13(regions_min_13_1_0),
    .din14(regions_min_14_1_0),
    .din15(regions_min_15_1_0),
    .din16(trunc_ln104_1_fu_2551_p1),
    .dout(tmp_11_fu_2731_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U30(
    .din0(regions_center_0_2_0),
    .din1(regions_center_1_2_0),
    .din2(regions_center_2_2_0),
    .din3(regions_center_3_2_0),
    .din4(regions_center_4_2_0),
    .din5(regions_center_5_2_0),
    .din6(regions_center_6_2_0),
    .din7(regions_center_7_2_0),
    .din8(regions_center_8_2_0),
    .din9(regions_center_9_2_0),
    .din10(regions_center_10_2_0),
    .din11(regions_center_11_2_0),
    .din12(regions_center_12_2_0),
    .din13(regions_center_13_2_0),
    .din14(regions_center_14_2_0),
    .din15(regions_center_15_2_0),
    .din16(trunc_ln104_fu_2525_p1),
    .dout(tmp_12_fu_2753_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U31(
    .din0(regions_center_0_2_0),
    .din1(regions_center_1_2_0),
    .din2(regions_center_2_2_0),
    .din3(regions_center_3_2_0),
    .din4(regions_center_4_2_0),
    .din5(regions_center_5_2_0),
    .din6(regions_center_6_2_0),
    .din7(regions_center_7_2_0),
    .din8(regions_center_8_2_0),
    .din9(regions_center_9_2_0),
    .din10(regions_center_10_2_0),
    .din11(regions_center_11_2_0),
    .din12(regions_center_12_2_0),
    .din13(regions_center_13_2_0),
    .din14(regions_center_14_2_0),
    .din15(regions_center_15_2_0),
    .din16(trunc_ln104_1_fu_2551_p1),
    .dout(tmp_13_fu_2775_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U32(
    .din0(regions_max_0_1_0),
    .din1(regions_max_1_1_0),
    .din2(regions_max_2_1_0),
    .din3(regions_max_3_1_0),
    .din4(regions_max_4_1_0),
    .din5(regions_max_5_1_0),
    .din6(regions_max_6_1_0),
    .din7(regions_max_7_1_0),
    .din8(regions_max_8_1_0),
    .din9(regions_max_9_1_0),
    .din10(regions_max_10_1_0),
    .din11(regions_max_11_1_0),
    .din12(regions_max_12_1_0),
    .din13(regions_max_13_1_0),
    .din14(regions_max_14_1_0),
    .din15(regions_max_15_1_0),
    .din16(trunc_ln104_reg_6301),
    .dout(tmp_3_fu_2797_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U33(
    .din0(regions_max_0_1_0),
    .din1(regions_max_1_1_0),
    .din2(regions_max_2_1_0),
    .din3(regions_max_3_1_0),
    .din4(regions_max_4_1_0),
    .din5(regions_max_5_1_0),
    .din6(regions_max_6_1_0),
    .din7(regions_max_7_1_0),
    .din8(regions_max_8_1_0),
    .din9(regions_max_9_1_0),
    .din10(regions_max_10_1_0),
    .din11(regions_max_11_1_0),
    .din12(regions_max_12_1_0),
    .din13(regions_max_13_1_0),
    .din14(regions_max_14_1_0),
    .din15(regions_max_15_1_0),
    .din16(trunc_ln104_1_reg_6322),
    .dout(tmp_10_fu_2818_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U34(
    .din0(regions_max_0_2_0),
    .din1(regions_max_1_2_0),
    .din2(regions_max_2_2_0),
    .din3(regions_max_3_2_0),
    .din4(regions_max_4_2_0),
    .din5(regions_max_5_2_0),
    .din6(regions_max_6_2_0),
    .din7(regions_max_7_2_0),
    .din8(regions_max_8_2_0),
    .din9(regions_max_9_2_0),
    .din10(regions_max_10_2_0),
    .din11(regions_max_11_2_0),
    .din12(regions_max_12_2_0),
    .din13(regions_max_13_2_0),
    .din14(regions_max_14_2_0),
    .din15(regions_max_15_2_0),
    .din16(trunc_ln104_reg_6301),
    .dout(tmp_14_fu_2839_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U35(
    .din0(regions_min_0_2_0),
    .din1(regions_min_1_2_0),
    .din2(regions_min_2_2_0),
    .din3(regions_min_3_2_0),
    .din4(regions_min_4_2_0),
    .din5(regions_min_5_2_0),
    .din6(regions_min_6_2_0),
    .din7(regions_min_7_2_0),
    .din8(regions_min_8_2_0),
    .din9(regions_min_9_2_0),
    .din10(regions_min_10_2_0),
    .din11(regions_min_11_2_0),
    .din12(regions_min_12_2_0),
    .din13(regions_min_13_2_0),
    .din14(regions_min_14_2_0),
    .din15(regions_min_15_2_0),
    .din16(trunc_ln104_reg_6301),
    .dout(tmp_15_fu_2860_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U36(
    .din0(regions_max_0_2_0),
    .din1(regions_max_1_2_0),
    .din2(regions_max_2_2_0),
    .din3(regions_max_3_2_0),
    .din4(regions_max_4_2_0),
    .din5(regions_max_5_2_0),
    .din6(regions_max_6_2_0),
    .din7(regions_max_7_2_0),
    .din8(regions_max_8_2_0),
    .din9(regions_max_9_2_0),
    .din10(regions_max_10_2_0),
    .din11(regions_max_11_2_0),
    .din12(regions_max_12_2_0),
    .din13(regions_max_13_2_0),
    .din14(regions_max_14_2_0),
    .din15(regions_max_15_2_0),
    .din16(trunc_ln104_1_reg_6322),
    .dout(tmp_16_fu_2881_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U37(
    .din0(regions_min_0_2_0),
    .din1(regions_min_1_2_0),
    .din2(regions_min_2_2_0),
    .din3(regions_min_3_2_0),
    .din4(regions_min_4_2_0),
    .din5(regions_min_5_2_0),
    .din6(regions_min_6_2_0),
    .din7(regions_min_7_2_0),
    .din8(regions_min_8_2_0),
    .din9(regions_min_9_2_0),
    .din10(regions_min_10_2_0),
    .din11(regions_min_11_2_0),
    .din12(regions_min_12_2_0),
    .din13(regions_min_13_2_0),
    .din14(regions_min_14_2_0),
    .din15(regions_min_15_2_0),
    .din16(trunc_ln104_1_reg_6322),
    .dout(tmp_17_fu_2902_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U38(
    .din0(regions_min_0_3_0),
    .din1(regions_min_1_3_0),
    .din2(regions_min_2_3_0),
    .din3(regions_min_3_3_0),
    .din4(regions_min_4_3_0),
    .din5(regions_min_5_3_0),
    .din6(regions_min_6_3_0),
    .din7(regions_min_7_3_0),
    .din8(regions_min_8_3_0),
    .din9(regions_min_9_3_0),
    .din10(regions_min_10_3_0),
    .din11(regions_min_11_3_0),
    .din12(regions_min_12_3_0),
    .din13(regions_min_13_3_0),
    .din14(regions_min_14_3_0),
    .din15(regions_min_15_3_0),
    .din16(trunc_ln104_reg_6301),
    .dout(tmp_21_fu_2923_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U39(
    .din0(regions_min_0_3_0),
    .din1(regions_min_1_3_0),
    .din2(regions_min_2_3_0),
    .din3(regions_min_3_3_0),
    .din4(regions_min_4_3_0),
    .din5(regions_min_5_3_0),
    .din6(regions_min_6_3_0),
    .din7(regions_min_7_3_0),
    .din8(regions_min_8_3_0),
    .din9(regions_min_9_3_0),
    .din10(regions_min_10_3_0),
    .din11(regions_min_11_3_0),
    .din12(regions_min_12_3_0),
    .din13(regions_min_13_3_0),
    .din14(regions_min_14_3_0),
    .din15(regions_min_15_3_0),
    .din16(trunc_ln104_1_reg_6322),
    .dout(tmp_23_fu_2944_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U40(
    .din0(regions_center_0_3_0),
    .din1(regions_center_1_3_0),
    .din2(regions_center_2_3_0),
    .din3(regions_center_3_3_0),
    .din4(regions_center_4_3_0),
    .din5(regions_center_5_3_0),
    .din6(regions_center_6_3_0),
    .din7(regions_center_7_3_0),
    .din8(regions_center_8_3_0),
    .din9(regions_center_9_3_0),
    .din10(regions_center_10_3_0),
    .din11(regions_center_11_3_0),
    .din12(regions_center_12_3_0),
    .din13(regions_center_13_3_0),
    .din14(regions_center_14_3_0),
    .din15(regions_center_15_3_0),
    .din16(trunc_ln104_reg_6301),
    .dout(tmp_18_fu_3081_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U41(
    .din0(regions_center_0_3_0),
    .din1(regions_center_1_3_0),
    .din2(regions_center_2_3_0),
    .din3(regions_center_3_3_0),
    .din4(regions_center_4_3_0),
    .din5(regions_center_5_3_0),
    .din6(regions_center_6_3_0),
    .din7(regions_center_7_3_0),
    .din8(regions_center_8_3_0),
    .din9(regions_center_9_3_0),
    .din10(regions_center_10_3_0),
    .din11(regions_center_11_3_0),
    .din12(regions_center_12_3_0),
    .din13(regions_center_13_3_0),
    .din14(regions_center_14_3_0),
    .din15(regions_center_15_3_0),
    .din16(trunc_ln104_1_reg_6322),
    .dout(tmp_19_fu_3102_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U42(
    .din0(regions_max_0_3_0),
    .din1(regions_max_1_3_0),
    .din2(regions_max_2_3_0),
    .din3(regions_max_3_3_0),
    .din4(regions_max_4_3_0),
    .din5(regions_max_5_3_0),
    .din6(regions_max_6_3_0),
    .din7(regions_max_7_3_0),
    .din8(regions_max_8_3_0),
    .din9(regions_max_9_3_0),
    .din10(regions_max_10_3_0),
    .din11(regions_max_11_3_0),
    .din12(regions_max_12_3_0),
    .din13(regions_max_13_3_0),
    .din14(regions_max_14_3_0),
    .din15(regions_max_15_3_0),
    .din16(trunc_ln104_reg_6301),
    .dout(tmp_20_fu_3123_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U43(
    .din0(regions_max_0_3_0),
    .din1(regions_max_1_3_0),
    .din2(regions_max_2_3_0),
    .din3(regions_max_3_3_0),
    .din4(regions_max_4_3_0),
    .din5(regions_max_5_3_0),
    .din6(regions_max_6_3_0),
    .din7(regions_max_7_3_0),
    .din8(regions_max_8_3_0),
    .din9(regions_max_9_3_0),
    .din10(regions_max_10_3_0),
    .din11(regions_max_11_3_0),
    .din12(regions_max_12_3_0),
    .din13(regions_max_13_3_0),
    .din14(regions_max_14_3_0),
    .din15(regions_max_15_3_0),
    .din16(trunc_ln104_1_reg_6322),
    .dout(tmp_22_fu_3144_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U44(
    .din0(regions_min_0_4_0),
    .din1(regions_min_1_4_0),
    .din2(regions_min_2_4_0),
    .din3(regions_min_3_4_0),
    .din4(regions_min_4_4_0),
    .din5(regions_min_5_4_0),
    .din6(regions_min_6_4_0),
    .din7(regions_min_7_4_0),
    .din8(regions_min_8_4_0),
    .din9(regions_min_9_4_0),
    .din10(regions_min_10_4_0),
    .din11(regions_min_11_4_0),
    .din12(regions_min_12_4_0),
    .din13(regions_min_13_4_0),
    .din14(regions_min_14_4_0),
    .din15(regions_min_15_4_0),
    .din16(trunc_ln104_reg_6301),
    .dout(tmp_27_fu_3165_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U45(
    .din0(regions_min_0_4_0),
    .din1(regions_min_1_4_0),
    .din2(regions_min_2_4_0),
    .din3(regions_min_3_4_0),
    .din4(regions_min_4_4_0),
    .din5(regions_min_5_4_0),
    .din6(regions_min_6_4_0),
    .din7(regions_min_7_4_0),
    .din8(regions_min_8_4_0),
    .din9(regions_min_9_4_0),
    .din10(regions_min_10_4_0),
    .din11(regions_min_11_4_0),
    .din12(regions_min_12_4_0),
    .din13(regions_min_13_4_0),
    .din14(regions_min_14_4_0),
    .din15(regions_min_15_4_0),
    .din16(trunc_ln104_1_reg_6322),
    .dout(tmp_29_fu_3186_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U46(
    .din0(regions_min_0_5_0),
    .din1(regions_min_1_5_0),
    .din2(regions_min_2_5_0),
    .din3(regions_min_3_5_0),
    .din4(regions_min_4_5_0),
    .din5(regions_min_5_5_0),
    .din6(regions_min_6_5_0),
    .din7(regions_min_7_5_0),
    .din8(regions_min_8_5_0),
    .din9(regions_min_9_5_0),
    .din10(regions_min_10_5_0),
    .din11(regions_min_11_5_0),
    .din12(regions_min_12_5_0),
    .din13(regions_min_13_5_0),
    .din14(regions_min_14_5_0),
    .din15(regions_min_15_5_0),
    .din16(trunc_ln104_reg_6301),
    .dout(tmp_33_fu_3303_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U47(
    .din0(regions_min_0_5_0),
    .din1(regions_min_1_5_0),
    .din2(regions_min_2_5_0),
    .din3(regions_min_3_5_0),
    .din4(regions_min_4_5_0),
    .din5(regions_min_5_5_0),
    .din6(regions_min_6_5_0),
    .din7(regions_min_7_5_0),
    .din8(regions_min_8_5_0),
    .din9(regions_min_9_5_0),
    .din10(regions_min_10_5_0),
    .din11(regions_min_11_5_0),
    .din12(regions_min_12_5_0),
    .din13(regions_min_13_5_0),
    .din14(regions_min_14_5_0),
    .din15(regions_min_15_5_0),
    .din16(trunc_ln104_1_reg_6322),
    .dout(tmp_35_fu_3324_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U48(
    .din0(regions_max_0_4_0),
    .din1(regions_max_1_4_0),
    .din2(regions_max_2_4_0),
    .din3(regions_max_3_4_0),
    .din4(regions_max_4_4_0),
    .din5(regions_max_5_4_0),
    .din6(regions_max_6_4_0),
    .din7(regions_max_7_4_0),
    .din8(regions_max_8_4_0),
    .din9(regions_max_9_4_0),
    .din10(regions_max_10_4_0),
    .din11(regions_max_11_4_0),
    .din12(regions_max_12_4_0),
    .din13(regions_max_13_4_0),
    .din14(regions_max_14_4_0),
    .din15(regions_max_15_4_0),
    .din16(trunc_ln104_reg_6301),
    .dout(tmp_26_fu_3445_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U49(
    .din0(regions_max_0_4_0),
    .din1(regions_max_1_4_0),
    .din2(regions_max_2_4_0),
    .din3(regions_max_3_4_0),
    .din4(regions_max_4_4_0),
    .din5(regions_max_5_4_0),
    .din6(regions_max_6_4_0),
    .din7(regions_max_7_4_0),
    .din8(regions_max_8_4_0),
    .din9(regions_max_9_4_0),
    .din10(regions_max_10_4_0),
    .din11(regions_max_11_4_0),
    .din12(regions_max_12_4_0),
    .din13(regions_max_13_4_0),
    .din14(regions_max_14_4_0),
    .din15(regions_max_15_4_0),
    .din16(trunc_ln104_1_reg_6322),
    .dout(tmp_28_fu_3466_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U50(
    .din0(regions_center_0_4_0),
    .din1(regions_center_1_4_0),
    .din2(regions_center_2_4_0),
    .din3(regions_center_3_4_0),
    .din4(regions_center_4_4_0),
    .din5(regions_center_5_4_0),
    .din6(regions_center_6_4_0),
    .din7(regions_center_7_4_0),
    .din8(regions_center_8_4_0),
    .din9(regions_center_9_4_0),
    .din10(regions_center_10_4_0),
    .din11(regions_center_11_4_0),
    .din12(regions_center_12_4_0),
    .din13(regions_center_13_4_0),
    .din14(regions_center_14_4_0),
    .din15(regions_center_15_4_0),
    .din16(trunc_ln104_reg_6301),
    .dout(tmp_24_fu_3487_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U51(
    .din0(regions_center_0_4_0),
    .din1(regions_center_1_4_0),
    .din2(regions_center_2_4_0),
    .din3(regions_center_3_4_0),
    .din4(regions_center_4_4_0),
    .din5(regions_center_5_4_0),
    .din6(regions_center_6_4_0),
    .din7(regions_center_7_4_0),
    .din8(regions_center_8_4_0),
    .din9(regions_center_9_4_0),
    .din10(regions_center_10_4_0),
    .din11(regions_center_11_4_0),
    .din12(regions_center_12_4_0),
    .din13(regions_center_13_4_0),
    .din14(regions_center_14_4_0),
    .din15(regions_center_15_4_0),
    .din16(trunc_ln104_1_reg_6322),
    .dout(tmp_25_fu_3508_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U52(
    .din0(regions_max_0_5_0),
    .din1(regions_max_1_5_0),
    .din2(regions_max_2_5_0),
    .din3(regions_max_3_5_0),
    .din4(regions_max_4_5_0),
    .din5(regions_max_5_5_0),
    .din6(regions_max_6_5_0),
    .din7(regions_max_7_5_0),
    .din8(regions_max_8_5_0),
    .din9(regions_max_9_5_0),
    .din10(regions_max_10_5_0),
    .din11(regions_max_11_5_0),
    .din12(regions_max_12_5_0),
    .din13(regions_max_13_5_0),
    .din14(regions_max_14_5_0),
    .din15(regions_max_15_5_0),
    .din16(trunc_ln104_reg_6301),
    .dout(tmp_32_fu_3610_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U53(
    .din0(regions_max_0_5_0),
    .din1(regions_max_1_5_0),
    .din2(regions_max_2_5_0),
    .din3(regions_max_3_5_0),
    .din4(regions_max_4_5_0),
    .din5(regions_max_5_5_0),
    .din6(regions_max_6_5_0),
    .din7(regions_max_7_5_0),
    .din8(regions_max_8_5_0),
    .din9(regions_max_9_5_0),
    .din10(regions_max_10_5_0),
    .din11(regions_max_11_5_0),
    .din12(regions_max_12_5_0),
    .din13(regions_max_13_5_0),
    .din14(regions_max_14_5_0),
    .din15(regions_max_15_5_0),
    .din16(trunc_ln104_1_reg_6322),
    .dout(tmp_34_fu_3631_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U54(
    .din0(regions_center_0_5_0),
    .din1(regions_center_1_5_0),
    .din2(regions_center_2_5_0),
    .din3(regions_center_3_5_0),
    .din4(regions_center_4_5_0),
    .din5(regions_center_5_5_0),
    .din6(regions_center_6_5_0),
    .din7(regions_center_7_5_0),
    .din8(regions_center_8_5_0),
    .din9(regions_center_9_5_0),
    .din10(regions_center_10_5_0),
    .din11(regions_center_11_5_0),
    .din12(regions_center_12_5_0),
    .din13(regions_center_13_5_0),
    .din14(regions_center_14_5_0),
    .din15(regions_center_15_5_0),
    .din16(trunc_ln104_reg_6301),
    .dout(tmp_30_fu_3733_p18)
);

FaultDetector_mux_164_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_164_32_1_1_U55(
    .din0(regions_center_0_5_0),
    .din1(regions_center_1_5_0),
    .din2(regions_center_2_5_0),
    .din3(regions_center_3_5_0),
    .din4(regions_center_4_5_0),
    .din5(regions_center_5_5_0),
    .din6(regions_center_6_5_0),
    .din7(regions_center_7_5_0),
    .din8(regions_center_8_5_0),
    .din9(regions_center_9_5_0),
    .din10(regions_center_10_5_0),
    .din11(regions_center_11_5_0),
    .din12(regions_center_12_5_0),
    .din13(regions_center_13_5_0),
    .din14(regions_center_14_5_0),
    .din15(regions_center_15_5_0),
    .din16(trunc_ln104_1_reg_6322),
    .dout(tmp_31_fu_3754_p18)
);

FaultDetector_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage7),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter10_stage0) | ((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_real_4_fu_648 <= 32'd1;
        end else if (((icmp_ln1027_reg_6297 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            k_real_4_fu_648 <= k_real_3_fu_3795_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            merge_1_1_fu_644 <= 32'd0;
        end else if (((icmp_ln1027_reg_6297 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            merge_1_1_fu_644 <= i_real_2_fu_3803_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        merge_1_fu_632 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        merge_1_fu_632 <= merge_1_7_fu_4484_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        merge_2_fu_636 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        merge_2_fu_636 <= merge_2_6_fu_4478_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        score_fu_640 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        score_fu_640 <= score_3_fu_4472_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        tmp_other_fu_656 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_6297_pp0_iter9_reg == 1'd1))) begin
        tmp_other_fu_656 <= tmp_other_3_fu_4318_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_loop_init == 1'b1))) begin
        tmp_score_fu_652 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2) & (icmp_ln1027_reg_6297_pp0_iter9_reg == 1'd1))) begin
        tmp_score_fu_652 <= tmp_score_3_fu_4324_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        and_ln112_11_reg_6665 <= and_ln112_11_fu_3728_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        and_ln112_11_reg_6665_pp0_iter1_reg <= and_ln112_11_reg_6665;
        and_ln112_11_reg_6665_pp0_iter2_reg <= and_ln112_11_reg_6665_pp0_iter1_reg;
        mul_3_reg_6838_pp0_iter2_reg <= mul_3_reg_6838;
        mul_3_reg_6838_pp0_iter3_reg <= mul_3_reg_6838_pp0_iter2_reg;
        mul_3_reg_6838_pp0_iter4_reg <= mul_3_reg_6838_pp0_iter3_reg;
        ov_23_reg_6966_pp0_iter4_reg <= ov_23_reg_6966;
        overlap_5_reg_6991_pp0_iter6_reg <= overlap_5_reg_6991;
        overlap_5_reg_6991_pp0_iter7_reg <= overlap_5_reg_6991_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln112_1_reg_6552 <= and_ln112_1_fu_3220_p2;
        and_ln112_3_reg_6557 <= and_ln112_3_fu_3239_p2;
        icmp_ln112_10_reg_6572 <= icmp_ln112_10_fu_3291_p2;
        icmp_ln112_11_reg_6577 <= icmp_ln112_11_fu_3297_p2;
        icmp_ln112_8_reg_6562 <= icmp_ln112_8_fu_3279_p2;
        icmp_ln112_9_reg_6567 <= icmp_ln112_9_fu_3285_p2;
        tmp_33_reg_6592 <= tmp_33_fu_3303_p18;
        tmp_35_reg_6601 <= tmp_35_fu_3324_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln112_1_reg_6552_pp0_iter1_reg <= and_ln112_1_reg_6552;
        and_ln112_1_reg_6552_pp0_iter2_reg <= and_ln112_1_reg_6552_pp0_iter1_reg;
        and_ln112_3_reg_6557_pp0_iter1_reg <= and_ln112_3_reg_6557;
        and_ln112_3_reg_6557_pp0_iter2_reg <= and_ln112_3_reg_6557_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        and_ln112_5_reg_6610 <= and_ln112_5_fu_3359_p2;
        and_ln112_7_reg_6615 <= and_ln112_7_fu_3440_p2;
        tmp_26_reg_6620 <= tmp_26_fu_3445_p18;
        tmp_28_reg_6625 <= tmp_28_fu_3466_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        and_ln112_5_reg_6610_pp0_iter1_reg <= and_ln112_5_reg_6610;
        and_ln112_5_reg_6610_pp0_iter2_reg <= and_ln112_5_reg_6610_pp0_iter1_reg;
        and_ln112_7_reg_6615_pp0_iter1_reg <= and_ln112_7_reg_6615;
        and_ln112_7_reg_6615_pp0_iter2_reg <= and_ln112_7_reg_6615_pp0_iter1_reg;
        mul_1_reg_6792_pp0_iter2_reg <= mul_1_reg_6792;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        and_ln112_9_reg_6645 <= and_ln112_9_fu_3605_p2;
        tmp_24_reg_6635 <= tmp_24_fu_3487_p18;
        tmp_25_reg_6640 <= tmp_25_fu_3508_p18;
        tmp_32_reg_6650 <= tmp_32_fu_3610_p18;
        tmp_34_reg_6655 <= tmp_34_fu_3631_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        and_ln112_9_reg_6645_pp0_iter1_reg <= and_ln112_9_reg_6645;
        and_ln112_9_reg_6645_pp0_iter2_reg <= and_ln112_9_reg_6645_pp0_iter1_reg;
        mul_2_reg_6812_pp0_iter2_reg <= mul_2_reg_6812;
        mul_5_reg_6873_pp0_iter3_reg <= mul_5_reg_6873;
        mul_5_reg_6873_pp0_iter4_reg <= mul_5_reg_6873_pp0_iter3_reg;
        mul_5_reg_6873_pp0_iter5_reg <= mul_5_reg_6873_pp0_iter4_reg;
        mul_5_reg_6873_pp0_iter6_reg <= mul_5_reg_6873_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        d1_1_reg_6721 <= grp_fu_2406_p2;
        d1_2_reg_6741 <= grp_fu_2422_p2;
        d2_1_reg_6726 <= grp_fu_2410_p2;
        sub2_reg_6716 <= grp_fu_18132_p_dout0;
        sub75_1_reg_6731 <= grp_fu_2414_p2;
        sub87_1_reg_6736 <= grp_fu_2418_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        d1_3_reg_6767 <= grp_fu_2418_p2;
        d2_2_reg_6746 <= grp_fu_18132_p_dout0;
        d2_3_reg_6772 <= grp_fu_2422_p2;
        d_3_reg_6761 <= grp_fu_2414_p2;
        sub75_2_reg_6751 <= grp_fu_2406_p2;
        sub87_2_reg_6756 <= grp_fu_2410_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        d1_4_reg_6797 <= grp_fu_18132_p_dout0;
        d2_4_reg_6802 <= grp_fu_2406_p2;
        mul_1_reg_6792 <= grp_fu_2431_p2;
        mul_reg_6787 <= grp_fu_18138_p_dout0;
        sub75_4_reg_6807 <= grp_fu_2410_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        d1_5_reg_6828 <= grp_fu_2410_p2;
        d2_5_reg_6833 <= grp_fu_2414_p2;
        d_4_reg_6817 <= grp_fu_18132_p_dout0;
        mul_2_reg_6812 <= grp_fu_18138_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        d1_reg_6695 <= grp_fu_2406_p2;
        d2_reg_6700 <= grp_fu_2410_p2;
        d_2_reg_6710 <= grp_fu_2422_p2;
        d_reg_6689 <= grp_fu_18132_p_dout0;
        sub_reg_6705 <= grp_fu_2414_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        d_5_reg_6843 <= grp_fu_18132_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_6297_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        distance_1_reg_6946 <= grp_fu_2418_p2;
        tmp_60_reg_6951 <= grp_fu_18148_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5) & (icmp_ln1027_reg_6297_pp0_iter4_reg == 1'd1))) begin
        distance_2_reg_6976 <= grp_fu_2422_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln1027_reg_6297_pp0_iter5_reg == 1'd1))) begin
        distance_3_reg_6986 <= grp_fu_2414_p2;
        overlap_5_reg_6991 <= grp_fu_2431_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_6297_pp0_iter6_reg == 1'd1))) begin
        distance_4_reg_7003 <= grp_fu_2414_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        distance_reg_6854 <= grp_fu_2414_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_real_3_reg_6282 <= merge_1_1_fu_644;
        i_real_3_reg_6282_pp0_iter1_reg <= i_real_3_reg_6282;
        i_real_3_reg_6282_pp0_iter2_reg <= i_real_3_reg_6282_pp0_iter1_reg;
        i_real_3_reg_6282_pp0_iter3_reg <= i_real_3_reg_6282_pp0_iter2_reg;
        i_real_3_reg_6282_pp0_iter4_reg <= i_real_3_reg_6282_pp0_iter3_reg;
        i_real_3_reg_6282_pp0_iter5_reg <= i_real_3_reg_6282_pp0_iter4_reg;
        i_real_3_reg_6282_pp0_iter6_reg <= i_real_3_reg_6282_pp0_iter5_reg;
        i_real_3_reg_6282_pp0_iter7_reg <= i_real_3_reg_6282_pp0_iter6_reg;
        i_real_3_reg_6282_pp0_iter8_reg <= i_real_3_reg_6282_pp0_iter7_reg;
        i_real_3_reg_6282_pp0_iter9_reg <= i_real_3_reg_6282_pp0_iter8_reg;
        icmp_ln1027_reg_6297 <= icmp_ln1027_fu_2519_p2;
        icmp_ln1027_reg_6297_pp0_iter1_reg <= icmp_ln1027_reg_6297;
        icmp_ln1027_reg_6297_pp0_iter2_reg <= icmp_ln1027_reg_6297_pp0_iter1_reg;
        icmp_ln1027_reg_6297_pp0_iter3_reg <= icmp_ln1027_reg_6297_pp0_iter2_reg;
        icmp_ln1027_reg_6297_pp0_iter4_reg <= icmp_ln1027_reg_6297_pp0_iter3_reg;
        icmp_ln1027_reg_6297_pp0_iter5_reg <= icmp_ln1027_reg_6297_pp0_iter4_reg;
        icmp_ln1027_reg_6297_pp0_iter6_reg <= icmp_ln1027_reg_6297_pp0_iter5_reg;
        icmp_ln1027_reg_6297_pp0_iter7_reg <= icmp_ln1027_reg_6297_pp0_iter6_reg;
        icmp_ln1027_reg_6297_pp0_iter8_reg <= icmp_ln1027_reg_6297_pp0_iter7_reg;
        icmp_ln1027_reg_6297_pp0_iter9_reg <= icmp_ln1027_reg_6297_pp0_iter8_reg;
        k_real_5_reg_6290 <= k_real_4_fu_648;
        k_real_5_reg_6290_pp0_iter1_reg <= k_real_5_reg_6290;
        k_real_5_reg_6290_pp0_iter2_reg <= k_real_5_reg_6290_pp0_iter1_reg;
        k_real_5_reg_6290_pp0_iter3_reg <= k_real_5_reg_6290_pp0_iter2_reg;
        k_real_5_reg_6290_pp0_iter4_reg <= k_real_5_reg_6290_pp0_iter3_reg;
        k_real_5_reg_6290_pp0_iter5_reg <= k_real_5_reg_6290_pp0_iter4_reg;
        k_real_5_reg_6290_pp0_iter6_reg <= k_real_5_reg_6290_pp0_iter5_reg;
        k_real_5_reg_6290_pp0_iter7_reg <= k_real_5_reg_6290_pp0_iter6_reg;
        k_real_5_reg_6290_pp0_iter8_reg <= k_real_5_reg_6290_pp0_iter7_reg;
        tmp_67_reg_6998_pp0_iter7_reg <= tmp_67_reg_6998;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1019_reg_6680 <= icmp_ln1019_fu_3775_p2;
        tmp_30_reg_6670 <= tmp_30_fu_3733_p18;
        tmp_31_reg_6675 <= tmp_31_fu_3754_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1019_reg_6680_pp0_iter10_reg <= icmp_ln1019_reg_6680_pp0_iter9_reg;
        icmp_ln1019_reg_6680_pp0_iter2_reg <= icmp_ln1019_reg_6680;
        icmp_ln1019_reg_6680_pp0_iter3_reg <= icmp_ln1019_reg_6680_pp0_iter2_reg;
        icmp_ln1019_reg_6680_pp0_iter4_reg <= icmp_ln1019_reg_6680_pp0_iter3_reg;
        icmp_ln1019_reg_6680_pp0_iter5_reg <= icmp_ln1019_reg_6680_pp0_iter4_reg;
        icmp_ln1019_reg_6680_pp0_iter6_reg <= icmp_ln1019_reg_6680_pp0_iter5_reg;
        icmp_ln1019_reg_6680_pp0_iter7_reg <= icmp_ln1019_reg_6680_pp0_iter6_reg;
        icmp_ln1019_reg_6680_pp0_iter8_reg <= icmp_ln1019_reg_6680_pp0_iter7_reg;
        icmp_ln1019_reg_6680_pp0_iter9_reg <= icmp_ln1019_reg_6680_pp0_iter8_reg;
        merge_1_4_reg_7049 <= merge_1_fu_632;
        merge_2_1_reg_7056 <= merge_2_fu_636;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        icmp_ln112_1_reg_6470 <= icmp_ln112_1_fu_3005_p2;
        icmp_ln112_2_reg_6475 <= icmp_ln112_2_fu_3011_p2;
        icmp_ln112_3_reg_6480 <= icmp_ln112_3_fu_3017_p2;
        icmp_ln112_4_reg_6490 <= icmp_ln112_4_fu_3057_p2;
        icmp_ln112_5_reg_6495 <= icmp_ln112_5_fu_3063_p2;
        icmp_ln112_6_reg_6500 <= icmp_ln112_6_fu_3069_p2;
        icmp_ln112_7_reg_6505 <= icmp_ln112_7_fu_3075_p2;
        icmp_ln112_reg_6465 <= icmp_ln112_fu_2999_p2;
        tmp_18_reg_6515 <= tmp_18_fu_3081_p18;
        tmp_19_reg_6520 <= tmp_19_fu_3102_p18;
        tmp_20_reg_6525 <= tmp_20_fu_3123_p18;
        tmp_22_reg_6530 <= tmp_22_fu_3144_p18;
        tmp_27_reg_6535 <= tmp_27_fu_3165_p18;
        tmp_29_reg_6544 <= tmp_29_fu_3186_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_3_reg_6838 <= grp_fu_18138_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_4_reg_6849 <= grp_fu_18138_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_4_reg_6849_pp0_iter3_reg <= mul_4_reg_6849;
        mul_4_reg_6849_pp0_iter4_reg <= mul_4_reg_6849_pp0_iter3_reg;
        mul_4_reg_6849_pp0_iter5_reg <= mul_4_reg_6849_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul_5_reg_6873 <= grp_fu_2431_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ov_10_reg_6888 <= ov_10_fu_3834_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln1027_reg_6297_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ov_11_reg_6931 <= ov_11_fu_3996_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ov_14_reg_6905 <= ov_14_fu_3935_p3;
        ov_24_reg_6895 <= ov_24_fu_3881_p3;
        ov_7_reg_6900 <= ov_7_fu_3928_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln1027_reg_6297_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ov_15_reg_6941 <= ov_15_fu_4043_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ov_18_reg_6917 <= ov_18_fu_3942_p3;
        ov_22_reg_6924 <= ov_22_fu_3949_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_6297_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ov_19_reg_6956 <= ov_19_fu_4090_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_6297_pp0_iter3_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ov_23_reg_6966 <= ov_23_fu_4137_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ov_2_reg_6859 <= ov_2_fu_3820_p3;
        ov_6_reg_6866 <= ov_6_fu_3827_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4) & (icmp_ln1027_reg_6297_pp0_iter4_reg == 1'd1))) begin
        overlap_3_reg_6971 <= grp_fu_2431_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_6297_pp0_iter4_reg == 1'd1))) begin
        overlap_4_reg_6981 <= grp_fu_2431_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln1027_reg_6297_pp0_iter7_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln112_5_reg_6610_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_5_reg_6610_pp0_iter2_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_2445 <= grp_fu_2418_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_11_reg_6665) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_11_reg_6665) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        reg_2451 <= grp_fu_18132_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_1_reg_6552_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_1_reg_6552_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_9_reg_6645_pp0_iter2_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        reg_2456 <= grp_fu_2410_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_3_reg_6557_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_3_reg_6557_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_2460 <= grp_fu_2414_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_9_reg_6645_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln112_7_reg_6615_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_7_reg_6615_pp0_iter2_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        reg_2464 <= grp_fu_2406_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_11_reg_6665_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_11_reg_6665_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_2468 <= grp_fu_2410_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_6297_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_6297_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_2472 <= grp_fu_18138_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_6297_pp0_iter7_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sc_2_reg_7008 <= sc_2_fu_4198_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln1027_reg_6297_pp0_iter9_reg == 1'd1))) begin
        score_load_reg_7041 <= score_fu_640;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        sub75_3_reg_6777 <= grp_fu_18132_p_dout0;
        sub87_3_reg_6782 <= grp_fu_2406_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln112_9_reg_6645) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        sub87_4_reg_6823 <= grp_fu_2406_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_10_reg_6414 <= tmp_10_fu_2818_p18;
        tmp_14_reg_6419 <= tmp_14_fu_2839_p18;
        tmp_15_reg_6424 <= tmp_15_fu_2860_p18;
        tmp_16_reg_6433 <= tmp_16_fu_2881_p18;
        tmp_17_reg_6438 <= tmp_17_fu_2902_p18;
        tmp_21_reg_6447 <= tmp_21_fu_2923_p18;
        tmp_23_reg_6456 <= tmp_23_fu_2944_p18;
        tmp_3_reg_6409 <= tmp_3_fu_2797_p18;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_fu_2519_p2 == 1'd1))) begin
        tmp_11_reg_6390 <= tmp_11_fu_2731_p18;
        tmp_12_reg_6399 <= tmp_12_fu_2753_p18;
        tmp_13_reg_6404 <= tmp_13_fu_2775_p18;
        tmp_1_reg_6371 <= tmp_1_fu_2665_p18;
        tmp_2_reg_6376 <= tmp_2_fu_2687_p18;
        tmp_4_reg_6381 <= tmp_4_fu_2709_p18;
        tmp_5_reg_6338 <= tmp_5_fu_2555_p18;
        tmp_6_reg_6343 <= tmp_6_fu_2577_p18;
        tmp_7_reg_6348 <= tmp_7_fu_2599_p18;
        tmp_8_reg_6357 <= tmp_8_fu_2621_p18;
        tmp_9_reg_6362 <= tmp_9_fu_2643_p18;
        tmp_s_reg_6317 <= tmp_s_fu_2529_p18;
        trunc_ln104_1_reg_6322 <= trunc_ln104_1_fu_2551_p1;
        trunc_ln104_reg_6301 <= trunc_ln104_fu_2525_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_38_reg_6485 <= grp_fu_18143_p_dout0;
        tmp_43_reg_6510 <= grp_fu_18148_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_40_reg_6878 <= grp_fu_18143_p_dout0;
        tmp_45_reg_6883 <= grp_fu_18148_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_48_reg_6582 <= grp_fu_18143_p_dout0;
        tmp_53_reg_6587 <= grp_fu_18148_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_50_reg_6912 <= grp_fu_18143_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln1027_reg_6297_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_55_reg_6936 <= grp_fu_18143_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_58_reg_6630 <= grp_fu_18143_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_63_reg_6660 <= grp_fu_18143_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_6297_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_65_reg_6961 <= grp_fu_18148_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_6297_pp0_iter5_reg == 1'd1))) begin
        tmp_67_reg_6998 <= grp_fu_18148_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_6297_pp0_iter8_reg == 1'd1))) begin
        tmp_70_reg_7022 <= grp_fu_18143_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_6297_pp0_iter9_reg == 1'd1))) begin
        tmp_73_reg_7062 <= grp_fu_18148_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_6297_pp0_iter8_reg == 1'd1))) begin
        tmp_other_4_reg_7027 <= tmp_other_4_fu_4305_p3;
        tmp_score_4_reg_7033 <= tmp_score_4_fu_4312_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln1027_reg_6297_pp0_iter8_reg == 1'd1))) begin
        tmp_score_load_reg_7015 <= tmp_score_fu_652;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_6297 == 1'd0) & (1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_6297_pp0_iter9_reg == 1'd0))) begin
        ap_condition_exit_pp0_iter10_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter10_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to9 = 1'b1;
    end else begin
        ap_idle_pp0_0to9 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to10 = 1'b1;
    end else begin
        ap_idle_pp0_1to10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2402_p0 = tmp_30_reg_6670;
    end else if (((1'd0 == and_ln112_11_reg_6665) & (icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2402_p0 = tmp_33_reg_6592;
    end else if (((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'd1 == and_ln112_11_reg_6665) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2402_p0 = tmp_35_reg_6601;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2402_p0 = tmp_24_reg_6635;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2402_p0 = tmp_26_reg_6620;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2402_p0 = tmp_23_reg_6456;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2402_p0 = tmp_16_reg_6433;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2402_p0 = tmp_7_reg_6348;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2402_p0 = tmp_s_reg_6317;
    end else begin
        grp_fu_2402_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2402_p1 = tmp_31_reg_6675;
    end else if (((1'd0 == and_ln112_11_reg_6665) & (icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2402_p1 = tmp_35_reg_6601;
    end else if (((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'd1 == and_ln112_11_reg_6665) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2402_p1 = tmp_33_reg_6592;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2402_p1 = tmp_25_reg_6640;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2402_p1 = tmp_27_reg_6535;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2402_p1 = tmp_21_reg_6447;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2402_p1 = tmp_17_reg_6438;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2402_p1 = tmp_9_reg_6362;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2402_p1 = tmp_5_reg_6338;
    end else begin
        grp_fu_2402_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2406_p0 = d2_4_reg_6802;
    end else if (((1'd0 == and_ln112_7_reg_6615_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2406_p0 = d2_3_reg_6772;
    end else if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_7_reg_6615_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2406_p0 = d1_3_reg_6767;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2406_p0 = tmp_27_reg_6535;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2406_p0 = tmp_28_reg_6625;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2406_p0 = tmp_21_reg_6447;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2406_p0 = tmp_17_reg_6438;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2406_p0 = tmp_3_reg_6409;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2406_p0 = tmp_6_reg_6343;
    end else begin
        grp_fu_2406_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2406_p1 = sub87_4_reg_6823;
    end else if (((1'd0 == and_ln112_7_reg_6615_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2406_p1 = sub87_3_reg_6782;
    end else if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_7_reg_6615_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2406_p1 = sub75_3_reg_6777;
    end else if ((((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        grp_fu_2406_p1 = tmp_29_reg_6544;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2406_p1 = tmp_23_reg_6456;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2406_p1 = tmp_15_reg_6424;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2406_p1 = tmp_4_reg_6381;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2406_p1 = tmp_7_reg_6348;
    end else begin
        grp_fu_2406_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln112_11_reg_6665_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2410_p0 = d2_5_reg_6833;
    end else if (((1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_11_reg_6665_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2410_p0 = d1_5_reg_6828;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2410_p0 = d1_4_reg_6797;
    end else if (((1'd0 == and_ln112_1_reg_6552_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2410_p0 = d2_reg_6700;
    end else if (((1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_1_reg_6552_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2410_p0 = d1_reg_6695;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2410_p0 = tmp_32_reg_6650;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2410_p0 = tmp_29_reg_6544;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2410_p0 = tmp_15_reg_6424;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2410_p0 = tmp_10_reg_6414;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2410_p0 = tmp_8_reg_6357;
    end else begin
        grp_fu_2410_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_11_reg_6665_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_11_reg_6665_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_2410_p1 = reg_2451;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2410_p1 = sub75_4_reg_6807;
    end else if (((1'd0 == and_ln112_1_reg_6552_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2410_p1 = sub2_reg_6716;
    end else if (((1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_1_reg_6552_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2410_p1 = sub_reg_6705;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2410_p1 = tmp_33_reg_6592;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2410_p1 = tmp_27_reg_6535;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2410_p1 = tmp_17_reg_6438;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2410_p1 = tmp_11_reg_6390;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2410_p1 = tmp_9_reg_6362;
    end else begin
        grp_fu_2410_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_3_reg_6557_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage5_00001) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage7_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage5_00001) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_3_reg_6557_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        grp_fu_2414_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_6297_pp0_iter5_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_6297_pp0_iter4_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_2414_opcode = 2'd0;
    end else begin
        grp_fu_2414_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2414_p0 = distance_3_reg_6986;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2414_p0 = distance_2_reg_6976;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2414_p0 = mul_reg_6787;
    end else if (((1'd0 == and_ln112_3_reg_6557_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2414_p0 = d2_1_reg_6726;
    end else if (((1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_3_reg_6557_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2414_p0 = d1_1_reg_6721;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2414_p0 = tmp_34_reg_6655;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2414_p0 = tmp_18_reg_6515;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2414_p0 = tmp_11_reg_6390;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2414_p0 = tmp_9_reg_6362;
    end else begin
        grp_fu_2414_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2414_p1 = mul_4_reg_6849_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2414_p1 = mul_3_reg_6838_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2414_p1 = 32'd0;
    end else if (((1'd0 == and_ln112_3_reg_6557_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2414_p1 = sub87_1_reg_6736;
    end else if (((1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_3_reg_6557_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2414_p1 = sub75_1_reg_6731;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2414_p1 = tmp_35_reg_6601;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2414_p1 = tmp_19_reg_6520;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2414_p1 = tmp_4_reg_6381;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2414_p1 = tmp_7_reg_6348;
    end else begin
        grp_fu_2414_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage7_00001) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_5_reg_6610_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'd0 == and_ln112_5_reg_6610_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage7_00001) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        grp_fu_2418_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1) & (icmp_ln1027_reg_6297_pp0_iter6_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_2418_opcode = 2'd0;
    end else begin
        grp_fu_2418_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2418_p0 = distance_4_reg_7003;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2418_p0 = distance_reg_6854;
    end else if (((1'd0 == and_ln112_5_reg_6610_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2418_p0 = d2_2_reg_6746;
    end else if (((1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_5_reg_6610_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2418_p0 = d1_2_reg_6741;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2418_p0 = tmp_20_reg_6525;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2418_p0 = tmp_4_reg_6381;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2418_p0 = tmp_1_reg_6371;
    end else begin
        grp_fu_2418_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2418_p1 = mul_5_reg_6873_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2418_p1 = mul_1_reg_6792_pp0_iter2_reg;
    end else if (((1'd0 == and_ln112_5_reg_6610_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2418_p1 = sub87_2_reg_6756;
    end else if (((1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_6297_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_5_reg_6610_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2418_p1 = sub75_2_reg_6751;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2418_p1 = tmp_21_reg_6447;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2418_p1 = tmp_11_reg_6390;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2418_p1 = tmp_2_reg_6376;
    end else begin
        grp_fu_2418_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_2422_opcode = 2'd1;
    end else if (((1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_6297_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2422_opcode = 2'd0;
    end else begin
        grp_fu_2422_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2422_p0 = distance_1_reg_6946;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2422_p0 = tmp_22_reg_6530;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2422_p0 = tmp_14_reg_6419;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2422_p0 = tmp_12_reg_6399;
    end else begin
        grp_fu_2422_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2422_p1 = mul_2_reg_6812_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2422_p1 = tmp_23_reg_6456;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2422_p1 = tmp_15_reg_6424;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2422_p1 = tmp_13_reg_6404;
    end else begin
        grp_fu_2422_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2427_p0 = reg_2472;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2427_p0 = ov_24_reg_6895;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2427_p0 = d_4_reg_6817;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2427_p0 = d_3_reg_6761;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2427_p0 = d_2_reg_6710;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2427_p0 = d_reg_6689;
    end else begin
        grp_fu_2427_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2427_p1 = ov_11_reg_6931;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2427_p1 = ov_7_reg_6900;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2427_p1 = d_4_reg_6817;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2427_p1 = d_3_reg_6761;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2427_p1 = d_2_reg_6710;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2427_p1 = d_reg_6689;
    end else begin
        grp_fu_2427_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2431_p0 = overlap_4_reg_6981;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2431_p0 = overlap_3_reg_6971;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2431_p0 = reg_2472;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2431_p0 = d_5_reg_6843;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2431_p0 = reg_2445;
    end else begin
        grp_fu_2431_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2431_p1 = ov_23_reg_6966_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2431_p1 = ov_19_reg_6956;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2431_p1 = ov_15_reg_6941;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2431_p1 = d_5_reg_6843;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2431_p1 = reg_2445;
    end else begin
        grp_fu_2431_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_00001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln1027_reg_6297_pp0_iter8_reg == 1'd1))) begin
        grp_fu_2435_opcode = 5'd2;
    end else if ((((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_00001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_00001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_2435_opcode = 5'd4;
    end else begin
        grp_fu_2435_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2435_p0 = sc_2_reg_7008;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_2435_p0 = ov_14_reg_6905;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2435_p0 = ov_10_reg_6888;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2435_p0 = ov_2_reg_6859;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2435_p0 = tmp_33_reg_6592;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2435_p0 = tmp_27_reg_6535;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2435_p0 = tmp_15_reg_6424;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2435_p0 = tmp_7_reg_6348;
    end else begin
        grp_fu_2435_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2435_p1 = tmp_score_fu_652;
    end else if ((((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_2435_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2435_p1 = tmp_35_reg_6601;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2435_p1 = tmp_29_reg_6544;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2435_p1 = tmp_17_reg_6438;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2435_p1 = tmp_9_reg_6362;
    end else begin
        grp_fu_2435_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_6297_pp0_iter5_reg == 1'd1)) | ((1'b0 == ap_block_pp0_stage7_00001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7) & (icmp_ln1027_reg_6297_pp0_iter9_reg == 1'd1)))) begin
        grp_fu_2439_opcode = 5'd2;
    end else if ((((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_6297 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_6297_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5_00001) & (icmp_ln1027_reg_6297_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4_00001) & (icmp_ln1027_reg_6297_pp0_iter3_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        grp_fu_2439_opcode = 5'd4;
    end else begin
        grp_fu_2439_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2439_p0 = tmp_score_4_reg_7033;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_2439_p0 = overlap_5_reg_6991;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_2439_p0 = ov_22_reg_6924;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_2439_p0 = ov_18_reg_6917;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_2439_p0 = ov_6_reg_6866;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2439_p0 = tmp_21_reg_6447;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2439_p0 = tmp_4_reg_6381;
    end else begin
        grp_fu_2439_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_2439_p1 = score_fu_640;
    end else if ((((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_2439_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_2439_p1 = tmp_23_reg_6456;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_2439_p1 = tmp_11_reg_6390;
    end else begin
        grp_fu_2439_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_6297_pp0_iter9_reg == 1'd0))) begin
        merge_1_out_ap_vld = 1'b1;
    end else begin
        merge_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0) & (icmp_ln1027_reg_6297_pp0_iter9_reg == 1'd0))) begin
        merge_2_out_ap_vld = 1'b1;
    end else begin
        merge_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to10 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln112_10_fu_3722_p2 = (or_ln112_11_fu_3716_p2 & or_ln112_10_fu_3698_p2);

assign and_ln112_11_fu_3728_p2 = (tmp_63_reg_6660 & and_ln112_10_fu_3722_p2);

assign and_ln112_1_fu_3220_p2 = (or_ln112_fu_3207_p2 & and_ln112_fu_3215_p2);

assign and_ln112_2_fu_3234_p2 = (tmp_43_reg_6510 & or_ln112_3_fu_3230_p2);

assign and_ln112_3_fu_3239_p2 = (or_ln112_2_fu_3226_p2 & and_ln112_2_fu_3234_p2);

assign and_ln112_4_fu_3353_p2 = (or_ln112_5_fu_3349_p2 & or_ln112_4_fu_3345_p2);

assign and_ln112_5_fu_3359_p2 = (tmp_48_reg_6582 & and_ln112_4_fu_3353_p2);

assign and_ln112_6_fu_3434_p2 = (or_ln112_7_fu_3428_p2 & or_ln112_6_fu_3410_p2);

assign and_ln112_7_fu_3440_p2 = (tmp_53_reg_6587 & and_ln112_6_fu_3434_p2);

assign and_ln112_8_fu_3599_p2 = (or_ln112_9_fu_3593_p2 & or_ln112_8_fu_3575_p2);

assign and_ln112_9_fu_3605_p2 = (tmp_58_reg_6630 & and_ln112_8_fu_3599_p2);

assign and_ln112_fu_3215_p2 = (tmp_38_reg_6485 & or_ln112_1_fu_3211_p2);

assign and_ln116_1_fu_3923_p2 = (tmp_45_reg_6883 & or_ln116_1_fu_3917_p2);

assign and_ln116_2_fu_3991_p2 = (tmp_50_reg_6912 & or_ln116_2_fu_3985_p2);

assign and_ln116_3_fu_4038_p2 = (tmp_55_reg_6936 & or_ln116_3_fu_4032_p2);

assign and_ln116_4_fu_4085_p2 = (tmp_60_reg_6951 & or_ln116_4_fu_4079_p2);

assign and_ln116_5_fu_4132_p2 = (tmp_65_reg_6961 & or_ln116_5_fu_4126_p2);

assign and_ln116_fu_3876_p2 = (tmp_40_reg_6878 & or_ln116_fu_3870_p2);

assign and_ln122_fu_4179_p2 = (tmp_67_reg_6998_pp0_iter7_reg & or_ln122_fu_4173_p2);

assign and_ln130_1_fu_4294_p2 = (tmp_70_reg_7022 & and_ln130_fu_4288_p2);

assign and_ln130_fu_4288_p2 = (or_ln130_2_fu_4282_p2 & or_ln130_1_fu_4264_p2);

assign and_ln139_1_fu_4443_p2 = (tmp_73_reg_7062 & and_ln139_fu_4437_p2);

assign and_ln139_fu_4437_p2 = (or_ln139_2_fu_4431_p2 & or_ln139_1_fu_4413_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage5_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage6_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage7_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage5_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage6_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage7_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage4_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage5_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage6_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage7_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage7;

assign bitcast_ln112_10_fu_3652_p1 = tmp_33_reg_6592;

assign bitcast_ln112_11_fu_3669_p1 = tmp_35_reg_6601;

assign bitcast_ln112_1_fu_2982_p1 = tmp_9_reg_6362;

assign bitcast_ln112_2_fu_3023_p1 = tmp_4_reg_6381;

assign bitcast_ln112_3_fu_3040_p1 = tmp_11_reg_6390;

assign bitcast_ln112_4_fu_3245_p1 = tmp_15_reg_6424;

assign bitcast_ln112_5_fu_3262_p1 = tmp_17_reg_6438;

assign bitcast_ln112_6_fu_3364_p1 = tmp_21_reg_6447;

assign bitcast_ln112_7_fu_3381_p1 = tmp_23_reg_6456;

assign bitcast_ln112_8_fu_3529_p1 = tmp_27_reg_6535;

assign bitcast_ln112_9_fu_3546_p1 = tmp_29_reg_6544;

assign bitcast_ln112_fu_2965_p1 = tmp_7_reg_6348;

assign bitcast_ln116_1_fu_3888_p1 = ov_6_reg_6866;

assign bitcast_ln116_2_fu_3956_p1 = ov_10_reg_6888;

assign bitcast_ln116_3_fu_4003_p1 = ov_14_reg_6905;

assign bitcast_ln116_4_fu_4050_p1 = ov_18_reg_6917;

assign bitcast_ln116_5_fu_4097_p1 = ov_22_reg_6924;

assign bitcast_ln116_fu_3841_p1 = ov_2_reg_6859;

assign bitcast_ln122_fu_4144_p1 = overlap_5_reg_6991_pp0_iter7_reg;

assign bitcast_ln126_fu_4184_p1 = reg_2445;

assign bitcast_ln130_1_fu_4235_p1 = tmp_score_load_reg_7015;

assign bitcast_ln130_fu_4218_p1 = sc_2_reg_7008;

assign bitcast_ln139_1_fu_4384_p1 = score_load_reg_7041;

assign bitcast_ln139_fu_4367_p1 = tmp_score_4_reg_7033;

assign grp_fu_18132_p_ce = 1'b1;

assign grp_fu_18132_p_din0 = grp_fu_2402_p0;

assign grp_fu_18132_p_din1 = grp_fu_2402_p1;

assign grp_fu_18132_p_opcode = 2'd1;

assign grp_fu_18138_p_ce = 1'b1;

assign grp_fu_18138_p_din0 = grp_fu_2427_p0;

assign grp_fu_18138_p_din1 = grp_fu_2427_p1;

assign grp_fu_18143_p_ce = 1'b1;

assign grp_fu_18143_p_din0 = grp_fu_2435_p0;

assign grp_fu_18143_p_din1 = grp_fu_2435_p1;

assign grp_fu_18143_p_opcode = grp_fu_2435_opcode;

assign grp_fu_18148_p_ce = 1'b1;

assign grp_fu_18148_p_din0 = grp_fu_2439_p0;

assign grp_fu_18148_p_din1 = grp_fu_2439_p1;

assign grp_fu_18148_p_opcode = grp_fu_2439_opcode;

assign i_real_2_fu_3803_p3 = ((icmp_ln1019_fu_3775_p2[0:0] == 1'b1) ? i_real_fu_3780_p2 : i_real_3_reg_6282);

assign i_real_fu_3780_p2 = (i_real_3_reg_6282 + 32'd1);

assign icmp_ln1019_fu_3775_p2 = ((k_real_5_reg_6290 == 32'd15) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_2519_p2 = (($signed(merge_1_1_fu_644) < $signed(32'd15)) ? 1'b1 : 1'b0);

assign icmp_ln112_10_fu_3291_p2 = ((tmp_47_fu_3265_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_11_fu_3297_p2 = ((trunc_ln112_5_fu_3275_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_12_fu_3398_p2 = ((tmp_51_fu_3367_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_13_fu_3404_p2 = ((trunc_ln112_6_fu_3377_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_14_fu_3416_p2 = ((tmp_52_fu_3384_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_15_fu_3422_p2 = ((trunc_ln112_7_fu_3394_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_16_fu_3563_p2 = ((tmp_56_fu_3532_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_17_fu_3569_p2 = ((trunc_ln112_8_fu_3542_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_18_fu_3581_p2 = ((tmp_57_fu_3549_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_19_fu_3587_p2 = ((trunc_ln112_9_fu_3559_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_1_fu_3005_p2 = ((trunc_ln112_fu_2978_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_20_fu_3686_p2 = ((tmp_61_fu_3655_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_21_fu_3692_p2 = ((trunc_ln112_10_fu_3665_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_22_fu_3704_p2 = ((tmp_62_fu_3672_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_23_fu_3710_p2 = ((trunc_ln112_11_fu_3682_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_2_fu_3011_p2 = ((tmp_37_fu_2985_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_3_fu_3017_p2 = ((trunc_ln112_1_fu_2995_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_4_fu_3057_p2 = ((tmp_41_fu_3026_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_5_fu_3063_p2 = ((trunc_ln112_2_fu_3036_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_6_fu_3069_p2 = ((tmp_42_fu_3043_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_7_fu_3075_p2 = ((trunc_ln112_3_fu_3053_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_8_fu_3279_p2 = ((tmp_46_fu_3248_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_9_fu_3285_p2 = ((trunc_ln112_4_fu_3258_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_fu_2999_p2 = ((tmp_36_fu_2968_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_10_fu_4114_p2 = ((tmp_64_fu_4100_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_11_fu_4120_p2 = ((trunc_ln116_5_fu_4110_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_1_fu_3864_p2 = ((trunc_ln116_fu_3854_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_2_fu_3905_p2 = ((tmp_44_fu_3891_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_3_fu_3911_p2 = ((trunc_ln116_1_fu_3901_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_4_fu_3973_p2 = ((tmp_49_fu_3959_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_5_fu_3979_p2 = ((trunc_ln116_2_fu_3969_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_6_fu_4020_p2 = ((tmp_54_fu_4006_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_7_fu_4026_p2 = ((trunc_ln116_3_fu_4016_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_8_fu_4067_p2 = ((tmp_59_fu_4053_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_9_fu_4073_p2 = ((trunc_ln116_4_fu_4063_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_3858_p2 = ((tmp_39_fu_3844_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln122_1_fu_4167_p2 = ((trunc_ln122_fu_4157_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_4161_p2 = ((tmp_66_fu_4147_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_1_fu_4252_p2 = ((tmp_68_fu_4221_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_2_fu_4258_p2 = ((trunc_ln130_fu_4231_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_3_fu_4270_p2 = ((tmp_69_fu_4238_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_4_fu_4276_p2 = ((trunc_ln130_1_fu_4248_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_fu_4212_p2 = ((tmp_other_fu_656 == 32'd4294967295) ? 1'b1 : 1'b0);

assign icmp_ln139_1_fu_4407_p2 = ((trunc_ln139_fu_4380_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln139_2_fu_4419_p2 = ((tmp_72_fu_4387_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln139_3_fu_4425_p2 = ((trunc_ln139_1_fu_4397_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln139_fu_4401_p2 = ((tmp_71_fu_4370_p4 != 8'd255) ? 1'b1 : 1'b0);

assign k_real_2_fu_3790_p2 = (k_real_5_reg_6290 + 32'd1);

assign k_real_3_fu_3795_p3 = ((icmp_ln1019_fu_3775_p2[0:0] == 1'b1) ? k_real_fu_3785_p2 : k_real_2_fu_3790_p2);

assign k_real_fu_3785_p2 = (i_real_3_reg_6282 + 32'd2);

assign merge_1_6_fu_4466_p3 = ((or_ln139_fu_4448_p2[0:0] == 1'b1) ? i_real_3_reg_6282_pp0_iter9_reg : merge_1_4_reg_7049);

assign merge_1_7_fu_4484_p3 = ((icmp_ln1019_reg_6680_pp0_iter10_reg[0:0] == 1'b1) ? merge_1_6_fu_4466_p3 : merge_1_4_reg_7049);

assign merge_1_out = merge_1_fu_632[3:0];

assign merge_2_5_fu_4460_p3 = ((or_ln139_fu_4448_p2[0:0] == 1'b1) ? tmp_other_4_reg_7027 : merge_2_1_reg_7056);

assign merge_2_6_fu_4478_p3 = ((icmp_ln1019_reg_6680_pp0_iter10_reg[0:0] == 1'b1) ? merge_2_5_fu_4460_p3 : merge_2_1_reg_7056);

assign merge_2_out = merge_2_fu_636[3:0];

assign or_ln112_10_fu_3698_p2 = (icmp_ln112_21_fu_3692_p2 | icmp_ln112_20_fu_3686_p2);

assign or_ln112_11_fu_3716_p2 = (icmp_ln112_23_fu_3710_p2 | icmp_ln112_22_fu_3704_p2);

assign or_ln112_1_fu_3211_p2 = (icmp_ln112_3_reg_6480 | icmp_ln112_2_reg_6475);

assign or_ln112_2_fu_3226_p2 = (icmp_ln112_5_reg_6495 | icmp_ln112_4_reg_6490);

assign or_ln112_3_fu_3230_p2 = (icmp_ln112_7_reg_6505 | icmp_ln112_6_reg_6500);

assign or_ln112_4_fu_3345_p2 = (icmp_ln112_9_reg_6567 | icmp_ln112_8_reg_6562);

assign or_ln112_5_fu_3349_p2 = (icmp_ln112_11_reg_6577 | icmp_ln112_10_reg_6572);

assign or_ln112_6_fu_3410_p2 = (icmp_ln112_13_fu_3404_p2 | icmp_ln112_12_fu_3398_p2);

assign or_ln112_7_fu_3428_p2 = (icmp_ln112_15_fu_3422_p2 | icmp_ln112_14_fu_3416_p2);

assign or_ln112_8_fu_3575_p2 = (icmp_ln112_17_fu_3569_p2 | icmp_ln112_16_fu_3563_p2);

assign or_ln112_9_fu_3593_p2 = (icmp_ln112_19_fu_3587_p2 | icmp_ln112_18_fu_3581_p2);

assign or_ln112_fu_3207_p2 = (icmp_ln112_reg_6465 | icmp_ln112_1_reg_6470);

assign or_ln116_1_fu_3917_p2 = (icmp_ln116_3_fu_3911_p2 | icmp_ln116_2_fu_3905_p2);

assign or_ln116_2_fu_3985_p2 = (icmp_ln116_5_fu_3979_p2 | icmp_ln116_4_fu_3973_p2);

assign or_ln116_3_fu_4032_p2 = (icmp_ln116_7_fu_4026_p2 | icmp_ln116_6_fu_4020_p2);

assign or_ln116_4_fu_4079_p2 = (icmp_ln116_9_fu_4073_p2 | icmp_ln116_8_fu_4067_p2);

assign or_ln116_5_fu_4126_p2 = (icmp_ln116_11_fu_4120_p2 | icmp_ln116_10_fu_4114_p2);

assign or_ln116_fu_3870_p2 = (icmp_ln116_fu_3858_p2 | icmp_ln116_1_fu_3864_p2);

assign or_ln122_fu_4173_p2 = (icmp_ln122_fu_4161_p2 | icmp_ln122_1_fu_4167_p2);

assign or_ln130_1_fu_4264_p2 = (icmp_ln130_2_fu_4258_p2 | icmp_ln130_1_fu_4252_p2);

assign or_ln130_2_fu_4282_p2 = (icmp_ln130_4_fu_4276_p2 | icmp_ln130_3_fu_4270_p2);

assign or_ln130_fu_4299_p2 = (icmp_ln130_fu_4212_p2 | and_ln130_1_fu_4294_p2);

assign or_ln139_1_fu_4413_p2 = (icmp_ln139_fu_4401_p2 | icmp_ln139_1_fu_4407_p2);

assign or_ln139_2_fu_4431_p2 = (icmp_ln139_3_fu_4425_p2 | icmp_ln139_2_fu_4419_p2);

assign or_ln139_fu_4448_p2 = (tmp_fu_4360_p3 | and_ln139_1_fu_4443_p2);

assign ov_10_fu_3834_p3 = ((and_ln112_5_reg_6610_pp0_iter2_reg[0:0] == 1'b1) ? reg_2445 : reg_2445);

assign ov_11_fu_3996_p3 = ((and_ln116_2_fu_3991_p2[0:0] == 1'b1) ? 32'd0 : ov_10_reg_6888);

assign ov_14_fu_3935_p3 = ((and_ln112_7_reg_6615_pp0_iter2_reg[0:0] == 1'b1) ? reg_2464 : reg_2464);

assign ov_15_fu_4043_p3 = ((and_ln116_3_fu_4038_p2[0:0] == 1'b1) ? 32'd0 : ov_14_reg_6905);

assign ov_18_fu_3942_p3 = ((and_ln112_9_reg_6645_pp0_iter2_reg[0:0] == 1'b1) ? reg_2456 : reg_2464);

assign ov_19_fu_4090_p3 = ((and_ln116_4_fu_4085_p2[0:0] == 1'b1) ? 32'd0 : ov_18_reg_6917);

assign ov_22_fu_3949_p3 = ((and_ln112_11_reg_6665_pp0_iter2_reg[0:0] == 1'b1) ? reg_2468 : reg_2468);

assign ov_23_fu_4137_p3 = ((and_ln116_5_fu_4132_p2[0:0] == 1'b1) ? 32'd0 : ov_22_reg_6924);

assign ov_24_fu_3881_p3 = ((and_ln116_fu_3876_p2[0:0] == 1'b1) ? 32'd0 : ov_2_reg_6859);

assign ov_2_fu_3820_p3 = ((and_ln112_1_reg_6552_pp0_iter2_reg[0:0] == 1'b1) ? reg_2456 : reg_2456);

assign ov_6_fu_3827_p3 = ((and_ln112_3_reg_6557_pp0_iter2_reg[0:0] == 1'b1) ? reg_2460 : reg_2460);

assign ov_7_fu_3928_p3 = ((and_ln116_1_fu_3923_p2[0:0] == 1'b1) ? 32'd0 : ov_6_reg_6866);

assign sc_2_fu_4198_p3 = ((and_ln122_fu_4179_p2[0:0] == 1'b1) ? overlap_5_reg_6991_pp0_iter7_reg : sc_fu_4194_p1);

assign sc_fu_4194_p1 = xor_ln126_fu_4188_p2;

assign score_2_fu_4454_p3 = ((or_ln139_fu_4448_p2[0:0] == 1'b1) ? tmp_score_4_reg_7033 : score_load_reg_7041);

assign score_3_fu_4472_p3 = ((icmp_ln1019_reg_6680_pp0_iter10_reg[0:0] == 1'b1) ? score_2_fu_4454_p3 : score_load_reg_7041);

assign tmp_36_fu_2968_p4 = {{bitcast_ln112_fu_2965_p1[30:23]}};

assign tmp_37_fu_2985_p4 = {{bitcast_ln112_1_fu_2982_p1[30:23]}};

assign tmp_39_fu_3844_p4 = {{bitcast_ln116_fu_3841_p1[30:23]}};

assign tmp_41_fu_3026_p4 = {{bitcast_ln112_2_fu_3023_p1[30:23]}};

assign tmp_42_fu_3043_p4 = {{bitcast_ln112_3_fu_3040_p1[30:23]}};

assign tmp_44_fu_3891_p4 = {{bitcast_ln116_1_fu_3888_p1[30:23]}};

assign tmp_46_fu_3248_p4 = {{bitcast_ln112_4_fu_3245_p1[30:23]}};

assign tmp_47_fu_3265_p4 = {{bitcast_ln112_5_fu_3262_p1[30:23]}};

assign tmp_49_fu_3959_p4 = {{bitcast_ln116_2_fu_3956_p1[30:23]}};

assign tmp_51_fu_3367_p4 = {{bitcast_ln112_6_fu_3364_p1[30:23]}};

assign tmp_52_fu_3384_p4 = {{bitcast_ln112_7_fu_3381_p1[30:23]}};

assign tmp_54_fu_4006_p4 = {{bitcast_ln116_3_fu_4003_p1[30:23]}};

assign tmp_56_fu_3532_p4 = {{bitcast_ln112_8_fu_3529_p1[30:23]}};

assign tmp_57_fu_3549_p4 = {{bitcast_ln112_9_fu_3546_p1[30:23]}};

assign tmp_59_fu_4053_p4 = {{bitcast_ln116_4_fu_4050_p1[30:23]}};

assign tmp_61_fu_3655_p4 = {{bitcast_ln112_10_fu_3652_p1[30:23]}};

assign tmp_62_fu_3672_p4 = {{bitcast_ln112_11_fu_3669_p1[30:23]}};

assign tmp_64_fu_4100_p4 = {{bitcast_ln116_5_fu_4097_p1[30:23]}};

assign tmp_66_fu_4147_p4 = {{bitcast_ln122_fu_4144_p1[30:23]}};

assign tmp_68_fu_4221_p4 = {{bitcast_ln130_fu_4218_p1[30:23]}};

assign tmp_69_fu_4238_p4 = {{bitcast_ln130_1_fu_4235_p1[30:23]}};

assign tmp_71_fu_4370_p4 = {{bitcast_ln139_fu_4367_p1[30:23]}};

assign tmp_72_fu_4387_p4 = {{bitcast_ln139_1_fu_4384_p1[30:23]}};

assign tmp_fu_4360_p3 = merge_1_4_reg_7049[32'd31];

assign tmp_other_3_fu_4318_p3 = ((icmp_ln1019_reg_6680_pp0_iter9_reg[0:0] == 1'b1) ? 32'd4294967295 : tmp_other_4_reg_7027);

assign tmp_other_4_fu_4305_p3 = ((or_ln130_fu_4299_p2[0:0] == 1'b1) ? k_real_5_reg_6290_pp0_iter8_reg : tmp_other_fu_656);

assign tmp_score_3_fu_4324_p3 = ((icmp_ln1019_reg_6680_pp0_iter9_reg[0:0] == 1'b1) ? 32'd0 : tmp_score_4_reg_7033);

assign tmp_score_4_fu_4312_p3 = ((or_ln130_fu_4299_p2[0:0] == 1'b1) ? sc_2_reg_7008 : tmp_score_load_reg_7015);

assign trunc_ln104_1_fu_2551_p1 = k_real_4_fu_648[3:0];

assign trunc_ln104_fu_2525_p1 = merge_1_1_fu_644[3:0];

assign trunc_ln112_10_fu_3665_p1 = bitcast_ln112_10_fu_3652_p1[22:0];

assign trunc_ln112_11_fu_3682_p1 = bitcast_ln112_11_fu_3669_p1[22:0];

assign trunc_ln112_1_fu_2995_p1 = bitcast_ln112_1_fu_2982_p1[22:0];

assign trunc_ln112_2_fu_3036_p1 = bitcast_ln112_2_fu_3023_p1[22:0];

assign trunc_ln112_3_fu_3053_p1 = bitcast_ln112_3_fu_3040_p1[22:0];

assign trunc_ln112_4_fu_3258_p1 = bitcast_ln112_4_fu_3245_p1[22:0];

assign trunc_ln112_5_fu_3275_p1 = bitcast_ln112_5_fu_3262_p1[22:0];

assign trunc_ln112_6_fu_3377_p1 = bitcast_ln112_6_fu_3364_p1[22:0];

assign trunc_ln112_7_fu_3394_p1 = bitcast_ln112_7_fu_3381_p1[22:0];

assign trunc_ln112_8_fu_3542_p1 = bitcast_ln112_8_fu_3529_p1[22:0];

assign trunc_ln112_9_fu_3559_p1 = bitcast_ln112_9_fu_3546_p1[22:0];

assign trunc_ln112_fu_2978_p1 = bitcast_ln112_fu_2965_p1[22:0];

assign trunc_ln116_1_fu_3901_p1 = bitcast_ln116_1_fu_3888_p1[22:0];

assign trunc_ln116_2_fu_3969_p1 = bitcast_ln116_2_fu_3956_p1[22:0];

assign trunc_ln116_3_fu_4016_p1 = bitcast_ln116_3_fu_4003_p1[22:0];

assign trunc_ln116_4_fu_4063_p1 = bitcast_ln116_4_fu_4050_p1[22:0];

assign trunc_ln116_5_fu_4110_p1 = bitcast_ln116_5_fu_4097_p1[22:0];

assign trunc_ln116_fu_3854_p1 = bitcast_ln116_fu_3841_p1[22:0];

assign trunc_ln122_fu_4157_p1 = bitcast_ln122_fu_4144_p1[22:0];

assign trunc_ln130_1_fu_4248_p1 = bitcast_ln130_1_fu_4235_p1[22:0];

assign trunc_ln130_fu_4231_p1 = bitcast_ln130_fu_4218_p1[22:0];

assign trunc_ln139_1_fu_4397_p1 = bitcast_ln139_1_fu_4384_p1[22:0];

assign trunc_ln139_fu_4380_p1 = bitcast_ln139_fu_4367_p1[22:0];

assign xor_ln126_fu_4188_p2 = (bitcast_ln126_fu_4184_p1 ^ 32'd2147483648);

endmodule //FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1
