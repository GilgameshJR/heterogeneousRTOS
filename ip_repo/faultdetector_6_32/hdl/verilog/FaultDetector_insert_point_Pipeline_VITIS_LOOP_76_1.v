// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
// Version: 2022.2
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1 (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        regions_center_0_0_0,
        regions_center_1_0_0,
        regions_center_2_0_0,
        regions_center_3_0_0,
        regions_center_4_0_0,
        regions_center_5_0_0,
        regions_center_6_0_0,
        regions_center_7_0_0,
        regions_center_8_0_0,
        regions_center_9_0_0,
        regions_center_10_0_0,
        regions_center_11_0_0,
        regions_center_12_0_0,
        regions_center_13_0_0,
        regions_center_14_0_0,
        regions_center_15_0_0,
        regions_center_16_0_0,
        regions_center_17_0_0,
        regions_center_18_0_0,
        regions_center_19_0_0,
        regions_center_20_0_0,
        regions_center_21_0_0,
        regions_center_22_0_0,
        regions_center_23_0_0,
        regions_center_24_0_0,
        regions_center_25_0_0,
        regions_center_26_0_0,
        regions_center_27_0_0,
        regions_center_28_0_0,
        regions_center_29_0_0,
        regions_center_30_0_0,
        regions_center_31_0_0,
        regions_max_0_0_0,
        regions_max_1_0_0,
        regions_max_2_0_0,
        regions_max_3_0_0,
        regions_max_4_0_0,
        regions_max_5_0_0,
        regions_max_6_0_0,
        regions_max_7_0_0,
        regions_max_8_0_0,
        regions_max_9_0_0,
        regions_max_10_0_0,
        regions_max_11_0_0,
        regions_max_12_0_0,
        regions_max_13_0_0,
        regions_max_14_0_0,
        regions_max_15_0_0,
        regions_max_16_0_0,
        regions_max_17_0_0,
        regions_max_18_0_0,
        regions_max_19_0_0,
        regions_max_20_0_0,
        regions_max_21_0_0,
        regions_max_22_0_0,
        regions_max_23_0_0,
        regions_max_24_0_0,
        regions_max_25_0_0,
        regions_max_26_0_0,
        regions_max_27_0_0,
        regions_max_28_0_0,
        regions_max_29_0_0,
        regions_max_30_0_0,
        regions_max_31_0_0,
        regions_min_0_0_0,
        regions_min_1_0_0,
        regions_min_2_0_0,
        regions_min_3_0_0,
        regions_min_4_0_0,
        regions_min_5_0_0,
        regions_min_6_0_0,
        regions_min_7_0_0,
        regions_min_8_0_0,
        regions_min_9_0_0,
        regions_min_10_0_0,
        regions_min_11_0_0,
        regions_min_12_0_0,
        regions_min_13_0_0,
        regions_min_14_0_0,
        regions_min_15_0_0,
        regions_min_16_0_0,
        regions_min_17_0_0,
        regions_min_18_0_0,
        regions_min_19_0_0,
        regions_min_20_0_0,
        regions_min_21_0_0,
        regions_min_22_0_0,
        regions_min_23_0_0,
        regions_min_24_0_0,
        regions_min_25_0_0,
        regions_min_26_0_0,
        regions_min_27_0_0,
        regions_min_28_0_0,
        regions_min_29_0_0,
        regions_min_30_0_0,
        regions_min_31_0_0,
        regions_center_0_1_0,
        regions_center_1_1_0,
        regions_center_2_1_0,
        regions_center_3_1_0,
        regions_center_4_1_0,
        regions_center_5_1_0,
        regions_center_6_1_0,
        regions_center_7_1_0,
        regions_center_8_1_0,
        regions_center_9_1_0,
        regions_center_10_1_0,
        regions_center_11_1_0,
        regions_center_12_1_0,
        regions_center_13_1_0,
        regions_center_14_1_0,
        regions_center_15_1_0,
        regions_center_16_1_0,
        regions_center_17_1_0,
        regions_center_18_1_0,
        regions_center_19_1_0,
        regions_center_20_1_0,
        regions_center_21_1_0,
        regions_center_22_1_0,
        regions_center_23_1_0,
        regions_center_24_1_0,
        regions_center_25_1_0,
        regions_center_26_1_0,
        regions_center_27_1_0,
        regions_center_28_1_0,
        regions_center_29_1_0,
        regions_center_30_1_0,
        regions_center_31_1_0,
        regions_max_0_1_0,
        regions_max_1_1_0,
        regions_max_2_1_0,
        regions_max_3_1_0,
        regions_max_4_1_0,
        regions_max_5_1_0,
        regions_max_6_1_0,
        regions_max_7_1_0,
        regions_max_8_1_0,
        regions_max_9_1_0,
        regions_max_10_1_0,
        regions_max_11_1_0,
        regions_max_12_1_0,
        regions_max_13_1_0,
        regions_max_14_1_0,
        regions_max_15_1_0,
        regions_max_16_1_0,
        regions_max_17_1_0,
        regions_max_18_1_0,
        regions_max_19_1_0,
        regions_max_20_1_0,
        regions_max_21_1_0,
        regions_max_22_1_0,
        regions_max_23_1_0,
        regions_max_24_1_0,
        regions_max_25_1_0,
        regions_max_26_1_0,
        regions_max_27_1_0,
        regions_max_28_1_0,
        regions_max_29_1_0,
        regions_max_30_1_0,
        regions_max_31_1_0,
        regions_min_0_1_0,
        regions_min_1_1_0,
        regions_min_2_1_0,
        regions_min_3_1_0,
        regions_min_4_1_0,
        regions_min_5_1_0,
        regions_min_6_1_0,
        regions_min_7_1_0,
        regions_min_8_1_0,
        regions_min_9_1_0,
        regions_min_10_1_0,
        regions_min_11_1_0,
        regions_min_12_1_0,
        regions_min_13_1_0,
        regions_min_14_1_0,
        regions_min_15_1_0,
        regions_min_16_1_0,
        regions_min_17_1_0,
        regions_min_18_1_0,
        regions_min_19_1_0,
        regions_min_20_1_0,
        regions_min_21_1_0,
        regions_min_22_1_0,
        regions_min_23_1_0,
        regions_min_24_1_0,
        regions_min_25_1_0,
        regions_min_26_1_0,
        regions_min_27_1_0,
        regions_min_28_1_0,
        regions_min_29_1_0,
        regions_min_30_1_0,
        regions_min_31_1_0,
        regions_center_0_2_0,
        regions_center_1_2_0,
        regions_center_2_2_0,
        regions_center_3_2_0,
        regions_center_4_2_0,
        regions_center_5_2_0,
        regions_center_6_2_0,
        regions_center_7_2_0,
        regions_center_8_2_0,
        regions_center_9_2_0,
        regions_center_10_2_0,
        regions_center_11_2_0,
        regions_center_12_2_0,
        regions_center_13_2_0,
        regions_center_14_2_0,
        regions_center_15_2_0,
        regions_center_16_2_0,
        regions_center_17_2_0,
        regions_center_18_2_0,
        regions_center_19_2_0,
        regions_center_20_2_0,
        regions_center_21_2_0,
        regions_center_22_2_0,
        regions_center_23_2_0,
        regions_center_24_2_0,
        regions_center_25_2_0,
        regions_center_26_2_0,
        regions_center_27_2_0,
        regions_center_28_2_0,
        regions_center_29_2_0,
        regions_center_30_2_0,
        regions_center_31_2_0,
        regions_max_0_2_0,
        regions_max_1_2_0,
        regions_max_2_2_0,
        regions_max_3_2_0,
        regions_max_4_2_0,
        regions_max_5_2_0,
        regions_max_6_2_0,
        regions_max_7_2_0,
        regions_max_8_2_0,
        regions_max_9_2_0,
        regions_max_10_2_0,
        regions_max_11_2_0,
        regions_max_12_2_0,
        regions_max_13_2_0,
        regions_max_14_2_0,
        regions_max_15_2_0,
        regions_max_16_2_0,
        regions_max_17_2_0,
        regions_max_18_2_0,
        regions_max_19_2_0,
        regions_max_20_2_0,
        regions_max_21_2_0,
        regions_max_22_2_0,
        regions_max_23_2_0,
        regions_max_24_2_0,
        regions_max_25_2_0,
        regions_max_26_2_0,
        regions_max_27_2_0,
        regions_max_28_2_0,
        regions_max_29_2_0,
        regions_max_30_2_0,
        regions_max_31_2_0,
        regions_min_0_2_0,
        regions_min_1_2_0,
        regions_min_2_2_0,
        regions_min_3_2_0,
        regions_min_4_2_0,
        regions_min_5_2_0,
        regions_min_6_2_0,
        regions_min_7_2_0,
        regions_min_8_2_0,
        regions_min_9_2_0,
        regions_min_10_2_0,
        regions_min_11_2_0,
        regions_min_12_2_0,
        regions_min_13_2_0,
        regions_min_14_2_0,
        regions_min_15_2_0,
        regions_min_16_2_0,
        regions_min_17_2_0,
        regions_min_18_2_0,
        regions_min_19_2_0,
        regions_min_20_2_0,
        regions_min_21_2_0,
        regions_min_22_2_0,
        regions_min_23_2_0,
        regions_min_24_2_0,
        regions_min_25_2_0,
        regions_min_26_2_0,
        regions_min_27_2_0,
        regions_min_28_2_0,
        regions_min_29_2_0,
        regions_min_30_2_0,
        regions_min_31_2_0,
        regions_center_0_3_0,
        regions_center_1_3_0,
        regions_center_2_3_0,
        regions_center_3_3_0,
        regions_center_4_3_0,
        regions_center_5_3_0,
        regions_center_6_3_0,
        regions_center_7_3_0,
        regions_center_8_3_0,
        regions_center_9_3_0,
        regions_center_10_3_0,
        regions_center_11_3_0,
        regions_center_12_3_0,
        regions_center_13_3_0,
        regions_center_14_3_0,
        regions_center_15_3_0,
        regions_center_16_3_0,
        regions_center_17_3_0,
        regions_center_18_3_0,
        regions_center_19_3_0,
        regions_center_20_3_0,
        regions_center_21_3_0,
        regions_center_22_3_0,
        regions_center_23_3_0,
        regions_center_24_3_0,
        regions_center_25_3_0,
        regions_center_26_3_0,
        regions_center_27_3_0,
        regions_center_28_3_0,
        regions_center_29_3_0,
        regions_center_30_3_0,
        regions_center_31_3_0,
        regions_max_0_3_0,
        regions_max_1_3_0,
        regions_max_2_3_0,
        regions_max_3_3_0,
        regions_max_4_3_0,
        regions_max_5_3_0,
        regions_max_6_3_0,
        regions_max_7_3_0,
        regions_max_8_3_0,
        regions_max_9_3_0,
        regions_max_10_3_0,
        regions_max_11_3_0,
        regions_max_12_3_0,
        regions_max_13_3_0,
        regions_max_14_3_0,
        regions_max_15_3_0,
        regions_max_16_3_0,
        regions_max_17_3_0,
        regions_max_18_3_0,
        regions_max_19_3_0,
        regions_max_20_3_0,
        regions_max_21_3_0,
        regions_max_22_3_0,
        regions_max_23_3_0,
        regions_max_24_3_0,
        regions_max_25_3_0,
        regions_max_26_3_0,
        regions_max_27_3_0,
        regions_max_28_3_0,
        regions_max_29_3_0,
        regions_max_30_3_0,
        regions_max_31_3_0,
        regions_min_0_3_0,
        regions_min_1_3_0,
        regions_min_2_3_0,
        regions_min_3_3_0,
        regions_min_4_3_0,
        regions_min_5_3_0,
        regions_min_6_3_0,
        regions_min_7_3_0,
        regions_min_8_3_0,
        regions_min_9_3_0,
        regions_min_10_3_0,
        regions_min_11_3_0,
        regions_min_12_3_0,
        regions_min_13_3_0,
        regions_min_14_3_0,
        regions_min_15_3_0,
        regions_min_16_3_0,
        regions_min_17_3_0,
        regions_min_18_3_0,
        regions_min_19_3_0,
        regions_min_20_3_0,
        regions_min_21_3_0,
        regions_min_22_3_0,
        regions_min_23_3_0,
        regions_min_24_3_0,
        regions_min_25_3_0,
        regions_min_26_3_0,
        regions_min_27_3_0,
        regions_min_28_3_0,
        regions_min_29_3_0,
        regions_min_30_3_0,
        regions_min_31_3_0,
        regions_center_0_4_0,
        regions_center_1_4_0,
        regions_center_2_4_0,
        regions_center_3_4_0,
        regions_center_4_4_0,
        regions_center_5_4_0,
        regions_center_6_4_0,
        regions_center_7_4_0,
        regions_center_8_4_0,
        regions_center_9_4_0,
        regions_center_10_4_0,
        regions_center_11_4_0,
        regions_center_12_4_0,
        regions_center_13_4_0,
        regions_center_14_4_0,
        regions_center_15_4_0,
        regions_center_16_4_0,
        regions_center_17_4_0,
        regions_center_18_4_0,
        regions_center_19_4_0,
        regions_center_20_4_0,
        regions_center_21_4_0,
        regions_center_22_4_0,
        regions_center_23_4_0,
        regions_center_24_4_0,
        regions_center_25_4_0,
        regions_center_26_4_0,
        regions_center_27_4_0,
        regions_center_28_4_0,
        regions_center_29_4_0,
        regions_center_30_4_0,
        regions_center_31_4_0,
        regions_max_0_4_0,
        regions_max_1_4_0,
        regions_max_2_4_0,
        regions_max_3_4_0,
        regions_max_4_4_0,
        regions_max_5_4_0,
        regions_max_6_4_0,
        regions_max_7_4_0,
        regions_max_8_4_0,
        regions_max_9_4_0,
        regions_max_10_4_0,
        regions_max_11_4_0,
        regions_max_12_4_0,
        regions_max_13_4_0,
        regions_max_14_4_0,
        regions_max_15_4_0,
        regions_max_16_4_0,
        regions_max_17_4_0,
        regions_max_18_4_0,
        regions_max_19_4_0,
        regions_max_20_4_0,
        regions_max_21_4_0,
        regions_max_22_4_0,
        regions_max_23_4_0,
        regions_max_24_4_0,
        regions_max_25_4_0,
        regions_max_26_4_0,
        regions_max_27_4_0,
        regions_max_28_4_0,
        regions_max_29_4_0,
        regions_max_30_4_0,
        regions_max_31_4_0,
        regions_min_0_4_0,
        regions_min_1_4_0,
        regions_min_2_4_0,
        regions_min_3_4_0,
        regions_min_4_4_0,
        regions_min_5_4_0,
        regions_min_6_4_0,
        regions_min_7_4_0,
        regions_min_8_4_0,
        regions_min_9_4_0,
        regions_min_10_4_0,
        regions_min_11_4_0,
        regions_min_12_4_0,
        regions_min_13_4_0,
        regions_min_14_4_0,
        regions_min_15_4_0,
        regions_min_16_4_0,
        regions_min_17_4_0,
        regions_min_18_4_0,
        regions_min_19_4_0,
        regions_min_20_4_0,
        regions_min_21_4_0,
        regions_min_22_4_0,
        regions_min_23_4_0,
        regions_min_24_4_0,
        regions_min_25_4_0,
        regions_min_26_4_0,
        regions_min_27_4_0,
        regions_min_28_4_0,
        regions_min_29_4_0,
        regions_min_30_4_0,
        regions_min_31_4_0,
        regions_center_0_5_0,
        regions_center_1_5_0,
        regions_center_2_5_0,
        regions_center_3_5_0,
        regions_center_4_5_0,
        regions_center_5_5_0,
        regions_center_6_5_0,
        regions_center_7_5_0,
        regions_center_8_5_0,
        regions_center_9_5_0,
        regions_center_10_5_0,
        regions_center_11_5_0,
        regions_center_12_5_0,
        regions_center_13_5_0,
        regions_center_14_5_0,
        regions_center_15_5_0,
        regions_center_16_5_0,
        regions_center_17_5_0,
        regions_center_18_5_0,
        regions_center_19_5_0,
        regions_center_20_5_0,
        regions_center_21_5_0,
        regions_center_22_5_0,
        regions_center_23_5_0,
        regions_center_24_5_0,
        regions_center_25_5_0,
        regions_center_26_5_0,
        regions_center_27_5_0,
        regions_center_28_5_0,
        regions_center_29_5_0,
        regions_center_30_5_0,
        regions_center_31_5_0,
        regions_max_0_5_0,
        regions_max_1_5_0,
        regions_max_2_5_0,
        regions_max_3_5_0,
        regions_max_4_5_0,
        regions_max_5_5_0,
        regions_max_6_5_0,
        regions_max_7_5_0,
        regions_max_8_5_0,
        regions_max_9_5_0,
        regions_max_10_5_0,
        regions_max_11_5_0,
        regions_max_12_5_0,
        regions_max_13_5_0,
        regions_max_14_5_0,
        regions_max_15_5_0,
        regions_max_16_5_0,
        regions_max_17_5_0,
        regions_max_18_5_0,
        regions_max_19_5_0,
        regions_max_20_5_0,
        regions_max_21_5_0,
        regions_max_22_5_0,
        regions_max_23_5_0,
        regions_max_24_5_0,
        regions_max_25_5_0,
        regions_max_26_5_0,
        regions_max_27_5_0,
        regions_max_28_5_0,
        regions_max_29_5_0,
        regions_max_30_5_0,
        regions_max_31_5_0,
        regions_min_0_5_0,
        regions_min_1_5_0,
        regions_min_2_5_0,
        regions_min_3_5_0,
        regions_min_4_5_0,
        regions_min_5_5_0,
        regions_min_6_5_0,
        regions_min_7_5_0,
        regions_min_8_5_0,
        regions_min_9_5_0,
        regions_min_10_5_0,
        regions_min_11_5_0,
        regions_min_12_5_0,
        regions_min_13_5_0,
        regions_min_14_5_0,
        regions_min_15_5_0,
        regions_min_16_5_0,
        regions_min_17_5_0,
        regions_min_18_5_0,
        regions_min_19_5_0,
        regions_min_20_5_0,
        regions_min_21_5_0,
        regions_min_22_5_0,
        regions_min_23_5_0,
        regions_min_24_5_0,
        regions_min_25_5_0,
        regions_min_26_5_0,
        regions_min_27_5_0,
        regions_min_28_5_0,
        regions_min_29_5_0,
        regions_min_30_5_0,
        regions_min_31_5_0,
        merge_2_out,
        merge_2_out_ap_vld,
        merge_1_out,
        merge_1_out_ap_vld,
        grp_fu_53978_p_din0,
        grp_fu_53978_p_din1,
        grp_fu_53978_p_opcode,
        grp_fu_53978_p_dout0,
        grp_fu_53978_p_ce,
        grp_fu_53984_p_din0,
        grp_fu_53984_p_din1,
        grp_fu_53984_p_dout0,
        grp_fu_53984_p_ce,
        grp_fu_53989_p_din0,
        grp_fu_53989_p_din1,
        grp_fu_53989_p_opcode,
        grp_fu_53989_p_dout0,
        grp_fu_53989_p_ce,
        grp_fu_53994_p_din0,
        grp_fu_53994_p_din1,
        grp_fu_53994_p_opcode,
        grp_fu_53994_p_dout0,
        grp_fu_53994_p_ce
);

parameter    ap_ST_fsm_pp0_stage0 = 8'd1;
parameter    ap_ST_fsm_pp0_stage1 = 8'd2;
parameter    ap_ST_fsm_pp0_stage2 = 8'd4;
parameter    ap_ST_fsm_pp0_stage3 = 8'd8;
parameter    ap_ST_fsm_pp0_stage4 = 8'd16;
parameter    ap_ST_fsm_pp0_stage5 = 8'd32;
parameter    ap_ST_fsm_pp0_stage6 = 8'd64;
parameter    ap_ST_fsm_pp0_stage7 = 8'd128;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [31:0] regions_center_0_0_0;
input  [31:0] regions_center_1_0_0;
input  [31:0] regions_center_2_0_0;
input  [31:0] regions_center_3_0_0;
input  [31:0] regions_center_4_0_0;
input  [31:0] regions_center_5_0_0;
input  [31:0] regions_center_6_0_0;
input  [31:0] regions_center_7_0_0;
input  [31:0] regions_center_8_0_0;
input  [31:0] regions_center_9_0_0;
input  [31:0] regions_center_10_0_0;
input  [31:0] regions_center_11_0_0;
input  [31:0] regions_center_12_0_0;
input  [31:0] regions_center_13_0_0;
input  [31:0] regions_center_14_0_0;
input  [31:0] regions_center_15_0_0;
input  [31:0] regions_center_16_0_0;
input  [31:0] regions_center_17_0_0;
input  [31:0] regions_center_18_0_0;
input  [31:0] regions_center_19_0_0;
input  [31:0] regions_center_20_0_0;
input  [31:0] regions_center_21_0_0;
input  [31:0] regions_center_22_0_0;
input  [31:0] regions_center_23_0_0;
input  [31:0] regions_center_24_0_0;
input  [31:0] regions_center_25_0_0;
input  [31:0] regions_center_26_0_0;
input  [31:0] regions_center_27_0_0;
input  [31:0] regions_center_28_0_0;
input  [31:0] regions_center_29_0_0;
input  [31:0] regions_center_30_0_0;
input  [31:0] regions_center_31_0_0;
input  [31:0] regions_max_0_0_0;
input  [31:0] regions_max_1_0_0;
input  [31:0] regions_max_2_0_0;
input  [31:0] regions_max_3_0_0;
input  [31:0] regions_max_4_0_0;
input  [31:0] regions_max_5_0_0;
input  [31:0] regions_max_6_0_0;
input  [31:0] regions_max_7_0_0;
input  [31:0] regions_max_8_0_0;
input  [31:0] regions_max_9_0_0;
input  [31:0] regions_max_10_0_0;
input  [31:0] regions_max_11_0_0;
input  [31:0] regions_max_12_0_0;
input  [31:0] regions_max_13_0_0;
input  [31:0] regions_max_14_0_0;
input  [31:0] regions_max_15_0_0;
input  [31:0] regions_max_16_0_0;
input  [31:0] regions_max_17_0_0;
input  [31:0] regions_max_18_0_0;
input  [31:0] regions_max_19_0_0;
input  [31:0] regions_max_20_0_0;
input  [31:0] regions_max_21_0_0;
input  [31:0] regions_max_22_0_0;
input  [31:0] regions_max_23_0_0;
input  [31:0] regions_max_24_0_0;
input  [31:0] regions_max_25_0_0;
input  [31:0] regions_max_26_0_0;
input  [31:0] regions_max_27_0_0;
input  [31:0] regions_max_28_0_0;
input  [31:0] regions_max_29_0_0;
input  [31:0] regions_max_30_0_0;
input  [31:0] regions_max_31_0_0;
input  [31:0] regions_min_0_0_0;
input  [31:0] regions_min_1_0_0;
input  [31:0] regions_min_2_0_0;
input  [31:0] regions_min_3_0_0;
input  [31:0] regions_min_4_0_0;
input  [31:0] regions_min_5_0_0;
input  [31:0] regions_min_6_0_0;
input  [31:0] regions_min_7_0_0;
input  [31:0] regions_min_8_0_0;
input  [31:0] regions_min_9_0_0;
input  [31:0] regions_min_10_0_0;
input  [31:0] regions_min_11_0_0;
input  [31:0] regions_min_12_0_0;
input  [31:0] regions_min_13_0_0;
input  [31:0] regions_min_14_0_0;
input  [31:0] regions_min_15_0_0;
input  [31:0] regions_min_16_0_0;
input  [31:0] regions_min_17_0_0;
input  [31:0] regions_min_18_0_0;
input  [31:0] regions_min_19_0_0;
input  [31:0] regions_min_20_0_0;
input  [31:0] regions_min_21_0_0;
input  [31:0] regions_min_22_0_0;
input  [31:0] regions_min_23_0_0;
input  [31:0] regions_min_24_0_0;
input  [31:0] regions_min_25_0_0;
input  [31:0] regions_min_26_0_0;
input  [31:0] regions_min_27_0_0;
input  [31:0] regions_min_28_0_0;
input  [31:0] regions_min_29_0_0;
input  [31:0] regions_min_30_0_0;
input  [31:0] regions_min_31_0_0;
input  [31:0] regions_center_0_1_0;
input  [31:0] regions_center_1_1_0;
input  [31:0] regions_center_2_1_0;
input  [31:0] regions_center_3_1_0;
input  [31:0] regions_center_4_1_0;
input  [31:0] regions_center_5_1_0;
input  [31:0] regions_center_6_1_0;
input  [31:0] regions_center_7_1_0;
input  [31:0] regions_center_8_1_0;
input  [31:0] regions_center_9_1_0;
input  [31:0] regions_center_10_1_0;
input  [31:0] regions_center_11_1_0;
input  [31:0] regions_center_12_1_0;
input  [31:0] regions_center_13_1_0;
input  [31:0] regions_center_14_1_0;
input  [31:0] regions_center_15_1_0;
input  [31:0] regions_center_16_1_0;
input  [31:0] regions_center_17_1_0;
input  [31:0] regions_center_18_1_0;
input  [31:0] regions_center_19_1_0;
input  [31:0] regions_center_20_1_0;
input  [31:0] regions_center_21_1_0;
input  [31:0] regions_center_22_1_0;
input  [31:0] regions_center_23_1_0;
input  [31:0] regions_center_24_1_0;
input  [31:0] regions_center_25_1_0;
input  [31:0] regions_center_26_1_0;
input  [31:0] regions_center_27_1_0;
input  [31:0] regions_center_28_1_0;
input  [31:0] regions_center_29_1_0;
input  [31:0] regions_center_30_1_0;
input  [31:0] regions_center_31_1_0;
input  [31:0] regions_max_0_1_0;
input  [31:0] regions_max_1_1_0;
input  [31:0] regions_max_2_1_0;
input  [31:0] regions_max_3_1_0;
input  [31:0] regions_max_4_1_0;
input  [31:0] regions_max_5_1_0;
input  [31:0] regions_max_6_1_0;
input  [31:0] regions_max_7_1_0;
input  [31:0] regions_max_8_1_0;
input  [31:0] regions_max_9_1_0;
input  [31:0] regions_max_10_1_0;
input  [31:0] regions_max_11_1_0;
input  [31:0] regions_max_12_1_0;
input  [31:0] regions_max_13_1_0;
input  [31:0] regions_max_14_1_0;
input  [31:0] regions_max_15_1_0;
input  [31:0] regions_max_16_1_0;
input  [31:0] regions_max_17_1_0;
input  [31:0] regions_max_18_1_0;
input  [31:0] regions_max_19_1_0;
input  [31:0] regions_max_20_1_0;
input  [31:0] regions_max_21_1_0;
input  [31:0] regions_max_22_1_0;
input  [31:0] regions_max_23_1_0;
input  [31:0] regions_max_24_1_0;
input  [31:0] regions_max_25_1_0;
input  [31:0] regions_max_26_1_0;
input  [31:0] regions_max_27_1_0;
input  [31:0] regions_max_28_1_0;
input  [31:0] regions_max_29_1_0;
input  [31:0] regions_max_30_1_0;
input  [31:0] regions_max_31_1_0;
input  [31:0] regions_min_0_1_0;
input  [31:0] regions_min_1_1_0;
input  [31:0] regions_min_2_1_0;
input  [31:0] regions_min_3_1_0;
input  [31:0] regions_min_4_1_0;
input  [31:0] regions_min_5_1_0;
input  [31:0] regions_min_6_1_0;
input  [31:0] regions_min_7_1_0;
input  [31:0] regions_min_8_1_0;
input  [31:0] regions_min_9_1_0;
input  [31:0] regions_min_10_1_0;
input  [31:0] regions_min_11_1_0;
input  [31:0] regions_min_12_1_0;
input  [31:0] regions_min_13_1_0;
input  [31:0] regions_min_14_1_0;
input  [31:0] regions_min_15_1_0;
input  [31:0] regions_min_16_1_0;
input  [31:0] regions_min_17_1_0;
input  [31:0] regions_min_18_1_0;
input  [31:0] regions_min_19_1_0;
input  [31:0] regions_min_20_1_0;
input  [31:0] regions_min_21_1_0;
input  [31:0] regions_min_22_1_0;
input  [31:0] regions_min_23_1_0;
input  [31:0] regions_min_24_1_0;
input  [31:0] regions_min_25_1_0;
input  [31:0] regions_min_26_1_0;
input  [31:0] regions_min_27_1_0;
input  [31:0] regions_min_28_1_0;
input  [31:0] regions_min_29_1_0;
input  [31:0] regions_min_30_1_0;
input  [31:0] regions_min_31_1_0;
input  [31:0] regions_center_0_2_0;
input  [31:0] regions_center_1_2_0;
input  [31:0] regions_center_2_2_0;
input  [31:0] regions_center_3_2_0;
input  [31:0] regions_center_4_2_0;
input  [31:0] regions_center_5_2_0;
input  [31:0] regions_center_6_2_0;
input  [31:0] regions_center_7_2_0;
input  [31:0] regions_center_8_2_0;
input  [31:0] regions_center_9_2_0;
input  [31:0] regions_center_10_2_0;
input  [31:0] regions_center_11_2_0;
input  [31:0] regions_center_12_2_0;
input  [31:0] regions_center_13_2_0;
input  [31:0] regions_center_14_2_0;
input  [31:0] regions_center_15_2_0;
input  [31:0] regions_center_16_2_0;
input  [31:0] regions_center_17_2_0;
input  [31:0] regions_center_18_2_0;
input  [31:0] regions_center_19_2_0;
input  [31:0] regions_center_20_2_0;
input  [31:0] regions_center_21_2_0;
input  [31:0] regions_center_22_2_0;
input  [31:0] regions_center_23_2_0;
input  [31:0] regions_center_24_2_0;
input  [31:0] regions_center_25_2_0;
input  [31:0] regions_center_26_2_0;
input  [31:0] regions_center_27_2_0;
input  [31:0] regions_center_28_2_0;
input  [31:0] regions_center_29_2_0;
input  [31:0] regions_center_30_2_0;
input  [31:0] regions_center_31_2_0;
input  [31:0] regions_max_0_2_0;
input  [31:0] regions_max_1_2_0;
input  [31:0] regions_max_2_2_0;
input  [31:0] regions_max_3_2_0;
input  [31:0] regions_max_4_2_0;
input  [31:0] regions_max_5_2_0;
input  [31:0] regions_max_6_2_0;
input  [31:0] regions_max_7_2_0;
input  [31:0] regions_max_8_2_0;
input  [31:0] regions_max_9_2_0;
input  [31:0] regions_max_10_2_0;
input  [31:0] regions_max_11_2_0;
input  [31:0] regions_max_12_2_0;
input  [31:0] regions_max_13_2_0;
input  [31:0] regions_max_14_2_0;
input  [31:0] regions_max_15_2_0;
input  [31:0] regions_max_16_2_0;
input  [31:0] regions_max_17_2_0;
input  [31:0] regions_max_18_2_0;
input  [31:0] regions_max_19_2_0;
input  [31:0] regions_max_20_2_0;
input  [31:0] regions_max_21_2_0;
input  [31:0] regions_max_22_2_0;
input  [31:0] regions_max_23_2_0;
input  [31:0] regions_max_24_2_0;
input  [31:0] regions_max_25_2_0;
input  [31:0] regions_max_26_2_0;
input  [31:0] regions_max_27_2_0;
input  [31:0] regions_max_28_2_0;
input  [31:0] regions_max_29_2_0;
input  [31:0] regions_max_30_2_0;
input  [31:0] regions_max_31_2_0;
input  [31:0] regions_min_0_2_0;
input  [31:0] regions_min_1_2_0;
input  [31:0] regions_min_2_2_0;
input  [31:0] regions_min_3_2_0;
input  [31:0] regions_min_4_2_0;
input  [31:0] regions_min_5_2_0;
input  [31:0] regions_min_6_2_0;
input  [31:0] regions_min_7_2_0;
input  [31:0] regions_min_8_2_0;
input  [31:0] regions_min_9_2_0;
input  [31:0] regions_min_10_2_0;
input  [31:0] regions_min_11_2_0;
input  [31:0] regions_min_12_2_0;
input  [31:0] regions_min_13_2_0;
input  [31:0] regions_min_14_2_0;
input  [31:0] regions_min_15_2_0;
input  [31:0] regions_min_16_2_0;
input  [31:0] regions_min_17_2_0;
input  [31:0] regions_min_18_2_0;
input  [31:0] regions_min_19_2_0;
input  [31:0] regions_min_20_2_0;
input  [31:0] regions_min_21_2_0;
input  [31:0] regions_min_22_2_0;
input  [31:0] regions_min_23_2_0;
input  [31:0] regions_min_24_2_0;
input  [31:0] regions_min_25_2_0;
input  [31:0] regions_min_26_2_0;
input  [31:0] regions_min_27_2_0;
input  [31:0] regions_min_28_2_0;
input  [31:0] regions_min_29_2_0;
input  [31:0] regions_min_30_2_0;
input  [31:0] regions_min_31_2_0;
input  [31:0] regions_center_0_3_0;
input  [31:0] regions_center_1_3_0;
input  [31:0] regions_center_2_3_0;
input  [31:0] regions_center_3_3_0;
input  [31:0] regions_center_4_3_0;
input  [31:0] regions_center_5_3_0;
input  [31:0] regions_center_6_3_0;
input  [31:0] regions_center_7_3_0;
input  [31:0] regions_center_8_3_0;
input  [31:0] regions_center_9_3_0;
input  [31:0] regions_center_10_3_0;
input  [31:0] regions_center_11_3_0;
input  [31:0] regions_center_12_3_0;
input  [31:0] regions_center_13_3_0;
input  [31:0] regions_center_14_3_0;
input  [31:0] regions_center_15_3_0;
input  [31:0] regions_center_16_3_0;
input  [31:0] regions_center_17_3_0;
input  [31:0] regions_center_18_3_0;
input  [31:0] regions_center_19_3_0;
input  [31:0] regions_center_20_3_0;
input  [31:0] regions_center_21_3_0;
input  [31:0] regions_center_22_3_0;
input  [31:0] regions_center_23_3_0;
input  [31:0] regions_center_24_3_0;
input  [31:0] regions_center_25_3_0;
input  [31:0] regions_center_26_3_0;
input  [31:0] regions_center_27_3_0;
input  [31:0] regions_center_28_3_0;
input  [31:0] regions_center_29_3_0;
input  [31:0] regions_center_30_3_0;
input  [31:0] regions_center_31_3_0;
input  [31:0] regions_max_0_3_0;
input  [31:0] regions_max_1_3_0;
input  [31:0] regions_max_2_3_0;
input  [31:0] regions_max_3_3_0;
input  [31:0] regions_max_4_3_0;
input  [31:0] regions_max_5_3_0;
input  [31:0] regions_max_6_3_0;
input  [31:0] regions_max_7_3_0;
input  [31:0] regions_max_8_3_0;
input  [31:0] regions_max_9_3_0;
input  [31:0] regions_max_10_3_0;
input  [31:0] regions_max_11_3_0;
input  [31:0] regions_max_12_3_0;
input  [31:0] regions_max_13_3_0;
input  [31:0] regions_max_14_3_0;
input  [31:0] regions_max_15_3_0;
input  [31:0] regions_max_16_3_0;
input  [31:0] regions_max_17_3_0;
input  [31:0] regions_max_18_3_0;
input  [31:0] regions_max_19_3_0;
input  [31:0] regions_max_20_3_0;
input  [31:0] regions_max_21_3_0;
input  [31:0] regions_max_22_3_0;
input  [31:0] regions_max_23_3_0;
input  [31:0] regions_max_24_3_0;
input  [31:0] regions_max_25_3_0;
input  [31:0] regions_max_26_3_0;
input  [31:0] regions_max_27_3_0;
input  [31:0] regions_max_28_3_0;
input  [31:0] regions_max_29_3_0;
input  [31:0] regions_max_30_3_0;
input  [31:0] regions_max_31_3_0;
input  [31:0] regions_min_0_3_0;
input  [31:0] regions_min_1_3_0;
input  [31:0] regions_min_2_3_0;
input  [31:0] regions_min_3_3_0;
input  [31:0] regions_min_4_3_0;
input  [31:0] regions_min_5_3_0;
input  [31:0] regions_min_6_3_0;
input  [31:0] regions_min_7_3_0;
input  [31:0] regions_min_8_3_0;
input  [31:0] regions_min_9_3_0;
input  [31:0] regions_min_10_3_0;
input  [31:0] regions_min_11_3_0;
input  [31:0] regions_min_12_3_0;
input  [31:0] regions_min_13_3_0;
input  [31:0] regions_min_14_3_0;
input  [31:0] regions_min_15_3_0;
input  [31:0] regions_min_16_3_0;
input  [31:0] regions_min_17_3_0;
input  [31:0] regions_min_18_3_0;
input  [31:0] regions_min_19_3_0;
input  [31:0] regions_min_20_3_0;
input  [31:0] regions_min_21_3_0;
input  [31:0] regions_min_22_3_0;
input  [31:0] regions_min_23_3_0;
input  [31:0] regions_min_24_3_0;
input  [31:0] regions_min_25_3_0;
input  [31:0] regions_min_26_3_0;
input  [31:0] regions_min_27_3_0;
input  [31:0] regions_min_28_3_0;
input  [31:0] regions_min_29_3_0;
input  [31:0] regions_min_30_3_0;
input  [31:0] regions_min_31_3_0;
input  [31:0] regions_center_0_4_0;
input  [31:0] regions_center_1_4_0;
input  [31:0] regions_center_2_4_0;
input  [31:0] regions_center_3_4_0;
input  [31:0] regions_center_4_4_0;
input  [31:0] regions_center_5_4_0;
input  [31:0] regions_center_6_4_0;
input  [31:0] regions_center_7_4_0;
input  [31:0] regions_center_8_4_0;
input  [31:0] regions_center_9_4_0;
input  [31:0] regions_center_10_4_0;
input  [31:0] regions_center_11_4_0;
input  [31:0] regions_center_12_4_0;
input  [31:0] regions_center_13_4_0;
input  [31:0] regions_center_14_4_0;
input  [31:0] regions_center_15_4_0;
input  [31:0] regions_center_16_4_0;
input  [31:0] regions_center_17_4_0;
input  [31:0] regions_center_18_4_0;
input  [31:0] regions_center_19_4_0;
input  [31:0] regions_center_20_4_0;
input  [31:0] regions_center_21_4_0;
input  [31:0] regions_center_22_4_0;
input  [31:0] regions_center_23_4_0;
input  [31:0] regions_center_24_4_0;
input  [31:0] regions_center_25_4_0;
input  [31:0] regions_center_26_4_0;
input  [31:0] regions_center_27_4_0;
input  [31:0] regions_center_28_4_0;
input  [31:0] regions_center_29_4_0;
input  [31:0] regions_center_30_4_0;
input  [31:0] regions_center_31_4_0;
input  [31:0] regions_max_0_4_0;
input  [31:0] regions_max_1_4_0;
input  [31:0] regions_max_2_4_0;
input  [31:0] regions_max_3_4_0;
input  [31:0] regions_max_4_4_0;
input  [31:0] regions_max_5_4_0;
input  [31:0] regions_max_6_4_0;
input  [31:0] regions_max_7_4_0;
input  [31:0] regions_max_8_4_0;
input  [31:0] regions_max_9_4_0;
input  [31:0] regions_max_10_4_0;
input  [31:0] regions_max_11_4_0;
input  [31:0] regions_max_12_4_0;
input  [31:0] regions_max_13_4_0;
input  [31:0] regions_max_14_4_0;
input  [31:0] regions_max_15_4_0;
input  [31:0] regions_max_16_4_0;
input  [31:0] regions_max_17_4_0;
input  [31:0] regions_max_18_4_0;
input  [31:0] regions_max_19_4_0;
input  [31:0] regions_max_20_4_0;
input  [31:0] regions_max_21_4_0;
input  [31:0] regions_max_22_4_0;
input  [31:0] regions_max_23_4_0;
input  [31:0] regions_max_24_4_0;
input  [31:0] regions_max_25_4_0;
input  [31:0] regions_max_26_4_0;
input  [31:0] regions_max_27_4_0;
input  [31:0] regions_max_28_4_0;
input  [31:0] regions_max_29_4_0;
input  [31:0] regions_max_30_4_0;
input  [31:0] regions_max_31_4_0;
input  [31:0] regions_min_0_4_0;
input  [31:0] regions_min_1_4_0;
input  [31:0] regions_min_2_4_0;
input  [31:0] regions_min_3_4_0;
input  [31:0] regions_min_4_4_0;
input  [31:0] regions_min_5_4_0;
input  [31:0] regions_min_6_4_0;
input  [31:0] regions_min_7_4_0;
input  [31:0] regions_min_8_4_0;
input  [31:0] regions_min_9_4_0;
input  [31:0] regions_min_10_4_0;
input  [31:0] regions_min_11_4_0;
input  [31:0] regions_min_12_4_0;
input  [31:0] regions_min_13_4_0;
input  [31:0] regions_min_14_4_0;
input  [31:0] regions_min_15_4_0;
input  [31:0] regions_min_16_4_0;
input  [31:0] regions_min_17_4_0;
input  [31:0] regions_min_18_4_0;
input  [31:0] regions_min_19_4_0;
input  [31:0] regions_min_20_4_0;
input  [31:0] regions_min_21_4_0;
input  [31:0] regions_min_22_4_0;
input  [31:0] regions_min_23_4_0;
input  [31:0] regions_min_24_4_0;
input  [31:0] regions_min_25_4_0;
input  [31:0] regions_min_26_4_0;
input  [31:0] regions_min_27_4_0;
input  [31:0] regions_min_28_4_0;
input  [31:0] regions_min_29_4_0;
input  [31:0] regions_min_30_4_0;
input  [31:0] regions_min_31_4_0;
input  [31:0] regions_center_0_5_0;
input  [31:0] regions_center_1_5_0;
input  [31:0] regions_center_2_5_0;
input  [31:0] regions_center_3_5_0;
input  [31:0] regions_center_4_5_0;
input  [31:0] regions_center_5_5_0;
input  [31:0] regions_center_6_5_0;
input  [31:0] regions_center_7_5_0;
input  [31:0] regions_center_8_5_0;
input  [31:0] regions_center_9_5_0;
input  [31:0] regions_center_10_5_0;
input  [31:0] regions_center_11_5_0;
input  [31:0] regions_center_12_5_0;
input  [31:0] regions_center_13_5_0;
input  [31:0] regions_center_14_5_0;
input  [31:0] regions_center_15_5_0;
input  [31:0] regions_center_16_5_0;
input  [31:0] regions_center_17_5_0;
input  [31:0] regions_center_18_5_0;
input  [31:0] regions_center_19_5_0;
input  [31:0] regions_center_20_5_0;
input  [31:0] regions_center_21_5_0;
input  [31:0] regions_center_22_5_0;
input  [31:0] regions_center_23_5_0;
input  [31:0] regions_center_24_5_0;
input  [31:0] regions_center_25_5_0;
input  [31:0] regions_center_26_5_0;
input  [31:0] regions_center_27_5_0;
input  [31:0] regions_center_28_5_0;
input  [31:0] regions_center_29_5_0;
input  [31:0] regions_center_30_5_0;
input  [31:0] regions_center_31_5_0;
input  [31:0] regions_max_0_5_0;
input  [31:0] regions_max_1_5_0;
input  [31:0] regions_max_2_5_0;
input  [31:0] regions_max_3_5_0;
input  [31:0] regions_max_4_5_0;
input  [31:0] regions_max_5_5_0;
input  [31:0] regions_max_6_5_0;
input  [31:0] regions_max_7_5_0;
input  [31:0] regions_max_8_5_0;
input  [31:0] regions_max_9_5_0;
input  [31:0] regions_max_10_5_0;
input  [31:0] regions_max_11_5_0;
input  [31:0] regions_max_12_5_0;
input  [31:0] regions_max_13_5_0;
input  [31:0] regions_max_14_5_0;
input  [31:0] regions_max_15_5_0;
input  [31:0] regions_max_16_5_0;
input  [31:0] regions_max_17_5_0;
input  [31:0] regions_max_18_5_0;
input  [31:0] regions_max_19_5_0;
input  [31:0] regions_max_20_5_0;
input  [31:0] regions_max_21_5_0;
input  [31:0] regions_max_22_5_0;
input  [31:0] regions_max_23_5_0;
input  [31:0] regions_max_24_5_0;
input  [31:0] regions_max_25_5_0;
input  [31:0] regions_max_26_5_0;
input  [31:0] regions_max_27_5_0;
input  [31:0] regions_max_28_5_0;
input  [31:0] regions_max_29_5_0;
input  [31:0] regions_max_30_5_0;
input  [31:0] regions_max_31_5_0;
input  [31:0] regions_min_0_5_0;
input  [31:0] regions_min_1_5_0;
input  [31:0] regions_min_2_5_0;
input  [31:0] regions_min_3_5_0;
input  [31:0] regions_min_4_5_0;
input  [31:0] regions_min_5_5_0;
input  [31:0] regions_min_6_5_0;
input  [31:0] regions_min_7_5_0;
input  [31:0] regions_min_8_5_0;
input  [31:0] regions_min_9_5_0;
input  [31:0] regions_min_10_5_0;
input  [31:0] regions_min_11_5_0;
input  [31:0] regions_min_12_5_0;
input  [31:0] regions_min_13_5_0;
input  [31:0] regions_min_14_5_0;
input  [31:0] regions_min_15_5_0;
input  [31:0] regions_min_16_5_0;
input  [31:0] regions_min_17_5_0;
input  [31:0] regions_min_18_5_0;
input  [31:0] regions_min_19_5_0;
input  [31:0] regions_min_20_5_0;
input  [31:0] regions_min_21_5_0;
input  [31:0] regions_min_22_5_0;
input  [31:0] regions_min_23_5_0;
input  [31:0] regions_min_24_5_0;
input  [31:0] regions_min_25_5_0;
input  [31:0] regions_min_26_5_0;
input  [31:0] regions_min_27_5_0;
input  [31:0] regions_min_28_5_0;
input  [31:0] regions_min_29_5_0;
input  [31:0] regions_min_30_5_0;
input  [31:0] regions_min_31_5_0;
output  [4:0] merge_2_out;
output   merge_2_out_ap_vld;
output  [4:0] merge_1_out;
output   merge_1_out_ap_vld;
output  [31:0] grp_fu_53978_p_din0;
output  [31:0] grp_fu_53978_p_din1;
output  [0:0] grp_fu_53978_p_opcode;
input  [31:0] grp_fu_53978_p_dout0;
output   grp_fu_53978_p_ce;
output  [31:0] grp_fu_53984_p_din0;
output  [31:0] grp_fu_53984_p_din1;
input  [31:0] grp_fu_53984_p_dout0;
output   grp_fu_53984_p_ce;
output  [31:0] grp_fu_53989_p_din0;
output  [31:0] grp_fu_53989_p_din1;
output  [4:0] grp_fu_53989_p_opcode;
input  [0:0] grp_fu_53989_p_dout0;
output   grp_fu_53989_p_ce;
output  [31:0] grp_fu_53994_p_din0;
output  [31:0] grp_fu_53994_p_din1;
output  [4:0] grp_fu_53994_p_opcode;
input  [0:0] grp_fu_53994_p_dout0;
output   grp_fu_53994_p_ce;

reg ap_idle;
reg merge_2_out_ap_vld;
reg merge_1_out_ap_vld;

(* fsm_encoding = "none" *) reg   [7:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_enable_reg_pp0_iter3;
reg    ap_enable_reg_pp0_iter4;
reg    ap_enable_reg_pp0_iter5;
reg    ap_enable_reg_pp0_iter6;
reg    ap_enable_reg_pp0_iter7;
reg    ap_enable_reg_pp0_iter8;
reg    ap_enable_reg_pp0_iter9;
reg    ap_enable_reg_pp0_iter10;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage7;
wire    ap_block_state8_pp0_stage7_iter0;
wire    ap_block_state16_pp0_stage7_iter1;
wire    ap_block_state24_pp0_stage7_iter2;
wire    ap_block_state32_pp0_stage7_iter3;
wire    ap_block_state40_pp0_stage7_iter4;
wire    ap_block_state48_pp0_stage7_iter5;
wire    ap_block_state56_pp0_stage7_iter6;
wire    ap_block_state64_pp0_stage7_iter7;
wire    ap_block_state72_pp0_stage7_iter8;
wire    ap_block_state80_pp0_stage7_iter9;
wire    ap_block_pp0_stage7_subdone;
reg   [0:0] icmp_ln1027_reg_10927;
reg    ap_condition_exit_pp0_iter0_stage7;
wire    ap_loop_exit_ready;
reg    ap_ready_int;
wire   [31:0] grp_fu_4720_p2;
reg   [31:0] reg_4747;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state10_pp0_stage1_iter1;
wire    ap_block_state18_pp0_stage1_iter2;
wire    ap_block_state26_pp0_stage1_iter3;
wire    ap_block_state34_pp0_stage1_iter4;
wire    ap_block_state42_pp0_stage1_iter5;
wire    ap_block_state50_pp0_stage1_iter6;
wire    ap_block_state58_pp0_stage1_iter7;
wire    ap_block_state66_pp0_stage1_iter8;
wire    ap_block_state74_pp0_stage1_iter9;
wire    ap_block_state82_pp0_stage1_iter10;
wire    ap_block_pp0_stage1_11001;
wire    ap_CS_fsm_pp0_stage6;
wire    ap_block_state7_pp0_stage6_iter0;
wire    ap_block_state15_pp0_stage6_iter1;
wire    ap_block_state23_pp0_stage6_iter2;
wire    ap_block_state31_pp0_stage6_iter3;
wire    ap_block_state39_pp0_stage6_iter4;
wire    ap_block_state47_pp0_stage6_iter5;
wire    ap_block_state55_pp0_stage6_iter6;
wire    ap_block_state63_pp0_stage6_iter7;
wire    ap_block_state71_pp0_stage6_iter8;
wire    ap_block_state79_pp0_stage6_iter9;
wire    ap_block_pp0_stage6_11001;
reg   [0:0] icmp_ln1027_reg_10927_pp0_iter2_reg;
reg   [0:0] and_ln112_5_reg_11248;
reg   [0:0] and_ln112_5_reg_11248_pp0_iter2_reg;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state9_pp0_stage0_iter1;
wire    ap_block_state17_pp0_stage0_iter2;
wire    ap_block_state25_pp0_stage0_iter3;
wire    ap_block_state33_pp0_stage0_iter4;
wire    ap_block_state41_pp0_stage0_iter5;
wire    ap_block_state49_pp0_stage0_iter6;
wire    ap_block_state57_pp0_stage0_iter7;
wire    ap_block_state65_pp0_stage0_iter8;
wire    ap_block_state73_pp0_stage0_iter9;
wire    ap_block_state81_pp0_stage0_iter10;
wire    ap_block_pp0_stage0_11001;
reg   [0:0] icmp_ln1027_reg_10927_pp0_iter7_reg;
reg   [31:0] reg_4753;
wire    ap_block_pp0_stage7_11001;
reg   [0:0] icmp_ln1027_reg_10927_pp0_iter1_reg;
reg   [0:0] and_ln112_11_reg_11273;
wire   [31:0] grp_fu_4712_p2;
reg   [31:0] reg_4758;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state13_pp0_stage4_iter1;
wire    ap_block_state21_pp0_stage4_iter2;
wire    ap_block_state29_pp0_stage4_iter3;
wire    ap_block_state37_pp0_stage4_iter4;
wire    ap_block_state45_pp0_stage4_iter5;
wire    ap_block_state53_pp0_stage4_iter6;
wire    ap_block_state61_pp0_stage4_iter7;
wire    ap_block_state69_pp0_stage4_iter8;
wire    ap_block_state77_pp0_stage4_iter9;
wire    ap_block_pp0_stage4_11001;
reg   [0:0] and_ln112_1_reg_11208;
reg   [0:0] and_ln112_1_reg_11208_pp0_iter1_reg;
reg   [0:0] and_ln112_9_reg_11263;
reg   [0:0] and_ln112_9_reg_11263_pp0_iter2_reg;
wire   [31:0] grp_fu_4716_p2;
reg   [31:0] reg_4762;
reg   [0:0] and_ln112_3_reg_11213;
reg   [0:0] and_ln112_3_reg_11213_pp0_iter1_reg;
wire   [31:0] grp_fu_4708_p2;
reg   [31:0] reg_4766;
reg   [0:0] and_ln112_7_reg_11253;
reg   [0:0] and_ln112_7_reg_11253_pp0_iter2_reg;
reg   [31:0] reg_4770;
reg   [0:0] and_ln112_11_reg_11273_pp0_iter2_reg;
reg   [31:0] reg_4774;
reg   [0:0] icmp_ln1027_reg_10927_pp0_iter3_reg;
reg   [31:0] i_real_3_reg_10912;
reg   [31:0] i_real_3_reg_10912_pp0_iter1_reg;
reg   [31:0] i_real_3_reg_10912_pp0_iter2_reg;
reg   [31:0] i_real_3_reg_10912_pp0_iter3_reg;
reg   [31:0] i_real_3_reg_10912_pp0_iter4_reg;
reg   [31:0] i_real_3_reg_10912_pp0_iter5_reg;
reg   [31:0] i_real_3_reg_10912_pp0_iter6_reg;
reg   [31:0] i_real_3_reg_10912_pp0_iter7_reg;
reg   [31:0] i_real_3_reg_10912_pp0_iter8_reg;
reg   [31:0] i_real_3_reg_10912_pp0_iter9_reg;
reg   [31:0] k_real_5_reg_10920;
reg   [31:0] k_real_5_reg_10920_pp0_iter1_reg;
reg   [31:0] k_real_5_reg_10920_pp0_iter2_reg;
reg   [31:0] k_real_5_reg_10920_pp0_iter3_reg;
reg   [31:0] k_real_5_reg_10920_pp0_iter4_reg;
reg   [31:0] k_real_5_reg_10920_pp0_iter5_reg;
reg   [31:0] k_real_5_reg_10920_pp0_iter6_reg;
reg   [31:0] k_real_5_reg_10920_pp0_iter7_reg;
reg   [31:0] k_real_5_reg_10920_pp0_iter8_reg;
wire   [0:0] icmp_ln1027_fu_4821_p2;
reg   [0:0] icmp_ln1027_reg_10927_pp0_iter4_reg;
reg   [0:0] icmp_ln1027_reg_10927_pp0_iter5_reg;
reg   [0:0] icmp_ln1027_reg_10927_pp0_iter6_reg;
reg   [0:0] icmp_ln1027_reg_10927_pp0_iter8_reg;
reg   [0:0] icmp_ln1027_reg_10927_pp0_iter9_reg;
wire   [31:0] tmp_s_fu_4831_p34;
reg   [31:0] tmp_s_reg_10931;
wire   [31:0] tmp_5_fu_4873_p34;
reg   [31:0] tmp_5_reg_10936;
wire   [31:0] tmp_6_fu_4911_p34;
reg   [31:0] tmp_6_reg_10941;
wire   [31:0] tmp_7_fu_4949_p34;
reg   [31:0] tmp_7_reg_10946;
wire   [31:0] tmp_8_fu_4987_p34;
reg   [31:0] tmp_8_reg_10955;
wire   [31:0] tmp_9_fu_5025_p34;
reg   [31:0] tmp_9_reg_10960;
wire   [31:0] tmp_1_fu_5063_p34;
reg   [31:0] tmp_1_reg_10969;
wire   [31:0] tmp_2_fu_5101_p34;
reg   [31:0] tmp_2_reg_10974;
wire   [31:0] tmp_3_fu_5139_p34;
reg   [31:0] tmp_3_reg_10979;
wire   [31:0] tmp_4_fu_5177_p34;
reg   [31:0] tmp_4_reg_10984;
wire   [31:0] tmp_10_fu_5215_p34;
reg   [31:0] tmp_10_reg_10993;
wire   [31:0] tmp_11_fu_5253_p34;
reg   [31:0] tmp_11_reg_10998;
wire   [31:0] tmp_12_fu_5291_p34;
reg   [31:0] tmp_12_reg_11007;
wire   [31:0] tmp_13_fu_5329_p34;
reg   [31:0] tmp_13_reg_11012;
wire   [31:0] tmp_14_fu_5367_p34;
reg   [31:0] tmp_14_reg_11017;
wire   [31:0] tmp_15_fu_5405_p34;
reg   [31:0] tmp_15_reg_11022;
wire   [31:0] tmp_16_fu_5443_p34;
reg   [31:0] tmp_16_reg_11031;
wire   [31:0] tmp_17_fu_5481_p34;
reg   [31:0] tmp_17_reg_11036;
wire   [31:0] tmp_18_fu_5519_p34;
reg   [31:0] tmp_18_reg_11045;
wire   [31:0] tmp_19_fu_5557_p34;
reg   [31:0] tmp_19_reg_11050;
wire   [31:0] tmp_20_fu_5595_p34;
reg   [31:0] tmp_20_reg_11055;
wire   [31:0] tmp_21_fu_5633_p34;
reg   [31:0] tmp_21_reg_11060;
wire   [31:0] tmp_22_fu_5671_p34;
reg   [31:0] tmp_22_reg_11069;
wire   [31:0] tmp_23_fu_5709_p34;
reg   [31:0] tmp_23_reg_11074;
wire   [31:0] tmp_24_fu_5747_p34;
reg   [31:0] tmp_24_reg_11083;
wire   [31:0] tmp_25_fu_5785_p34;
reg   [31:0] tmp_25_reg_11088;
wire   [31:0] tmp_26_fu_5823_p34;
reg   [31:0] tmp_26_reg_11093;
wire   [31:0] tmp_27_fu_5861_p34;
reg   [31:0] tmp_27_reg_11098;
wire   [31:0] tmp_28_fu_5899_p34;
reg   [31:0] tmp_28_reg_11107;
wire   [31:0] tmp_29_fu_5937_p34;
reg   [31:0] tmp_29_reg_11112;
wire   [31:0] tmp_30_fu_5975_p34;
reg   [31:0] tmp_30_reg_11120;
wire   [31:0] tmp_31_fu_6013_p34;
reg   [31:0] tmp_31_reg_11125;
wire   [31:0] tmp_32_fu_6051_p34;
reg   [31:0] tmp_32_reg_11130;
wire   [31:0] tmp_33_fu_6089_p34;
reg   [31:0] tmp_33_reg_11135;
wire   [31:0] tmp_34_fu_6127_p34;
reg   [31:0] tmp_34_reg_11144;
wire   [31:0] tmp_35_fu_6165_p34;
reg   [31:0] tmp_35_reg_11149;
wire   [0:0] icmp_ln112_fu_6237_p2;
reg   [0:0] icmp_ln112_reg_11158;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state12_pp0_stage3_iter1;
wire    ap_block_state20_pp0_stage3_iter2;
wire    ap_block_state28_pp0_stage3_iter3;
wire    ap_block_state36_pp0_stage3_iter4;
wire    ap_block_state44_pp0_stage3_iter5;
wire    ap_block_state52_pp0_stage3_iter6;
wire    ap_block_state60_pp0_stage3_iter7;
wire    ap_block_state68_pp0_stage3_iter8;
wire    ap_block_state76_pp0_stage3_iter9;
wire    ap_block_pp0_stage3_11001;
wire   [0:0] icmp_ln112_1_fu_6243_p2;
reg   [0:0] icmp_ln112_1_reg_11163;
wire   [0:0] icmp_ln112_2_fu_6249_p2;
reg   [0:0] icmp_ln112_2_reg_11168;
wire   [0:0] icmp_ln112_3_fu_6255_p2;
reg   [0:0] icmp_ln112_3_reg_11173;
reg   [0:0] tmp_38_reg_11178;
wire   [0:0] icmp_ln112_4_fu_6295_p2;
reg   [0:0] icmp_ln112_4_reg_11183;
wire   [0:0] icmp_ln112_5_fu_6301_p2;
reg   [0:0] icmp_ln112_5_reg_11188;
wire   [0:0] icmp_ln112_6_fu_6307_p2;
reg   [0:0] icmp_ln112_6_reg_11193;
wire   [0:0] icmp_ln112_7_fu_6313_p2;
reg   [0:0] icmp_ln112_7_reg_11198;
reg   [0:0] tmp_43_reg_11203;
wire   [0:0] and_ln112_1_fu_6332_p2;
reg   [0:0] and_ln112_1_reg_11208_pp0_iter2_reg;
wire   [0:0] and_ln112_3_fu_6351_p2;
reg   [0:0] and_ln112_3_reg_11213_pp0_iter2_reg;
wire   [0:0] icmp_ln112_8_fu_6391_p2;
reg   [0:0] icmp_ln112_8_reg_11218;
wire   [0:0] icmp_ln112_9_fu_6397_p2;
reg   [0:0] icmp_ln112_9_reg_11223;
wire   [0:0] icmp_ln112_10_fu_6403_p2;
reg   [0:0] icmp_ln112_10_reg_11228;
wire   [0:0] icmp_ln112_11_fu_6409_p2;
reg   [0:0] icmp_ln112_11_reg_11233;
reg   [0:0] tmp_48_reg_11238;
reg   [0:0] tmp_53_reg_11243;
wire   [0:0] and_ln112_5_fu_6429_p2;
wire    ap_CS_fsm_pp0_stage5;
wire    ap_block_state6_pp0_stage5_iter0;
wire    ap_block_state14_pp0_stage5_iter1;
wire    ap_block_state22_pp0_stage5_iter2;
wire    ap_block_state30_pp0_stage5_iter3;
wire    ap_block_state38_pp0_stage5_iter4;
wire    ap_block_state46_pp0_stage5_iter5;
wire    ap_block_state54_pp0_stage5_iter6;
wire    ap_block_state62_pp0_stage5_iter7;
wire    ap_block_state70_pp0_stage5_iter8;
wire    ap_block_state78_pp0_stage5_iter9;
wire    ap_block_pp0_stage5_11001;
reg   [0:0] and_ln112_5_reg_11248_pp0_iter1_reg;
wire   [0:0] and_ln112_7_fu_6510_p2;
reg   [0:0] and_ln112_7_reg_11253_pp0_iter1_reg;
reg   [0:0] tmp_58_reg_11258;
wire   [0:0] and_ln112_9_fu_6591_p2;
reg   [0:0] and_ln112_9_reg_11263_pp0_iter1_reg;
reg   [0:0] tmp_63_reg_11268;
wire   [0:0] and_ln112_11_fu_6672_p2;
reg   [0:0] and_ln112_11_reg_11273_pp0_iter1_reg;
wire   [0:0] icmp_ln1019_fu_6677_p2;
reg   [0:0] icmp_ln1019_reg_11278;
reg   [0:0] icmp_ln1019_reg_11278_pp0_iter2_reg;
reg   [0:0] icmp_ln1019_reg_11278_pp0_iter3_reg;
reg   [0:0] icmp_ln1019_reg_11278_pp0_iter4_reg;
reg   [0:0] icmp_ln1019_reg_11278_pp0_iter5_reg;
reg   [0:0] icmp_ln1019_reg_11278_pp0_iter6_reg;
reg   [0:0] icmp_ln1019_reg_11278_pp0_iter7_reg;
reg   [0:0] icmp_ln1019_reg_11278_pp0_iter8_reg;
reg   [0:0] icmp_ln1019_reg_11278_pp0_iter9_reg;
reg   [0:0] icmp_ln1019_reg_11278_pp0_iter10_reg;
reg   [31:0] d_reg_11287;
reg   [31:0] d1_reg_11293;
reg   [31:0] d2_reg_11298;
reg   [31:0] sub_reg_11303;
wire   [31:0] grp_fu_4724_p2;
reg   [31:0] d_2_reg_11308;
reg   [31:0] sub2_reg_11314;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state11_pp0_stage2_iter1;
wire    ap_block_state19_pp0_stage2_iter2;
wire    ap_block_state27_pp0_stage2_iter3;
wire    ap_block_state35_pp0_stage2_iter4;
wire    ap_block_state43_pp0_stage2_iter5;
wire    ap_block_state51_pp0_stage2_iter6;
wire    ap_block_state59_pp0_stage2_iter7;
wire    ap_block_state67_pp0_stage2_iter8;
wire    ap_block_state75_pp0_stage2_iter9;
wire    ap_block_pp0_stage2_11001;
reg   [31:0] d1_1_reg_11319;
reg   [31:0] d2_1_reg_11324;
reg   [31:0] sub75_1_reg_11329;
reg   [31:0] sub87_1_reg_11334;
reg   [31:0] d1_2_reg_11339;
reg   [31:0] d2_2_reg_11344;
reg   [31:0] sub75_2_reg_11349;
reg   [31:0] sub87_2_reg_11354;
reg   [31:0] d_3_reg_11359;
reg   [31:0] d1_3_reg_11365;
reg   [31:0] d2_3_reg_11370;
reg   [31:0] sub75_3_reg_11375;
reg   [31:0] sub87_3_reg_11380;
reg   [31:0] mul_reg_11385;
wire   [31:0] grp_fu_4733_p2;
reg   [31:0] mul_1_reg_11390;
reg   [31:0] mul_1_reg_11390_pp0_iter2_reg;
reg   [31:0] d1_4_reg_11395;
reg   [31:0] d2_4_reg_11400;
reg   [31:0] sub75_4_reg_11405;
reg   [31:0] mul_2_reg_11410;
reg   [31:0] mul_2_reg_11410_pp0_iter2_reg;
reg   [31:0] d_4_reg_11415;
reg   [31:0] sub87_4_reg_11421;
reg   [31:0] d1_5_reg_11426;
reg   [31:0] d2_5_reg_11431;
reg   [31:0] mul_3_reg_11436;
reg   [31:0] mul_3_reg_11436_pp0_iter2_reg;
reg   [31:0] mul_3_reg_11436_pp0_iter3_reg;
reg   [31:0] mul_3_reg_11436_pp0_iter4_reg;
reg   [31:0] d_5_reg_11441;
reg   [31:0] mul_4_reg_11447;
reg   [31:0] mul_4_reg_11447_pp0_iter3_reg;
reg   [31:0] mul_4_reg_11447_pp0_iter4_reg;
reg   [31:0] mul_4_reg_11447_pp0_iter5_reg;
reg   [31:0] distance_reg_11452;
wire   [31:0] ov_2_fu_6722_p3;
reg   [31:0] ov_2_reg_11457;
wire   [31:0] ov_6_fu_6729_p3;
reg   [31:0] ov_6_reg_11464;
reg   [31:0] mul_5_reg_11471;
reg   [31:0] mul_5_reg_11471_pp0_iter3_reg;
reg   [31:0] mul_5_reg_11471_pp0_iter4_reg;
reg   [31:0] mul_5_reg_11471_pp0_iter5_reg;
reg   [31:0] mul_5_reg_11471_pp0_iter6_reg;
reg   [0:0] tmp_40_reg_11476;
reg   [0:0] tmp_45_reg_11481;
wire   [31:0] ov_10_fu_6736_p3;
reg   [31:0] ov_10_reg_11486;
wire   [31:0] ov_24_fu_6783_p3;
reg   [31:0] ov_24_reg_11493;
wire   [31:0] ov_7_fu_6830_p3;
reg   [31:0] ov_7_reg_11498;
wire   [31:0] ov_14_fu_6837_p3;
reg   [31:0] ov_14_reg_11503;
reg   [0:0] tmp_50_reg_11510;
wire   [31:0] ov_18_fu_6844_p3;
reg   [31:0] ov_18_reg_11515;
wire   [31:0] ov_22_fu_6851_p3;
reg   [31:0] ov_22_reg_11522;
wire   [31:0] ov_11_fu_6898_p3;
reg   [31:0] ov_11_reg_11529;
reg   [0:0] tmp_55_reg_11534;
wire   [31:0] ov_15_fu_6945_p3;
reg   [31:0] ov_15_reg_11539;
reg   [31:0] distance_1_reg_11544;
reg   [0:0] tmp_60_reg_11549;
wire   [31:0] ov_19_fu_6992_p3;
reg   [31:0] ov_19_reg_11554;
reg   [0:0] tmp_65_reg_11559;
wire   [31:0] ov_23_fu_7039_p3;
reg   [31:0] ov_23_reg_11564;
reg   [31:0] ov_23_reg_11564_pp0_iter4_reg;
reg   [31:0] overlap_3_reg_11569;
reg   [31:0] distance_2_reg_11574;
reg   [31:0] overlap_4_reg_11579;
reg   [31:0] distance_3_reg_11584;
reg   [31:0] overlap_5_reg_11589;
reg   [31:0] overlap_5_reg_11589_pp0_iter6_reg;
reg   [31:0] overlap_5_reg_11589_pp0_iter7_reg;
reg   [0:0] tmp_67_reg_11596;
reg   [0:0] tmp_67_reg_11596_pp0_iter7_reg;
reg   [31:0] distance_4_reg_11601;
wire   [31:0] sc_2_fu_7100_p3;
reg   [31:0] sc_2_reg_11606;
reg   [31:0] tmp_score_load_reg_11613;
reg   [0:0] tmp_70_reg_11620;
wire   [31:0] tmp_other_4_fu_7207_p3;
reg   [31:0] tmp_other_4_reg_11625;
wire   [31:0] tmp_score_4_fu_7214_p3;
reg   [31:0] tmp_score_4_reg_11631;
reg   [31:0] score_load_reg_11639;
reg   [31:0] merge_1_4_reg_11647;
reg   [31:0] merge_2_1_reg_11654;
reg   [0:0] tmp_73_reg_11660;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
reg    ap_condition_exit_pp0_iter10_stage0;
wire    ap_block_pp0_stage1_subdone;
reg   [31:0] merge_1_fu_1206;
wire   [31:0] merge_1_7_fu_7386_p3;
wire    ap_loop_init;
wire    ap_block_pp0_stage0;
reg   [31:0] merge_2_fu_1210;
wire   [31:0] merge_2_6_fu_7380_p3;
reg   [31:0] score_fu_1214;
wire   [31:0] score_3_fu_7374_p3;
wire    ap_block_pp0_stage7;
reg   [31:0] merge_1_1_fu_1218;
wire   [31:0] i_real_2_fu_6705_p3;
wire    ap_block_pp0_stage1;
reg   [31:0] k_real_4_fu_1222;
wire   [31:0] k_real_3_fu_6697_p3;
reg   [31:0] tmp_score_fu_1226;
wire   [31:0] tmp_score_3_fu_7226_p3;
reg   [31:0] tmp_other_fu_1230;
wire   [31:0] tmp_other_3_fu_7220_p3;
wire    ap_block_pp0_stage0_01001;
reg   [31:0] grp_fu_4704_p0;
reg   [31:0] grp_fu_4704_p1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire    ap_block_pp0_stage5;
wire    ap_block_pp0_stage6;
reg   [31:0] grp_fu_4708_p0;
reg   [31:0] grp_fu_4708_p1;
reg   [31:0] grp_fu_4712_p0;
reg   [31:0] grp_fu_4712_p1;
reg   [31:0] grp_fu_4716_p0;
reg   [31:0] grp_fu_4716_p1;
reg   [31:0] grp_fu_4720_p0;
reg   [31:0] grp_fu_4720_p1;
reg   [31:0] grp_fu_4724_p0;
reg   [31:0] grp_fu_4724_p1;
reg   [31:0] grp_fu_4729_p0;
reg   [31:0] grp_fu_4729_p1;
reg   [31:0] grp_fu_4733_p0;
reg   [31:0] grp_fu_4733_p1;
reg   [31:0] grp_fu_4737_p0;
reg   [31:0] grp_fu_4737_p1;
reg   [31:0] grp_fu_4741_p0;
reg   [31:0] grp_fu_4741_p1;
wire   [4:0] trunc_ln104_fu_4827_p1;
wire   [4:0] trunc_ln104_1_fu_4869_p1;
wire   [31:0] bitcast_ln112_fu_6203_p1;
wire   [31:0] bitcast_ln112_1_fu_6220_p1;
wire   [7:0] tmp_36_fu_6206_p4;
wire   [22:0] trunc_ln112_fu_6216_p1;
wire   [7:0] tmp_37_fu_6223_p4;
wire   [22:0] trunc_ln112_1_fu_6233_p1;
wire   [31:0] bitcast_ln112_2_fu_6261_p1;
wire   [31:0] bitcast_ln112_3_fu_6278_p1;
wire   [7:0] tmp_41_fu_6264_p4;
wire   [22:0] trunc_ln112_2_fu_6274_p1;
wire   [7:0] tmp_42_fu_6281_p4;
wire   [22:0] trunc_ln112_3_fu_6291_p1;
wire   [0:0] or_ln112_1_fu_6323_p2;
wire   [0:0] and_ln112_fu_6327_p2;
wire   [0:0] or_ln112_fu_6319_p2;
wire   [0:0] or_ln112_3_fu_6342_p2;
wire   [0:0] and_ln112_2_fu_6346_p2;
wire   [0:0] or_ln112_2_fu_6338_p2;
wire   [31:0] bitcast_ln112_4_fu_6357_p1;
wire   [31:0] bitcast_ln112_5_fu_6374_p1;
wire   [7:0] tmp_46_fu_6360_p4;
wire   [22:0] trunc_ln112_4_fu_6370_p1;
wire   [7:0] tmp_47_fu_6377_p4;
wire   [22:0] trunc_ln112_5_fu_6387_p1;
wire   [0:0] or_ln112_4_fu_6415_p2;
wire   [0:0] or_ln112_5_fu_6419_p2;
wire   [0:0] and_ln112_4_fu_6423_p2;
wire   [31:0] bitcast_ln112_6_fu_6434_p1;
wire   [31:0] bitcast_ln112_7_fu_6451_p1;
wire   [7:0] tmp_51_fu_6437_p4;
wire   [22:0] trunc_ln112_6_fu_6447_p1;
wire   [0:0] icmp_ln112_13_fu_6474_p2;
wire   [0:0] icmp_ln112_12_fu_6468_p2;
wire   [7:0] tmp_52_fu_6454_p4;
wire   [22:0] trunc_ln112_7_fu_6464_p1;
wire   [0:0] icmp_ln112_15_fu_6492_p2;
wire   [0:0] icmp_ln112_14_fu_6486_p2;
wire   [0:0] or_ln112_6_fu_6480_p2;
wire   [0:0] or_ln112_7_fu_6498_p2;
wire   [0:0] and_ln112_6_fu_6504_p2;
wire   [31:0] bitcast_ln112_8_fu_6515_p1;
wire   [31:0] bitcast_ln112_9_fu_6532_p1;
wire   [7:0] tmp_56_fu_6518_p4;
wire   [22:0] trunc_ln112_8_fu_6528_p1;
wire   [0:0] icmp_ln112_17_fu_6555_p2;
wire   [0:0] icmp_ln112_16_fu_6549_p2;
wire   [7:0] tmp_57_fu_6535_p4;
wire   [22:0] trunc_ln112_9_fu_6545_p1;
wire   [0:0] icmp_ln112_19_fu_6573_p2;
wire   [0:0] icmp_ln112_18_fu_6567_p2;
wire   [0:0] or_ln112_8_fu_6561_p2;
wire   [0:0] or_ln112_9_fu_6579_p2;
wire   [0:0] and_ln112_8_fu_6585_p2;
wire   [31:0] bitcast_ln112_10_fu_6596_p1;
wire   [31:0] bitcast_ln112_11_fu_6613_p1;
wire   [7:0] tmp_61_fu_6599_p4;
wire   [22:0] trunc_ln112_10_fu_6609_p1;
wire   [0:0] icmp_ln112_21_fu_6636_p2;
wire   [0:0] icmp_ln112_20_fu_6630_p2;
wire   [7:0] tmp_62_fu_6616_p4;
wire   [22:0] trunc_ln112_11_fu_6626_p1;
wire   [0:0] icmp_ln112_23_fu_6654_p2;
wire   [0:0] icmp_ln112_22_fu_6648_p2;
wire   [0:0] or_ln112_10_fu_6642_p2;
wire   [0:0] or_ln112_11_fu_6660_p2;
wire   [0:0] and_ln112_10_fu_6666_p2;
wire   [31:0] k_real_fu_6687_p2;
wire   [31:0] k_real_2_fu_6692_p2;
wire   [31:0] i_real_fu_6682_p2;
wire   [31:0] bitcast_ln116_fu_6743_p1;
wire   [7:0] tmp_39_fu_6746_p4;
wire   [22:0] trunc_ln116_fu_6756_p1;
wire   [0:0] icmp_ln116_1_fu_6766_p2;
wire   [0:0] icmp_ln116_fu_6760_p2;
wire   [0:0] or_ln116_fu_6772_p2;
wire   [0:0] and_ln116_fu_6778_p2;
wire   [31:0] bitcast_ln116_1_fu_6790_p1;
wire   [7:0] tmp_44_fu_6793_p4;
wire   [22:0] trunc_ln116_1_fu_6803_p1;
wire   [0:0] icmp_ln116_3_fu_6813_p2;
wire   [0:0] icmp_ln116_2_fu_6807_p2;
wire   [0:0] or_ln116_1_fu_6819_p2;
wire   [0:0] and_ln116_1_fu_6825_p2;
wire   [31:0] bitcast_ln116_2_fu_6858_p1;
wire   [7:0] tmp_49_fu_6861_p4;
wire   [22:0] trunc_ln116_2_fu_6871_p1;
wire   [0:0] icmp_ln116_5_fu_6881_p2;
wire   [0:0] icmp_ln116_4_fu_6875_p2;
wire   [0:0] or_ln116_2_fu_6887_p2;
wire   [0:0] and_ln116_2_fu_6893_p2;
wire   [31:0] bitcast_ln116_3_fu_6905_p1;
wire   [7:0] tmp_54_fu_6908_p4;
wire   [22:0] trunc_ln116_3_fu_6918_p1;
wire   [0:0] icmp_ln116_7_fu_6928_p2;
wire   [0:0] icmp_ln116_6_fu_6922_p2;
wire   [0:0] or_ln116_3_fu_6934_p2;
wire   [0:0] and_ln116_3_fu_6940_p2;
wire   [31:0] bitcast_ln116_4_fu_6952_p1;
wire   [7:0] tmp_59_fu_6955_p4;
wire   [22:0] trunc_ln116_4_fu_6965_p1;
wire   [0:0] icmp_ln116_9_fu_6975_p2;
wire   [0:0] icmp_ln116_8_fu_6969_p2;
wire   [0:0] or_ln116_4_fu_6981_p2;
wire   [0:0] and_ln116_4_fu_6987_p2;
wire   [31:0] bitcast_ln116_5_fu_6999_p1;
wire   [7:0] tmp_64_fu_7002_p4;
wire   [22:0] trunc_ln116_5_fu_7012_p1;
wire   [0:0] icmp_ln116_11_fu_7022_p2;
wire   [0:0] icmp_ln116_10_fu_7016_p2;
wire   [0:0] or_ln116_5_fu_7028_p2;
wire   [0:0] and_ln116_5_fu_7034_p2;
wire   [31:0] bitcast_ln122_fu_7046_p1;
wire   [7:0] tmp_66_fu_7049_p4;
wire   [22:0] trunc_ln122_fu_7059_p1;
wire   [0:0] icmp_ln122_1_fu_7069_p2;
wire   [0:0] icmp_ln122_fu_7063_p2;
wire   [0:0] or_ln122_fu_7075_p2;
wire   [31:0] bitcast_ln126_fu_7086_p1;
wire   [31:0] xor_ln126_fu_7090_p2;
wire   [0:0] and_ln122_fu_7081_p2;
wire   [31:0] sc_fu_7096_p1;
wire   [31:0] bitcast_ln130_fu_7120_p1;
wire   [31:0] bitcast_ln130_1_fu_7137_p1;
wire   [7:0] tmp_68_fu_7123_p4;
wire   [22:0] trunc_ln130_fu_7133_p1;
wire   [0:0] icmp_ln130_2_fu_7160_p2;
wire   [0:0] icmp_ln130_1_fu_7154_p2;
wire   [7:0] tmp_69_fu_7140_p4;
wire   [22:0] trunc_ln130_1_fu_7150_p1;
wire   [0:0] icmp_ln130_4_fu_7178_p2;
wire   [0:0] icmp_ln130_3_fu_7172_p2;
wire   [0:0] or_ln130_1_fu_7166_p2;
wire   [0:0] or_ln130_2_fu_7184_p2;
wire   [0:0] and_ln130_fu_7190_p2;
wire   [0:0] icmp_ln130_fu_7114_p2;
wire   [0:0] and_ln130_1_fu_7196_p2;
wire   [0:0] or_ln130_fu_7201_p2;
wire   [31:0] bitcast_ln139_fu_7269_p1;
wire   [31:0] bitcast_ln139_1_fu_7286_p1;
wire   [7:0] tmp_71_fu_7272_p4;
wire   [22:0] trunc_ln139_fu_7282_p1;
wire   [0:0] icmp_ln139_1_fu_7309_p2;
wire   [0:0] icmp_ln139_fu_7303_p2;
wire   [7:0] tmp_72_fu_7289_p4;
wire   [22:0] trunc_ln139_1_fu_7299_p1;
wire   [0:0] icmp_ln139_3_fu_7327_p2;
wire   [0:0] icmp_ln139_2_fu_7321_p2;
wire   [0:0] or_ln139_1_fu_7315_p2;
wire   [0:0] or_ln139_2_fu_7333_p2;
wire   [0:0] and_ln139_fu_7339_p2;
wire   [0:0] tmp_fu_7262_p3;
wire   [0:0] and_ln139_1_fu_7345_p2;
wire   [0:0] or_ln139_fu_7350_p2;
wire   [31:0] score_2_fu_7356_p3;
wire   [31:0] merge_2_5_fu_7362_p3;
wire   [31:0] merge_1_6_fu_7368_p3;
wire    ap_block_pp0_stage2_00001;
wire    ap_block_pp0_stage3_00001;
wire    ap_block_pp0_stage4_00001;
wire    ap_block_pp0_stage5_00001;
wire    ap_block_pp0_stage6_00001;
wire    ap_block_pp0_stage7_00001;
wire    ap_block_pp0_stage0_00001;
wire    ap_block_pp0_stage1_00001;
reg   [1:0] grp_fu_4716_opcode;
reg   [1:0] grp_fu_4720_opcode;
reg   [1:0] grp_fu_4724_opcode;
reg   [4:0] grp_fu_4737_opcode;
reg   [4:0] grp_fu_4741_opcode;
reg    ap_done_reg;
wire    ap_continue_int;
reg    ap_done_int;
reg    ap_loop_exit_ready_pp0_iter1_reg;
reg    ap_idle_pp0_0to9;
reg    ap_loop_exit_ready_pp0_iter2_reg;
reg    ap_loop_exit_ready_pp0_iter3_reg;
reg    ap_loop_exit_ready_pp0_iter4_reg;
reg    ap_loop_exit_ready_pp0_iter5_reg;
reg    ap_loop_exit_ready_pp0_iter6_reg;
reg    ap_loop_exit_ready_pp0_iter7_reg;
reg    ap_loop_exit_ready_pp0_iter8_reg;
reg    ap_loop_exit_ready_pp0_iter9_reg;
reg    ap_loop_exit_ready_pp0_iter10_reg;
reg   [7:0] ap_NS_fsm;
reg    ap_idle_pp0_1to10;
reg    ap_done_pending_pp0;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_pp0_stage5_subdone;
wire    ap_block_pp0_stage6_subdone;
wire    ap_enable_pp0;
wire    ap_start_int;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 8'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter3 = 1'b0;
#0 ap_enable_reg_pp0_iter4 = 1'b0;
#0 ap_enable_reg_pp0_iter5 = 1'b0;
#0 ap_enable_reg_pp0_iter6 = 1'b0;
#0 ap_enable_reg_pp0_iter7 = 1'b0;
#0 ap_enable_reg_pp0_iter8 = 1'b0;
#0 ap_enable_reg_pp0_iter9 = 1'b0;
#0 ap_enable_reg_pp0_iter10 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
#0 ap_done_reg = 1'b0;
end

FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_8_full_dsp_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4708_p0),
    .din1(grp_fu_4708_p1),
    .ce(1'b1),
    .dout(grp_fu_4708_p2)
);

FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fsub_32ns_32ns_32_8_full_dsp_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4712_p0),
    .din1(grp_fu_4712_p1),
    .ce(1'b1),
    .dout(grp_fu_4712_p2)
);

FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_8_full_dsp_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4716_p0),
    .din1(grp_fu_4716_p1),
    .opcode(grp_fu_4716_opcode),
    .ce(1'b1),
    .dout(grp_fu_4716_p2)
);

FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_8_full_dsp_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4720_p0),
    .din1(grp_fu_4720_p1),
    .opcode(grp_fu_4720_opcode),
    .ce(1'b1),
    .dout(grp_fu_4720_p2)
);

FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 8 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
faddfsub_32ns_32ns_32_8_full_dsp_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4724_p0),
    .din1(grp_fu_4724_p1),
    .opcode(grp_fu_4724_opcode),
    .ce(1'b1),
    .dout(grp_fu_4724_p2)
);

FaultDetector_fmul_32ns_32ns_32_4_max_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 32 ))
fmul_32ns_32ns_32_4_max_dsp_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_4733_p0),
    .din1(grp_fu_4733_p1),
    .ce(1'b1),
    .dout(grp_fu_4733_p2)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U20(
    .din0(regions_center_0_0_0),
    .din1(regions_center_1_0_0),
    .din2(regions_center_2_0_0),
    .din3(regions_center_3_0_0),
    .din4(regions_center_4_0_0),
    .din5(regions_center_5_0_0),
    .din6(regions_center_6_0_0),
    .din7(regions_center_7_0_0),
    .din8(regions_center_8_0_0),
    .din9(regions_center_9_0_0),
    .din10(regions_center_10_0_0),
    .din11(regions_center_11_0_0),
    .din12(regions_center_12_0_0),
    .din13(regions_center_13_0_0),
    .din14(regions_center_14_0_0),
    .din15(regions_center_15_0_0),
    .din16(regions_center_16_0_0),
    .din17(regions_center_17_0_0),
    .din18(regions_center_18_0_0),
    .din19(regions_center_19_0_0),
    .din20(regions_center_20_0_0),
    .din21(regions_center_21_0_0),
    .din22(regions_center_22_0_0),
    .din23(regions_center_23_0_0),
    .din24(regions_center_24_0_0),
    .din25(regions_center_25_0_0),
    .din26(regions_center_26_0_0),
    .din27(regions_center_27_0_0),
    .din28(regions_center_28_0_0),
    .din29(regions_center_29_0_0),
    .din30(regions_center_30_0_0),
    .din31(regions_center_31_0_0),
    .din32(trunc_ln104_fu_4827_p1),
    .dout(tmp_s_fu_4831_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U21(
    .din0(regions_center_0_0_0),
    .din1(regions_center_1_0_0),
    .din2(regions_center_2_0_0),
    .din3(regions_center_3_0_0),
    .din4(regions_center_4_0_0),
    .din5(regions_center_5_0_0),
    .din6(regions_center_6_0_0),
    .din7(regions_center_7_0_0),
    .din8(regions_center_8_0_0),
    .din9(regions_center_9_0_0),
    .din10(regions_center_10_0_0),
    .din11(regions_center_11_0_0),
    .din12(regions_center_12_0_0),
    .din13(regions_center_13_0_0),
    .din14(regions_center_14_0_0),
    .din15(regions_center_15_0_0),
    .din16(regions_center_16_0_0),
    .din17(regions_center_17_0_0),
    .din18(regions_center_18_0_0),
    .din19(regions_center_19_0_0),
    .din20(regions_center_20_0_0),
    .din21(regions_center_21_0_0),
    .din22(regions_center_22_0_0),
    .din23(regions_center_23_0_0),
    .din24(regions_center_24_0_0),
    .din25(regions_center_25_0_0),
    .din26(regions_center_26_0_0),
    .din27(regions_center_27_0_0),
    .din28(regions_center_28_0_0),
    .din29(regions_center_29_0_0),
    .din30(regions_center_30_0_0),
    .din31(regions_center_31_0_0),
    .din32(trunc_ln104_1_fu_4869_p1),
    .dout(tmp_5_fu_4873_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U22(
    .din0(regions_max_0_0_0),
    .din1(regions_max_1_0_0),
    .din2(regions_max_2_0_0),
    .din3(regions_max_3_0_0),
    .din4(regions_max_4_0_0),
    .din5(regions_max_5_0_0),
    .din6(regions_max_6_0_0),
    .din7(regions_max_7_0_0),
    .din8(regions_max_8_0_0),
    .din9(regions_max_9_0_0),
    .din10(regions_max_10_0_0),
    .din11(regions_max_11_0_0),
    .din12(regions_max_12_0_0),
    .din13(regions_max_13_0_0),
    .din14(regions_max_14_0_0),
    .din15(regions_max_15_0_0),
    .din16(regions_max_16_0_0),
    .din17(regions_max_17_0_0),
    .din18(regions_max_18_0_0),
    .din19(regions_max_19_0_0),
    .din20(regions_max_20_0_0),
    .din21(regions_max_21_0_0),
    .din22(regions_max_22_0_0),
    .din23(regions_max_23_0_0),
    .din24(regions_max_24_0_0),
    .din25(regions_max_25_0_0),
    .din26(regions_max_26_0_0),
    .din27(regions_max_27_0_0),
    .din28(regions_max_28_0_0),
    .din29(regions_max_29_0_0),
    .din30(regions_max_30_0_0),
    .din31(regions_max_31_0_0),
    .din32(trunc_ln104_fu_4827_p1),
    .dout(tmp_6_fu_4911_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U23(
    .din0(regions_min_0_0_0),
    .din1(regions_min_1_0_0),
    .din2(regions_min_2_0_0),
    .din3(regions_min_3_0_0),
    .din4(regions_min_4_0_0),
    .din5(regions_min_5_0_0),
    .din6(regions_min_6_0_0),
    .din7(regions_min_7_0_0),
    .din8(regions_min_8_0_0),
    .din9(regions_min_9_0_0),
    .din10(regions_min_10_0_0),
    .din11(regions_min_11_0_0),
    .din12(regions_min_12_0_0),
    .din13(regions_min_13_0_0),
    .din14(regions_min_14_0_0),
    .din15(regions_min_15_0_0),
    .din16(regions_min_16_0_0),
    .din17(regions_min_17_0_0),
    .din18(regions_min_18_0_0),
    .din19(regions_min_19_0_0),
    .din20(regions_min_20_0_0),
    .din21(regions_min_21_0_0),
    .din22(regions_min_22_0_0),
    .din23(regions_min_23_0_0),
    .din24(regions_min_24_0_0),
    .din25(regions_min_25_0_0),
    .din26(regions_min_26_0_0),
    .din27(regions_min_27_0_0),
    .din28(regions_min_28_0_0),
    .din29(regions_min_29_0_0),
    .din30(regions_min_30_0_0),
    .din31(regions_min_31_0_0),
    .din32(trunc_ln104_fu_4827_p1),
    .dout(tmp_7_fu_4949_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U24(
    .din0(regions_max_0_0_0),
    .din1(regions_max_1_0_0),
    .din2(regions_max_2_0_0),
    .din3(regions_max_3_0_0),
    .din4(regions_max_4_0_0),
    .din5(regions_max_5_0_0),
    .din6(regions_max_6_0_0),
    .din7(regions_max_7_0_0),
    .din8(regions_max_8_0_0),
    .din9(regions_max_9_0_0),
    .din10(regions_max_10_0_0),
    .din11(regions_max_11_0_0),
    .din12(regions_max_12_0_0),
    .din13(regions_max_13_0_0),
    .din14(regions_max_14_0_0),
    .din15(regions_max_15_0_0),
    .din16(regions_max_16_0_0),
    .din17(regions_max_17_0_0),
    .din18(regions_max_18_0_0),
    .din19(regions_max_19_0_0),
    .din20(regions_max_20_0_0),
    .din21(regions_max_21_0_0),
    .din22(regions_max_22_0_0),
    .din23(regions_max_23_0_0),
    .din24(regions_max_24_0_0),
    .din25(regions_max_25_0_0),
    .din26(regions_max_26_0_0),
    .din27(regions_max_27_0_0),
    .din28(regions_max_28_0_0),
    .din29(regions_max_29_0_0),
    .din30(regions_max_30_0_0),
    .din31(regions_max_31_0_0),
    .din32(trunc_ln104_1_fu_4869_p1),
    .dout(tmp_8_fu_4987_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U25(
    .din0(regions_min_0_0_0),
    .din1(regions_min_1_0_0),
    .din2(regions_min_2_0_0),
    .din3(regions_min_3_0_0),
    .din4(regions_min_4_0_0),
    .din5(regions_min_5_0_0),
    .din6(regions_min_6_0_0),
    .din7(regions_min_7_0_0),
    .din8(regions_min_8_0_0),
    .din9(regions_min_9_0_0),
    .din10(regions_min_10_0_0),
    .din11(regions_min_11_0_0),
    .din12(regions_min_12_0_0),
    .din13(regions_min_13_0_0),
    .din14(regions_min_14_0_0),
    .din15(regions_min_15_0_0),
    .din16(regions_min_16_0_0),
    .din17(regions_min_17_0_0),
    .din18(regions_min_18_0_0),
    .din19(regions_min_19_0_0),
    .din20(regions_min_20_0_0),
    .din21(regions_min_21_0_0),
    .din22(regions_min_22_0_0),
    .din23(regions_min_23_0_0),
    .din24(regions_min_24_0_0),
    .din25(regions_min_25_0_0),
    .din26(regions_min_26_0_0),
    .din27(regions_min_27_0_0),
    .din28(regions_min_28_0_0),
    .din29(regions_min_29_0_0),
    .din30(regions_min_30_0_0),
    .din31(regions_min_31_0_0),
    .din32(trunc_ln104_1_fu_4869_p1),
    .dout(tmp_9_fu_5025_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U26(
    .din0(regions_center_0_1_0),
    .din1(regions_center_1_1_0),
    .din2(regions_center_2_1_0),
    .din3(regions_center_3_1_0),
    .din4(regions_center_4_1_0),
    .din5(regions_center_5_1_0),
    .din6(regions_center_6_1_0),
    .din7(regions_center_7_1_0),
    .din8(regions_center_8_1_0),
    .din9(regions_center_9_1_0),
    .din10(regions_center_10_1_0),
    .din11(regions_center_11_1_0),
    .din12(regions_center_12_1_0),
    .din13(regions_center_13_1_0),
    .din14(regions_center_14_1_0),
    .din15(regions_center_15_1_0),
    .din16(regions_center_16_1_0),
    .din17(regions_center_17_1_0),
    .din18(regions_center_18_1_0),
    .din19(regions_center_19_1_0),
    .din20(regions_center_20_1_0),
    .din21(regions_center_21_1_0),
    .din22(regions_center_22_1_0),
    .din23(regions_center_23_1_0),
    .din24(regions_center_24_1_0),
    .din25(regions_center_25_1_0),
    .din26(regions_center_26_1_0),
    .din27(regions_center_27_1_0),
    .din28(regions_center_28_1_0),
    .din29(regions_center_29_1_0),
    .din30(regions_center_30_1_0),
    .din31(regions_center_31_1_0),
    .din32(trunc_ln104_fu_4827_p1),
    .dout(tmp_1_fu_5063_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U27(
    .din0(regions_center_0_1_0),
    .din1(regions_center_1_1_0),
    .din2(regions_center_2_1_0),
    .din3(regions_center_3_1_0),
    .din4(regions_center_4_1_0),
    .din5(regions_center_5_1_0),
    .din6(regions_center_6_1_0),
    .din7(regions_center_7_1_0),
    .din8(regions_center_8_1_0),
    .din9(regions_center_9_1_0),
    .din10(regions_center_10_1_0),
    .din11(regions_center_11_1_0),
    .din12(regions_center_12_1_0),
    .din13(regions_center_13_1_0),
    .din14(regions_center_14_1_0),
    .din15(regions_center_15_1_0),
    .din16(regions_center_16_1_0),
    .din17(regions_center_17_1_0),
    .din18(regions_center_18_1_0),
    .din19(regions_center_19_1_0),
    .din20(regions_center_20_1_0),
    .din21(regions_center_21_1_0),
    .din22(regions_center_22_1_0),
    .din23(regions_center_23_1_0),
    .din24(regions_center_24_1_0),
    .din25(regions_center_25_1_0),
    .din26(regions_center_26_1_0),
    .din27(regions_center_27_1_0),
    .din28(regions_center_28_1_0),
    .din29(regions_center_29_1_0),
    .din30(regions_center_30_1_0),
    .din31(regions_center_31_1_0),
    .din32(trunc_ln104_1_fu_4869_p1),
    .dout(tmp_2_fu_5101_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U28(
    .din0(regions_max_0_1_0),
    .din1(regions_max_1_1_0),
    .din2(regions_max_2_1_0),
    .din3(regions_max_3_1_0),
    .din4(regions_max_4_1_0),
    .din5(regions_max_5_1_0),
    .din6(regions_max_6_1_0),
    .din7(regions_max_7_1_0),
    .din8(regions_max_8_1_0),
    .din9(regions_max_9_1_0),
    .din10(regions_max_10_1_0),
    .din11(regions_max_11_1_0),
    .din12(regions_max_12_1_0),
    .din13(regions_max_13_1_0),
    .din14(regions_max_14_1_0),
    .din15(regions_max_15_1_0),
    .din16(regions_max_16_1_0),
    .din17(regions_max_17_1_0),
    .din18(regions_max_18_1_0),
    .din19(regions_max_19_1_0),
    .din20(regions_max_20_1_0),
    .din21(regions_max_21_1_0),
    .din22(regions_max_22_1_0),
    .din23(regions_max_23_1_0),
    .din24(regions_max_24_1_0),
    .din25(regions_max_25_1_0),
    .din26(regions_max_26_1_0),
    .din27(regions_max_27_1_0),
    .din28(regions_max_28_1_0),
    .din29(regions_max_29_1_0),
    .din30(regions_max_30_1_0),
    .din31(regions_max_31_1_0),
    .din32(trunc_ln104_fu_4827_p1),
    .dout(tmp_3_fu_5139_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U29(
    .din0(regions_min_0_1_0),
    .din1(regions_min_1_1_0),
    .din2(regions_min_2_1_0),
    .din3(regions_min_3_1_0),
    .din4(regions_min_4_1_0),
    .din5(regions_min_5_1_0),
    .din6(regions_min_6_1_0),
    .din7(regions_min_7_1_0),
    .din8(regions_min_8_1_0),
    .din9(regions_min_9_1_0),
    .din10(regions_min_10_1_0),
    .din11(regions_min_11_1_0),
    .din12(regions_min_12_1_0),
    .din13(regions_min_13_1_0),
    .din14(regions_min_14_1_0),
    .din15(regions_min_15_1_0),
    .din16(regions_min_16_1_0),
    .din17(regions_min_17_1_0),
    .din18(regions_min_18_1_0),
    .din19(regions_min_19_1_0),
    .din20(regions_min_20_1_0),
    .din21(regions_min_21_1_0),
    .din22(regions_min_22_1_0),
    .din23(regions_min_23_1_0),
    .din24(regions_min_24_1_0),
    .din25(regions_min_25_1_0),
    .din26(regions_min_26_1_0),
    .din27(regions_min_27_1_0),
    .din28(regions_min_28_1_0),
    .din29(regions_min_29_1_0),
    .din30(regions_min_30_1_0),
    .din31(regions_min_31_1_0),
    .din32(trunc_ln104_fu_4827_p1),
    .dout(tmp_4_fu_5177_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U30(
    .din0(regions_max_0_1_0),
    .din1(regions_max_1_1_0),
    .din2(regions_max_2_1_0),
    .din3(regions_max_3_1_0),
    .din4(regions_max_4_1_0),
    .din5(regions_max_5_1_0),
    .din6(regions_max_6_1_0),
    .din7(regions_max_7_1_0),
    .din8(regions_max_8_1_0),
    .din9(regions_max_9_1_0),
    .din10(regions_max_10_1_0),
    .din11(regions_max_11_1_0),
    .din12(regions_max_12_1_0),
    .din13(regions_max_13_1_0),
    .din14(regions_max_14_1_0),
    .din15(regions_max_15_1_0),
    .din16(regions_max_16_1_0),
    .din17(regions_max_17_1_0),
    .din18(regions_max_18_1_0),
    .din19(regions_max_19_1_0),
    .din20(regions_max_20_1_0),
    .din21(regions_max_21_1_0),
    .din22(regions_max_22_1_0),
    .din23(regions_max_23_1_0),
    .din24(regions_max_24_1_0),
    .din25(regions_max_25_1_0),
    .din26(regions_max_26_1_0),
    .din27(regions_max_27_1_0),
    .din28(regions_max_28_1_0),
    .din29(regions_max_29_1_0),
    .din30(regions_max_30_1_0),
    .din31(regions_max_31_1_0),
    .din32(trunc_ln104_1_fu_4869_p1),
    .dout(tmp_10_fu_5215_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U31(
    .din0(regions_min_0_1_0),
    .din1(regions_min_1_1_0),
    .din2(regions_min_2_1_0),
    .din3(regions_min_3_1_0),
    .din4(regions_min_4_1_0),
    .din5(regions_min_5_1_0),
    .din6(regions_min_6_1_0),
    .din7(regions_min_7_1_0),
    .din8(regions_min_8_1_0),
    .din9(regions_min_9_1_0),
    .din10(regions_min_10_1_0),
    .din11(regions_min_11_1_0),
    .din12(regions_min_12_1_0),
    .din13(regions_min_13_1_0),
    .din14(regions_min_14_1_0),
    .din15(regions_min_15_1_0),
    .din16(regions_min_16_1_0),
    .din17(regions_min_17_1_0),
    .din18(regions_min_18_1_0),
    .din19(regions_min_19_1_0),
    .din20(regions_min_20_1_0),
    .din21(regions_min_21_1_0),
    .din22(regions_min_22_1_0),
    .din23(regions_min_23_1_0),
    .din24(regions_min_24_1_0),
    .din25(regions_min_25_1_0),
    .din26(regions_min_26_1_0),
    .din27(regions_min_27_1_0),
    .din28(regions_min_28_1_0),
    .din29(regions_min_29_1_0),
    .din30(regions_min_30_1_0),
    .din31(regions_min_31_1_0),
    .din32(trunc_ln104_1_fu_4869_p1),
    .dout(tmp_11_fu_5253_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U32(
    .din0(regions_center_0_2_0),
    .din1(regions_center_1_2_0),
    .din2(regions_center_2_2_0),
    .din3(regions_center_3_2_0),
    .din4(regions_center_4_2_0),
    .din5(regions_center_5_2_0),
    .din6(regions_center_6_2_0),
    .din7(regions_center_7_2_0),
    .din8(regions_center_8_2_0),
    .din9(regions_center_9_2_0),
    .din10(regions_center_10_2_0),
    .din11(regions_center_11_2_0),
    .din12(regions_center_12_2_0),
    .din13(regions_center_13_2_0),
    .din14(regions_center_14_2_0),
    .din15(regions_center_15_2_0),
    .din16(regions_center_16_2_0),
    .din17(regions_center_17_2_0),
    .din18(regions_center_18_2_0),
    .din19(regions_center_19_2_0),
    .din20(regions_center_20_2_0),
    .din21(regions_center_21_2_0),
    .din22(regions_center_22_2_0),
    .din23(regions_center_23_2_0),
    .din24(regions_center_24_2_0),
    .din25(regions_center_25_2_0),
    .din26(regions_center_26_2_0),
    .din27(regions_center_27_2_0),
    .din28(regions_center_28_2_0),
    .din29(regions_center_29_2_0),
    .din30(regions_center_30_2_0),
    .din31(regions_center_31_2_0),
    .din32(trunc_ln104_fu_4827_p1),
    .dout(tmp_12_fu_5291_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U33(
    .din0(regions_center_0_2_0),
    .din1(regions_center_1_2_0),
    .din2(regions_center_2_2_0),
    .din3(regions_center_3_2_0),
    .din4(regions_center_4_2_0),
    .din5(regions_center_5_2_0),
    .din6(regions_center_6_2_0),
    .din7(regions_center_7_2_0),
    .din8(regions_center_8_2_0),
    .din9(regions_center_9_2_0),
    .din10(regions_center_10_2_0),
    .din11(regions_center_11_2_0),
    .din12(regions_center_12_2_0),
    .din13(regions_center_13_2_0),
    .din14(regions_center_14_2_0),
    .din15(regions_center_15_2_0),
    .din16(regions_center_16_2_0),
    .din17(regions_center_17_2_0),
    .din18(regions_center_18_2_0),
    .din19(regions_center_19_2_0),
    .din20(regions_center_20_2_0),
    .din21(regions_center_21_2_0),
    .din22(regions_center_22_2_0),
    .din23(regions_center_23_2_0),
    .din24(regions_center_24_2_0),
    .din25(regions_center_25_2_0),
    .din26(regions_center_26_2_0),
    .din27(regions_center_27_2_0),
    .din28(regions_center_28_2_0),
    .din29(regions_center_29_2_0),
    .din30(regions_center_30_2_0),
    .din31(regions_center_31_2_0),
    .din32(trunc_ln104_1_fu_4869_p1),
    .dout(tmp_13_fu_5329_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U34(
    .din0(regions_max_0_2_0),
    .din1(regions_max_1_2_0),
    .din2(regions_max_2_2_0),
    .din3(regions_max_3_2_0),
    .din4(regions_max_4_2_0),
    .din5(regions_max_5_2_0),
    .din6(regions_max_6_2_0),
    .din7(regions_max_7_2_0),
    .din8(regions_max_8_2_0),
    .din9(regions_max_9_2_0),
    .din10(regions_max_10_2_0),
    .din11(regions_max_11_2_0),
    .din12(regions_max_12_2_0),
    .din13(regions_max_13_2_0),
    .din14(regions_max_14_2_0),
    .din15(regions_max_15_2_0),
    .din16(regions_max_16_2_0),
    .din17(regions_max_17_2_0),
    .din18(regions_max_18_2_0),
    .din19(regions_max_19_2_0),
    .din20(regions_max_20_2_0),
    .din21(regions_max_21_2_0),
    .din22(regions_max_22_2_0),
    .din23(regions_max_23_2_0),
    .din24(regions_max_24_2_0),
    .din25(regions_max_25_2_0),
    .din26(regions_max_26_2_0),
    .din27(regions_max_27_2_0),
    .din28(regions_max_28_2_0),
    .din29(regions_max_29_2_0),
    .din30(regions_max_30_2_0),
    .din31(regions_max_31_2_0),
    .din32(trunc_ln104_fu_4827_p1),
    .dout(tmp_14_fu_5367_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U35(
    .din0(regions_min_0_2_0),
    .din1(regions_min_1_2_0),
    .din2(regions_min_2_2_0),
    .din3(regions_min_3_2_0),
    .din4(regions_min_4_2_0),
    .din5(regions_min_5_2_0),
    .din6(regions_min_6_2_0),
    .din7(regions_min_7_2_0),
    .din8(regions_min_8_2_0),
    .din9(regions_min_9_2_0),
    .din10(regions_min_10_2_0),
    .din11(regions_min_11_2_0),
    .din12(regions_min_12_2_0),
    .din13(regions_min_13_2_0),
    .din14(regions_min_14_2_0),
    .din15(regions_min_15_2_0),
    .din16(regions_min_16_2_0),
    .din17(regions_min_17_2_0),
    .din18(regions_min_18_2_0),
    .din19(regions_min_19_2_0),
    .din20(regions_min_20_2_0),
    .din21(regions_min_21_2_0),
    .din22(regions_min_22_2_0),
    .din23(regions_min_23_2_0),
    .din24(regions_min_24_2_0),
    .din25(regions_min_25_2_0),
    .din26(regions_min_26_2_0),
    .din27(regions_min_27_2_0),
    .din28(regions_min_28_2_0),
    .din29(regions_min_29_2_0),
    .din30(regions_min_30_2_0),
    .din31(regions_min_31_2_0),
    .din32(trunc_ln104_fu_4827_p1),
    .dout(tmp_15_fu_5405_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U36(
    .din0(regions_max_0_2_0),
    .din1(regions_max_1_2_0),
    .din2(regions_max_2_2_0),
    .din3(regions_max_3_2_0),
    .din4(regions_max_4_2_0),
    .din5(regions_max_5_2_0),
    .din6(regions_max_6_2_0),
    .din7(regions_max_7_2_0),
    .din8(regions_max_8_2_0),
    .din9(regions_max_9_2_0),
    .din10(regions_max_10_2_0),
    .din11(regions_max_11_2_0),
    .din12(regions_max_12_2_0),
    .din13(regions_max_13_2_0),
    .din14(regions_max_14_2_0),
    .din15(regions_max_15_2_0),
    .din16(regions_max_16_2_0),
    .din17(regions_max_17_2_0),
    .din18(regions_max_18_2_0),
    .din19(regions_max_19_2_0),
    .din20(regions_max_20_2_0),
    .din21(regions_max_21_2_0),
    .din22(regions_max_22_2_0),
    .din23(regions_max_23_2_0),
    .din24(regions_max_24_2_0),
    .din25(regions_max_25_2_0),
    .din26(regions_max_26_2_0),
    .din27(regions_max_27_2_0),
    .din28(regions_max_28_2_0),
    .din29(regions_max_29_2_0),
    .din30(regions_max_30_2_0),
    .din31(regions_max_31_2_0),
    .din32(trunc_ln104_1_fu_4869_p1),
    .dout(tmp_16_fu_5443_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U37(
    .din0(regions_min_0_2_0),
    .din1(regions_min_1_2_0),
    .din2(regions_min_2_2_0),
    .din3(regions_min_3_2_0),
    .din4(regions_min_4_2_0),
    .din5(regions_min_5_2_0),
    .din6(regions_min_6_2_0),
    .din7(regions_min_7_2_0),
    .din8(regions_min_8_2_0),
    .din9(regions_min_9_2_0),
    .din10(regions_min_10_2_0),
    .din11(regions_min_11_2_0),
    .din12(regions_min_12_2_0),
    .din13(regions_min_13_2_0),
    .din14(regions_min_14_2_0),
    .din15(regions_min_15_2_0),
    .din16(regions_min_16_2_0),
    .din17(regions_min_17_2_0),
    .din18(regions_min_18_2_0),
    .din19(regions_min_19_2_0),
    .din20(regions_min_20_2_0),
    .din21(regions_min_21_2_0),
    .din22(regions_min_22_2_0),
    .din23(regions_min_23_2_0),
    .din24(regions_min_24_2_0),
    .din25(regions_min_25_2_0),
    .din26(regions_min_26_2_0),
    .din27(regions_min_27_2_0),
    .din28(regions_min_28_2_0),
    .din29(regions_min_29_2_0),
    .din30(regions_min_30_2_0),
    .din31(regions_min_31_2_0),
    .din32(trunc_ln104_1_fu_4869_p1),
    .dout(tmp_17_fu_5481_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U38(
    .din0(regions_center_0_3_0),
    .din1(regions_center_1_3_0),
    .din2(regions_center_2_3_0),
    .din3(regions_center_3_3_0),
    .din4(regions_center_4_3_0),
    .din5(regions_center_5_3_0),
    .din6(regions_center_6_3_0),
    .din7(regions_center_7_3_0),
    .din8(regions_center_8_3_0),
    .din9(regions_center_9_3_0),
    .din10(regions_center_10_3_0),
    .din11(regions_center_11_3_0),
    .din12(regions_center_12_3_0),
    .din13(regions_center_13_3_0),
    .din14(regions_center_14_3_0),
    .din15(regions_center_15_3_0),
    .din16(regions_center_16_3_0),
    .din17(regions_center_17_3_0),
    .din18(regions_center_18_3_0),
    .din19(regions_center_19_3_0),
    .din20(regions_center_20_3_0),
    .din21(regions_center_21_3_0),
    .din22(regions_center_22_3_0),
    .din23(regions_center_23_3_0),
    .din24(regions_center_24_3_0),
    .din25(regions_center_25_3_0),
    .din26(regions_center_26_3_0),
    .din27(regions_center_27_3_0),
    .din28(regions_center_28_3_0),
    .din29(regions_center_29_3_0),
    .din30(regions_center_30_3_0),
    .din31(regions_center_31_3_0),
    .din32(trunc_ln104_fu_4827_p1),
    .dout(tmp_18_fu_5519_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U39(
    .din0(regions_center_0_3_0),
    .din1(regions_center_1_3_0),
    .din2(regions_center_2_3_0),
    .din3(regions_center_3_3_0),
    .din4(regions_center_4_3_0),
    .din5(regions_center_5_3_0),
    .din6(regions_center_6_3_0),
    .din7(regions_center_7_3_0),
    .din8(regions_center_8_3_0),
    .din9(regions_center_9_3_0),
    .din10(regions_center_10_3_0),
    .din11(regions_center_11_3_0),
    .din12(regions_center_12_3_0),
    .din13(regions_center_13_3_0),
    .din14(regions_center_14_3_0),
    .din15(regions_center_15_3_0),
    .din16(regions_center_16_3_0),
    .din17(regions_center_17_3_0),
    .din18(regions_center_18_3_0),
    .din19(regions_center_19_3_0),
    .din20(regions_center_20_3_0),
    .din21(regions_center_21_3_0),
    .din22(regions_center_22_3_0),
    .din23(regions_center_23_3_0),
    .din24(regions_center_24_3_0),
    .din25(regions_center_25_3_0),
    .din26(regions_center_26_3_0),
    .din27(regions_center_27_3_0),
    .din28(regions_center_28_3_0),
    .din29(regions_center_29_3_0),
    .din30(regions_center_30_3_0),
    .din31(regions_center_31_3_0),
    .din32(trunc_ln104_1_fu_4869_p1),
    .dout(tmp_19_fu_5557_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U40(
    .din0(regions_max_0_3_0),
    .din1(regions_max_1_3_0),
    .din2(regions_max_2_3_0),
    .din3(regions_max_3_3_0),
    .din4(regions_max_4_3_0),
    .din5(regions_max_5_3_0),
    .din6(regions_max_6_3_0),
    .din7(regions_max_7_3_0),
    .din8(regions_max_8_3_0),
    .din9(regions_max_9_3_0),
    .din10(regions_max_10_3_0),
    .din11(regions_max_11_3_0),
    .din12(regions_max_12_3_0),
    .din13(regions_max_13_3_0),
    .din14(regions_max_14_3_0),
    .din15(regions_max_15_3_0),
    .din16(regions_max_16_3_0),
    .din17(regions_max_17_3_0),
    .din18(regions_max_18_3_0),
    .din19(regions_max_19_3_0),
    .din20(regions_max_20_3_0),
    .din21(regions_max_21_3_0),
    .din22(regions_max_22_3_0),
    .din23(regions_max_23_3_0),
    .din24(regions_max_24_3_0),
    .din25(regions_max_25_3_0),
    .din26(regions_max_26_3_0),
    .din27(regions_max_27_3_0),
    .din28(regions_max_28_3_0),
    .din29(regions_max_29_3_0),
    .din30(regions_max_30_3_0),
    .din31(regions_max_31_3_0),
    .din32(trunc_ln104_fu_4827_p1),
    .dout(tmp_20_fu_5595_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U41(
    .din0(regions_min_0_3_0),
    .din1(regions_min_1_3_0),
    .din2(regions_min_2_3_0),
    .din3(regions_min_3_3_0),
    .din4(regions_min_4_3_0),
    .din5(regions_min_5_3_0),
    .din6(regions_min_6_3_0),
    .din7(regions_min_7_3_0),
    .din8(regions_min_8_3_0),
    .din9(regions_min_9_3_0),
    .din10(regions_min_10_3_0),
    .din11(regions_min_11_3_0),
    .din12(regions_min_12_3_0),
    .din13(regions_min_13_3_0),
    .din14(regions_min_14_3_0),
    .din15(regions_min_15_3_0),
    .din16(regions_min_16_3_0),
    .din17(regions_min_17_3_0),
    .din18(regions_min_18_3_0),
    .din19(regions_min_19_3_0),
    .din20(regions_min_20_3_0),
    .din21(regions_min_21_3_0),
    .din22(regions_min_22_3_0),
    .din23(regions_min_23_3_0),
    .din24(regions_min_24_3_0),
    .din25(regions_min_25_3_0),
    .din26(regions_min_26_3_0),
    .din27(regions_min_27_3_0),
    .din28(regions_min_28_3_0),
    .din29(regions_min_29_3_0),
    .din30(regions_min_30_3_0),
    .din31(regions_min_31_3_0),
    .din32(trunc_ln104_fu_4827_p1),
    .dout(tmp_21_fu_5633_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U42(
    .din0(regions_max_0_3_0),
    .din1(regions_max_1_3_0),
    .din2(regions_max_2_3_0),
    .din3(regions_max_3_3_0),
    .din4(regions_max_4_3_0),
    .din5(regions_max_5_3_0),
    .din6(regions_max_6_3_0),
    .din7(regions_max_7_3_0),
    .din8(regions_max_8_3_0),
    .din9(regions_max_9_3_0),
    .din10(regions_max_10_3_0),
    .din11(regions_max_11_3_0),
    .din12(regions_max_12_3_0),
    .din13(regions_max_13_3_0),
    .din14(regions_max_14_3_0),
    .din15(regions_max_15_3_0),
    .din16(regions_max_16_3_0),
    .din17(regions_max_17_3_0),
    .din18(regions_max_18_3_0),
    .din19(regions_max_19_3_0),
    .din20(regions_max_20_3_0),
    .din21(regions_max_21_3_0),
    .din22(regions_max_22_3_0),
    .din23(regions_max_23_3_0),
    .din24(regions_max_24_3_0),
    .din25(regions_max_25_3_0),
    .din26(regions_max_26_3_0),
    .din27(regions_max_27_3_0),
    .din28(regions_max_28_3_0),
    .din29(regions_max_29_3_0),
    .din30(regions_max_30_3_0),
    .din31(regions_max_31_3_0),
    .din32(trunc_ln104_1_fu_4869_p1),
    .dout(tmp_22_fu_5671_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U43(
    .din0(regions_min_0_3_0),
    .din1(regions_min_1_3_0),
    .din2(regions_min_2_3_0),
    .din3(regions_min_3_3_0),
    .din4(regions_min_4_3_0),
    .din5(regions_min_5_3_0),
    .din6(regions_min_6_3_0),
    .din7(regions_min_7_3_0),
    .din8(regions_min_8_3_0),
    .din9(regions_min_9_3_0),
    .din10(regions_min_10_3_0),
    .din11(regions_min_11_3_0),
    .din12(regions_min_12_3_0),
    .din13(regions_min_13_3_0),
    .din14(regions_min_14_3_0),
    .din15(regions_min_15_3_0),
    .din16(regions_min_16_3_0),
    .din17(regions_min_17_3_0),
    .din18(regions_min_18_3_0),
    .din19(regions_min_19_3_0),
    .din20(regions_min_20_3_0),
    .din21(regions_min_21_3_0),
    .din22(regions_min_22_3_0),
    .din23(regions_min_23_3_0),
    .din24(regions_min_24_3_0),
    .din25(regions_min_25_3_0),
    .din26(regions_min_26_3_0),
    .din27(regions_min_27_3_0),
    .din28(regions_min_28_3_0),
    .din29(regions_min_29_3_0),
    .din30(regions_min_30_3_0),
    .din31(regions_min_31_3_0),
    .din32(trunc_ln104_1_fu_4869_p1),
    .dout(tmp_23_fu_5709_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U44(
    .din0(regions_center_0_4_0),
    .din1(regions_center_1_4_0),
    .din2(regions_center_2_4_0),
    .din3(regions_center_3_4_0),
    .din4(regions_center_4_4_0),
    .din5(regions_center_5_4_0),
    .din6(regions_center_6_4_0),
    .din7(regions_center_7_4_0),
    .din8(regions_center_8_4_0),
    .din9(regions_center_9_4_0),
    .din10(regions_center_10_4_0),
    .din11(regions_center_11_4_0),
    .din12(regions_center_12_4_0),
    .din13(regions_center_13_4_0),
    .din14(regions_center_14_4_0),
    .din15(regions_center_15_4_0),
    .din16(regions_center_16_4_0),
    .din17(regions_center_17_4_0),
    .din18(regions_center_18_4_0),
    .din19(regions_center_19_4_0),
    .din20(regions_center_20_4_0),
    .din21(regions_center_21_4_0),
    .din22(regions_center_22_4_0),
    .din23(regions_center_23_4_0),
    .din24(regions_center_24_4_0),
    .din25(regions_center_25_4_0),
    .din26(regions_center_26_4_0),
    .din27(regions_center_27_4_0),
    .din28(regions_center_28_4_0),
    .din29(regions_center_29_4_0),
    .din30(regions_center_30_4_0),
    .din31(regions_center_31_4_0),
    .din32(trunc_ln104_fu_4827_p1),
    .dout(tmp_24_fu_5747_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U45(
    .din0(regions_center_0_4_0),
    .din1(regions_center_1_4_0),
    .din2(regions_center_2_4_0),
    .din3(regions_center_3_4_0),
    .din4(regions_center_4_4_0),
    .din5(regions_center_5_4_0),
    .din6(regions_center_6_4_0),
    .din7(regions_center_7_4_0),
    .din8(regions_center_8_4_0),
    .din9(regions_center_9_4_0),
    .din10(regions_center_10_4_0),
    .din11(regions_center_11_4_0),
    .din12(regions_center_12_4_0),
    .din13(regions_center_13_4_0),
    .din14(regions_center_14_4_0),
    .din15(regions_center_15_4_0),
    .din16(regions_center_16_4_0),
    .din17(regions_center_17_4_0),
    .din18(regions_center_18_4_0),
    .din19(regions_center_19_4_0),
    .din20(regions_center_20_4_0),
    .din21(regions_center_21_4_0),
    .din22(regions_center_22_4_0),
    .din23(regions_center_23_4_0),
    .din24(regions_center_24_4_0),
    .din25(regions_center_25_4_0),
    .din26(regions_center_26_4_0),
    .din27(regions_center_27_4_0),
    .din28(regions_center_28_4_0),
    .din29(regions_center_29_4_0),
    .din30(regions_center_30_4_0),
    .din31(regions_center_31_4_0),
    .din32(trunc_ln104_1_fu_4869_p1),
    .dout(tmp_25_fu_5785_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U46(
    .din0(regions_max_0_4_0),
    .din1(regions_max_1_4_0),
    .din2(regions_max_2_4_0),
    .din3(regions_max_3_4_0),
    .din4(regions_max_4_4_0),
    .din5(regions_max_5_4_0),
    .din6(regions_max_6_4_0),
    .din7(regions_max_7_4_0),
    .din8(regions_max_8_4_0),
    .din9(regions_max_9_4_0),
    .din10(regions_max_10_4_0),
    .din11(regions_max_11_4_0),
    .din12(regions_max_12_4_0),
    .din13(regions_max_13_4_0),
    .din14(regions_max_14_4_0),
    .din15(regions_max_15_4_0),
    .din16(regions_max_16_4_0),
    .din17(regions_max_17_4_0),
    .din18(regions_max_18_4_0),
    .din19(regions_max_19_4_0),
    .din20(regions_max_20_4_0),
    .din21(regions_max_21_4_0),
    .din22(regions_max_22_4_0),
    .din23(regions_max_23_4_0),
    .din24(regions_max_24_4_0),
    .din25(regions_max_25_4_0),
    .din26(regions_max_26_4_0),
    .din27(regions_max_27_4_0),
    .din28(regions_max_28_4_0),
    .din29(regions_max_29_4_0),
    .din30(regions_max_30_4_0),
    .din31(regions_max_31_4_0),
    .din32(trunc_ln104_fu_4827_p1),
    .dout(tmp_26_fu_5823_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U47(
    .din0(regions_min_0_4_0),
    .din1(regions_min_1_4_0),
    .din2(regions_min_2_4_0),
    .din3(regions_min_3_4_0),
    .din4(regions_min_4_4_0),
    .din5(regions_min_5_4_0),
    .din6(regions_min_6_4_0),
    .din7(regions_min_7_4_0),
    .din8(regions_min_8_4_0),
    .din9(regions_min_9_4_0),
    .din10(regions_min_10_4_0),
    .din11(regions_min_11_4_0),
    .din12(regions_min_12_4_0),
    .din13(regions_min_13_4_0),
    .din14(regions_min_14_4_0),
    .din15(regions_min_15_4_0),
    .din16(regions_min_16_4_0),
    .din17(regions_min_17_4_0),
    .din18(regions_min_18_4_0),
    .din19(regions_min_19_4_0),
    .din20(regions_min_20_4_0),
    .din21(regions_min_21_4_0),
    .din22(regions_min_22_4_0),
    .din23(regions_min_23_4_0),
    .din24(regions_min_24_4_0),
    .din25(regions_min_25_4_0),
    .din26(regions_min_26_4_0),
    .din27(regions_min_27_4_0),
    .din28(regions_min_28_4_0),
    .din29(regions_min_29_4_0),
    .din30(regions_min_30_4_0),
    .din31(regions_min_31_4_0),
    .din32(trunc_ln104_fu_4827_p1),
    .dout(tmp_27_fu_5861_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U48(
    .din0(regions_max_0_4_0),
    .din1(regions_max_1_4_0),
    .din2(regions_max_2_4_0),
    .din3(regions_max_3_4_0),
    .din4(regions_max_4_4_0),
    .din5(regions_max_5_4_0),
    .din6(regions_max_6_4_0),
    .din7(regions_max_7_4_0),
    .din8(regions_max_8_4_0),
    .din9(regions_max_9_4_0),
    .din10(regions_max_10_4_0),
    .din11(regions_max_11_4_0),
    .din12(regions_max_12_4_0),
    .din13(regions_max_13_4_0),
    .din14(regions_max_14_4_0),
    .din15(regions_max_15_4_0),
    .din16(regions_max_16_4_0),
    .din17(regions_max_17_4_0),
    .din18(regions_max_18_4_0),
    .din19(regions_max_19_4_0),
    .din20(regions_max_20_4_0),
    .din21(regions_max_21_4_0),
    .din22(regions_max_22_4_0),
    .din23(regions_max_23_4_0),
    .din24(regions_max_24_4_0),
    .din25(regions_max_25_4_0),
    .din26(regions_max_26_4_0),
    .din27(regions_max_27_4_0),
    .din28(regions_max_28_4_0),
    .din29(regions_max_29_4_0),
    .din30(regions_max_30_4_0),
    .din31(regions_max_31_4_0),
    .din32(trunc_ln104_1_fu_4869_p1),
    .dout(tmp_28_fu_5899_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U49(
    .din0(regions_min_0_4_0),
    .din1(regions_min_1_4_0),
    .din2(regions_min_2_4_0),
    .din3(regions_min_3_4_0),
    .din4(regions_min_4_4_0),
    .din5(regions_min_5_4_0),
    .din6(regions_min_6_4_0),
    .din7(regions_min_7_4_0),
    .din8(regions_min_8_4_0),
    .din9(regions_min_9_4_0),
    .din10(regions_min_10_4_0),
    .din11(regions_min_11_4_0),
    .din12(regions_min_12_4_0),
    .din13(regions_min_13_4_0),
    .din14(regions_min_14_4_0),
    .din15(regions_min_15_4_0),
    .din16(regions_min_16_4_0),
    .din17(regions_min_17_4_0),
    .din18(regions_min_18_4_0),
    .din19(regions_min_19_4_0),
    .din20(regions_min_20_4_0),
    .din21(regions_min_21_4_0),
    .din22(regions_min_22_4_0),
    .din23(regions_min_23_4_0),
    .din24(regions_min_24_4_0),
    .din25(regions_min_25_4_0),
    .din26(regions_min_26_4_0),
    .din27(regions_min_27_4_0),
    .din28(regions_min_28_4_0),
    .din29(regions_min_29_4_0),
    .din30(regions_min_30_4_0),
    .din31(regions_min_31_4_0),
    .din32(trunc_ln104_1_fu_4869_p1),
    .dout(tmp_29_fu_5937_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U50(
    .din0(regions_center_0_5_0),
    .din1(regions_center_1_5_0),
    .din2(regions_center_2_5_0),
    .din3(regions_center_3_5_0),
    .din4(regions_center_4_5_0),
    .din5(regions_center_5_5_0),
    .din6(regions_center_6_5_0),
    .din7(regions_center_7_5_0),
    .din8(regions_center_8_5_0),
    .din9(regions_center_9_5_0),
    .din10(regions_center_10_5_0),
    .din11(regions_center_11_5_0),
    .din12(regions_center_12_5_0),
    .din13(regions_center_13_5_0),
    .din14(regions_center_14_5_0),
    .din15(regions_center_15_5_0),
    .din16(regions_center_16_5_0),
    .din17(regions_center_17_5_0),
    .din18(regions_center_18_5_0),
    .din19(regions_center_19_5_0),
    .din20(regions_center_20_5_0),
    .din21(regions_center_21_5_0),
    .din22(regions_center_22_5_0),
    .din23(regions_center_23_5_0),
    .din24(regions_center_24_5_0),
    .din25(regions_center_25_5_0),
    .din26(regions_center_26_5_0),
    .din27(regions_center_27_5_0),
    .din28(regions_center_28_5_0),
    .din29(regions_center_29_5_0),
    .din30(regions_center_30_5_0),
    .din31(regions_center_31_5_0),
    .din32(trunc_ln104_fu_4827_p1),
    .dout(tmp_30_fu_5975_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U51(
    .din0(regions_center_0_5_0),
    .din1(regions_center_1_5_0),
    .din2(regions_center_2_5_0),
    .din3(regions_center_3_5_0),
    .din4(regions_center_4_5_0),
    .din5(regions_center_5_5_0),
    .din6(regions_center_6_5_0),
    .din7(regions_center_7_5_0),
    .din8(regions_center_8_5_0),
    .din9(regions_center_9_5_0),
    .din10(regions_center_10_5_0),
    .din11(regions_center_11_5_0),
    .din12(regions_center_12_5_0),
    .din13(regions_center_13_5_0),
    .din14(regions_center_14_5_0),
    .din15(regions_center_15_5_0),
    .din16(regions_center_16_5_0),
    .din17(regions_center_17_5_0),
    .din18(regions_center_18_5_0),
    .din19(regions_center_19_5_0),
    .din20(regions_center_20_5_0),
    .din21(regions_center_21_5_0),
    .din22(regions_center_22_5_0),
    .din23(regions_center_23_5_0),
    .din24(regions_center_24_5_0),
    .din25(regions_center_25_5_0),
    .din26(regions_center_26_5_0),
    .din27(regions_center_27_5_0),
    .din28(regions_center_28_5_0),
    .din29(regions_center_29_5_0),
    .din30(regions_center_30_5_0),
    .din31(regions_center_31_5_0),
    .din32(trunc_ln104_1_fu_4869_p1),
    .dout(tmp_31_fu_6013_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U52(
    .din0(regions_max_0_5_0),
    .din1(regions_max_1_5_0),
    .din2(regions_max_2_5_0),
    .din3(regions_max_3_5_0),
    .din4(regions_max_4_5_0),
    .din5(regions_max_5_5_0),
    .din6(regions_max_6_5_0),
    .din7(regions_max_7_5_0),
    .din8(regions_max_8_5_0),
    .din9(regions_max_9_5_0),
    .din10(regions_max_10_5_0),
    .din11(regions_max_11_5_0),
    .din12(regions_max_12_5_0),
    .din13(regions_max_13_5_0),
    .din14(regions_max_14_5_0),
    .din15(regions_max_15_5_0),
    .din16(regions_max_16_5_0),
    .din17(regions_max_17_5_0),
    .din18(regions_max_18_5_0),
    .din19(regions_max_19_5_0),
    .din20(regions_max_20_5_0),
    .din21(regions_max_21_5_0),
    .din22(regions_max_22_5_0),
    .din23(regions_max_23_5_0),
    .din24(regions_max_24_5_0),
    .din25(regions_max_25_5_0),
    .din26(regions_max_26_5_0),
    .din27(regions_max_27_5_0),
    .din28(regions_max_28_5_0),
    .din29(regions_max_29_5_0),
    .din30(regions_max_30_5_0),
    .din31(regions_max_31_5_0),
    .din32(trunc_ln104_fu_4827_p1),
    .dout(tmp_32_fu_6051_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U53(
    .din0(regions_min_0_5_0),
    .din1(regions_min_1_5_0),
    .din2(regions_min_2_5_0),
    .din3(regions_min_3_5_0),
    .din4(regions_min_4_5_0),
    .din5(regions_min_5_5_0),
    .din6(regions_min_6_5_0),
    .din7(regions_min_7_5_0),
    .din8(regions_min_8_5_0),
    .din9(regions_min_9_5_0),
    .din10(regions_min_10_5_0),
    .din11(regions_min_11_5_0),
    .din12(regions_min_12_5_0),
    .din13(regions_min_13_5_0),
    .din14(regions_min_14_5_0),
    .din15(regions_min_15_5_0),
    .din16(regions_min_16_5_0),
    .din17(regions_min_17_5_0),
    .din18(regions_min_18_5_0),
    .din19(regions_min_19_5_0),
    .din20(regions_min_20_5_0),
    .din21(regions_min_21_5_0),
    .din22(regions_min_22_5_0),
    .din23(regions_min_23_5_0),
    .din24(regions_min_24_5_0),
    .din25(regions_min_25_5_0),
    .din26(regions_min_26_5_0),
    .din27(regions_min_27_5_0),
    .din28(regions_min_28_5_0),
    .din29(regions_min_29_5_0),
    .din30(regions_min_30_5_0),
    .din31(regions_min_31_5_0),
    .din32(trunc_ln104_fu_4827_p1),
    .dout(tmp_33_fu_6089_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U54(
    .din0(regions_max_0_5_0),
    .din1(regions_max_1_5_0),
    .din2(regions_max_2_5_0),
    .din3(regions_max_3_5_0),
    .din4(regions_max_4_5_0),
    .din5(regions_max_5_5_0),
    .din6(regions_max_6_5_0),
    .din7(regions_max_7_5_0),
    .din8(regions_max_8_5_0),
    .din9(regions_max_9_5_0),
    .din10(regions_max_10_5_0),
    .din11(regions_max_11_5_0),
    .din12(regions_max_12_5_0),
    .din13(regions_max_13_5_0),
    .din14(regions_max_14_5_0),
    .din15(regions_max_15_5_0),
    .din16(regions_max_16_5_0),
    .din17(regions_max_17_5_0),
    .din18(regions_max_18_5_0),
    .din19(regions_max_19_5_0),
    .din20(regions_max_20_5_0),
    .din21(regions_max_21_5_0),
    .din22(regions_max_22_5_0),
    .din23(regions_max_23_5_0),
    .din24(regions_max_24_5_0),
    .din25(regions_max_25_5_0),
    .din26(regions_max_26_5_0),
    .din27(regions_max_27_5_0),
    .din28(regions_max_28_5_0),
    .din29(regions_max_29_5_0),
    .din30(regions_max_30_5_0),
    .din31(regions_max_31_5_0),
    .din32(trunc_ln104_1_fu_4869_p1),
    .dout(tmp_34_fu_6127_p34)
);

FaultDetector_mux_325_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 32 ),
    .din9_WIDTH( 32 ),
    .din10_WIDTH( 32 ),
    .din11_WIDTH( 32 ),
    .din12_WIDTH( 32 ),
    .din13_WIDTH( 32 ),
    .din14_WIDTH( 32 ),
    .din15_WIDTH( 32 ),
    .din16_WIDTH( 32 ),
    .din17_WIDTH( 32 ),
    .din18_WIDTH( 32 ),
    .din19_WIDTH( 32 ),
    .din20_WIDTH( 32 ),
    .din21_WIDTH( 32 ),
    .din22_WIDTH( 32 ),
    .din23_WIDTH( 32 ),
    .din24_WIDTH( 32 ),
    .din25_WIDTH( 32 ),
    .din26_WIDTH( 32 ),
    .din27_WIDTH( 32 ),
    .din28_WIDTH( 32 ),
    .din29_WIDTH( 32 ),
    .din30_WIDTH( 32 ),
    .din31_WIDTH( 32 ),
    .din32_WIDTH( 5 ),
    .dout_WIDTH( 32 ))
mux_325_32_1_1_U55(
    .din0(regions_min_0_5_0),
    .din1(regions_min_1_5_0),
    .din2(regions_min_2_5_0),
    .din3(regions_min_3_5_0),
    .din4(regions_min_4_5_0),
    .din5(regions_min_5_5_0),
    .din6(regions_min_6_5_0),
    .din7(regions_min_7_5_0),
    .din8(regions_min_8_5_0),
    .din9(regions_min_9_5_0),
    .din10(regions_min_10_5_0),
    .din11(regions_min_11_5_0),
    .din12(regions_min_12_5_0),
    .din13(regions_min_13_5_0),
    .din14(regions_min_14_5_0),
    .din15(regions_min_15_5_0),
    .din16(regions_min_16_5_0),
    .din17(regions_min_17_5_0),
    .din18(regions_min_18_5_0),
    .din19(regions_min_19_5_0),
    .din20(regions_min_20_5_0),
    .din21(regions_min_21_5_0),
    .din22(regions_min_22_5_0),
    .din23(regions_min_23_5_0),
    .din24(regions_min_24_5_0),
    .din25(regions_min_25_5_0),
    .din26(regions_min_26_5_0),
    .din27(regions_min_27_5_0),
    .din28(regions_min_28_5_0),
    .din29(regions_min_29_5_0),
    .din30(regions_min_30_5_0),
    .din31(regions_min_31_5_0),
    .din32(trunc_ln104_1_fu_4869_p1),
    .dout(tmp_35_fu_6165_p34)
);

FaultDetector_flow_control_loop_pipe_sequential_init flow_control_loop_pipe_sequential_init_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(ap_start),
    .ap_ready(ap_ready),
    .ap_done(ap_done),
    .ap_start_int(ap_start_int),
    .ap_loop_init(ap_loop_init),
    .ap_ready_int(ap_ready_int),
    .ap_loop_exit_ready(ap_condition_exit_pp0_iter0_stage7),
    .ap_loop_exit_done(ap_done_int),
    .ap_continue_int(ap_continue_int),
    .ap_done_int(ap_done_int)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue_int == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start_int;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter10 <= 1'b0;
    end else begin
        if (((1'b1 == ap_condition_exit_pp0_iter10_stage0) | ((1'b0 == ap_block_pp0_stage1_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
            ap_enable_reg_pp0_iter10 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter3 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter4 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter5 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter6 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter7 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter8 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter9 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage7_subdone) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
            ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0)) | ((1'b0 == ap_block_pp0_stage1_subdone) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= 1'b0;
    end else if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            k_real_4_fu_1222 <= 32'd1;
        end else if (((icmp_ln1027_reg_10927 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            k_real_4_fu_1222 <= k_real_3_fu_6697_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        if ((ap_loop_init == 1'b1)) begin
            merge_1_1_fu_1218 <= 32'd0;
        end else if (((icmp_ln1027_reg_10927 == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1))) begin
            merge_1_1_fu_1218 <= i_real_2_fu_6705_p3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        merge_1_fu_1206 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        merge_1_fu_1206 <= merge_1_7_fu_7386_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        merge_2_fu_1210 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        merge_2_fu_1210 <= merge_2_6_fu_7380_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        score_fu_1214 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        score_fu_1214 <= score_3_fu_7374_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_other_fu_1230 <= 32'd4294967295;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln1027_reg_10927_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_other_fu_1230 <= tmp_other_3_fu_7220_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_loop_init == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_score_fu_1226 <= 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln1027_reg_10927_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_score_fu_1226 <= tmp_score_3_fu_7226_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        and_ln112_11_reg_11273 <= and_ln112_11_fu_6672_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        and_ln112_11_reg_11273_pp0_iter1_reg <= and_ln112_11_reg_11273;
        and_ln112_11_reg_11273_pp0_iter2_reg <= and_ln112_11_reg_11273_pp0_iter1_reg;
        mul_3_reg_11436_pp0_iter2_reg <= mul_3_reg_11436;
        mul_3_reg_11436_pp0_iter3_reg <= mul_3_reg_11436_pp0_iter2_reg;
        mul_3_reg_11436_pp0_iter4_reg <= mul_3_reg_11436_pp0_iter3_reg;
        ov_23_reg_11564_pp0_iter4_reg <= ov_23_reg_11564;
        overlap_5_reg_11589_pp0_iter6_reg <= overlap_5_reg_11589;
        overlap_5_reg_11589_pp0_iter7_reg <= overlap_5_reg_11589_pp0_iter6_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln112_1_reg_11208 <= and_ln112_1_fu_6332_p2;
        and_ln112_3_reg_11213 <= and_ln112_3_fu_6351_p2;
        icmp_ln112_10_reg_11228 <= icmp_ln112_10_fu_6403_p2;
        icmp_ln112_11_reg_11233 <= icmp_ln112_11_fu_6409_p2;
        icmp_ln112_8_reg_11218 <= icmp_ln112_8_fu_6391_p2;
        icmp_ln112_9_reg_11223 <= icmp_ln112_9_fu_6397_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        and_ln112_1_reg_11208_pp0_iter1_reg <= and_ln112_1_reg_11208;
        and_ln112_1_reg_11208_pp0_iter2_reg <= and_ln112_1_reg_11208_pp0_iter1_reg;
        and_ln112_3_reg_11213_pp0_iter1_reg <= and_ln112_3_reg_11213;
        and_ln112_3_reg_11213_pp0_iter2_reg <= and_ln112_3_reg_11213_pp0_iter1_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        and_ln112_5_reg_11248 <= and_ln112_5_fu_6429_p2;
        and_ln112_7_reg_11253 <= and_ln112_7_fu_6510_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        and_ln112_5_reg_11248_pp0_iter1_reg <= and_ln112_5_reg_11248;
        and_ln112_5_reg_11248_pp0_iter2_reg <= and_ln112_5_reg_11248_pp0_iter1_reg;
        and_ln112_7_reg_11253_pp0_iter1_reg <= and_ln112_7_reg_11253;
        and_ln112_7_reg_11253_pp0_iter2_reg <= and_ln112_7_reg_11253_pp0_iter1_reg;
        mul_1_reg_11390_pp0_iter2_reg <= mul_1_reg_11390;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        and_ln112_9_reg_11263 <= and_ln112_9_fu_6591_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        and_ln112_9_reg_11263_pp0_iter1_reg <= and_ln112_9_reg_11263;
        and_ln112_9_reg_11263_pp0_iter2_reg <= and_ln112_9_reg_11263_pp0_iter1_reg;
        mul_2_reg_11410_pp0_iter2_reg <= mul_2_reg_11410;
        mul_5_reg_11471_pp0_iter3_reg <= mul_5_reg_11471;
        mul_5_reg_11471_pp0_iter4_reg <= mul_5_reg_11471_pp0_iter3_reg;
        mul_5_reg_11471_pp0_iter5_reg <= mul_5_reg_11471_pp0_iter4_reg;
        mul_5_reg_11471_pp0_iter6_reg <= mul_5_reg_11471_pp0_iter5_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        d1_1_reg_11319 <= grp_fu_4708_p2;
        d1_2_reg_11339 <= grp_fu_4724_p2;
        d2_1_reg_11324 <= grp_fu_4712_p2;
        sub2_reg_11314 <= grp_fu_53978_p_dout0;
        sub75_1_reg_11329 <= grp_fu_4716_p2;
        sub87_1_reg_11334 <= grp_fu_4720_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        d1_3_reg_11365 <= grp_fu_4720_p2;
        d2_2_reg_11344 <= grp_fu_53978_p_dout0;
        d2_3_reg_11370 <= grp_fu_4724_p2;
        d_3_reg_11359 <= grp_fu_4716_p2;
        sub75_2_reg_11349 <= grp_fu_4708_p2;
        sub87_2_reg_11354 <= grp_fu_4712_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        d1_4_reg_11395 <= grp_fu_53978_p_dout0;
        d2_4_reg_11400 <= grp_fu_4708_p2;
        mul_1_reg_11390 <= grp_fu_4733_p2;
        mul_reg_11385 <= grp_fu_53984_p_dout0;
        sub75_4_reg_11405 <= grp_fu_4712_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        d1_5_reg_11426 <= grp_fu_4712_p2;
        d2_5_reg_11431 <= grp_fu_4716_p2;
        d_4_reg_11415 <= grp_fu_53978_p_dout0;
        mul_2_reg_11410 <= grp_fu_53984_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        d1_reg_11293 <= grp_fu_4708_p2;
        d2_reg_11298 <= grp_fu_4712_p2;
        d_2_reg_11308 <= grp_fu_4724_p2;
        d_reg_11287 <= grp_fu_53978_p_dout0;
        sub_reg_11303 <= grp_fu_4716_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        d_5_reg_11441 <= grp_fu_53978_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_10927_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        distance_1_reg_11544 <= grp_fu_4720_p2;
        tmp_60_reg_11549 <= grp_fu_53994_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1027_reg_10927_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        distance_2_reg_11574 <= grp_fu_4724_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln1027_reg_10927_pp0_iter5_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        distance_3_reg_11584 <= grp_fu_4716_p2;
        overlap_5_reg_11589 <= grp_fu_4733_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln1027_reg_10927_pp0_iter6_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        distance_4_reg_11601 <= grp_fu_4716_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        distance_reg_11452 <= grp_fu_4716_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        i_real_3_reg_10912 <= merge_1_1_fu_1218;
        i_real_3_reg_10912_pp0_iter1_reg <= i_real_3_reg_10912;
        i_real_3_reg_10912_pp0_iter2_reg <= i_real_3_reg_10912_pp0_iter1_reg;
        i_real_3_reg_10912_pp0_iter3_reg <= i_real_3_reg_10912_pp0_iter2_reg;
        i_real_3_reg_10912_pp0_iter4_reg <= i_real_3_reg_10912_pp0_iter3_reg;
        i_real_3_reg_10912_pp0_iter5_reg <= i_real_3_reg_10912_pp0_iter4_reg;
        i_real_3_reg_10912_pp0_iter6_reg <= i_real_3_reg_10912_pp0_iter5_reg;
        i_real_3_reg_10912_pp0_iter7_reg <= i_real_3_reg_10912_pp0_iter6_reg;
        i_real_3_reg_10912_pp0_iter8_reg <= i_real_3_reg_10912_pp0_iter7_reg;
        i_real_3_reg_10912_pp0_iter9_reg <= i_real_3_reg_10912_pp0_iter8_reg;
        icmp_ln1027_reg_10927 <= icmp_ln1027_fu_4821_p2;
        icmp_ln1027_reg_10927_pp0_iter1_reg <= icmp_ln1027_reg_10927;
        icmp_ln1027_reg_10927_pp0_iter2_reg <= icmp_ln1027_reg_10927_pp0_iter1_reg;
        icmp_ln1027_reg_10927_pp0_iter3_reg <= icmp_ln1027_reg_10927_pp0_iter2_reg;
        icmp_ln1027_reg_10927_pp0_iter4_reg <= icmp_ln1027_reg_10927_pp0_iter3_reg;
        icmp_ln1027_reg_10927_pp0_iter5_reg <= icmp_ln1027_reg_10927_pp0_iter4_reg;
        icmp_ln1027_reg_10927_pp0_iter6_reg <= icmp_ln1027_reg_10927_pp0_iter5_reg;
        icmp_ln1027_reg_10927_pp0_iter7_reg <= icmp_ln1027_reg_10927_pp0_iter6_reg;
        icmp_ln1027_reg_10927_pp0_iter8_reg <= icmp_ln1027_reg_10927_pp0_iter7_reg;
        icmp_ln1027_reg_10927_pp0_iter9_reg <= icmp_ln1027_reg_10927_pp0_iter8_reg;
        k_real_5_reg_10920 <= k_real_4_fu_1222;
        k_real_5_reg_10920_pp0_iter1_reg <= k_real_5_reg_10920;
        k_real_5_reg_10920_pp0_iter2_reg <= k_real_5_reg_10920_pp0_iter1_reg;
        k_real_5_reg_10920_pp0_iter3_reg <= k_real_5_reg_10920_pp0_iter2_reg;
        k_real_5_reg_10920_pp0_iter4_reg <= k_real_5_reg_10920_pp0_iter3_reg;
        k_real_5_reg_10920_pp0_iter5_reg <= k_real_5_reg_10920_pp0_iter4_reg;
        k_real_5_reg_10920_pp0_iter6_reg <= k_real_5_reg_10920_pp0_iter5_reg;
        k_real_5_reg_10920_pp0_iter7_reg <= k_real_5_reg_10920_pp0_iter6_reg;
        k_real_5_reg_10920_pp0_iter8_reg <= k_real_5_reg_10920_pp0_iter7_reg;
        tmp_67_reg_11596_pp0_iter7_reg <= tmp_67_reg_11596;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1019_reg_11278 <= icmp_ln1019_fu_6677_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        icmp_ln1019_reg_11278_pp0_iter10_reg <= icmp_ln1019_reg_11278_pp0_iter9_reg;
        icmp_ln1019_reg_11278_pp0_iter2_reg <= icmp_ln1019_reg_11278;
        icmp_ln1019_reg_11278_pp0_iter3_reg <= icmp_ln1019_reg_11278_pp0_iter2_reg;
        icmp_ln1019_reg_11278_pp0_iter4_reg <= icmp_ln1019_reg_11278_pp0_iter3_reg;
        icmp_ln1019_reg_11278_pp0_iter5_reg <= icmp_ln1019_reg_11278_pp0_iter4_reg;
        icmp_ln1019_reg_11278_pp0_iter6_reg <= icmp_ln1019_reg_11278_pp0_iter5_reg;
        icmp_ln1019_reg_11278_pp0_iter7_reg <= icmp_ln1019_reg_11278_pp0_iter6_reg;
        icmp_ln1019_reg_11278_pp0_iter8_reg <= icmp_ln1019_reg_11278_pp0_iter7_reg;
        icmp_ln1019_reg_11278_pp0_iter9_reg <= icmp_ln1019_reg_11278_pp0_iter8_reg;
        merge_1_4_reg_11647 <= merge_1_fu_1206;
        merge_2_1_reg_11654 <= merge_2_fu_1210;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        icmp_ln112_1_reg_11163 <= icmp_ln112_1_fu_6243_p2;
        icmp_ln112_2_reg_11168 <= icmp_ln112_2_fu_6249_p2;
        icmp_ln112_3_reg_11173 <= icmp_ln112_3_fu_6255_p2;
        icmp_ln112_4_reg_11183 <= icmp_ln112_4_fu_6295_p2;
        icmp_ln112_5_reg_11188 <= icmp_ln112_5_fu_6301_p2;
        icmp_ln112_6_reg_11193 <= icmp_ln112_6_fu_6307_p2;
        icmp_ln112_7_reg_11198 <= icmp_ln112_7_fu_6313_p2;
        icmp_ln112_reg_11158 <= icmp_ln112_fu_6237_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        mul_3_reg_11436 <= grp_fu_53984_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_4_reg_11447 <= grp_fu_53984_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_4_reg_11447_pp0_iter3_reg <= mul_4_reg_11447;
        mul_4_reg_11447_pp0_iter4_reg <= mul_4_reg_11447_pp0_iter3_reg;
        mul_4_reg_11447_pp0_iter5_reg <= mul_4_reg_11447_pp0_iter4_reg;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        mul_5_reg_11471 <= grp_fu_4733_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ov_10_reg_11486 <= ov_10_fu_6736_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_10927_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        ov_11_reg_11529 <= ov_11_fu_6898_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ov_14_reg_11503 <= ov_14_fu_6837_p3;
        ov_24_reg_11493 <= ov_24_fu_6783_p3;
        ov_7_reg_11498 <= ov_7_fu_6830_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_10927_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        ov_15_reg_11539 <= ov_15_fu_6945_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        ov_18_reg_11515 <= ov_18_fu_6844_p3;
        ov_22_reg_11522 <= ov_22_fu_6851_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_10927_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        ov_19_reg_11554 <= ov_19_fu_6992_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_10927_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage7_11001) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ov_23_reg_11564 <= ov_23_fu_7039_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage5_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        ov_2_reg_11457 <= ov_2_fu_6722_p3;
        ov_6_reg_11464 <= ov_6_fu_6729_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (icmp_ln1027_reg_10927_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        overlap_3_reg_11569 <= grp_fu_4733_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln1027_reg_10927_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        overlap_4_reg_11579 <= grp_fu_4733_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_10927_pp0_iter7_reg == 1'd1) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln112_5_reg_11248_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_5_reg_11248_pp0_iter2_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        reg_4747 <= grp_fu_4720_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_11_reg_11273) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_11_reg_11273) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        reg_4753 <= grp_fu_53978_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_1_reg_11208_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_1_reg_11208_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_9_reg_11263_pp0_iter2_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        reg_4758 <= grp_fu_4712_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_3_reg_11213_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_3_reg_11213_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)))) begin
        reg_4762 <= grp_fu_4716_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_9_reg_11263_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'd0 == and_ln112_7_reg_11253_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_7_reg_11253_pp0_iter2_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        reg_4766 <= grp_fu_4708_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((1'd0 == and_ln112_11_reg_11273_pp0_iter2_reg) & (1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (1'd1 == and_ln112_11_reg_11273_pp0_iter2_reg) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_4770 <= grp_fu_4712_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((((icmp_ln1027_reg_10927_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_10927_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        reg_4774 <= grp_fu_53984_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_10927_pp0_iter7_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        sc_2_reg_11606 <= sc_2_fu_7100_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_10927_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        score_load_reg_11639 <= score_fu_1214;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        sub75_3_reg_11375 <= grp_fu_53978_p_dout0;
        sub87_3_reg_11380 <= grp_fu_4708_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd0 == and_ln112_9_reg_11263) & (1'b0 == ap_block_pp0_stage6_11001) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        sub87_4_reg_11421 <= grp_fu_4708_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_fu_4821_p2 == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_10_reg_10993 <= tmp_10_fu_5215_p34;
        tmp_11_reg_10998 <= tmp_11_fu_5253_p34;
        tmp_12_reg_11007 <= tmp_12_fu_5291_p34;
        tmp_13_reg_11012 <= tmp_13_fu_5329_p34;
        tmp_14_reg_11017 <= tmp_14_fu_5367_p34;
        tmp_15_reg_11022 <= tmp_15_fu_5405_p34;
        tmp_16_reg_11031 <= tmp_16_fu_5443_p34;
        tmp_17_reg_11036 <= tmp_17_fu_5481_p34;
        tmp_18_reg_11045 <= tmp_18_fu_5519_p34;
        tmp_19_reg_11050 <= tmp_19_fu_5557_p34;
        tmp_1_reg_10969 <= tmp_1_fu_5063_p34;
        tmp_20_reg_11055 <= tmp_20_fu_5595_p34;
        tmp_21_reg_11060 <= tmp_21_fu_5633_p34;
        tmp_22_reg_11069 <= tmp_22_fu_5671_p34;
        tmp_23_reg_11074 <= tmp_23_fu_5709_p34;
        tmp_24_reg_11083 <= tmp_24_fu_5747_p34;
        tmp_25_reg_11088 <= tmp_25_fu_5785_p34;
        tmp_26_reg_11093 <= tmp_26_fu_5823_p34;
        tmp_27_reg_11098 <= tmp_27_fu_5861_p34;
        tmp_28_reg_11107 <= tmp_28_fu_5899_p34;
        tmp_29_reg_11112 <= tmp_29_fu_5937_p34;
        tmp_2_reg_10974 <= tmp_2_fu_5101_p34;
        tmp_30_reg_11120 <= tmp_30_fu_5975_p34;
        tmp_31_reg_11125 <= tmp_31_fu_6013_p34;
        tmp_32_reg_11130 <= tmp_32_fu_6051_p34;
        tmp_33_reg_11135 <= tmp_33_fu_6089_p34;
        tmp_34_reg_11144 <= tmp_34_fu_6127_p34;
        tmp_35_reg_11149 <= tmp_35_fu_6165_p34;
        tmp_3_reg_10979 <= tmp_3_fu_5139_p34;
        tmp_4_reg_10984 <= tmp_4_fu_5177_p34;
        tmp_5_reg_10936 <= tmp_5_fu_4873_p34;
        tmp_6_reg_10941 <= tmp_6_fu_4911_p34;
        tmp_7_reg_10946 <= tmp_7_fu_4949_p34;
        tmp_8_reg_10955 <= tmp_8_fu_4987_p34;
        tmp_9_reg_10960 <= tmp_9_fu_5025_p34;
        tmp_s_reg_10931 <= tmp_s_fu_4831_p34;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        tmp_38_reg_11178 <= grp_fu_53989_p_dout0;
        tmp_43_reg_11203 <= grp_fu_53994_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_40_reg_11476 <= grp_fu_53989_p_dout0;
        tmp_45_reg_11481 <= grp_fu_53994_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        tmp_48_reg_11238 <= grp_fu_53989_p_dout0;
        tmp_53_reg_11243 <= grp_fu_53994_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_50_reg_11510 <= grp_fu_53989_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_10927_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        tmp_55_reg_11534 <= grp_fu_53989_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage5_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        tmp_58_reg_11258 <= grp_fu_53989_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_63_reg_11268 <= grp_fu_53989_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1027_reg_10927_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage6_11001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        tmp_65_reg_11559 <= grp_fu_53994_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln1027_reg_10927_pp0_iter5_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_67_reg_11596 <= grp_fu_53994_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln1027_reg_10927_pp0_iter8_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_70_reg_11620 <= grp_fu_53989_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln1027_reg_10927_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        tmp_73_reg_11660 <= grp_fu_53994_p_dout0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (icmp_ln1027_reg_10927_pp0_iter8_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        tmp_other_4_reg_11625 <= tmp_other_4_fu_7207_p3;
        tmp_score_4_reg_11631 <= tmp_score_4_fu_7214_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage7_11001) & (icmp_ln1027_reg_10927_pp0_iter8_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        tmp_score_load_reg_11613 <= tmp_score_fu_1226;
    end
end

always @ (*) begin
    if (((icmp_ln1027_reg_10927 == 1'd0) & (1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter0_stage7 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter10 == 1'b1) & (icmp_ln1027_reg_10927_pp0_iter9_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_condition_exit_pp0_iter10_stage0 = 1'b1;
    end else begin
        ap_condition_exit_pp0_iter10_stage0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done_int = 1'b1;
    end else begin
        ap_done_int = ap_done_reg;
    end
end

always @ (*) begin
    if (~((ap_loop_exit_ready == 1'b0) & (ap_loop_exit_ready_pp0_iter10_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter9_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter8_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter7_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter6_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter5_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter4_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter3_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter2_reg == 1'b0) & (ap_loop_exit_ready_pp0_iter1_reg == 1'b0))) begin
        ap_done_pending_pp0 = 1'b1;
    end else begin
        ap_done_pending_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start_int;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (ap_start_int == 1'b0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to9 = 1'b1;
    end else begin
        ap_idle_pp0_0to9 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter10 == 1'b0) & (ap_enable_reg_pp0_iter9 == 1'b0) & (ap_enable_reg_pp0_iter8 == 1'b0) & (ap_enable_reg_pp0_iter7 == 1'b0) & (ap_enable_reg_pp0_iter6 == 1'b0) & (ap_enable_reg_pp0_iter5 == 1'b0) & (ap_enable_reg_pp0_iter4 == 1'b0) & (ap_enable_reg_pp0_iter3 == 1'b0) & (ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to10 = 1'b1;
    end else begin
        ap_idle_pp0_1to10 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        ap_ready_int = 1'b1;
    end else begin
        ap_ready_int = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_4704_p0 = tmp_30_reg_11120;
    end else if (((1'd0 == and_ln112_11_reg_11273) & (icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_4704_p0 = tmp_33_reg_11135;
    end else if (((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'd1 == and_ln112_11_reg_11273) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_4704_p0 = tmp_35_reg_11149;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_4704_p0 = tmp_24_reg_11083;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_4704_p0 = tmp_26_reg_11093;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_4704_p0 = tmp_23_reg_11074;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_4704_p0 = tmp_16_reg_11031;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_4704_p0 = tmp_7_reg_10946;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_4704_p0 = tmp_s_reg_10931;
    end else begin
        grp_fu_4704_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_4704_p1 = tmp_31_reg_11125;
    end else if (((1'd0 == and_ln112_11_reg_11273) & (icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_4704_p1 = tmp_35_reg_11149;
    end else if (((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage0) & (1'd1 == and_ln112_11_reg_11273) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_4704_p1 = tmp_33_reg_11135;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_4704_p1 = tmp_25_reg_11088;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_4704_p1 = tmp_27_reg_11098;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_4704_p1 = tmp_21_reg_11060;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_4704_p1 = tmp_17_reg_11036;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_4704_p1 = tmp_9_reg_10960;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_4704_p1 = tmp_5_reg_10936;
    end else begin
        grp_fu_4704_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_4708_p0 = d2_4_reg_11400;
    end else if (((1'd0 == and_ln112_7_reg_11253_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_4708_p0 = d2_3_reg_11370;
    end else if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_7_reg_11253_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_4708_p0 = d1_3_reg_11365;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_4708_p0 = tmp_27_reg_11098;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_4708_p0 = tmp_28_reg_11107;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_4708_p0 = tmp_21_reg_11060;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_4708_p0 = tmp_17_reg_11036;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_4708_p0 = tmp_3_reg_10979;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_4708_p0 = tmp_6_reg_10941;
    end else begin
        grp_fu_4708_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_4708_p1 = sub87_4_reg_11421;
    end else if (((1'd0 == and_ln112_7_reg_11253_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_4708_p1 = sub87_3_reg_11380;
    end else if (((1'b0 == ap_block_pp0_stage0) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_7_reg_11253_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_4708_p1 = sub75_3_reg_11375;
    end else if ((((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        grp_fu_4708_p1 = tmp_29_reg_11112;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_4708_p1 = tmp_23_reg_11074;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_4708_p1 = tmp_15_reg_11022;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_4708_p1 = tmp_4_reg_10984;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_4708_p1 = tmp_7_reg_10946;
    end else begin
        grp_fu_4708_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'd0 == and_ln112_11_reg_11273_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_4712_p0 = d2_5_reg_11431;
    end else if (((1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_11_reg_11273_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_4712_p0 = d1_5_reg_11426;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_4712_p0 = d1_4_reg_11395;
    end else if (((1'd0 == and_ln112_1_reg_11208_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_4712_p0 = d2_reg_11298;
    end else if (((1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_1_reg_11208_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_4712_p0 = d1_reg_11293;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_4712_p0 = tmp_32_reg_11130;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_4712_p0 = tmp_29_reg_11112;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_4712_p0 = tmp_15_reg_11022;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_4712_p0 = tmp_10_reg_10993;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_4712_p0 = tmp_8_reg_10955;
    end else begin
        grp_fu_4712_p0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_11_reg_11273_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage1) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_11_reg_11273_pp0_iter1_reg) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        grp_fu_4712_p1 = reg_4753;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_4712_p1 = sub75_4_reg_11405;
    end else if (((1'd0 == and_ln112_1_reg_11208_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_4712_p1 = sub2_reg_11314;
    end else if (((1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_1_reg_11208_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_4712_p1 = sub_reg_11303;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_4712_p1 = tmp_33_reg_11135;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_4712_p1 = tmp_27_reg_11098;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_4712_p1 = tmp_17_reg_11036;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_4712_p1 = tmp_11_reg_10998;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_4712_p1 = tmp_9_reg_10960;
    end else begin
        grp_fu_4712_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'd0 == and_ln112_3_reg_11213_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage5_00001) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage7_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage5_00001) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_3_reg_11213_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)))) begin
        grp_fu_4716_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln1027_reg_10927_pp0_iter5_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter5 == 1'b1) & (icmp_ln1027_reg_10927_pp0_iter4_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_4716_opcode = 2'd0;
    end else begin
        grp_fu_4716_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_4716_p0 = distance_3_reg_11584;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_4716_p0 = distance_2_reg_11574;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_4716_p0 = mul_reg_11385;
    end else if (((1'd0 == and_ln112_3_reg_11213_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_4716_p0 = d2_1_reg_11324;
    end else if (((1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_3_reg_11213_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_4716_p0 = d1_1_reg_11319;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_4716_p0 = tmp_34_reg_11144;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_4716_p0 = tmp_18_reg_11045;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_4716_p0 = tmp_11_reg_10998;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_4716_p0 = tmp_9_reg_10960;
    end else begin
        grp_fu_4716_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_4716_p1 = mul_4_reg_11447_pp0_iter5_reg;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_4716_p1 = mul_3_reg_11436_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_4716_p1 = 32'd0;
    end else if (((1'd0 == and_ln112_3_reg_11213_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_4716_p1 = sub87_1_reg_11334;
    end else if (((1'b0 == ap_block_pp0_stage5) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_3_reg_11213_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_4716_p1 = sub75_1_reg_11329;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_4716_p1 = tmp_35_reg_11149;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_4716_p1 = tmp_19_reg_11050;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_4716_p1 = tmp_4_reg_10984;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_4716_p1 = tmp_7_reg_10946;
    end else begin
        grp_fu_4716_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage7_00001) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_5_reg_11248_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)) | ((1'd0 == and_ln112_5_reg_11248_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage7_00001) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        grp_fu_4720_opcode = 2'd1;
    end else if ((((1'b0 == ap_block_pp0_stage1_00001) & (ap_enable_reg_pp0_iter7 == 1'b1) & (icmp_ln1027_reg_10927_pp0_iter6_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_4720_opcode = 2'd0;
    end else begin
        grp_fu_4720_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_4720_p0 = distance_4_reg_11601;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_4720_p0 = distance_reg_11452;
    end else if (((1'd0 == and_ln112_5_reg_11248_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_4720_p0 = d2_2_reg_11344;
    end else if (((1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_5_reg_11248_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_4720_p0 = d1_2_reg_11339;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_4720_p0 = tmp_20_reg_11055;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_4720_p0 = tmp_4_reg_10984;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_4720_p0 = tmp_1_reg_10969;
    end else begin
        grp_fu_4720_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter7 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_4720_p1 = mul_5_reg_11471_pp0_iter6_reg;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_4720_p1 = mul_1_reg_11390_pp0_iter2_reg;
    end else if (((1'd0 == and_ln112_5_reg_11248_pp0_iter1_reg) & (1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_4720_p1 = sub87_2_reg_11354;
    end else if (((1'b0 == ap_block_pp0_stage7) & (icmp_ln1027_reg_10927_pp0_iter1_reg == 1'd1) & (1'd1 == and_ln112_5_reg_11248_pp0_iter1_reg) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_4720_p1 = sub75_2_reg_11349;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_4720_p1 = tmp_21_reg_11060;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_4720_p1 = tmp_11_reg_10998;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_4720_p1 = tmp_2_reg_10974;
    end else begin
        grp_fu_4720_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)))) begin
        grp_fu_4724_opcode = 2'd1;
    end else if (((icmp_ln1027_reg_10927_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage6_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_4724_opcode = 2'd0;
    end else begin
        grp_fu_4724_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_4724_p0 = distance_1_reg_11544;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_4724_p0 = tmp_22_reg_11069;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_4724_p0 = tmp_14_reg_11017;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_4724_p0 = tmp_12_reg_11007;
    end else begin
        grp_fu_4724_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_4724_p1 = mul_2_reg_11410_pp0_iter2_reg;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_4724_p1 = tmp_23_reg_11074;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_4724_p1 = tmp_15_reg_11022;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_4724_p1 = tmp_13_reg_11012;
    end else begin
        grp_fu_4724_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_4729_p0 = reg_4774;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_4729_p0 = ov_24_reg_11493;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_4729_p0 = d_4_reg_11415;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_4729_p0 = d_3_reg_11359;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_4729_p0 = d_2_reg_11308;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_4729_p0 = d_reg_11287;
    end else begin
        grp_fu_4729_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_4729_p1 = ov_11_reg_11529;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_4729_p1 = ov_7_reg_11498;
    end else if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_4729_p1 = d_4_reg_11415;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_4729_p1 = d_3_reg_11359;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_4729_p1 = d_2_reg_11308;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_4729_p1 = d_reg_11287;
    end else begin
        grp_fu_4729_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_4733_p0 = overlap_4_reg_11579;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_4733_p0 = overlap_3_reg_11569;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_4733_p0 = reg_4774;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_4733_p0 = d_5_reg_11441;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_4733_p0 = reg_4747;
    end else begin
        grp_fu_4733_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter5 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_4733_p1 = ov_23_reg_11564_pp0_iter4_reg;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_4733_p1 = ov_19_reg_11554;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter4 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_4733_p1 = ov_15_reg_11539;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_4733_p1 = d_5_reg_11441;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_4733_p1 = reg_4747;
    end else begin
        grp_fu_4733_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7_00001) & (ap_enable_reg_pp0_iter8 == 1'b1) & (icmp_ln1027_reg_10927_pp0_iter8_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_4737_opcode = 5'd2;
    end else if ((((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_00001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_00001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_4737_opcode = 5'd4;
    end else begin
        grp_fu_4737_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_4737_p0 = sc_2_reg_11606;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        grp_fu_4737_p0 = ov_14_reg_11503;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_4737_p0 = ov_10_reg_11486;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_4737_p0 = ov_2_reg_11457;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_4737_p0 = tmp_33_reg_11135;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_4737_p0 = tmp_27_reg_11098;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_4737_p0 = tmp_15_reg_11022;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_4737_p0 = tmp_7_reg_10946;
    end else begin
        grp_fu_4737_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter8 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_4737_p1 = tmp_score_fu_1226;
    end else if ((((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_4737_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_4737_p1 = tmp_35_reg_11149;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_4737_p1 = tmp_29_reg_11112;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_4737_p1 = tmp_17_reg_11036;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_4737_p1 = tmp_9_reg_10960;
    end else begin
        grp_fu_4737_p1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage0_00001) & (ap_enable_reg_pp0_iter6 == 1'b1) & (icmp_ln1027_reg_10927_pp0_iter5_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage0)) | ((1'b0 == ap_block_pp0_stage7_00001) & (ap_enable_reg_pp0_iter9 == 1'b1) & (icmp_ln1027_reg_10927_pp0_iter9_reg == 1'd1) & (1'b1 == ap_CS_fsm_pp0_stage7)))) begin
        grp_fu_4741_opcode = 5'd2;
    end else if ((((icmp_ln1027_reg_10927_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage5_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((icmp_ln1027_reg_10927_pp0_iter3_reg == 1'd1) & (1'b0 == ap_block_pp0_stage4_00001) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage3_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((icmp_ln1027_reg_10927 == 1'd1) & (1'b0 == ap_block_pp0_stage2_00001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage6_00001) & (icmp_ln1027_reg_10927_pp0_iter2_reg == 1'd1) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)))) begin
        grp_fu_4741_opcode = 5'd4;
    end else begin
        grp_fu_4741_opcode = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_4741_p0 = tmp_score_4_reg_11631;
    end else if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        grp_fu_4741_p0 = overlap_5_reg_11589;
    end else if (((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5))) begin
        grp_fu_4741_p0 = ov_22_reg_11522;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        grp_fu_4741_p0 = ov_18_reg_11515;
    end else if (((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6))) begin
        grp_fu_4741_p0 = ov_6_reg_11464;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_4741_p0 = tmp_21_reg_11060;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_4741_p0 = tmp_4_reg_10984;
    end else begin
        grp_fu_4741_p0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage7) & (ap_enable_reg_pp0_iter9 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage7))) begin
        grp_fu_4741_p1 = score_fu_1214;
    end else if ((((1'b0 == ap_block_pp0_stage6) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage6)) | ((1'b0 == ap_block_pp0_stage5) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage5)) | ((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter3 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter6 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        grp_fu_4741_p1 = 32'd0;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        grp_fu_4741_p1 = tmp_23_reg_11074;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        grp_fu_4741_p1 = tmp_11_reg_10998;
    end else begin
        grp_fu_4741_p1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_10927_pp0_iter9_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        merge_1_out_ap_vld = 1'b1;
    end else begin
        merge_1_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (icmp_ln1027_reg_10927_pp0_iter9_reg == 1'd0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        merge_2_out_ap_vld = 1'b1;
    end else begin
        merge_2_out_ap_vld = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if (((ap_idle_pp0_0to9 == 1'b1) & (1'b1 == ap_condition_exit_pp0_iter10_stage0))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else if ((~((ap_start_int == 1'b0) & (ap_done_pending_pp0 == 1'b0) & (ap_idle_pp0_1to10 == 1'b1)) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        ap_ST_fsm_pp0_stage5 : begin
            if ((1'b0 == ap_block_pp0_stage5_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage5;
            end
        end
        ap_ST_fsm_pp0_stage6 : begin
            if ((1'b0 == ap_block_pp0_stage6_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage6;
            end
        end
        ap_ST_fsm_pp0_stage7 : begin
            if ((1'b0 == ap_block_pp0_stage7_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage7;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign and_ln112_10_fu_6666_p2 = (or_ln112_11_fu_6660_p2 & or_ln112_10_fu_6642_p2);

assign and_ln112_11_fu_6672_p2 = (tmp_63_reg_11268 & and_ln112_10_fu_6666_p2);

assign and_ln112_1_fu_6332_p2 = (or_ln112_fu_6319_p2 & and_ln112_fu_6327_p2);

assign and_ln112_2_fu_6346_p2 = (tmp_43_reg_11203 & or_ln112_3_fu_6342_p2);

assign and_ln112_3_fu_6351_p2 = (or_ln112_2_fu_6338_p2 & and_ln112_2_fu_6346_p2);

assign and_ln112_4_fu_6423_p2 = (or_ln112_5_fu_6419_p2 & or_ln112_4_fu_6415_p2);

assign and_ln112_5_fu_6429_p2 = (tmp_48_reg_11238 & and_ln112_4_fu_6423_p2);

assign and_ln112_6_fu_6504_p2 = (or_ln112_7_fu_6498_p2 & or_ln112_6_fu_6480_p2);

assign and_ln112_7_fu_6510_p2 = (tmp_53_reg_11243 & and_ln112_6_fu_6504_p2);

assign and_ln112_8_fu_6585_p2 = (or_ln112_9_fu_6579_p2 & or_ln112_8_fu_6561_p2);

assign and_ln112_9_fu_6591_p2 = (tmp_58_reg_11258 & and_ln112_8_fu_6585_p2);

assign and_ln112_fu_6327_p2 = (tmp_38_reg_11178 & or_ln112_1_fu_6323_p2);

assign and_ln116_1_fu_6825_p2 = (tmp_45_reg_11481 & or_ln116_1_fu_6819_p2);

assign and_ln116_2_fu_6893_p2 = (tmp_50_reg_11510 & or_ln116_2_fu_6887_p2);

assign and_ln116_3_fu_6940_p2 = (tmp_55_reg_11534 & or_ln116_3_fu_6934_p2);

assign and_ln116_4_fu_6987_p2 = (tmp_60_reg_11549 & or_ln116_4_fu_6981_p2);

assign and_ln116_5_fu_7034_p2 = (tmp_65_reg_11559 & or_ln116_5_fu_7028_p2);

assign and_ln116_fu_6778_p2 = (tmp_40_reg_11476 & or_ln116_fu_6772_p2);

assign and_ln122_fu_7081_p2 = (tmp_67_reg_11596_pp0_iter7_reg & or_ln122_fu_7075_p2);

assign and_ln130_1_fu_7196_p2 = (tmp_70_reg_11620 & and_ln130_fu_7190_p2);

assign and_ln130_fu_7190_p2 = (or_ln130_2_fu_7184_p2 & or_ln130_1_fu_7166_p2);

assign and_ln139_1_fu_7345_p2 = (tmp_73_reg_11660 & and_ln139_fu_7339_p2);

assign and_ln139_fu_7339_p2 = (or_ln139_2_fu_7333_p2 & or_ln139_1_fu_7315_p2);

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_pp0_stage5 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_pp0_stage6 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_pp0_stage7 = ap_CS_fsm[32'd7];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_01001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage5_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage6_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_00001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage7_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state12_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state13_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state14_pp0_stage5_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state15_pp0_stage6_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state16_pp0_stage7_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state17_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state18_pp0_stage1_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp0_stage2_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp0_stage3_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp0_stage4_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp0_stage5_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp0_stage6_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp0_stage7_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp0_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp0_stage1_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp0_stage2_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp0_stage3_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp0_stage4_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp0_stage5_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp0_stage6_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp0_stage7_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp0_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp0_stage1_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp0_stage2_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp0_stage3_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp0_stage4_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp0_stage5_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp0_stage6_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp0_stage7_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp0_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp0_stage1_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp0_stage2_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp0_stage3_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp0_stage4_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp0_stage5_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp0_stage6_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp0_stage7_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp0_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp0_stage1_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp0_stage2_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp0_stage3_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state53_pp0_stage4_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state54_pp0_stage5_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state55_pp0_stage6_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state56_pp0_stage7_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state57_pp0_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state58_pp0_stage1_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state59_pp0_stage2_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state60_pp0_stage3_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state61_pp0_stage4_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state62_pp0_stage5_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state63_pp0_stage6_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state64_pp0_stage7_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state65_pp0_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state66_pp0_stage1_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state67_pp0_stage2_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state68_pp0_stage3_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state69_pp0_stage4_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage5_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state70_pp0_stage5_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state71_pp0_stage6_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state72_pp0_stage7_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state73_pp0_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state74_pp0_stage1_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state75_pp0_stage2_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state76_pp0_stage3_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state77_pp0_stage4_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state78_pp0_stage5_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state79_pp0_stage6_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage6_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state80_pp0_stage7_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state81_pp0_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state82_pp0_stage1_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage7_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign ap_loop_exit_ready = ap_condition_exit_pp0_iter0_stage7;

assign bitcast_ln112_10_fu_6596_p1 = tmp_33_reg_11135;

assign bitcast_ln112_11_fu_6613_p1 = tmp_35_reg_11149;

assign bitcast_ln112_1_fu_6220_p1 = tmp_9_reg_10960;

assign bitcast_ln112_2_fu_6261_p1 = tmp_4_reg_10984;

assign bitcast_ln112_3_fu_6278_p1 = tmp_11_reg_10998;

assign bitcast_ln112_4_fu_6357_p1 = tmp_15_reg_11022;

assign bitcast_ln112_5_fu_6374_p1 = tmp_17_reg_11036;

assign bitcast_ln112_6_fu_6434_p1 = tmp_21_reg_11060;

assign bitcast_ln112_7_fu_6451_p1 = tmp_23_reg_11074;

assign bitcast_ln112_8_fu_6515_p1 = tmp_27_reg_11098;

assign bitcast_ln112_9_fu_6532_p1 = tmp_29_reg_11112;

assign bitcast_ln112_fu_6203_p1 = tmp_7_reg_10946;

assign bitcast_ln116_1_fu_6790_p1 = ov_6_reg_11464;

assign bitcast_ln116_2_fu_6858_p1 = ov_10_reg_11486;

assign bitcast_ln116_3_fu_6905_p1 = ov_14_reg_11503;

assign bitcast_ln116_4_fu_6952_p1 = ov_18_reg_11515;

assign bitcast_ln116_5_fu_6999_p1 = ov_22_reg_11522;

assign bitcast_ln116_fu_6743_p1 = ov_2_reg_11457;

assign bitcast_ln122_fu_7046_p1 = overlap_5_reg_11589_pp0_iter7_reg;

assign bitcast_ln126_fu_7086_p1 = reg_4747;

assign bitcast_ln130_1_fu_7137_p1 = tmp_score_load_reg_11613;

assign bitcast_ln130_fu_7120_p1 = sc_2_reg_11606;

assign bitcast_ln139_1_fu_7286_p1 = score_load_reg_11639;

assign bitcast_ln139_fu_7269_p1 = tmp_score_4_reg_11631;

assign grp_fu_53978_p_ce = 1'b1;

assign grp_fu_53978_p_din0 = grp_fu_4704_p0;

assign grp_fu_53978_p_din1 = grp_fu_4704_p1;

assign grp_fu_53978_p_opcode = 2'd1;

assign grp_fu_53984_p_ce = 1'b1;

assign grp_fu_53984_p_din0 = grp_fu_4729_p0;

assign grp_fu_53984_p_din1 = grp_fu_4729_p1;

assign grp_fu_53989_p_ce = 1'b1;

assign grp_fu_53989_p_din0 = grp_fu_4737_p0;

assign grp_fu_53989_p_din1 = grp_fu_4737_p1;

assign grp_fu_53989_p_opcode = grp_fu_4737_opcode;

assign grp_fu_53994_p_ce = 1'b1;

assign grp_fu_53994_p_din0 = grp_fu_4741_p0;

assign grp_fu_53994_p_din1 = grp_fu_4741_p1;

assign grp_fu_53994_p_opcode = grp_fu_4741_opcode;

assign i_real_2_fu_6705_p3 = ((icmp_ln1019_fu_6677_p2[0:0] == 1'b1) ? i_real_fu_6682_p2 : i_real_3_reg_10912);

assign i_real_fu_6682_p2 = (i_real_3_reg_10912 + 32'd1);

assign icmp_ln1019_fu_6677_p2 = ((k_real_5_reg_10920 == 32'd31) ? 1'b1 : 1'b0);

assign icmp_ln1027_fu_4821_p2 = (($signed(merge_1_1_fu_1218) < $signed(32'd31)) ? 1'b1 : 1'b0);

assign icmp_ln112_10_fu_6403_p2 = ((tmp_47_fu_6377_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_11_fu_6409_p2 = ((trunc_ln112_5_fu_6387_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_12_fu_6468_p2 = ((tmp_51_fu_6437_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_13_fu_6474_p2 = ((trunc_ln112_6_fu_6447_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_14_fu_6486_p2 = ((tmp_52_fu_6454_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_15_fu_6492_p2 = ((trunc_ln112_7_fu_6464_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_16_fu_6549_p2 = ((tmp_56_fu_6518_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_17_fu_6555_p2 = ((trunc_ln112_8_fu_6528_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_18_fu_6567_p2 = ((tmp_57_fu_6535_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_19_fu_6573_p2 = ((trunc_ln112_9_fu_6545_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_1_fu_6243_p2 = ((trunc_ln112_fu_6216_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_20_fu_6630_p2 = ((tmp_61_fu_6599_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_21_fu_6636_p2 = ((trunc_ln112_10_fu_6609_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_22_fu_6648_p2 = ((tmp_62_fu_6616_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_23_fu_6654_p2 = ((trunc_ln112_11_fu_6626_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_2_fu_6249_p2 = ((tmp_37_fu_6223_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_3_fu_6255_p2 = ((trunc_ln112_1_fu_6233_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_4_fu_6295_p2 = ((tmp_41_fu_6264_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_5_fu_6301_p2 = ((trunc_ln112_2_fu_6274_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_6_fu_6307_p2 = ((tmp_42_fu_6281_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_7_fu_6313_p2 = ((trunc_ln112_3_fu_6291_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_8_fu_6391_p2 = ((tmp_46_fu_6360_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln112_9_fu_6397_p2 = ((trunc_ln112_4_fu_6370_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln112_fu_6237_p2 = ((tmp_36_fu_6206_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_10_fu_7016_p2 = ((tmp_64_fu_7002_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_11_fu_7022_p2 = ((trunc_ln116_5_fu_7012_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_1_fu_6766_p2 = ((trunc_ln116_fu_6756_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_2_fu_6807_p2 = ((tmp_44_fu_6793_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_3_fu_6813_p2 = ((trunc_ln116_1_fu_6803_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_4_fu_6875_p2 = ((tmp_49_fu_6861_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_5_fu_6881_p2 = ((trunc_ln116_2_fu_6871_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_6_fu_6922_p2 = ((tmp_54_fu_6908_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_7_fu_6928_p2 = ((trunc_ln116_3_fu_6918_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_8_fu_6969_p2 = ((tmp_59_fu_6955_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln116_9_fu_6975_p2 = ((trunc_ln116_4_fu_6965_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln116_fu_6760_p2 = ((tmp_39_fu_6746_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln122_1_fu_7069_p2 = ((trunc_ln122_fu_7059_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln122_fu_7063_p2 = ((tmp_66_fu_7049_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_1_fu_7154_p2 = ((tmp_68_fu_7123_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_2_fu_7160_p2 = ((trunc_ln130_fu_7133_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_3_fu_7172_p2 = ((tmp_69_fu_7140_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln130_4_fu_7178_p2 = ((trunc_ln130_1_fu_7150_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln130_fu_7114_p2 = ((tmp_other_fu_1230 == 32'd4294967295) ? 1'b1 : 1'b0);

assign icmp_ln139_1_fu_7309_p2 = ((trunc_ln139_fu_7282_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln139_2_fu_7321_p2 = ((tmp_72_fu_7289_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln139_3_fu_7327_p2 = ((trunc_ln139_1_fu_7299_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln139_fu_7303_p2 = ((tmp_71_fu_7272_p4 != 8'd255) ? 1'b1 : 1'b0);

assign k_real_2_fu_6692_p2 = (k_real_5_reg_10920 + 32'd1);

assign k_real_3_fu_6697_p3 = ((icmp_ln1019_fu_6677_p2[0:0] == 1'b1) ? k_real_fu_6687_p2 : k_real_2_fu_6692_p2);

assign k_real_fu_6687_p2 = (i_real_3_reg_10912 + 32'd2);

assign merge_1_6_fu_7368_p3 = ((or_ln139_fu_7350_p2[0:0] == 1'b1) ? i_real_3_reg_10912_pp0_iter9_reg : merge_1_4_reg_11647);

assign merge_1_7_fu_7386_p3 = ((icmp_ln1019_reg_11278_pp0_iter10_reg[0:0] == 1'b1) ? merge_1_6_fu_7368_p3 : merge_1_4_reg_11647);

assign merge_1_out = merge_1_fu_1206[4:0];

assign merge_2_5_fu_7362_p3 = ((or_ln139_fu_7350_p2[0:0] == 1'b1) ? tmp_other_4_reg_11625 : merge_2_1_reg_11654);

assign merge_2_6_fu_7380_p3 = ((icmp_ln1019_reg_11278_pp0_iter10_reg[0:0] == 1'b1) ? merge_2_5_fu_7362_p3 : merge_2_1_reg_11654);

assign merge_2_out = merge_2_fu_1210[4:0];

assign or_ln112_10_fu_6642_p2 = (icmp_ln112_21_fu_6636_p2 | icmp_ln112_20_fu_6630_p2);

assign or_ln112_11_fu_6660_p2 = (icmp_ln112_23_fu_6654_p2 | icmp_ln112_22_fu_6648_p2);

assign or_ln112_1_fu_6323_p2 = (icmp_ln112_3_reg_11173 | icmp_ln112_2_reg_11168);

assign or_ln112_2_fu_6338_p2 = (icmp_ln112_5_reg_11188 | icmp_ln112_4_reg_11183);

assign or_ln112_3_fu_6342_p2 = (icmp_ln112_7_reg_11198 | icmp_ln112_6_reg_11193);

assign or_ln112_4_fu_6415_p2 = (icmp_ln112_9_reg_11223 | icmp_ln112_8_reg_11218);

assign or_ln112_5_fu_6419_p2 = (icmp_ln112_11_reg_11233 | icmp_ln112_10_reg_11228);

assign or_ln112_6_fu_6480_p2 = (icmp_ln112_13_fu_6474_p2 | icmp_ln112_12_fu_6468_p2);

assign or_ln112_7_fu_6498_p2 = (icmp_ln112_15_fu_6492_p2 | icmp_ln112_14_fu_6486_p2);

assign or_ln112_8_fu_6561_p2 = (icmp_ln112_17_fu_6555_p2 | icmp_ln112_16_fu_6549_p2);

assign or_ln112_9_fu_6579_p2 = (icmp_ln112_19_fu_6573_p2 | icmp_ln112_18_fu_6567_p2);

assign or_ln112_fu_6319_p2 = (icmp_ln112_reg_11158 | icmp_ln112_1_reg_11163);

assign or_ln116_1_fu_6819_p2 = (icmp_ln116_3_fu_6813_p2 | icmp_ln116_2_fu_6807_p2);

assign or_ln116_2_fu_6887_p2 = (icmp_ln116_5_fu_6881_p2 | icmp_ln116_4_fu_6875_p2);

assign or_ln116_3_fu_6934_p2 = (icmp_ln116_7_fu_6928_p2 | icmp_ln116_6_fu_6922_p2);

assign or_ln116_4_fu_6981_p2 = (icmp_ln116_9_fu_6975_p2 | icmp_ln116_8_fu_6969_p2);

assign or_ln116_5_fu_7028_p2 = (icmp_ln116_11_fu_7022_p2 | icmp_ln116_10_fu_7016_p2);

assign or_ln116_fu_6772_p2 = (icmp_ln116_fu_6760_p2 | icmp_ln116_1_fu_6766_p2);

assign or_ln122_fu_7075_p2 = (icmp_ln122_fu_7063_p2 | icmp_ln122_1_fu_7069_p2);

assign or_ln130_1_fu_7166_p2 = (icmp_ln130_2_fu_7160_p2 | icmp_ln130_1_fu_7154_p2);

assign or_ln130_2_fu_7184_p2 = (icmp_ln130_4_fu_7178_p2 | icmp_ln130_3_fu_7172_p2);

assign or_ln130_fu_7201_p2 = (icmp_ln130_fu_7114_p2 | and_ln130_1_fu_7196_p2);

assign or_ln139_1_fu_7315_p2 = (icmp_ln139_fu_7303_p2 | icmp_ln139_1_fu_7309_p2);

assign or_ln139_2_fu_7333_p2 = (icmp_ln139_3_fu_7327_p2 | icmp_ln139_2_fu_7321_p2);

assign or_ln139_fu_7350_p2 = (tmp_fu_7262_p3 | and_ln139_1_fu_7345_p2);

assign ov_10_fu_6736_p3 = ((and_ln112_5_reg_11248_pp0_iter2_reg[0:0] == 1'b1) ? reg_4747 : reg_4747);

assign ov_11_fu_6898_p3 = ((and_ln116_2_fu_6893_p2[0:0] == 1'b1) ? 32'd0 : ov_10_reg_11486);

assign ov_14_fu_6837_p3 = ((and_ln112_7_reg_11253_pp0_iter2_reg[0:0] == 1'b1) ? reg_4766 : reg_4766);

assign ov_15_fu_6945_p3 = ((and_ln116_3_fu_6940_p2[0:0] == 1'b1) ? 32'd0 : ov_14_reg_11503);

assign ov_18_fu_6844_p3 = ((and_ln112_9_reg_11263_pp0_iter2_reg[0:0] == 1'b1) ? reg_4758 : reg_4766);

assign ov_19_fu_6992_p3 = ((and_ln116_4_fu_6987_p2[0:0] == 1'b1) ? 32'd0 : ov_18_reg_11515);

assign ov_22_fu_6851_p3 = ((and_ln112_11_reg_11273_pp0_iter2_reg[0:0] == 1'b1) ? reg_4770 : reg_4770);

assign ov_23_fu_7039_p3 = ((and_ln116_5_fu_7034_p2[0:0] == 1'b1) ? 32'd0 : ov_22_reg_11522);

assign ov_24_fu_6783_p3 = ((and_ln116_fu_6778_p2[0:0] == 1'b1) ? 32'd0 : ov_2_reg_11457);

assign ov_2_fu_6722_p3 = ((and_ln112_1_reg_11208_pp0_iter2_reg[0:0] == 1'b1) ? reg_4758 : reg_4758);

assign ov_6_fu_6729_p3 = ((and_ln112_3_reg_11213_pp0_iter2_reg[0:0] == 1'b1) ? reg_4762 : reg_4762);

assign ov_7_fu_6830_p3 = ((and_ln116_1_fu_6825_p2[0:0] == 1'b1) ? 32'd0 : ov_6_reg_11464);

assign sc_2_fu_7100_p3 = ((and_ln122_fu_7081_p2[0:0] == 1'b1) ? overlap_5_reg_11589_pp0_iter7_reg : sc_fu_7096_p1);

assign sc_fu_7096_p1 = xor_ln126_fu_7090_p2;

assign score_2_fu_7356_p3 = ((or_ln139_fu_7350_p2[0:0] == 1'b1) ? tmp_score_4_reg_11631 : score_load_reg_11639);

assign score_3_fu_7374_p3 = ((icmp_ln1019_reg_11278_pp0_iter10_reg[0:0] == 1'b1) ? score_2_fu_7356_p3 : score_load_reg_11639);

assign tmp_36_fu_6206_p4 = {{bitcast_ln112_fu_6203_p1[30:23]}};

assign tmp_37_fu_6223_p4 = {{bitcast_ln112_1_fu_6220_p1[30:23]}};

assign tmp_39_fu_6746_p4 = {{bitcast_ln116_fu_6743_p1[30:23]}};

assign tmp_41_fu_6264_p4 = {{bitcast_ln112_2_fu_6261_p1[30:23]}};

assign tmp_42_fu_6281_p4 = {{bitcast_ln112_3_fu_6278_p1[30:23]}};

assign tmp_44_fu_6793_p4 = {{bitcast_ln116_1_fu_6790_p1[30:23]}};

assign tmp_46_fu_6360_p4 = {{bitcast_ln112_4_fu_6357_p1[30:23]}};

assign tmp_47_fu_6377_p4 = {{bitcast_ln112_5_fu_6374_p1[30:23]}};

assign tmp_49_fu_6861_p4 = {{bitcast_ln116_2_fu_6858_p1[30:23]}};

assign tmp_51_fu_6437_p4 = {{bitcast_ln112_6_fu_6434_p1[30:23]}};

assign tmp_52_fu_6454_p4 = {{bitcast_ln112_7_fu_6451_p1[30:23]}};

assign tmp_54_fu_6908_p4 = {{bitcast_ln116_3_fu_6905_p1[30:23]}};

assign tmp_56_fu_6518_p4 = {{bitcast_ln112_8_fu_6515_p1[30:23]}};

assign tmp_57_fu_6535_p4 = {{bitcast_ln112_9_fu_6532_p1[30:23]}};

assign tmp_59_fu_6955_p4 = {{bitcast_ln116_4_fu_6952_p1[30:23]}};

assign tmp_61_fu_6599_p4 = {{bitcast_ln112_10_fu_6596_p1[30:23]}};

assign tmp_62_fu_6616_p4 = {{bitcast_ln112_11_fu_6613_p1[30:23]}};

assign tmp_64_fu_7002_p4 = {{bitcast_ln116_5_fu_6999_p1[30:23]}};

assign tmp_66_fu_7049_p4 = {{bitcast_ln122_fu_7046_p1[30:23]}};

assign tmp_68_fu_7123_p4 = {{bitcast_ln130_fu_7120_p1[30:23]}};

assign tmp_69_fu_7140_p4 = {{bitcast_ln130_1_fu_7137_p1[30:23]}};

assign tmp_71_fu_7272_p4 = {{bitcast_ln139_fu_7269_p1[30:23]}};

assign tmp_72_fu_7289_p4 = {{bitcast_ln139_1_fu_7286_p1[30:23]}};

assign tmp_fu_7262_p3 = merge_1_4_reg_11647[32'd31];

assign tmp_other_3_fu_7220_p3 = ((icmp_ln1019_reg_11278_pp0_iter9_reg[0:0] == 1'b1) ? 32'd4294967295 : tmp_other_4_reg_11625);

assign tmp_other_4_fu_7207_p3 = ((or_ln130_fu_7201_p2[0:0] == 1'b1) ? k_real_5_reg_10920_pp0_iter8_reg : tmp_other_fu_1230);

assign tmp_score_3_fu_7226_p3 = ((icmp_ln1019_reg_11278_pp0_iter9_reg[0:0] == 1'b1) ? 32'd0 : tmp_score_4_reg_11631);

assign tmp_score_4_fu_7214_p3 = ((or_ln130_fu_7201_p2[0:0] == 1'b1) ? sc_2_reg_11606 : tmp_score_load_reg_11613);

assign trunc_ln104_1_fu_4869_p1 = k_real_4_fu_1222[4:0];

assign trunc_ln104_fu_4827_p1 = merge_1_1_fu_1218[4:0];

assign trunc_ln112_10_fu_6609_p1 = bitcast_ln112_10_fu_6596_p1[22:0];

assign trunc_ln112_11_fu_6626_p1 = bitcast_ln112_11_fu_6613_p1[22:0];

assign trunc_ln112_1_fu_6233_p1 = bitcast_ln112_1_fu_6220_p1[22:0];

assign trunc_ln112_2_fu_6274_p1 = bitcast_ln112_2_fu_6261_p1[22:0];

assign trunc_ln112_3_fu_6291_p1 = bitcast_ln112_3_fu_6278_p1[22:0];

assign trunc_ln112_4_fu_6370_p1 = bitcast_ln112_4_fu_6357_p1[22:0];

assign trunc_ln112_5_fu_6387_p1 = bitcast_ln112_5_fu_6374_p1[22:0];

assign trunc_ln112_6_fu_6447_p1 = bitcast_ln112_6_fu_6434_p1[22:0];

assign trunc_ln112_7_fu_6464_p1 = bitcast_ln112_7_fu_6451_p1[22:0];

assign trunc_ln112_8_fu_6528_p1 = bitcast_ln112_8_fu_6515_p1[22:0];

assign trunc_ln112_9_fu_6545_p1 = bitcast_ln112_9_fu_6532_p1[22:0];

assign trunc_ln112_fu_6216_p1 = bitcast_ln112_fu_6203_p1[22:0];

assign trunc_ln116_1_fu_6803_p1 = bitcast_ln116_1_fu_6790_p1[22:0];

assign trunc_ln116_2_fu_6871_p1 = bitcast_ln116_2_fu_6858_p1[22:0];

assign trunc_ln116_3_fu_6918_p1 = bitcast_ln116_3_fu_6905_p1[22:0];

assign trunc_ln116_4_fu_6965_p1 = bitcast_ln116_4_fu_6952_p1[22:0];

assign trunc_ln116_5_fu_7012_p1 = bitcast_ln116_5_fu_6999_p1[22:0];

assign trunc_ln116_fu_6756_p1 = bitcast_ln116_fu_6743_p1[22:0];

assign trunc_ln122_fu_7059_p1 = bitcast_ln122_fu_7046_p1[22:0];

assign trunc_ln130_1_fu_7150_p1 = bitcast_ln130_1_fu_7137_p1[22:0];

assign trunc_ln130_fu_7133_p1 = bitcast_ln130_fu_7120_p1[22:0];

assign trunc_ln139_1_fu_7299_p1 = bitcast_ln139_1_fu_7286_p1[22:0];

assign trunc_ln139_fu_7282_p1 = bitcast_ln139_fu_7269_p1[22:0];

assign xor_ln126_fu_7090_p2 = (bitcast_ln126_fu_7086_p1 ^ 32'd2147483648);

endmodule //FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1
