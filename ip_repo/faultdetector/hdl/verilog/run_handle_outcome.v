// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module run_handle_outcome (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        errorInTask_address0,
        errorInTask_ce0,
        errorInTask_we0,
        errorInTask_d0,
        errorInTask_q0,
        outcomeInRam_address0,
        outcomeInRam_ce0,
        outcomeInRam_we0,
        outcomeInRam_d0,
        failedTask,
        failedTask_ap_vld,
        failedTask_ap_ack,
        destStream_dout,
        destStream_num_data_valid,
        destStream_fifo_cap,
        destStream_empty_n,
        destStream_read
);

parameter    ap_ST_fsm_state1 = 21'd1;
parameter    ap_ST_fsm_state2 = 21'd2;
parameter    ap_ST_fsm_state3 = 21'd4;
parameter    ap_ST_fsm_state4 = 21'd8;
parameter    ap_ST_fsm_state5 = 21'd16;
parameter    ap_ST_fsm_state6 = 21'd32;
parameter    ap_ST_fsm_state7 = 21'd64;
parameter    ap_ST_fsm_state8 = 21'd128;
parameter    ap_ST_fsm_state9 = 21'd256;
parameter    ap_ST_fsm_state10 = 21'd512;
parameter    ap_ST_fsm_state11 = 21'd1024;
parameter    ap_ST_fsm_state12 = 21'd2048;
parameter    ap_ST_fsm_state13 = 21'd4096;
parameter    ap_ST_fsm_state14 = 21'd8192;
parameter    ap_ST_fsm_state15 = 21'd16384;
parameter    ap_ST_fsm_state16 = 21'd32768;
parameter    ap_ST_fsm_state17 = 21'd65536;
parameter    ap_ST_fsm_state18 = 21'd131072;
parameter    ap_ST_fsm_state19 = 21'd262144;
parameter    ap_ST_fsm_state20 = 21'd524288;
parameter    ap_ST_fsm_state21 = 21'd1048576;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [3:0] errorInTask_address0;
output   errorInTask_ce0;
output   errorInTask_we0;
output  [7:0] errorInTask_d0;
input  [7:0] errorInTask_q0;
output  [3:0] outcomeInRam_address0;
output   outcomeInRam_ce0;
output  [35:0] outcomeInRam_we0;
output  [287:0] outcomeInRam_d0;
output  [15:0] failedTask;
output   failedTask_ap_vld;
input   failedTask_ap_ack;
input  [296:0] destStream_dout;
input  [1:0] destStream_num_data_valid;
input  [1:0] destStream_fifo_cap;
input   destStream_empty_n;
output   destStream_read;

reg ap_idle;
reg[3:0] errorInTask_address0;
reg errorInTask_ce0;
reg errorInTask_we0;
reg[3:0] outcomeInRam_address0;
reg outcomeInRam_ce0;
reg[35:0] outcomeInRam_we0;
reg[287:0] outcomeInRam_d0;
reg destStream_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [20:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] failedTaskExecutionIds_V_address0;
reg    failedTaskExecutionIds_V_ce0;
reg    failedTaskExecutionIds_V_we0;
wire   [7:0] failedTaskExecutionIds_V_q0;
reg    failedTask_blk_n;
wire    ap_CS_fsm_state20;
reg   [0:0] in_fault_reg_1691;
wire    ap_CS_fsm_state21;
reg   [0:0] icmp_ln1065_reg_1765;
reg   [0:0] icmp_ln454_reg_1756;
reg    destStream_blk_n;
wire    ap_CS_fsm_state2;
reg   [296:0] destStream_read_reg_1674;
reg   [7:0] tmp_executionId_V_reg_1680;
reg   [3:0] tmp_taskId_V_reg_1686;
reg   [31:0] trunc_ln145_7_reg_1696;
reg   [31:0] trunc_ln145_8_reg_1701;
reg   [31:0] trunc_ln145_9_reg_1706;
reg   [31:0] trunc_ln145_s_reg_1711;
reg   [31:0] trunc_ln145_1_reg_1716;
reg   [31:0] trunc_ln145_2_reg_1721;
wire   [63:0] loop_index20_cast_fu_603_p1;
reg   [63:0] loop_index20_cast_reg_1726;
wire    ap_CS_fsm_state6;
wire   [3:0] empty_fu_614_p2;
reg   [3:0] empty_reg_1734;
wire   [0:0] exitcond6_fu_608_p2;
wire   [63:0] zext_ln587_fu_620_p1;
reg   [63:0] zext_ln587_reg_1744;
reg   [3:0] errorInTask_addr_reg_1751;
wire   [0:0] icmp_ln454_fu_624_p2;
wire    ap_CS_fsm_state8;
wire   [0:0] icmp_ln1065_fu_630_p2;
wire    ap_CS_fsm_state9;
wire   [13:0] add_ln455_fu_668_p2;
reg   [13:0] add_ln455_reg_1769;
wire   [13:0] empty_67_fu_674_p2;
reg   [13:0] empty_67_reg_1779;
wire   [31:0] empty_75_fu_680_p1;
reg   [31:0] empty_75_reg_1784;
wire   [13:0] empty_68_fu_691_p2;
reg   [13:0] empty_68_reg_1794;
wire    ap_CS_fsm_state10;
wire   [287:0] p_cast82_fu_707_p1;
wire   [13:0] empty_69_fu_716_p2;
reg   [13:0] empty_69_reg_1814;
wire    ap_CS_fsm_state11;
wire   [13:0] empty_70_fu_728_p2;
reg   [13:0] empty_70_reg_1824;
wire    ap_CS_fsm_state12;
reg   [8:0] tmp_2_reg_1829;
wire  signed [14:0] empty_78_fu_791_p2;
reg  signed [14:0] empty_78_reg_1834;
wire   [13:0] empty_71_fu_804_p2;
reg   [13:0] empty_71_reg_1845;
wire    ap_CS_fsm_state13;
wire   [35:0] empty_79_fu_824_p2;
wire   [287:0] empty_80_fu_846_p2;
reg   [8:0] tmp_3_reg_1865;
wire  signed [14:0] empty_83_fu_911_p2;
reg  signed [14:0] empty_83_reg_1870;
wire   [13:0] empty_72_fu_924_p2;
reg   [13:0] empty_72_reg_1881;
wire    ap_CS_fsm_state14;
wire   [35:0] empty_84_fu_944_p2;
wire   [287:0] empty_85_fu_966_p2;
reg   [8:0] tmp_4_reg_1901;
wire  signed [14:0] empty_88_fu_1031_p2;
reg  signed [14:0] empty_88_reg_1906;
wire   [13:0] empty_73_fu_1044_p2;
reg   [13:0] empty_73_reg_1917;
wire    ap_CS_fsm_state15;
wire   [35:0] empty_89_fu_1064_p2;
wire   [287:0] empty_90_fu_1086_p2;
reg   [8:0] tmp_5_reg_1937;
wire  signed [14:0] empty_93_fu_1151_p2;
reg  signed [14:0] empty_93_reg_1942;
wire   [35:0] empty_94_fu_1179_p2;
wire    ap_CS_fsm_state16;
wire   [287:0] empty_95_fu_1201_p2;
reg   [8:0] tmp_6_reg_1968;
wire  signed [14:0] empty_98_fu_1266_p2;
reg  signed [14:0] empty_98_reg_1973;
wire   [35:0] empty_99_fu_1290_p2;
wire    ap_CS_fsm_state17;
wire   [287:0] empty_100_fu_1312_p2;
reg   [8:0] tmp_7_reg_1994;
wire  signed [14:0] empty_103_fu_1377_p2;
reg  signed [14:0] empty_103_reg_1999;
wire   [35:0] empty_104_fu_1401_p2;
wire    ap_CS_fsm_state18;
wire   [287:0] empty_105_fu_1423_p2;
reg   [8:0] tmp_8_reg_2020;
wire  signed [14:0] empty_108_fu_1488_p2;
reg  signed [14:0] empty_108_reg_2025;
wire   [35:0] empty_109_fu_1509_p2;
wire    ap_CS_fsm_state19;
wire   [287:0] empty_110_fu_1531_p2;
reg   [2:0] in_AOV_address0;
reg    in_AOV_ce0;
reg    in_AOV_we0;
reg   [31:0] in_AOV_d0;
wire   [31:0] in_AOV_q0;
reg   [2:0] in_AOV_address1;
reg    in_AOV_ce1;
reg    in_AOV_we1;
reg   [31:0] in_AOV_d1;
reg   [2:0] outcome_AOV_address0;
reg    outcome_AOV_ce0;
reg    outcome_AOV_we0;
wire   [31:0] outcome_AOV_q0;
reg   [3:0] loop_index20_reg_450;
wire    ap_CS_fsm_state5;
wire    ap_CS_fsm_state7;
wire   [63:0] p_cast84_fu_817_p1;
wire   [63:0] p_cast88_fu_937_p1;
wire   [63:0] p_cast92_fu_1057_p1;
wire   [63:0] p_cast96_fu_1172_p1;
wire   [63:0] p_cast100_fu_1283_p1;
wire   [63:0] p_cast104_fu_1394_p1;
wire   [63:0] p_cast108_fu_1502_p1;
wire   [3:0] failedTaskExecutionIds_V_addr_1_gep_fu_442_p3;
reg    ap_block_state20;
reg    ap_block_state20_io;
wire   [31:0] bitcast_ln145_fu_569_p1;
wire   [31:0] bitcast_ln145_1_fu_574_p1;
wire    ap_CS_fsm_state3;
wire   [31:0] bitcast_ln145_2_fu_579_p1;
wire   [31:0] bitcast_ln145_3_fu_583_p1;
wire    ap_CS_fsm_state4;
wire   [31:0] bitcast_ln145_4_fu_587_p1;
wire   [31:0] bitcast_ln145_5_fu_591_p1;
wire   [31:0] bitcast_ln145_6_fu_595_p1;
wire   [31:0] bitcast_ln145_7_fu_599_p1;
wire   [31:0] trunc_ln145_5_fu_489_p4;
wire   [31:0] trunc_ln145_6_fu_499_p4;
wire   [7:0] tmp_fu_635_p4;
wire   [12:0] and_ln_fu_644_p3;
wire   [9:0] and_ln455_1_fu_656_p3;
wire   [13:0] zext_ln455_fu_652_p1;
wire   [13:0] zext_ln455_1_fu_664_p1;
wire   [31:0] empty_74_fu_696_p1;
wire   [63:0] tmp_s_fu_700_p3;
wire   [28:0] tmp_2_fu_733_p1;
wire  signed [28:0] grp_fu_1538_p2;
wire   [28:0] tmp_122_fu_742_p1;
wire   [7:0] tmp_122_fu_742_p4;
wire   [12:0] p_shl3_fu_751_p3;
wire   [13:0] p_shl17_cast_fu_759_p1;
wire   [13:0] p_neg18_fu_763_p2;
wire   [9:0] p_shl6_fu_773_p3;
wire  signed [14:0] p_neg18_cast_fu_769_p1;
wire   [14:0] p_shl19_cast_fu_781_p1;
wire   [14:0] empty_77_fu_785_p2;
wire   [14:0] p_cast48_fu_725_p1;
wire   [31:0] empty_76_fu_809_p1;
wire  signed [35:0] p_cast85_fu_821_p1;
wire   [17:0] tmp_123_fu_831_p3;
wire  signed [66:0] p_cast86_cast_fu_838_p1;
wire   [287:0] p_cast83_fu_813_p1;
wire   [287:0] p_cast86_cast_cast_fu_842_p1;
wire   [28:0] tmp_3_fu_853_p1;
wire  signed [28:0] grp_fu_1546_p2;
wire   [28:0] tmp_124_fu_862_p1;
wire   [7:0] tmp_124_fu_862_p4;
wire   [12:0] p_shl9_fu_871_p3;
wire   [13:0] p_shl14_cast_fu_879_p1;
wire   [13:0] p_neg15_fu_883_p2;
wire   [9:0] p_shl12_fu_893_p3;
wire  signed [14:0] p_neg15_cast_fu_889_p1;
wire   [14:0] p_shl16_cast_fu_901_p1;
wire   [14:0] empty_82_fu_905_p2;
wire   [14:0] p_cast53_fu_801_p1;
wire   [31:0] empty_81_fu_929_p1;
wire  signed [35:0] p_cast89_fu_941_p1;
wire   [17:0] tmp_125_fu_951_p3;
wire  signed [66:0] p_cast90_cast_fu_958_p1;
wire   [287:0] p_cast87_fu_933_p1;
wire   [287:0] p_cast90_cast_cast_fu_962_p1;
wire   [28:0] tmp_4_fu_973_p1;
wire  signed [28:0] grp_fu_1554_p2;
wire   [28:0] tmp_126_fu_982_p1;
wire   [7:0] tmp_126_fu_982_p4;
wire   [12:0] p_shl11_fu_991_p3;
wire   [13:0] p_shl11_cast_fu_999_p1;
wire   [13:0] p_neg12_fu_1003_p2;
wire   [9:0] p_shl13_fu_1013_p3;
wire  signed [14:0] p_neg12_cast_fu_1009_p1;
wire   [14:0] p_shl13_cast_fu_1021_p1;
wire   [14:0] empty_87_fu_1025_p2;
wire   [14:0] p_cast58_fu_921_p1;
wire   [31:0] empty_86_fu_1049_p1;
wire  signed [35:0] p_cast93_fu_1061_p1;
wire   [17:0] tmp_127_fu_1071_p3;
wire  signed [66:0] p_cast94_cast_fu_1078_p1;
wire   [287:0] p_cast91_fu_1053_p1;
wire   [287:0] p_cast94_cast_cast_fu_1082_p1;
wire   [28:0] tmp_5_fu_1093_p1;
wire  signed [28:0] grp_fu_1562_p2;
wire   [28:0] tmp_128_fu_1102_p1;
wire   [7:0] tmp_128_fu_1102_p4;
wire   [12:0] p_shl8_fu_1111_p3;
wire   [13:0] p_shl8_cast_fu_1119_p1;
wire   [13:0] p_neg9_fu_1123_p2;
wire   [9:0] p_shl10_fu_1133_p3;
wire  signed [14:0] p_neg9_cast_fu_1129_p1;
wire   [14:0] p_shl10_cast_fu_1141_p1;
wire   [14:0] empty_92_fu_1145_p2;
wire   [14:0] p_cast63_fu_1041_p1;
wire   [31:0] empty_91_fu_1164_p1;
wire  signed [35:0] p_cast97_fu_1176_p1;
wire   [17:0] tmp_129_fu_1186_p3;
wire  signed [66:0] p_cast98_cast_fu_1193_p1;
wire   [287:0] p_cast95_fu_1168_p1;
wire   [287:0] p_cast98_cast_cast_fu_1197_p1;
wire   [28:0] tmp_6_fu_1208_p1;
wire  signed [28:0] grp_fu_1570_p2;
wire   [28:0] tmp_130_fu_1217_p1;
wire   [7:0] tmp_130_fu_1217_p4;
wire   [12:0] p_shl5_fu_1226_p3;
wire   [13:0] p_shl5_cast_fu_1234_p1;
wire   [13:0] p_neg6_fu_1238_p2;
wire   [9:0] p_shl7_fu_1248_p3;
wire  signed [14:0] p_neg6_cast_fu_1244_p1;
wire   [14:0] p_shl7_cast_fu_1256_p1;
wire   [14:0] empty_97_fu_1260_p2;
wire   [14:0] p_cast68_fu_1161_p1;
wire   [31:0] empty_96_fu_1275_p1;
wire  signed [35:0] p_cast101_fu_1287_p1;
wire   [17:0] tmp_131_fu_1297_p3;
wire  signed [66:0] p_cast102_cast_fu_1304_p1;
wire   [287:0] p_cast99_fu_1279_p1;
wire   [287:0] p_cast102_cast_cast_fu_1308_p1;
wire   [28:0] tmp_7_fu_1319_p1;
wire  signed [28:0] grp_fu_1578_p2;
wire   [28:0] tmp_132_fu_1328_p1;
wire   [7:0] tmp_132_fu_1328_p4;
wire   [12:0] p_shl2_fu_1337_p3;
wire   [13:0] p_shl2_cast_fu_1345_p1;
wire   [13:0] p_neg3_fu_1349_p2;
wire   [9:0] p_shl4_fu_1359_p3;
wire  signed [14:0] p_neg3_cast_fu_1355_p1;
wire   [14:0] p_shl4_cast_fu_1367_p1;
wire   [14:0] empty_102_fu_1371_p2;
wire   [14:0] p_cast73_fu_1272_p1;
wire   [31:0] empty_101_fu_1386_p1;
wire  signed [35:0] p_cast105_fu_1398_p1;
wire   [17:0] tmp_133_fu_1408_p3;
wire  signed [66:0] p_cast106_cast_fu_1415_p1;
wire   [287:0] p_cast103_fu_1390_p1;
wire   [287:0] p_cast106_cast_cast_fu_1419_p1;
wire   [28:0] tmp_8_fu_1430_p1;
wire  signed [28:0] grp_fu_1586_p2;
wire   [28:0] tmp_134_fu_1439_p1;
wire   [7:0] tmp_134_fu_1439_p4;
wire   [12:0] p_shl_fu_1448_p3;
wire   [13:0] p_shl_cast_fu_1456_p1;
wire   [13:0] p_neg_fu_1460_p2;
wire   [9:0] p_shl1_fu_1470_p3;
wire  signed [14:0] p_neg_cast_fu_1466_p1;
wire   [14:0] p_shl1_cast_fu_1478_p1;
wire   [14:0] empty_107_fu_1482_p2;
wire   [14:0] p_cast78_fu_1383_p1;
wire   [31:0] empty_106_fu_1494_p1;
wire  signed [35:0] p_cast109_fu_1506_p1;
wire   [17:0] tmp_135_fu_1516_p3;
wire  signed [66:0] p_cast110_cast_fu_1523_p1;
wire   [287:0] p_cast107_fu_1498_p1;
wire   [287:0] p_cast110_cast_cast_fu_1527_p1;
wire   [13:0] grp_fu_1538_p0;
wire   [14:0] grp_fu_1538_p1;
wire   [13:0] grp_fu_1546_p0;
wire   [14:0] grp_fu_1546_p1;
wire   [13:0] grp_fu_1554_p0;
wire   [14:0] grp_fu_1554_p1;
wire   [13:0] grp_fu_1562_p0;
wire   [14:0] grp_fu_1562_p1;
wire   [13:0] grp_fu_1570_p0;
wire   [14:0] grp_fu_1570_p1;
wire   [13:0] grp_fu_1578_p0;
wire   [14:0] grp_fu_1578_p1;
wire   [13:0] grp_fu_1586_p0;
wire   [14:0] grp_fu_1586_p1;
reg   [20:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
reg    ap_ST_fsm_state20_blk;
reg    ap_predicate_op341_write_state21;
reg    ap_block_state21;
reg    ap_block_state21_io;
reg    ap_ST_fsm_state21_blk;
wire    regslice_forward_failedTask_U_apdone_blk;
reg    failedTask_ap_vld_int_regslice;
wire    failedTask_ap_ack_int_regslice;
wire    regslice_forward_failedTask_U_vld_out;
wire   [28:0] grp_fu_1538_p00;
wire   [28:0] grp_fu_1546_p00;
wire   [28:0] grp_fu_1554_p00;
wire   [28:0] grp_fu_1562_p00;
wire   [28:0] grp_fu_1570_p00;
wire   [28:0] grp_fu_1578_p00;
wire   [28:0] grp_fu_1586_p00;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 21'd1;
end

run_handle_outcome_failedTaskExecutionIds_V_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
failedTaskExecutionIds_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(failedTaskExecutionIds_V_address0),
    .ce0(failedTaskExecutionIds_V_ce0),
    .we0(failedTaskExecutionIds_V_we0),
    .d0(tmp_executionId_V_reg_1680),
    .q0(failedTaskExecutionIds_V_q0)
);

run_handle_outcome_in_AOV_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
in_AOV_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(in_AOV_address0),
    .ce0(in_AOV_ce0),
    .we0(in_AOV_we0),
    .d0(in_AOV_d0),
    .q0(in_AOV_q0),
    .address1(in_AOV_address1),
    .ce1(in_AOV_ce1),
    .we1(in_AOV_we1),
    .d1(in_AOV_d1)
);

run_handle_outcome_outcome_AOV_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
outcome_AOV_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(outcome_AOV_address0),
    .ce0(outcome_AOV_ce0),
    .we0(outcome_AOV_we0),
    .d0(in_AOV_q0),
    .q0(outcome_AOV_q0)
);

run_mul_mul_14ns_15ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
mul_mul_14ns_15ns_29_4_1_U93(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1538_p0),
    .din1(grp_fu_1538_p1),
    .ce(1'b1),
    .dout(grp_fu_1538_p2)
);

run_mul_mul_14ns_15ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
mul_mul_14ns_15ns_29_4_1_U94(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1546_p0),
    .din1(grp_fu_1546_p1),
    .ce(1'b1),
    .dout(grp_fu_1546_p2)
);

run_mul_mul_14ns_15ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
mul_mul_14ns_15ns_29_4_1_U95(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1554_p0),
    .din1(grp_fu_1554_p1),
    .ce(1'b1),
    .dout(grp_fu_1554_p2)
);

run_mul_mul_14ns_15ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
mul_mul_14ns_15ns_29_4_1_U96(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1562_p0),
    .din1(grp_fu_1562_p1),
    .ce(1'b1),
    .dout(grp_fu_1562_p2)
);

run_mul_mul_14ns_15ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
mul_mul_14ns_15ns_29_4_1_U97(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1570_p0),
    .din1(grp_fu_1570_p1),
    .ce(1'b1),
    .dout(grp_fu_1570_p2)
);

run_mul_mul_14ns_15ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
mul_mul_14ns_15ns_29_4_1_U98(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1578_p0),
    .din1(grp_fu_1578_p1),
    .ce(1'b1),
    .dout(grp_fu_1578_p2)
);

run_mul_mul_14ns_15ns_29_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 14 ),
    .din1_WIDTH( 15 ),
    .dout_WIDTH( 29 ))
mul_mul_14ns_15ns_29_4_1_U99(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1586_p0),
    .din1(grp_fu_1586_p1),
    .ce(1'b1),
    .dout(grp_fu_1586_p2)
);

run_regslice_forward #(
    .DataWidth( 16 ))
regslice_forward_failedTask_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(16'd0),
    .vld_in(failedTask_ap_vld_int_regslice),
    .ack_in(failedTask_ap_ack_int_regslice),
    .data_out(failedTask),
    .vld_out(regslice_forward_failedTask_U_vld_out),
    .ack_out(failedTask_ap_ack),
    .apdone_blk(regslice_forward_failedTask_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        loop_index20_reg_450 <= empty_reg_1734;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        loop_index20_reg_450 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state9) & ((icmp_ln454_reg_1756 == 1'd1) | (icmp_ln1065_fu_630_p2 == 1'd0)))) begin
        add_ln455_reg_1769[13 : 2] <= add_ln455_fu_668_p2[13 : 2];
        empty_67_reg_1779[13 : 2] <= empty_67_fu_674_p2[13 : 2];
        empty_75_reg_1784 <= empty_75_fu_680_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        destStream_read_reg_1674 <= destStream_dout;
        in_fault_reg_1691 <= destStream_dout[32'd40];
        tmp_executionId_V_reg_1680 <= {{destStream_dout[15:8]}};
        tmp_taskId_V_reg_1686 <= {{destStream_dout[35:32]}};
        trunc_ln145_1_reg_1716 <= {{destStream_dout[264:233]}};
        trunc_ln145_2_reg_1721 <= {{destStream_dout[296:265]}};
        trunc_ln145_7_reg_1696 <= {{destStream_dout[136:105]}};
        trunc_ln145_8_reg_1701 <= {{destStream_dout[168:137]}};
        trunc_ln145_9_reg_1706 <= {{destStream_dout[200:169]}};
        trunc_ln145_s_reg_1711 <= {{destStream_dout[232:201]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        empty_103_reg_1999[14 : 2] <= empty_103_fu_1377_p2[14 : 2];
        tmp_7_reg_1994 <= {{tmp_7_fu_1319_p1[28:20]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        empty_108_reg_2025[14 : 2] <= empty_108_fu_1488_p2[14 : 2];
        tmp_8_reg_2020 <= {{tmp_8_fu_1430_p1[28:20]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        empty_68_reg_1794[13 : 2] <= empty_68_fu_691_p2[13 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        empty_69_reg_1814[13 : 2] <= empty_69_fu_716_p2[13 : 2];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        empty_70_reg_1824[13 : 2] <= empty_70_fu_728_p2[13 : 2];
        empty_78_reg_1834[14 : 2] <= empty_78_fu_791_p2[14 : 2];
        tmp_2_reg_1829 <= {{tmp_2_fu_733_p1[28:20]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        empty_71_reg_1845[13 : 2] <= empty_71_fu_804_p2[13 : 2];
        empty_83_reg_1870[14 : 2] <= empty_83_fu_911_p2[14 : 2];
        tmp_3_reg_1865 <= {{tmp_3_fu_853_p1[28:20]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        empty_72_reg_1881[13 : 2] <= empty_72_fu_924_p2[13 : 2];
        empty_88_reg_1906[14 : 2] <= empty_88_fu_1031_p2[14 : 2];
        tmp_4_reg_1901 <= {{tmp_4_fu_973_p1[28:20]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        empty_73_reg_1917[13 : 2] <= empty_73_fu_1044_p2[13 : 2];
        empty_93_reg_1942[14 : 2] <= empty_93_fu_1151_p2[14 : 2];
        tmp_5_reg_1937 <= {{tmp_5_fu_1093_p1[28:20]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        empty_98_reg_1973[14 : 2] <= empty_98_fu_1266_p2[14 : 2];
        tmp_6_reg_1968 <= {{tmp_6_fu_1208_p1[28:20]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        empty_reg_1734 <= empty_fu_614_p2;
        loop_index20_cast_reg_1726[3 : 0] <= loop_index20_cast_fu_603_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (exitcond6_fu_608_p2 == 1'd1))) begin
        errorInTask_addr_reg_1751 <= zext_ln587_fu_620_p1;
        zext_ln587_reg_1744[3 : 0] <= zext_ln587_fu_620_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln454_reg_1756 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        icmp_ln1065_reg_1765 <= icmp_ln1065_fu_630_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        icmp_ln454_reg_1756 <= icmp_ln454_fu_624_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_block_state20_io) | ((in_fault_reg_1691 == 1'd1) & (failedTask_ap_ack_int_regslice == 1'b0)))) begin
        ap_ST_fsm_state20_blk = 1'b1;
    end else begin
        ap_ST_fsm_state20_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_block_state21_io) | ((failedTask_ap_ack_int_regslice == 1'b0) & (ap_predicate_op341_write_state21 == 1'b1)))) begin
        ap_ST_fsm_state21_blk = 1'b1;
    end else begin
        ap_ST_fsm_state21_blk = 1'b0;
    end
end

always @ (*) begin
    if ((destStream_empty_n == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        destStream_blk_n = destStream_empty_n;
    end else begin
        destStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((destStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        destStream_read = 1'b1;
    end else begin
        destStream_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        errorInTask_address0 = errorInTask_addr_reg_1751;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        errorInTask_address0 = zext_ln587_fu_620_p1;
    end else begin
        errorInTask_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state6))) begin
        errorInTask_ce0 = 1'b1;
    end else begin
        errorInTask_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) & ((icmp_ln454_reg_1756 == 1'd1) | (icmp_ln1065_fu_630_p2 == 1'd0)))) begin
        errorInTask_we0 = 1'b1;
    end else begin
        errorInTask_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state20)) begin
        failedTaskExecutionIds_V_address0 = failedTaskExecutionIds_V_addr_1_gep_fu_442_p3;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        failedTaskExecutionIds_V_address0 = zext_ln587_reg_1744;
    end else begin
        failedTaskExecutionIds_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state8) | (~((1'b1 == ap_block_state20_io) | ((in_fault_reg_1691 == 1'd1) & (failedTask_ap_ack_int_regslice == 1'b0))) & (1'b1 == ap_CS_fsm_state20)))) begin
        failedTaskExecutionIds_V_ce0 = 1'b1;
    end else begin
        failedTaskExecutionIds_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state20_io) | ((in_fault_reg_1691 == 1'd1) & (failedTask_ap_ack_int_regslice == 1'b0))) & (in_fault_reg_1691 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        failedTaskExecutionIds_V_we0 = 1'b1;
    end else begin
        failedTaskExecutionIds_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state20_io) | ((in_fault_reg_1691 == 1'd1) & (failedTask_ap_ack_int_regslice == 1'b0))) & (in_fault_reg_1691 == 1'd1) & (1'b1 == ap_CS_fsm_state20))) begin
        failedTask_ap_vld_int_regslice = 1'b1;
    end else begin
        failedTask_ap_vld_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state21) & (((icmp_ln454_reg_1756 == 1'd1) & (in_fault_reg_1691 == 1'd1)) | ((icmp_ln1065_reg_1765 == 1'd0) & (in_fault_reg_1691 == 1'd1)))) | ((in_fault_reg_1691 == 1'd1) & (1'b1 == ap_CS_fsm_state20)))) begin
        failedTask_blk_n = failedTask_ap_ack_int_regslice;
    end else begin
        failedTask_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        in_AOV_address0 = loop_index20_cast_fu_603_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        in_AOV_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        in_AOV_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        in_AOV_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        in_AOV_address0 = 64'd1;
    end else begin
        in_AOV_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        in_AOV_address1 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        in_AOV_address1 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        in_AOV_address1 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        in_AOV_address1 = 64'd0;
    end else begin
        in_AOV_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state6) | ((destStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        in_AOV_ce0 = 1'b1;
    end else begin
        in_AOV_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | ((destStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        in_AOV_ce1 = 1'b1;
    end else begin
        in_AOV_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        in_AOV_d0 = bitcast_ln145_7_fu_599_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        in_AOV_d0 = bitcast_ln145_5_fu_591_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        in_AOV_d0 = bitcast_ln145_3_fu_583_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        in_AOV_d0 = bitcast_ln145_1_fu_574_p1;
    end else begin
        in_AOV_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        in_AOV_d1 = bitcast_ln145_6_fu_595_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        in_AOV_d1 = bitcast_ln145_4_fu_587_p1;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        in_AOV_d1 = bitcast_ln145_2_fu_579_p1;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        in_AOV_d1 = bitcast_ln145_fu_569_p1;
    end else begin
        in_AOV_d1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | ((destStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        in_AOV_we0 = 1'b1;
    end else begin
        in_AOV_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3) | (1'b1 == ap_CS_fsm_state5) | ((destStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        in_AOV_we1 = 1'b1;
    end else begin
        in_AOV_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        outcomeInRam_address0 = p_cast108_fu_1502_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        outcomeInRam_address0 = p_cast104_fu_1394_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        outcomeInRam_address0 = p_cast100_fu_1283_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        outcomeInRam_address0 = p_cast96_fu_1172_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        outcomeInRam_address0 = p_cast92_fu_1057_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        outcomeInRam_address0 = p_cast88_fu_937_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        outcomeInRam_address0 = p_cast84_fu_817_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        outcomeInRam_address0 = zext_ln587_reg_1744;
    end else begin
        outcomeInRam_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (~((1'b1 == ap_block_state20_io) | ((in_fault_reg_1691 == 1'd1) & (failedTask_ap_ack_int_regslice == 1'b0))) & (1'b1 == ap_CS_fsm_state20)))) begin
        outcomeInRam_ce0 = 1'b1;
    end else begin
        outcomeInRam_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        outcomeInRam_d0 = empty_110_fu_1531_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        outcomeInRam_d0 = empty_105_fu_1423_p2;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        outcomeInRam_d0 = empty_100_fu_1312_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        outcomeInRam_d0 = empty_95_fu_1201_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        outcomeInRam_d0 = empty_90_fu_1086_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        outcomeInRam_d0 = empty_85_fu_966_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        outcomeInRam_d0 = empty_80_fu_846_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        outcomeInRam_d0 = p_cast82_fu_707_p1;
    end else begin
        outcomeInRam_d0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        outcomeInRam_we0 = empty_109_fu_1509_p2;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        outcomeInRam_we0 = empty_104_fu_1401_p2;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        outcomeInRam_we0 = empty_99_fu_1290_p2;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        outcomeInRam_we0 = empty_94_fu_1179_p2;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        outcomeInRam_we0 = empty_89_fu_1064_p2;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        outcomeInRam_we0 = empty_84_fu_944_p2;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        outcomeInRam_we0 = empty_79_fu_824_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        outcomeInRam_we0 = 36'd255;
    end else begin
        outcomeInRam_we0 = 36'd0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        outcome_AOV_address0 = 64'd7;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        outcome_AOV_address0 = 64'd6;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        outcome_AOV_address0 = 64'd5;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        outcome_AOV_address0 = 64'd4;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        outcome_AOV_address0 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        outcome_AOV_address0 = 64'd2;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        outcome_AOV_address0 = 64'd1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        outcome_AOV_address0 = 64'd0;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        outcome_AOV_address0 = loop_index20_cast_reg_1726;
    end else begin
        outcome_AOV_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state9))) begin
        outcome_AOV_ce0 = 1'b1;
    end else begin
        outcome_AOV_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        outcome_AOV_we0 = 1'b1;
    end else begin
        outcome_AOV_we0 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((destStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((1'b1 == ap_CS_fsm_state6) & (exitcond6_fu_608_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((icmp_ln454_reg_1756 == 1'd0) & (1'b1 == ap_CS_fsm_state9) & (icmp_ln1065_fu_630_p2 == 1'd1))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if ((~((1'b1 == ap_block_state20_io) | ((in_fault_reg_1691 == 1'd1) & (failedTask_ap_ack_int_regslice == 1'b0))) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        ap_ST_fsm_state21 : begin
            if ((~((1'b1 == ap_block_state21_io) | ((failedTask_ap_ack_int_regslice == 1'b0) & (ap_predicate_op341_write_state21 == 1'b1))) & (1'b1 == ap_CS_fsm_state21))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state21;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln455_fu_668_p2 = (zext_ln455_fu_652_p1 + zext_ln455_1_fu_664_p1);

assign and_ln455_1_fu_656_p3 = {{tmp_fu_635_p4}, {2'd0}};

assign and_ln_fu_644_p3 = {{tmp_fu_635_p4}, {5'd0}};

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state20 = ((in_fault_reg_1691 == 1'd1) & (failedTask_ap_ack_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state20_io = ((in_fault_reg_1691 == 1'd1) & (failedTask_ap_ack_int_regslice == 1'b0));
end

always @ (*) begin
    ap_block_state21 = ((failedTask_ap_ack_int_regslice == 1'b0) & (ap_predicate_op341_write_state21 == 1'b1));
end

always @ (*) begin
    ap_block_state21_io = ((failedTask_ap_ack_int_regslice == 1'b0) & (ap_predicate_op341_write_state21 == 1'b1));
end

assign ap_done = ap_done_reg;

always @ (*) begin
    ap_predicate_op341_write_state21 = (((icmp_ln454_reg_1756 == 1'd1) & (in_fault_reg_1691 == 1'd1)) | ((icmp_ln1065_reg_1765 == 1'd0) & (in_fault_reg_1691 == 1'd1)));
end

assign ap_ready = 1'b0;

assign bitcast_ln145_1_fu_574_p1 = trunc_ln145_6_fu_499_p4;

assign bitcast_ln145_2_fu_579_p1 = trunc_ln145_7_reg_1696;

assign bitcast_ln145_3_fu_583_p1 = trunc_ln145_8_reg_1701;

assign bitcast_ln145_4_fu_587_p1 = trunc_ln145_9_reg_1706;

assign bitcast_ln145_5_fu_591_p1 = trunc_ln145_s_reg_1711;

assign bitcast_ln145_6_fu_595_p1 = trunc_ln145_1_reg_1716;

assign bitcast_ln145_7_fu_599_p1 = trunc_ln145_2_reg_1721;

assign bitcast_ln145_fu_569_p1 = trunc_ln145_5_fu_489_p4;

assign empty_100_fu_1312_p2 = p_cast99_fu_1279_p1 << p_cast102_cast_cast_fu_1308_p1;

assign empty_101_fu_1386_p1 = outcome_AOV_q0;

assign empty_102_fu_1371_p2 = ($signed(p_neg3_cast_fu_1355_p1) - $signed(p_shl4_cast_fu_1367_p1));

assign empty_103_fu_1377_p2 = (empty_102_fu_1371_p2 + p_cast73_fu_1272_p1);

assign empty_104_fu_1401_p2 = 36'd15 << p_cast105_fu_1398_p1;

assign empty_105_fu_1423_p2 = p_cast103_fu_1390_p1 << p_cast106_cast_cast_fu_1419_p1;

assign empty_106_fu_1494_p1 = outcome_AOV_q0;

assign empty_107_fu_1482_p2 = ($signed(p_neg_cast_fu_1466_p1) - $signed(p_shl1_cast_fu_1478_p1));

assign empty_108_fu_1488_p2 = (empty_107_fu_1482_p2 + p_cast78_fu_1383_p1);

assign empty_109_fu_1509_p2 = 36'd15 << p_cast109_fu_1506_p1;

assign empty_110_fu_1531_p2 = p_cast107_fu_1498_p1 << p_cast110_cast_cast_fu_1527_p1;

assign empty_67_fu_674_p2 = (add_ln455_fu_668_p2 + 14'd8);

assign empty_68_fu_691_p2 = (add_ln455_reg_1769 + 14'd12);

assign empty_69_fu_716_p2 = (add_ln455_reg_1769 + 14'd16);

assign empty_70_fu_728_p2 = (add_ln455_reg_1769 + 14'd20);

assign empty_71_fu_804_p2 = (add_ln455_reg_1769 + 14'd24);

assign empty_72_fu_924_p2 = (add_ln455_reg_1769 + 14'd28);

assign empty_73_fu_1044_p2 = (add_ln455_reg_1769 + 14'd32);

assign empty_74_fu_696_p1 = outcome_AOV_q0;

assign empty_75_fu_680_p1 = destStream_read_reg_1674[31:0];

assign empty_76_fu_809_p1 = outcome_AOV_q0;

assign empty_77_fu_785_p2 = ($signed(p_neg18_cast_fu_769_p1) - $signed(p_shl19_cast_fu_781_p1));

assign empty_78_fu_791_p2 = (empty_77_fu_785_p2 + p_cast48_fu_725_p1);

assign empty_79_fu_824_p2 = 36'd15 << p_cast85_fu_821_p1;

assign empty_80_fu_846_p2 = p_cast83_fu_813_p1 << p_cast86_cast_cast_fu_842_p1;

assign empty_81_fu_929_p1 = outcome_AOV_q0;

assign empty_82_fu_905_p2 = ($signed(p_neg15_cast_fu_889_p1) - $signed(p_shl16_cast_fu_901_p1));

assign empty_83_fu_911_p2 = (empty_82_fu_905_p2 + p_cast53_fu_801_p1);

assign empty_84_fu_944_p2 = 36'd15 << p_cast89_fu_941_p1;

assign empty_85_fu_966_p2 = p_cast87_fu_933_p1 << p_cast90_cast_cast_fu_962_p1;

assign empty_86_fu_1049_p1 = outcome_AOV_q0;

assign empty_87_fu_1025_p2 = ($signed(p_neg12_cast_fu_1009_p1) - $signed(p_shl13_cast_fu_1021_p1));

assign empty_88_fu_1031_p2 = (empty_87_fu_1025_p2 + p_cast58_fu_921_p1);

assign empty_89_fu_1064_p2 = 36'd15 << p_cast93_fu_1061_p1;

assign empty_90_fu_1086_p2 = p_cast91_fu_1053_p1 << p_cast94_cast_cast_fu_1082_p1;

assign empty_91_fu_1164_p1 = outcome_AOV_q0;

assign empty_92_fu_1145_p2 = ($signed(p_neg9_cast_fu_1129_p1) - $signed(p_shl10_cast_fu_1141_p1));

assign empty_93_fu_1151_p2 = (empty_92_fu_1145_p2 + p_cast63_fu_1041_p1);

assign empty_94_fu_1179_p2 = 36'd15 << p_cast97_fu_1176_p1;

assign empty_95_fu_1201_p2 = p_cast95_fu_1168_p1 << p_cast98_cast_cast_fu_1197_p1;

assign empty_96_fu_1275_p1 = outcome_AOV_q0;

assign empty_97_fu_1260_p2 = ($signed(p_neg6_cast_fu_1244_p1) - $signed(p_shl7_cast_fu_1256_p1));

assign empty_98_fu_1266_p2 = (empty_97_fu_1260_p2 + p_cast68_fu_1161_p1);

assign empty_99_fu_1290_p2 = 36'd15 << p_cast101_fu_1287_p1;

assign empty_fu_614_p2 = (loop_index20_reg_450 + 4'd1);

assign errorInTask_d0 = in_fault_reg_1691;

assign exitcond6_fu_608_p2 = ((loop_index20_reg_450 == 4'd8) ? 1'b1 : 1'b0);

assign failedTaskExecutionIds_V_addr_1_gep_fu_442_p3 = zext_ln587_reg_1744;

assign failedTask_ap_vld = regslice_forward_failedTask_U_vld_out;

assign grp_fu_1538_p0 = grp_fu_1538_p00;

assign grp_fu_1538_p00 = empty_67_fu_674_p2;

assign grp_fu_1538_p1 = 29'd29128;

assign grp_fu_1546_p0 = grp_fu_1546_p00;

assign grp_fu_1546_p00 = empty_68_fu_691_p2;

assign grp_fu_1546_p1 = 29'd29128;

assign grp_fu_1554_p0 = grp_fu_1554_p00;

assign grp_fu_1554_p00 = empty_69_fu_716_p2;

assign grp_fu_1554_p1 = 29'd29128;

assign grp_fu_1562_p0 = grp_fu_1562_p00;

assign grp_fu_1562_p00 = empty_70_fu_728_p2;

assign grp_fu_1562_p1 = 29'd29128;

assign grp_fu_1570_p0 = grp_fu_1570_p00;

assign grp_fu_1570_p00 = empty_71_fu_804_p2;

assign grp_fu_1570_p1 = 29'd29128;

assign grp_fu_1578_p0 = grp_fu_1578_p00;

assign grp_fu_1578_p00 = empty_72_fu_924_p2;

assign grp_fu_1578_p1 = 29'd29128;

assign grp_fu_1586_p0 = grp_fu_1586_p00;

assign grp_fu_1586_p00 = empty_73_fu_1044_p2;

assign grp_fu_1586_p1 = 29'd29128;

assign icmp_ln1065_fu_630_p2 = ((failedTaskExecutionIds_V_q0 == tmp_executionId_V_reg_1680) ? 1'b1 : 1'b0);

assign icmp_ln454_fu_624_p2 = ((errorInTask_q0 == 8'd0) ? 1'b1 : 1'b0);

assign loop_index20_cast_fu_603_p1 = loop_index20_reg_450;

assign p_cast100_fu_1283_p1 = tmp_6_reg_1968;

assign p_cast101_fu_1287_p1 = empty_98_reg_1973;

assign p_cast102_cast_cast_fu_1308_p1 = $unsigned(p_cast102_cast_fu_1304_p1);

assign p_cast102_cast_fu_1304_p1 = $signed(tmp_131_fu_1297_p3);

assign p_cast103_fu_1390_p1 = empty_101_fu_1386_p1;

assign p_cast104_fu_1394_p1 = tmp_7_reg_1994;

assign p_cast105_fu_1398_p1 = empty_103_reg_1999;

assign p_cast106_cast_cast_fu_1419_p1 = $unsigned(p_cast106_cast_fu_1415_p1);

assign p_cast106_cast_fu_1415_p1 = $signed(tmp_133_fu_1408_p3);

assign p_cast107_fu_1498_p1 = empty_106_fu_1494_p1;

assign p_cast108_fu_1502_p1 = tmp_8_reg_2020;

assign p_cast109_fu_1506_p1 = empty_108_reg_2025;

assign p_cast110_cast_cast_fu_1527_p1 = $unsigned(p_cast110_cast_fu_1523_p1);

assign p_cast110_cast_fu_1523_p1 = $signed(tmp_135_fu_1516_p3);

assign p_cast48_fu_725_p1 = empty_67_reg_1779;

assign p_cast53_fu_801_p1 = empty_68_reg_1794;

assign p_cast58_fu_921_p1 = empty_69_reg_1814;

assign p_cast63_fu_1041_p1 = empty_70_reg_1824;

assign p_cast68_fu_1161_p1 = empty_71_reg_1845;

assign p_cast73_fu_1272_p1 = empty_72_reg_1881;

assign p_cast78_fu_1383_p1 = empty_73_reg_1917;

assign p_cast82_fu_707_p1 = tmp_s_fu_700_p3;

assign p_cast83_fu_813_p1 = empty_76_fu_809_p1;

assign p_cast84_fu_817_p1 = tmp_2_reg_1829;

assign p_cast85_fu_821_p1 = empty_78_reg_1834;

assign p_cast86_cast_cast_fu_842_p1 = $unsigned(p_cast86_cast_fu_838_p1);

assign p_cast86_cast_fu_838_p1 = $signed(tmp_123_fu_831_p3);

assign p_cast87_fu_933_p1 = empty_81_fu_929_p1;

assign p_cast88_fu_937_p1 = tmp_3_reg_1865;

assign p_cast89_fu_941_p1 = empty_83_reg_1870;

assign p_cast90_cast_cast_fu_962_p1 = $unsigned(p_cast90_cast_fu_958_p1);

assign p_cast90_cast_fu_958_p1 = $signed(tmp_125_fu_951_p3);

assign p_cast91_fu_1053_p1 = empty_86_fu_1049_p1;

assign p_cast92_fu_1057_p1 = tmp_4_reg_1901;

assign p_cast93_fu_1061_p1 = empty_88_reg_1906;

assign p_cast94_cast_cast_fu_1082_p1 = $unsigned(p_cast94_cast_fu_1078_p1);

assign p_cast94_cast_fu_1078_p1 = $signed(tmp_127_fu_1071_p3);

assign p_cast95_fu_1168_p1 = empty_91_fu_1164_p1;

assign p_cast96_fu_1172_p1 = tmp_5_reg_1937;

assign p_cast97_fu_1176_p1 = empty_93_reg_1942;

assign p_cast98_cast_cast_fu_1197_p1 = $unsigned(p_cast98_cast_fu_1193_p1);

assign p_cast98_cast_fu_1193_p1 = $signed(tmp_129_fu_1186_p3);

assign p_cast99_fu_1279_p1 = empty_96_fu_1275_p1;

assign p_neg12_cast_fu_1009_p1 = $signed(p_neg12_fu_1003_p2);

assign p_neg12_fu_1003_p2 = (14'd0 - p_shl11_cast_fu_999_p1);

assign p_neg15_cast_fu_889_p1 = $signed(p_neg15_fu_883_p2);

assign p_neg15_fu_883_p2 = (14'd0 - p_shl14_cast_fu_879_p1);

assign p_neg18_cast_fu_769_p1 = $signed(p_neg18_fu_763_p2);

assign p_neg18_fu_763_p2 = (14'd0 - p_shl17_cast_fu_759_p1);

assign p_neg3_cast_fu_1355_p1 = $signed(p_neg3_fu_1349_p2);

assign p_neg3_fu_1349_p2 = (14'd0 - p_shl2_cast_fu_1345_p1);

assign p_neg6_cast_fu_1244_p1 = $signed(p_neg6_fu_1238_p2);

assign p_neg6_fu_1238_p2 = (14'd0 - p_shl5_cast_fu_1234_p1);

assign p_neg9_cast_fu_1129_p1 = $signed(p_neg9_fu_1123_p2);

assign p_neg9_fu_1123_p2 = (14'd0 - p_shl8_cast_fu_1119_p1);

assign p_neg_cast_fu_1466_p1 = $signed(p_neg_fu_1460_p2);

assign p_neg_fu_1460_p2 = (14'd0 - p_shl_cast_fu_1456_p1);

assign p_shl10_cast_fu_1141_p1 = p_shl10_fu_1133_p3;

assign p_shl10_fu_1133_p3 = {{tmp_128_fu_1102_p4}, {2'd0}};

assign p_shl11_cast_fu_999_p1 = p_shl11_fu_991_p3;

assign p_shl11_fu_991_p3 = {{tmp_126_fu_982_p4}, {5'd0}};

assign p_shl12_fu_893_p3 = {{tmp_124_fu_862_p4}, {2'd0}};

assign p_shl13_cast_fu_1021_p1 = p_shl13_fu_1013_p3;

assign p_shl13_fu_1013_p3 = {{tmp_126_fu_982_p4}, {2'd0}};

assign p_shl14_cast_fu_879_p1 = p_shl9_fu_871_p3;

assign p_shl16_cast_fu_901_p1 = p_shl12_fu_893_p3;

assign p_shl17_cast_fu_759_p1 = p_shl3_fu_751_p3;

assign p_shl19_cast_fu_781_p1 = p_shl6_fu_773_p3;

assign p_shl1_cast_fu_1478_p1 = p_shl1_fu_1470_p3;

assign p_shl1_fu_1470_p3 = {{tmp_134_fu_1439_p4}, {2'd0}};

assign p_shl2_cast_fu_1345_p1 = p_shl2_fu_1337_p3;

assign p_shl2_fu_1337_p3 = {{tmp_132_fu_1328_p4}, {5'd0}};

assign p_shl3_fu_751_p3 = {{tmp_122_fu_742_p4}, {5'd0}};

assign p_shl4_cast_fu_1367_p1 = p_shl4_fu_1359_p3;

assign p_shl4_fu_1359_p3 = {{tmp_132_fu_1328_p4}, {2'd0}};

assign p_shl5_cast_fu_1234_p1 = p_shl5_fu_1226_p3;

assign p_shl5_fu_1226_p3 = {{tmp_130_fu_1217_p4}, {5'd0}};

assign p_shl6_fu_773_p3 = {{tmp_122_fu_742_p4}, {2'd0}};

assign p_shl7_cast_fu_1256_p1 = p_shl7_fu_1248_p3;

assign p_shl7_fu_1248_p3 = {{tmp_130_fu_1217_p4}, {2'd0}};

assign p_shl8_cast_fu_1119_p1 = p_shl8_fu_1111_p3;

assign p_shl8_fu_1111_p3 = {{tmp_128_fu_1102_p4}, {5'd0}};

assign p_shl9_fu_871_p3 = {{tmp_124_fu_862_p4}, {5'd0}};

assign p_shl_cast_fu_1456_p1 = p_shl_fu_1448_p3;

assign p_shl_fu_1448_p3 = {{tmp_134_fu_1439_p4}, {5'd0}};

assign tmp_122_fu_742_p1 = grp_fu_1538_p2;

assign tmp_122_fu_742_p4 = {{tmp_122_fu_742_p1[27:20]}};

assign tmp_123_fu_831_p3 = {{empty_78_reg_1834}, {3'd0}};

assign tmp_124_fu_862_p1 = grp_fu_1546_p2;

assign tmp_124_fu_862_p4 = {{tmp_124_fu_862_p1[27:20]}};

assign tmp_125_fu_951_p3 = {{empty_83_reg_1870}, {3'd0}};

assign tmp_126_fu_982_p1 = grp_fu_1554_p2;

assign tmp_126_fu_982_p4 = {{tmp_126_fu_982_p1[27:20]}};

assign tmp_127_fu_1071_p3 = {{empty_88_reg_1906}, {3'd0}};

assign tmp_128_fu_1102_p1 = grp_fu_1562_p2;

assign tmp_128_fu_1102_p4 = {{tmp_128_fu_1102_p1[27:20]}};

assign tmp_129_fu_1186_p3 = {{empty_93_reg_1942}, {3'd0}};

assign tmp_130_fu_1217_p1 = grp_fu_1570_p2;

assign tmp_130_fu_1217_p4 = {{tmp_130_fu_1217_p1[27:20]}};

assign tmp_131_fu_1297_p3 = {{empty_98_reg_1973}, {3'd0}};

assign tmp_132_fu_1328_p1 = grp_fu_1578_p2;

assign tmp_132_fu_1328_p4 = {{tmp_132_fu_1328_p1[27:20]}};

assign tmp_133_fu_1408_p3 = {{empty_103_reg_1999}, {3'd0}};

assign tmp_134_fu_1439_p1 = grp_fu_1586_p2;

assign tmp_134_fu_1439_p4 = {{tmp_134_fu_1439_p1[27:20]}};

assign tmp_135_fu_1516_p3 = {{empty_108_reg_2025}, {3'd0}};

assign tmp_2_fu_733_p1 = grp_fu_1538_p2;

assign tmp_3_fu_853_p1 = grp_fu_1546_p2;

assign tmp_4_fu_973_p1 = grp_fu_1554_p2;

assign tmp_5_fu_1093_p1 = grp_fu_1562_p2;

assign tmp_6_fu_1208_p1 = grp_fu_1570_p2;

assign tmp_7_fu_1319_p1 = grp_fu_1578_p2;

assign tmp_8_fu_1430_p1 = grp_fu_1586_p2;

assign tmp_fu_635_p4 = {{destStream_read_reg_1674[39:32]}};

assign tmp_s_fu_700_p3 = {{empty_74_fu_696_p1}, {empty_75_reg_1784}};

assign trunc_ln145_5_fu_489_p4 = {{destStream_dout[72:41]}};

assign trunc_ln145_6_fu_499_p4 = {{destStream_dout[104:73]}};

assign zext_ln455_1_fu_664_p1 = and_ln455_1_fu_656_p3;

assign zext_ln455_fu_652_p1 = and_ln_fu_644_p3;

assign zext_ln587_fu_620_p1 = tmp_taskId_V_reg_1686;

always @ (posedge ap_clk) begin
    ap_done_reg <= 1'b0;
    loop_index20_cast_reg_1726[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    zext_ln587_reg_1744[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
    add_ln455_reg_1769[1:0] <= 2'b00;
    empty_67_reg_1779[1:0] <= 2'b00;
    empty_68_reg_1794[1:0] <= 2'b00;
    empty_69_reg_1814[1:0] <= 2'b00;
    empty_70_reg_1824[1:0] <= 2'b00;
    empty_78_reg_1834[1:0] <= 2'b00;
    empty_71_reg_1845[1:0] <= 2'b00;
    empty_83_reg_1870[1:0] <= 2'b00;
    empty_72_reg_1881[1:0] <= 2'b00;
    empty_88_reg_1906[1:0] <= 2'b00;
    empty_73_reg_1917[1:0] <= 2'b00;
    empty_93_reg_1942[1:0] <= 2'b00;
    empty_98_reg_1973[1:0] <= 2'b00;
    empty_103_reg_1999[1:0] <= 2'b00;
    empty_108_reg_2025[1:0] <= 2'b00;
end

endmodule //run_handle_outcome
