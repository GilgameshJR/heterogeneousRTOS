// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module run_compute (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        sourceStream_dout,
        sourceStream_num_data_valid,
        sourceStream_fifo_cap,
        sourceStream_empty_n,
        sourceStream_read,
        destStream_din,
        destStream_num_data_valid,
        destStream_fifo_cap,
        destStream_full_n,
        destStream_write,
        n_regions_V_address0,
        n_regions_V_ce0,
        n_regions_V_we0,
        n_regions_V_d0,
        n_regions_V_q0,
        regions_address0,
        regions_ce0,
        regions_we0,
        regions_d0,
        regions_q0,
        regions_address1,
        regions_ce1,
        regions_we1,
        regions_d1,
        regions_q1,
        regions_1_address0,
        regions_1_ce0,
        regions_1_we0,
        regions_1_d0,
        regions_1_q0,
        regions_1_address1,
        regions_1_ce1,
        regions_1_we1,
        regions_1_d1,
        regions_1_q1,
        regions_2_address0,
        regions_2_ce0,
        regions_2_we0,
        regions_2_d0,
        regions_2_q0,
        regions_2_address1,
        regions_2_ce1,
        regions_2_we1,
        regions_2_d1,
        regions_2_q1,
        regions_3_address0,
        regions_3_ce0,
        regions_3_we0,
        regions_3_d0,
        regions_3_q0,
        regions_3_address1,
        regions_3_ce1,
        regions_3_we1,
        regions_3_d1,
        regions_3_q1,
        regions_4_address0,
        regions_4_ce0,
        regions_4_we0,
        regions_4_d0,
        regions_4_q0,
        regions_4_address1,
        regions_4_ce1,
        regions_4_we1,
        regions_4_d1,
        regions_4_q1,
        regions_5_address0,
        regions_5_ce0,
        regions_5_we0,
        regions_5_d0,
        regions_5_q0,
        regions_5_address1,
        regions_5_ce1,
        regions_5_we1,
        regions_5_d1,
        regions_5_q1
);

parameter    ap_ST_fsm_state1 = 20'd1;
parameter    ap_ST_fsm_state2 = 20'd2;
parameter    ap_ST_fsm_state3 = 20'd4;
parameter    ap_ST_fsm_state4 = 20'd8;
parameter    ap_ST_fsm_state5 = 20'd16;
parameter    ap_ST_fsm_state6 = 20'd32;
parameter    ap_ST_fsm_state7 = 20'd64;
parameter    ap_ST_fsm_state8 = 20'd128;
parameter    ap_ST_fsm_state9 = 20'd256;
parameter    ap_ST_fsm_state10 = 20'd512;
parameter    ap_ST_fsm_state11 = 20'd1024;
parameter    ap_ST_fsm_state12 = 20'd2048;
parameter    ap_ST_fsm_state13 = 20'd4096;
parameter    ap_ST_fsm_state14 = 20'd8192;
parameter    ap_ST_fsm_state15 = 20'd16384;
parameter    ap_ST_fsm_state16 = 20'd32768;
parameter    ap_ST_fsm_state17 = 20'd65536;
parameter    ap_ST_fsm_state18 = 20'd131072;
parameter    ap_ST_fsm_state19 = 20'd262144;
parameter    ap_ST_fsm_state20 = 20'd524288;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
input  [319:0] sourceStream_dout;
input  [1:0] sourceStream_num_data_valid;
input  [1:0] sourceStream_fifo_cap;
input   sourceStream_empty_n;
output   sourceStream_read;
output  [297:0] destStream_din;
input  [1:0] destStream_num_data_valid;
input  [1:0] destStream_fifo_cap;
input   destStream_full_n;
output   destStream_write;
output  [5:0] n_regions_V_address0;
output   n_regions_V_ce0;
output   n_regions_V_we0;
output  [7:0] n_regions_V_d0;
input  [7:0] n_regions_V_q0;
output  [11:0] regions_address0;
output   regions_ce0;
output   regions_we0;
output  [31:0] regions_d0;
input  [31:0] regions_q0;
output  [11:0] regions_address1;
output   regions_ce1;
output   regions_we1;
output  [31:0] regions_d1;
input  [31:0] regions_q1;
output  [11:0] regions_1_address0;
output   regions_1_ce0;
output   regions_1_we0;
output  [31:0] regions_1_d0;
input  [31:0] regions_1_q0;
output  [11:0] regions_1_address1;
output   regions_1_ce1;
output   regions_1_we1;
output  [31:0] regions_1_d1;
input  [31:0] regions_1_q1;
output  [11:0] regions_2_address0;
output   regions_2_ce0;
output   regions_2_we0;
output  [31:0] regions_2_d0;
input  [31:0] regions_2_q0;
output  [11:0] regions_2_address1;
output   regions_2_ce1;
output   regions_2_we1;
output  [31:0] regions_2_d1;
input  [31:0] regions_2_q1;
output  [11:0] regions_3_address0;
output   regions_3_ce0;
output   regions_3_we0;
output  [31:0] regions_3_d0;
input  [31:0] regions_3_q0;
output  [11:0] regions_3_address1;
output   regions_3_ce1;
output   regions_3_we1;
output  [31:0] regions_3_d1;
input  [31:0] regions_3_q1;
output  [11:0] regions_4_address0;
output   regions_4_ce0;
output   regions_4_we0;
output  [31:0] regions_4_d0;
input  [31:0] regions_4_q0;
output  [11:0] regions_4_address1;
output   regions_4_ce1;
output   regions_4_we1;
output  [31:0] regions_4_d1;
input  [31:0] regions_4_q1;
output  [11:0] regions_5_address0;
output   regions_5_ce0;
output   regions_5_we0;
output  [31:0] regions_5_d0;
input  [31:0] regions_5_q0;
output  [11:0] regions_5_address1;
output   regions_5_ce1;
output   regions_5_we1;
output  [31:0] regions_5_d1;
input  [31:0] regions_5_q1;

reg ap_idle;
reg sourceStream_read;
reg[297:0] destStream_din;
reg destStream_write;
reg[5:0] n_regions_V_address0;
reg n_regions_V_ce0;
reg n_regions_V_we0;
reg[11:0] regions_address0;
reg regions_ce0;
reg regions_we0;
reg regions_ce1;
reg regions_we1;
reg[11:0] regions_1_address0;
reg regions_1_ce0;
reg regions_1_we0;
reg regions_1_ce1;
reg regions_1_we1;
reg[11:0] regions_2_address0;
reg regions_2_ce0;
reg regions_2_we0;
reg regions_2_ce1;
reg regions_2_we1;
reg[11:0] regions_3_address0;
reg regions_3_ce0;
reg regions_3_we0;
reg regions_3_ce1;
reg regions_3_we1;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [19:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    sourceStream_blk_n;
wire    ap_CS_fsm_state2;
reg    destStream_blk_n;
wire    ap_CS_fsm_state20;
reg   [7:0] in_command_reg_1212;
wire    ap_CS_fsm_state7;
reg   [319:0] sourceStream_read_reg_1190;
wire   [7:0] in_checkId_V_fu_482_p1;
reg   [7:0] in_checkId_V_reg_1196;
reg   [7:0] trunc_ln145_s_reg_1206;
wire   [31:0] in_AOV_fu_586_p1;
reg   [31:0] in_AOV_reg_1216;
wire   [31:0] in_AOV_1_fu_590_p1;
reg   [31:0] in_AOV_1_reg_1224;
wire   [31:0] in_AOV_2_fu_594_p1;
reg   [31:0] in_AOV_2_reg_1232;
wire   [31:0] in_AOV_3_fu_598_p1;
reg   [31:0] in_AOV_3_reg_1240;
wire   [31:0] in_AOV_4_fu_602_p1;
reg   [31:0] in_AOV_4_reg_1248;
wire   [31:0] in_AOV_5_fu_606_p1;
reg   [31:0] in_AOV_5_reg_1256;
wire   [31:0] in_AOV_6_fu_610_p1;
reg   [31:0] in_AOV_6_reg_1264;
wire   [31:0] in_AOV_7_fu_614_p1;
reg   [31:0] in_AOV_7_reg_1272;
wire   [3:0] empty_fu_629_p2;
wire    ap_CS_fsm_state3;
wire   [31:0] out_AOV_q1;
reg   [31:0] out_AOV_load_reg_1288;
wire    ap_CS_fsm_state4;
wire   [31:0] out_AOV_q0;
reg   [31:0] out_AOV_load_1_reg_1293;
reg   [31:0] out_AOV_load_2_reg_1298;
wire    ap_CS_fsm_state5;
reg   [31:0] out_AOV_load_3_reg_1303;
reg   [5:0] n_regions_V_addr_reg_1308;
reg   [31:0] out_AOV_load_4_reg_1313;
wire    ap_CS_fsm_state6;
reg   [31:0] out_AOV_load_5_reg_1318;
wire   [5:0] trunc_ln526_fu_654_p1;
reg   [5:0] trunc_ln526_reg_1323;
reg   [7:0] n_regions_V_load_reg_1328;
wire   [0:0] icmp_ln70_fu_711_p2;
reg   [0:0] icmp_ln70_reg_1333;
wire    ap_CS_fsm_state8;
wire   [3:0] add_ln70_fu_717_p2;
reg   [3:0] add_ln70_reg_1337;
wire   [31:0] p_x_assign_fu_723_p10;
wire   [0:0] icmp_ln73_fu_758_p2;
reg   [0:0] icmp_ln73_reg_1349;
wire   [0:0] icmp_ln73_2_fu_764_p2;
reg   [0:0] icmp_ln73_2_reg_1354;
wire    ap_CS_fsm_state9;
wire   [0:0] or_ln73_2_fu_786_p2;
wire   [11:0] zext_ln512_fu_803_p1;
reg   [11:0] zext_ln512_reg_1367;
wire    ap_CS_fsm_state10;
reg   [7:0] n_regions_V_1_reg_1372;
wire   [0:0] icmp_ln1073_fu_807_p2;
reg   [0:0] icmp_ln1073_reg_1377;
wire   [0:0] trunc_ln1073_fu_813_p1;
reg   [0:0] trunc_ln1073_reg_1381;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln1073_1_fu_817_p2;
reg   [0:0] icmp_ln1073_1_reg_1387;
wire   [7:0] add_ln49_fu_822_p2;
reg   [7:0] add_ln49_reg_1391;
wire   [11:0] shl_ln59_fu_847_p2;
reg   [11:0] shl_ln59_reg_1396;
wire    ap_CS_fsm_state12;
reg   [11:0] regions_2_addr_reg_1411;
reg   [11:0] regions_3_addr_reg_1416;
wire   [31:0] tmp_101_fu_870_p10;
reg   [31:0] tmp_101_reg_1421;
wire   [63:0] add_ln55_fu_884_p2;
reg   [63:0] add_ln55_reg_1427;
wire   [31:0] tmp_100_fu_890_p4;
wire    ap_CS_fsm_state13;
wire   [0:0] icmp_ln59_fu_918_p2;
reg   [0:0] icmp_ln59_reg_1437;
wire   [0:0] icmp_ln59_1_fu_924_p2;
reg   [0:0] icmp_ln59_1_reg_1442;
wire   [0:0] and_ln59_1_fu_975_p2;
reg   [0:0] and_ln59_1_reg_1447;
wire    ap_CS_fsm_state14;
wire   [31:0] tmp_102_fu_981_p4;
wire    ap_CS_fsm_state15;
wire   [0:0] icmp_ln59_4_fu_1009_p2;
reg   [0:0] icmp_ln59_4_reg_1456;
wire   [0:0] icmp_ln59_5_fu_1015_p2;
reg   [0:0] icmp_ln59_5_reg_1461;
wire   [23:0] grp_fu_473_p4;
reg   [23:0] tmp_139_reg_1472;
wire    ap_CS_fsm_state16;
wire   [0:0] and_ln59_2_fu_1025_p2;
wire   [0:0] icmp_ln60_fu_1031_p2;
reg   [31:0] out_AOV_load_8_reg_1477;
wire    ap_CS_fsm_state17;
reg   [31:0] out_AOV_load_9_reg_1482;
reg   [31:0] out_AOV_load_10_reg_1487;
wire    ap_CS_fsm_state18;
reg   [31:0] out_AOV_load_11_reg_1492;
reg   [31:0] out_AOV_load_12_reg_1497;
wire    ap_CS_fsm_state19;
reg   [31:0] out_AOV_load_13_reg_1502;
reg   [2:0] out_AOV_address0;
reg    out_AOV_ce0;
reg    out_AOV_we0;
reg   [2:0] out_AOV_address1;
reg    out_AOV_ce1;
wire    grp_insert_point_fu_430_ap_start;
wire    grp_insert_point_fu_430_ap_done;
wire    grp_insert_point_fu_430_ap_idle;
wire    grp_insert_point_fu_430_ap_ready;
wire   [11:0] grp_insert_point_fu_430_regions_min_0_address0;
wire    grp_insert_point_fu_430_regions_min_0_ce0;
wire    grp_insert_point_fu_430_regions_min_0_we0;
wire   [31:0] grp_insert_point_fu_430_regions_min_0_d0;
wire   [11:0] grp_insert_point_fu_430_regions_min_0_address1;
wire    grp_insert_point_fu_430_regions_min_0_ce1;
wire    grp_insert_point_fu_430_regions_min_0_we1;
wire   [31:0] grp_insert_point_fu_430_regions_min_0_d1;
wire   [11:0] grp_insert_point_fu_430_regions_min_1_address0;
wire    grp_insert_point_fu_430_regions_min_1_ce0;
wire    grp_insert_point_fu_430_regions_min_1_we0;
wire   [31:0] grp_insert_point_fu_430_regions_min_1_d0;
wire   [11:0] grp_insert_point_fu_430_regions_min_1_address1;
wire    grp_insert_point_fu_430_regions_min_1_ce1;
wire    grp_insert_point_fu_430_regions_min_1_we1;
wire   [31:0] grp_insert_point_fu_430_regions_min_1_d1;
wire   [11:0] grp_insert_point_fu_430_regions_max_0_address0;
wire    grp_insert_point_fu_430_regions_max_0_ce0;
wire    grp_insert_point_fu_430_regions_max_0_we0;
wire   [31:0] grp_insert_point_fu_430_regions_max_0_d0;
wire   [11:0] grp_insert_point_fu_430_regions_max_0_address1;
wire    grp_insert_point_fu_430_regions_max_0_ce1;
wire    grp_insert_point_fu_430_regions_max_0_we1;
wire   [31:0] grp_insert_point_fu_430_regions_max_0_d1;
wire   [11:0] grp_insert_point_fu_430_regions_max_1_address0;
wire    grp_insert_point_fu_430_regions_max_1_ce0;
wire    grp_insert_point_fu_430_regions_max_1_we0;
wire   [31:0] grp_insert_point_fu_430_regions_max_1_d0;
wire   [11:0] grp_insert_point_fu_430_regions_max_1_address1;
wire    grp_insert_point_fu_430_regions_max_1_ce1;
wire    grp_insert_point_fu_430_regions_max_1_we1;
wire   [31:0] grp_insert_point_fu_430_regions_max_1_d1;
wire   [11:0] grp_insert_point_fu_430_regions_center_0_address0;
wire    grp_insert_point_fu_430_regions_center_0_ce0;
wire    grp_insert_point_fu_430_regions_center_0_we0;
wire   [31:0] grp_insert_point_fu_430_regions_center_0_d0;
wire   [11:0] grp_insert_point_fu_430_regions_center_0_address1;
wire    grp_insert_point_fu_430_regions_center_0_ce1;
wire    grp_insert_point_fu_430_regions_center_0_we1;
wire   [31:0] grp_insert_point_fu_430_regions_center_0_d1;
wire   [11:0] grp_insert_point_fu_430_regions_center_1_address0;
wire    grp_insert_point_fu_430_regions_center_1_ce0;
wire    grp_insert_point_fu_430_regions_center_1_we0;
wire   [31:0] grp_insert_point_fu_430_regions_center_1_d0;
wire   [11:0] grp_insert_point_fu_430_regions_center_1_address1;
wire    grp_insert_point_fu_430_regions_center_1_ce1;
wire    grp_insert_point_fu_430_regions_center_1_we1;
wire   [31:0] grp_insert_point_fu_430_regions_center_1_d1;
wire   [7:0] grp_insert_point_fu_430_ap_return;
wire   [31:0] grp_insert_point_fu_430_grp_fu_458_p_din0;
wire   [31:0] grp_insert_point_fu_430_grp_fu_458_p_din1;
wire   [4:0] grp_insert_point_fu_430_grp_fu_458_p_opcode;
wire    grp_insert_point_fu_430_grp_fu_458_p_ce;
wire   [31:0] grp_insert_point_fu_430_grp_fu_463_p_din0;
wire   [31:0] grp_insert_point_fu_430_grp_fu_463_p_din1;
wire   [4:0] grp_insert_point_fu_430_grp_fu_463_p_opcode;
wire    grp_insert_point_fu_430_grp_fu_463_p_ce;
wire   [31:0] grp_insert_point_fu_430_grp_fu_468_p_din0;
wire   [31:0] grp_insert_point_fu_430_grp_fu_468_p_din1;
wire   [4:0] grp_insert_point_fu_430_grp_fu_468_p_opcode;
wire    grp_insert_point_fu_430_grp_fu_468_p_ce;
reg   [3:0] loop_index_reg_358;
wire   [0:0] exitcond1_fu_623_p2;
reg   [3:0] i_reg_369;
reg   [0:0] vld_reg_380;
reg   [7:0] i_3_reg_394;
reg   [63:0] j_reg_405;
reg   [0:0] hasReg_reg_417;
reg    grp_insert_point_fu_430_ap_start_reg;
wire   [63:0] loop_index_cast_fu_618_p1;
wire   [63:0] zext_ln587_fu_650_p1;
wire   [63:0] zext_ln587_2_fu_792_p1;
wire   [63:0] zext_ln59_1_fu_862_p1;
wire   [297:0] or_ln174_2_fu_684_p13;
reg    ap_block_state7;
reg    ap_block_state7_on_subcall_done;
wire   [297:0] or_ln174_1_fu_1136_p5;
reg    ap_block_state20;
wire   [31:0] tmp_s_fu_635_p10;
reg   [31:0] grp_fu_458_p0;
reg   [31:0] grp_fu_458_p1;
reg   [31:0] grp_fu_463_p0;
reg   [31:0] grp_fu_463_p1;
reg   [31:0] grp_fu_468_p0;
reg   [31:0] grp_fu_468_p1;
wire   [31:0] trunc_ln145_4_fu_506_p4;
wire   [31:0] trunc_ln145_5_fu_516_p4;
wire   [31:0] trunc_ln145_6_fu_526_p4;
wire   [31:0] trunc_ln145_7_fu_536_p4;
wire   [31:0] trunc_ln145_8_fu_546_p4;
wire   [31:0] trunc_ln145_9_fu_556_p4;
wire   [31:0] trunc_ln145_1_fu_566_p4;
wire   [31:0] trunc_ln145_2_fu_576_p4;
wire   [31:0] bitcast_ln174_7_fu_680_p1;
wire   [31:0] bitcast_ln174_6_fu_676_p1;
wire   [31:0] bitcast_ln174_5_fu_673_p1;
wire   [31:0] bitcast_ln174_4_fu_670_p1;
wire   [31:0] bitcast_ln174_3_fu_667_p1;
wire   [31:0] bitcast_ln174_2_fu_664_p1;
wire   [31:0] bitcast_ln174_1_fu_661_p1;
wire   [31:0] bitcast_ln174_fu_658_p1;
wire   [31:0] bitcast_ln73_fu_740_p1;
wire   [7:0] tmp_119_fu_744_p4;
wire   [22:0] trunc_ln73_fu_754_p1;
wire   [0:0] grp_fu_463_p2;
wire   [0:0] grp_fu_468_p2;
wire   [0:0] or_ln73_fu_770_p2;
wire   [0:0] or_ln73_3_fu_774_p2;
wire   [0:0] and_ln73_fu_780_p2;
wire   [0:0] grp_fu_458_p2;
wire   [10:0] tmp_137_fu_796_p3;
wire   [6:0] tmp_138_fu_828_p4;
wire   [11:0] zext_ln59_fu_838_p1;
wire   [11:0] add_ln59_fu_842_p2;
wire   [11:0] trunc_ln59_fu_853_p1;
wire   [11:0] add_ln59_1_fu_857_p2;
wire   [31:0] bitcast_ln59_fu_900_p1;
wire   [7:0] tmp_fu_904_p4;
wire   [22:0] trunc_ln59_1_fu_914_p1;
wire   [31:0] bitcast_ln59_1_fu_930_p1;
wire   [7:0] tmp_122_fu_933_p4;
wire   [22:0] trunc_ln59_2_fu_943_p1;
wire   [0:0] icmp_ln59_3_fu_957_p2;
wire   [0:0] icmp_ln59_2_fu_951_p2;
wire   [0:0] or_ln59_fu_947_p2;
wire   [0:0] or_ln59_1_fu_963_p2;
wire   [0:0] and_ln59_fu_969_p2;
wire   [31:0] bitcast_ln59_2_fu_991_p1;
wire   [7:0] tmp_124_fu_995_p4;
wire   [22:0] trunc_ln59_3_fu_1005_p1;
wire   [0:0] or_ln59_2_fu_1021_p2;
wire   [0:0] and_ln513_fu_1037_p2;
wire   [31:0] bitcast_ln174_15_fu_1071_p1;
wire   [31:0] bitcast_ln174_14_fu_1067_p1;
wire   [31:0] bitcast_ln174_13_fu_1064_p1;
wire   [31:0] bitcast_ln174_12_fu_1061_p1;
wire   [31:0] bitcast_ln174_11_fu_1058_p1;
wire   [31:0] bitcast_ln174_10_fu_1055_p1;
wire   [31:0] bitcast_ln174_9_fu_1052_p1;
wire   [31:0] bitcast_ln174_8_fu_1049_p1;
wire   [0:0] fault_fu_1043_p2;
wire   [319:0] or_ln174_s_fu_1075_p14;
wire   [319:0] or_ln174_fu_1102_p2;
wire   [255:0] tmp_127_fu_1116_p4;
wire   [0:0] tmp_8_fu_1108_p3;
wire   [32:0] tmp_128_fu_1126_p4;
reg    grp_fu_458_ce;
reg   [4:0] grp_fu_458_opcode;
reg    grp_fu_463_ce;
reg   [4:0] grp_fu_463_opcode;
reg    grp_fu_468_ce;
reg   [4:0] grp_fu_468_opcode;
reg   [19:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
reg    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
reg    ap_ST_fsm_state20_blk;
reg    ap_condition_1137;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 20'd1;
#0 grp_insert_point_fu_430_ap_start_reg = 1'b0;
end

run_compute_out_AOV_RAM_AUTO_1R1W #(
    .DataWidth( 32 ),
    .AddressRange( 8 ),
    .AddressWidth( 3 ))
out_AOV_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(out_AOV_address0),
    .ce0(out_AOV_ce0),
    .we0(out_AOV_we0),
    .d0(tmp_s_fu_635_p10),
    .q0(out_AOV_q0),
    .address1(out_AOV_address1),
    .ce1(out_AOV_ce1),
    .q1(out_AOV_q1)
);

run_insert_point grp_insert_point_fu_430(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_insert_point_fu_430_ap_start),
    .ap_done(grp_insert_point_fu_430_ap_done),
    .ap_idle(grp_insert_point_fu_430_ap_idle),
    .ap_ready(grp_insert_point_fu_430_ap_ready),
    .regions_min_0_address0(grp_insert_point_fu_430_regions_min_0_address0),
    .regions_min_0_ce0(grp_insert_point_fu_430_regions_min_0_ce0),
    .regions_min_0_we0(grp_insert_point_fu_430_regions_min_0_we0),
    .regions_min_0_d0(grp_insert_point_fu_430_regions_min_0_d0),
    .regions_min_0_q0(regions_q0),
    .regions_min_0_address1(grp_insert_point_fu_430_regions_min_0_address1),
    .regions_min_0_ce1(grp_insert_point_fu_430_regions_min_0_ce1),
    .regions_min_0_we1(grp_insert_point_fu_430_regions_min_0_we1),
    .regions_min_0_d1(grp_insert_point_fu_430_regions_min_0_d1),
    .regions_min_0_q1(regions_q1),
    .regions_min_0_offset(trunc_ln526_reg_1323),
    .regions_min_1_address0(grp_insert_point_fu_430_regions_min_1_address0),
    .regions_min_1_ce0(grp_insert_point_fu_430_regions_min_1_ce0),
    .regions_min_1_we0(grp_insert_point_fu_430_regions_min_1_we0),
    .regions_min_1_d0(grp_insert_point_fu_430_regions_min_1_d0),
    .regions_min_1_q0(regions_1_q0),
    .regions_min_1_address1(grp_insert_point_fu_430_regions_min_1_address1),
    .regions_min_1_ce1(grp_insert_point_fu_430_regions_min_1_ce1),
    .regions_min_1_we1(grp_insert_point_fu_430_regions_min_1_we1),
    .regions_min_1_d1(grp_insert_point_fu_430_regions_min_1_d1),
    .regions_min_1_q1(regions_1_q1),
    .regions_max_0_address0(grp_insert_point_fu_430_regions_max_0_address0),
    .regions_max_0_ce0(grp_insert_point_fu_430_regions_max_0_ce0),
    .regions_max_0_we0(grp_insert_point_fu_430_regions_max_0_we0),
    .regions_max_0_d0(grp_insert_point_fu_430_regions_max_0_d0),
    .regions_max_0_q0(regions_2_q0),
    .regions_max_0_address1(grp_insert_point_fu_430_regions_max_0_address1),
    .regions_max_0_ce1(grp_insert_point_fu_430_regions_max_0_ce1),
    .regions_max_0_we1(grp_insert_point_fu_430_regions_max_0_we1),
    .regions_max_0_d1(grp_insert_point_fu_430_regions_max_0_d1),
    .regions_max_0_q1(regions_2_q1),
    .regions_max_1_address0(grp_insert_point_fu_430_regions_max_1_address0),
    .regions_max_1_ce0(grp_insert_point_fu_430_regions_max_1_ce0),
    .regions_max_1_we0(grp_insert_point_fu_430_regions_max_1_we0),
    .regions_max_1_d0(grp_insert_point_fu_430_regions_max_1_d0),
    .regions_max_1_q0(regions_3_q0),
    .regions_max_1_address1(grp_insert_point_fu_430_regions_max_1_address1),
    .regions_max_1_ce1(grp_insert_point_fu_430_regions_max_1_ce1),
    .regions_max_1_we1(grp_insert_point_fu_430_regions_max_1_we1),
    .regions_max_1_d1(grp_insert_point_fu_430_regions_max_1_d1),
    .regions_max_1_q1(regions_3_q1),
    .regions_center_0_address0(grp_insert_point_fu_430_regions_center_0_address0),
    .regions_center_0_ce0(grp_insert_point_fu_430_regions_center_0_ce0),
    .regions_center_0_we0(grp_insert_point_fu_430_regions_center_0_we0),
    .regions_center_0_d0(grp_insert_point_fu_430_regions_center_0_d0),
    .regions_center_0_q0(regions_4_q0),
    .regions_center_0_address1(grp_insert_point_fu_430_regions_center_0_address1),
    .regions_center_0_ce1(grp_insert_point_fu_430_regions_center_0_ce1),
    .regions_center_0_we1(grp_insert_point_fu_430_regions_center_0_we1),
    .regions_center_0_d1(grp_insert_point_fu_430_regions_center_0_d1),
    .regions_center_0_q1(regions_4_q1),
    .regions_center_1_address0(grp_insert_point_fu_430_regions_center_1_address0),
    .regions_center_1_ce0(grp_insert_point_fu_430_regions_center_1_ce0),
    .regions_center_1_we0(grp_insert_point_fu_430_regions_center_1_we0),
    .regions_center_1_d0(grp_insert_point_fu_430_regions_center_1_d0),
    .regions_center_1_q0(regions_5_q0),
    .regions_center_1_address1(grp_insert_point_fu_430_regions_center_1_address1),
    .regions_center_1_ce1(grp_insert_point_fu_430_regions_center_1_ce1),
    .regions_center_1_we1(grp_insert_point_fu_430_regions_center_1_we1),
    .regions_center_1_d1(grp_insert_point_fu_430_regions_center_1_d1),
    .regions_center_1_q1(regions_5_q1),
    .n_regions_V_read(n_regions_V_load_reg_1328),
    .d_read(in_AOV_reg_1216),
    .d_read_23(in_AOV_1_reg_1224),
    .d_read_24(in_AOV_2_reg_1232),
    .d_read_25(in_AOV_3_reg_1240),
    .d_read_26(in_AOV_4_reg_1248),
    .d_read_27(in_AOV_5_reg_1256),
    .d_read_28(in_AOV_6_reg_1264),
    .d_read_29(in_AOV_7_reg_1272),
    .ap_return(grp_insert_point_fu_430_ap_return),
    .grp_fu_458_p_din0(grp_insert_point_fu_430_grp_fu_458_p_din0),
    .grp_fu_458_p_din1(grp_insert_point_fu_430_grp_fu_458_p_din1),
    .grp_fu_458_p_opcode(grp_insert_point_fu_430_grp_fu_458_p_opcode),
    .grp_fu_458_p_dout0(grp_fu_458_p2),
    .grp_fu_458_p_ce(grp_insert_point_fu_430_grp_fu_458_p_ce),
    .grp_fu_463_p_din0(grp_insert_point_fu_430_grp_fu_463_p_din0),
    .grp_fu_463_p_din1(grp_insert_point_fu_430_grp_fu_463_p_din1),
    .grp_fu_463_p_opcode(grp_insert_point_fu_430_grp_fu_463_p_opcode),
    .grp_fu_463_p_dout0(grp_fu_463_p2),
    .grp_fu_463_p_ce(grp_insert_point_fu_430_grp_fu_463_p_ce),
    .grp_fu_468_p_din0(grp_insert_point_fu_430_grp_fu_468_p_din0),
    .grp_fu_468_p_din1(grp_insert_point_fu_430_grp_fu_468_p_din1),
    .grp_fu_468_p_opcode(grp_insert_point_fu_430_grp_fu_468_p_opcode),
    .grp_fu_468_p_dout0(grp_fu_468_p2),
    .grp_fu_468_p_ce(grp_insert_point_fu_430_grp_fu_468_p_ce)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U71(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_458_p0),
    .din1(grp_fu_458_p1),
    .ce(grp_fu_458_ce),
    .opcode(grp_fu_458_opcode),
    .dout(grp_fu_458_p2)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U72(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_463_p0),
    .din1(grp_fu_463_p1),
    .ce(grp_fu_463_ce),
    .opcode(grp_fu_463_opcode),
    .dout(grp_fu_463_p2)
);

run_fcmp_32ns_32ns_1_2_no_dsp_1 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .dout_WIDTH( 1 ))
fcmp_32ns_32ns_1_2_no_dsp_1_U73(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_468_p0),
    .din1(grp_fu_468_p1),
    .ce(grp_fu_468_ce),
    .opcode(grp_fu_468_opcode),
    .dout(grp_fu_468_p2)
);

run_mux_84_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_84_32_1_1_U74(
    .din0(in_AOV_reg_1216),
    .din1(in_AOV_1_reg_1224),
    .din2(in_AOV_2_reg_1232),
    .din3(in_AOV_3_reg_1240),
    .din4(in_AOV_4_reg_1248),
    .din5(in_AOV_5_reg_1256),
    .din6(in_AOV_6_reg_1264),
    .din7(in_AOV_7_reg_1272),
    .din8(loop_index_reg_358),
    .dout(tmp_s_fu_635_p10)
);

run_mux_84_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 4 ),
    .dout_WIDTH( 32 ))
mux_84_32_1_1_U75(
    .din0(in_AOV_reg_1216),
    .din1(in_AOV_1_reg_1224),
    .din2(in_AOV_2_reg_1232),
    .din3(in_AOV_3_reg_1240),
    .din4(in_AOV_4_reg_1248),
    .din5(in_AOV_5_reg_1256),
    .din6(in_AOV_6_reg_1264),
    .din7(in_AOV_7_reg_1272),
    .din8(i_reg_369),
    .dout(p_x_assign_fu_723_p10)
);

run_mux_864_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 32 ),
    .din4_WIDTH( 32 ),
    .din5_WIDTH( 32 ),
    .din6_WIDTH( 32 ),
    .din7_WIDTH( 32 ),
    .din8_WIDTH( 64 ),
    .dout_WIDTH( 32 ))
mux_864_32_1_1_U76(
    .din0(in_AOV_reg_1216),
    .din1(in_AOV_1_reg_1224),
    .din2(in_AOV_2_reg_1232),
    .din3(in_AOV_3_reg_1240),
    .din4(in_AOV_4_reg_1248),
    .din5(in_AOV_5_reg_1256),
    .din6(in_AOV_6_reg_1264),
    .din7(in_AOV_7_reg_1272),
    .din8(j_reg_405),
    .dout(tmp_101_fu_870_p10)
);

run_mux_21_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_21_32_1_1_U77(
    .din0(regions_q0),
    .din1(regions_1_q0),
    .din2(trunc_ln1073_reg_1381),
    .dout(tmp_100_fu_890_p4)
);

run_mux_21_32_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 1 ),
    .dout_WIDTH( 32 ))
mux_21_32_1_1_U78(
    .din0(regions_2_q0),
    .din1(regions_3_q0),
    .din2(trunc_ln1073_reg_1381),
    .dout(tmp_102_fu_981_p4)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_insert_point_fu_430_ap_start_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_state6)) begin
            grp_insert_point_fu_430_ap_start_reg <= 1'b1;
        end else if ((grp_insert_point_fu_430_ap_ready == 1'b1)) begin
            grp_insert_point_fu_430_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln60_fu_1031_p2 == 1'd1) & (icmp_ln1073_1_reg_1387 == 1'd1) & (icmp_ln1073_reg_1377 == 1'd0) & (1'd1 == and_ln59_2_fu_1025_p2) & (1'd1 == and_ln59_1_reg_1447) & (1'b1 == ap_CS_fsm_state16))) begin
        hasReg_reg_417 <= 1'd1;
    end else if (((1'b1 == ap_CS_fsm_state11) & ((icmp_ln1073_1_fu_817_p2 == 1'd0) | (icmp_ln1073_reg_1377 == 1'd1)))) begin
        hasReg_reg_417 <= 1'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1073_fu_807_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state10))) begin
        i_3_reg_394 <= 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state16) & (((icmp_ln1073_1_reg_1387 == 1'd1) & (icmp_ln1073_reg_1377 == 1'd0) & (1'd0 == and_ln59_1_reg_1447)) | ((icmp_ln1073_1_reg_1387 == 1'd1) & (icmp_ln1073_reg_1377 == 1'd0) & (1'd0 == and_ln59_2_fu_1025_p2))))) begin
        i_3_reg_394 <= add_ln49_reg_1391;
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_623_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (in_command_reg_1212 == 8'd2))) begin
        i_reg_369 <= 4'd0;
    end else if (((or_ln73_2_fu_786_p2 == 1'd0) & (icmp_ln70_reg_1333 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        i_reg_369 <= add_ln70_reg_1337;
    end
end

always @ (posedge ap_clk) begin
    if ((icmp_ln1073_reg_1377 == 1'd0)) begin
        if (((icmp_ln1073_1_fu_817_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state11))) begin
            j_reg_405 <= 64'd0;
        end else if ((1'b1 == ap_condition_1137)) begin
            j_reg_405 <= add_ln55_reg_1427;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((exitcond1_fu_623_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        loop_index_reg_358 <= empty_fu_629_p2;
    end else if (((sourceStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        loop_index_reg_358 <= 4'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((or_ln73_2_fu_786_p2 == 1'd1) & (icmp_ln70_reg_1333 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
        vld_reg_380 <= 1'd0;
    end else if (((icmp_ln70_fu_711_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state8))) begin
        vld_reg_380 <= 1'd1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1073_reg_1377 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        add_ln49_reg_1391 <= add_ln49_fu_822_p2;
        icmp_ln1073_1_reg_1387 <= icmp_ln1073_1_fu_817_p2;
        trunc_ln1073_reg_1381 <= trunc_ln1073_fu_813_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        add_ln55_reg_1427 <= add_ln55_fu_884_p2;
        regions_2_addr_reg_1411 <= zext_ln59_1_fu_862_p1;
        regions_3_addr_reg_1416 <= zext_ln59_1_fu_862_p1;
        tmp_101_reg_1421 <= tmp_101_fu_870_p10;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state8)) begin
        add_ln70_reg_1337 <= add_ln70_fu_717_p2;
        icmp_ln70_reg_1333 <= icmp_ln70_fu_711_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        and_ln59_1_reg_1447 <= and_ln59_1_fu_975_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        icmp_ln1073_reg_1377 <= icmp_ln1073_fu_807_p2;
        n_regions_V_1_reg_1372 <= n_regions_V_q0;
        zext_ln512_reg_1367[10 : 3] <= zext_ln512_fu_803_p1[10 : 3];
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state13)) begin
        icmp_ln59_1_reg_1442 <= icmp_ln59_1_fu_924_p2;
        icmp_ln59_reg_1437 <= icmp_ln59_fu_918_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        icmp_ln59_4_reg_1456 <= icmp_ln59_4_fu_1009_p2;
        icmp_ln59_5_reg_1461 <= icmp_ln59_5_fu_1015_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln70_fu_711_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        icmp_ln73_2_reg_1354 <= icmp_ln73_2_fu_764_p2;
        icmp_ln73_reg_1349 <= icmp_ln73_fu_758_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        in_AOV_1_reg_1224 <= in_AOV_1_fu_590_p1;
        in_AOV_2_reg_1232 <= in_AOV_2_fu_594_p1;
        in_AOV_3_reg_1240 <= in_AOV_3_fu_598_p1;
        in_AOV_4_reg_1248 <= in_AOV_4_fu_602_p1;
        in_AOV_5_reg_1256 <= in_AOV_5_fu_606_p1;
        in_AOV_6_reg_1264 <= in_AOV_6_fu_610_p1;
        in_AOV_7_reg_1272 <= in_AOV_7_fu_614_p1;
        in_AOV_reg_1216 <= in_AOV_fu_586_p1;
        in_checkId_V_reg_1196 <= in_checkId_V_fu_482_p1;
        in_command_reg_1212 <= {{sourceStream_dout[47:40]}};
        sourceStream_read_reg_1190 <= sourceStream_dout;
        trunc_ln145_s_reg_1206 <= {{sourceStream_dout[15:8]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        n_regions_V_addr_reg_1308 <= zext_ln587_fu_650_p1;
        out_AOV_load_2_reg_1298 <= out_AOV_q0;
        out_AOV_load_3_reg_1303 <= out_AOV_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        n_regions_V_load_reg_1328 <= n_regions_V_q0;
        out_AOV_load_4_reg_1313 <= out_AOV_q0;
        out_AOV_load_5_reg_1318 <= out_AOV_q1;
        trunc_ln526_reg_1323 <= trunc_ln526_fu_654_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state18)) begin
        out_AOV_load_10_reg_1487 <= out_AOV_q0;
        out_AOV_load_11_reg_1492 <= out_AOV_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state19)) begin
        out_AOV_load_12_reg_1497 <= out_AOV_q0;
        out_AOV_load_13_reg_1502 <= out_AOV_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        out_AOV_load_1_reg_1293 <= out_AOV_q0;
        out_AOV_load_reg_1288 <= out_AOV_q1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state17)) begin
        out_AOV_load_8_reg_1477 <= out_AOV_q0;
        out_AOV_load_9_reg_1482 <= out_AOV_q1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln1073_1_fu_817_p2 == 1'd1) & (icmp_ln1073_reg_1377 == 1'd0) & (1'b1 == ap_CS_fsm_state11))) begin
        shl_ln59_reg_1396[11 : 3] <= shl_ln59_fu_847_p2[11 : 3];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state16) & ((icmp_ln1073_reg_1377 == 1'd1) | ((icmp_ln1073_1_reg_1387 == 1'd0) | ((icmp_ln60_fu_1031_p2 == 1'd1) & (1'd1 == and_ln59_2_fu_1025_p2) & (1'd1 == and_ln59_1_reg_1447)))))) begin
        tmp_139_reg_1472 <= {{sourceStream_read_reg_1190[39:16]}};
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

always @ (*) begin
    if (((destStream_full_n == 1'b0) & (in_command_reg_1212 == 8'd2))) begin
        ap_ST_fsm_state20_blk = 1'b1;
    end else begin
        ap_ST_fsm_state20_blk = 1'b0;
    end
end

always @ (*) begin
    if ((sourceStream_empty_n == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state3_blk = 1'b0;

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_block_state7_on_subcall_done) | ((destStream_full_n == 1'b0) & (in_command_reg_1212 == 8'd3)))) begin
        ap_ST_fsm_state7_blk = 1'b1;
    end else begin
        ap_ST_fsm_state7_blk = 1'b0;
    end
end

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3)) | ((1'b1 == ap_CS_fsm_state20) & (in_command_reg_1212 == 8'd2)))) begin
        destStream_blk_n = destStream_full_n;
    end else begin
        destStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((destStream_full_n == 1'b0) & (in_command_reg_1212 == 8'd2)) & (1'b1 == ap_CS_fsm_state20) & (in_command_reg_1212 == 8'd2))) begin
        destStream_din = or_ln174_1_fu_1136_p5;
    end else if ((~((1'b1 == ap_block_state7_on_subcall_done) | ((destStream_full_n == 1'b0) & (in_command_reg_1212 == 8'd3))) & (1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        destStream_din = or_ln174_2_fu_684_p13;
    end else begin
        destStream_din = 'bx;
    end
end

always @ (*) begin
    if (((~((destStream_full_n == 1'b0) & (in_command_reg_1212 == 8'd2)) & (1'b1 == ap_CS_fsm_state20) & (in_command_reg_1212 == 8'd2)) | (~((1'b1 == ap_block_state7_on_subcall_done) | ((destStream_full_n == 1'b0) & (in_command_reg_1212 == 8'd3))) & (1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3)))) begin
        destStream_write = 1'b1;
    end else begin
        destStream_write = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_458_ce = grp_insert_point_fu_430_grp_fu_458_p_ce;
    end else begin
        grp_fu_458_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_458_opcode = grp_insert_point_fu_430_grp_fu_458_p_opcode;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_458_opcode = 5'd3;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_458_opcode = 5'd5;
    end else if (((icmp_ln70_fu_711_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_458_opcode = 5'd8;
    end else begin
        grp_fu_458_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_458_p0 = grp_insert_point_fu_430_grp_fu_458_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        grp_fu_458_p0 = tmp_102_fu_981_p4;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        grp_fu_458_p0 = tmp_100_fu_890_p4;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_458_p0 = p_x_assign_fu_723_p10;
    end else begin
        grp_fu_458_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_458_p1 = grp_insert_point_fu_430_grp_fu_458_p_din1;
    end else if (((1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state13))) begin
        grp_fu_458_p1 = tmp_101_reg_1421;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_458_p1 = 32'd0;
    end else begin
        grp_fu_458_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_463_ce = grp_insert_point_fu_430_grp_fu_463_p_ce;
    end else begin
        grp_fu_463_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_463_opcode = grp_insert_point_fu_430_grp_fu_463_p_opcode;
    end else if (((icmp_ln70_fu_711_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_463_opcode = 5'd1;
    end else begin
        grp_fu_463_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_463_p0 = grp_insert_point_fu_430_grp_fu_463_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_463_p0 = p_x_assign_fu_723_p10;
    end else begin
        grp_fu_463_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_463_p1 = grp_insert_point_fu_430_grp_fu_463_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_463_p1 = 32'd2139095040;
    end else begin
        grp_fu_463_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_468_ce = grp_insert_point_fu_430_grp_fu_468_p_ce;
    end else begin
        grp_fu_468_ce = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_468_opcode = grp_insert_point_fu_430_grp_fu_468_p_opcode;
    end else if (((icmp_ln70_fu_711_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state8))) begin
        grp_fu_468_opcode = 5'd1;
    end else begin
        grp_fu_468_opcode = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_468_p0 = grp_insert_point_fu_430_grp_fu_468_p_din0;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_468_p0 = p_x_assign_fu_723_p10;
    end else begin
        grp_fu_468_p0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state7)) begin
        grp_fu_468_p1 = grp_insert_point_fu_430_grp_fu_468_p_din1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        grp_fu_468_p1 = 32'd4286578688;
    end else begin
        grp_fu_468_p1 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state9)) begin
        n_regions_V_address0 = zext_ln587_2_fu_792_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        n_regions_V_address0 = n_regions_V_addr_reg_1308;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        n_regions_V_address0 = zext_ln587_fu_650_p1;
    end else begin
        n_regions_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state5) | (~((1'b1 == ap_block_state7_on_subcall_done) | ((destStream_full_n == 1'b0) & (in_command_reg_1212 == 8'd3))) & (1'b1 == ap_CS_fsm_state7)))) begin
        n_regions_V_ce0 = 1'b1;
    end else begin
        n_regions_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state7_on_subcall_done) | ((destStream_full_n == 1'b0) & (in_command_reg_1212 == 8'd3))) & (1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        n_regions_V_we0 = 1'b1;
    end else begin
        n_regions_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        out_AOV_address0 = 64'd0;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state6))) begin
        out_AOV_address0 = 64'd6;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state5))) begin
        out_AOV_address0 = 64'd4;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state4))) begin
        out_AOV_address0 = 64'd2;
    end else if (((exitcond1_fu_623_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (in_command_reg_1212 == 8'd3))) begin
        out_AOV_address0 = 64'd1;
    end else if (((exitcond1_fu_623_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_AOV_address0 = loop_index_cast_fu_618_p1;
    end else begin
        out_AOV_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state16)) begin
        out_AOV_address1 = 64'd1;
    end else if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state6))) begin
        out_AOV_address1 = 64'd7;
    end else if (((1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state5))) begin
        out_AOV_address1 = 64'd5;
    end else if (((1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state4))) begin
        out_AOV_address1 = 64'd3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        out_AOV_address1 = 64'd0;
    end else begin
        out_AOV_address1 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | ((exitcond1_fu_623_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (in_command_reg_1212 == 8'd3)) | ((exitcond1_fu_623_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3)))) begin
        out_AOV_ce0 = 1'b1;
    end else begin
        out_AOV_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (1'b1 == ap_CS_fsm_state3))) begin
        out_AOV_ce1 = 1'b1;
    end else begin
        out_AOV_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((exitcond1_fu_623_p2 == 1'd0) & (1'b1 == ap_CS_fsm_state3))) begin
        out_AOV_we0 = 1'b1;
    end else begin
        out_AOV_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        regions_1_address0 = zext_ln59_1_fu_862_p1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        regions_1_address0 = grp_insert_point_fu_430_regions_min_1_address0;
    end else begin
        regions_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        regions_1_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        regions_1_ce0 = grp_insert_point_fu_430_regions_min_1_ce0;
    end else begin
        regions_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        regions_1_ce1 = grp_insert_point_fu_430_regions_min_1_ce1;
    end else begin
        regions_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        regions_1_we0 = grp_insert_point_fu_430_regions_min_1_we0;
    end else begin
        regions_1_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        regions_1_we1 = grp_insert_point_fu_430_regions_min_1_we1;
    end else begin
        regions_1_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        regions_2_address0 = regions_2_addr_reg_1411;
    end else if (((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        regions_2_address0 = grp_insert_point_fu_430_regions_max_0_address0;
    end else begin
        regions_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        regions_2_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        regions_2_ce0 = grp_insert_point_fu_430_regions_max_0_ce0;
    end else begin
        regions_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        regions_2_ce1 = grp_insert_point_fu_430_regions_max_0_ce1;
    end else begin
        regions_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        regions_2_we0 = grp_insert_point_fu_430_regions_max_0_we0;
    end else begin
        regions_2_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        regions_2_we1 = grp_insert_point_fu_430_regions_max_0_we1;
    end else begin
        regions_2_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        regions_3_address0 = regions_3_addr_reg_1416;
    end else if (((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        regions_3_address0 = grp_insert_point_fu_430_regions_max_1_address0;
    end else begin
        regions_3_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        regions_3_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        regions_3_ce0 = grp_insert_point_fu_430_regions_max_1_ce0;
    end else begin
        regions_3_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        regions_3_ce1 = grp_insert_point_fu_430_regions_max_1_ce1;
    end else begin
        regions_3_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        regions_3_we0 = grp_insert_point_fu_430_regions_max_1_we0;
    end else begin
        regions_3_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        regions_3_we1 = grp_insert_point_fu_430_regions_max_1_we1;
    end else begin
        regions_3_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        regions_address0 = zext_ln59_1_fu_862_p1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        regions_address0 = grp_insert_point_fu_430_regions_min_0_address0;
    end else begin
        regions_address0 = 'bx;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state12)) begin
        regions_ce0 = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        regions_ce0 = grp_insert_point_fu_430_regions_min_0_ce0;
    end else begin
        regions_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        regions_ce1 = grp_insert_point_fu_430_regions_min_0_ce1;
    end else begin
        regions_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        regions_we0 = grp_insert_point_fu_430_regions_min_0_we0;
    end else begin
        regions_we0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state7) & (in_command_reg_1212 == 8'd3))) begin
        regions_we1 = grp_insert_point_fu_430_regions_min_0_we1;
    end else begin
        regions_we1 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        sourceStream_blk_n = sourceStream_empty_n;
    end else begin
        sourceStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((sourceStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        sourceStream_read = 1'b1;
    end else begin
        sourceStream_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((sourceStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((exitcond1_fu_623_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (in_command_reg_1212 == 8'd2))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else if ((~(in_command_reg_1212 == 8'd3) & ~(in_command_reg_1212 == 8'd2) & (exitcond1_fu_623_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else if (((exitcond1_fu_623_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state3) & (in_command_reg_1212 == 8'd3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            if ((~((1'b1 == ap_block_state7_on_subcall_done) | ((destStream_full_n == 1'b0) & (in_command_reg_1212 == 8'd3))) & ~(in_command_reg_1212 == 8'd2) & (1'b1 == ap_CS_fsm_state7))) begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((or_ln73_2_fu_786_p2 == 1'd0) & (icmp_ln70_reg_1333 == 1'd0) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state8;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            if (((1'b1 == ap_CS_fsm_state11) & ((icmp_ln1073_1_fu_817_p2 == 1'd0) | (icmp_ln1073_reg_1377 == 1'd1)))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            if (((1'd0 == and_ln59_1_fu_975_p2) & (1'b1 == ap_CS_fsm_state14))) begin
                ap_NS_fsm = ap_ST_fsm_state16;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            if (((1'b1 == ap_CS_fsm_state16) & (((icmp_ln1073_1_reg_1387 == 1'd1) & (icmp_ln1073_reg_1377 == 1'd0) & (1'd0 == and_ln59_1_reg_1447)) | ((icmp_ln1073_1_reg_1387 == 1'd1) & (icmp_ln1073_reg_1377 == 1'd0) & (1'd0 == and_ln59_2_fu_1025_p2))))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else if (((1'b1 == ap_CS_fsm_state16) & ((icmp_ln1073_reg_1377 == 1'd1) | ((icmp_ln1073_1_reg_1387 == 1'd0) | ((icmp_ln60_fu_1031_p2 == 1'd1) & (1'd1 == and_ln59_2_fu_1025_p2) & (1'd1 == and_ln59_1_reg_1447)))))) begin
                ap_NS_fsm = ap_ST_fsm_state17;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state12;
            end
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            if ((~((destStream_full_n == 1'b0) & (in_command_reg_1212 == 8'd2)) & (1'b1 == ap_CS_fsm_state20))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state20;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln49_fu_822_p2 = (i_3_reg_394 + 8'd1);

assign add_ln55_fu_884_p2 = (j_reg_405 + 64'd1);

assign add_ln59_1_fu_857_p2 = (shl_ln59_reg_1396 + trunc_ln59_fu_853_p1);

assign add_ln59_fu_842_p2 = (zext_ln512_reg_1367 + zext_ln59_fu_838_p1);

assign add_ln70_fu_717_p2 = (i_reg_369 + 4'd1);

assign and_ln513_fu_1037_p2 = (vld_reg_380 & hasReg_reg_417);

assign and_ln59_1_fu_975_p2 = (grp_fu_458_p2 & and_ln59_fu_969_p2);

assign and_ln59_2_fu_1025_p2 = (or_ln59_2_fu_1021_p2 & grp_fu_458_p2);

assign and_ln59_fu_969_p2 = (or_ln59_fu_947_p2 & or_ln59_1_fu_963_p2);

assign and_ln73_fu_780_p2 = (or_ln73_fu_770_p2 & or_ln73_3_fu_774_p2);

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state20 = ((destStream_full_n == 1'b0) & (in_command_reg_1212 == 8'd2));
end

always @ (*) begin
    ap_block_state7 = ((destStream_full_n == 1'b0) & (in_command_reg_1212 == 8'd3));
end

always @ (*) begin
    ap_block_state7_on_subcall_done = ((grp_insert_point_fu_430_ap_done == 1'b0) & (in_command_reg_1212 == 8'd3));
end

always @ (*) begin
    ap_condition_1137 = ((icmp_ln60_fu_1031_p2 == 1'd0) & (icmp_ln1073_1_reg_1387 == 1'd1) & (1'd1 == and_ln59_2_fu_1025_p2) & (1'd1 == and_ln59_1_reg_1447) & (1'b1 == ap_CS_fsm_state16));
end

assign ap_done = ap_done_reg;

assign ap_ready = 1'b0;

assign bitcast_ln174_10_fu_1055_p1 = out_AOV_load_10_reg_1487;

assign bitcast_ln174_11_fu_1058_p1 = out_AOV_load_11_reg_1492;

assign bitcast_ln174_12_fu_1061_p1 = out_AOV_load_12_reg_1497;

assign bitcast_ln174_13_fu_1064_p1 = out_AOV_load_13_reg_1502;

assign bitcast_ln174_14_fu_1067_p1 = out_AOV_q0;

assign bitcast_ln174_15_fu_1071_p1 = out_AOV_q1;

assign bitcast_ln174_1_fu_661_p1 = out_AOV_load_1_reg_1293;

assign bitcast_ln174_2_fu_664_p1 = out_AOV_load_2_reg_1298;

assign bitcast_ln174_3_fu_667_p1 = out_AOV_load_3_reg_1303;

assign bitcast_ln174_4_fu_670_p1 = out_AOV_load_4_reg_1313;

assign bitcast_ln174_5_fu_673_p1 = out_AOV_load_5_reg_1318;

assign bitcast_ln174_6_fu_676_p1 = out_AOV_q0;

assign bitcast_ln174_7_fu_680_p1 = out_AOV_q1;

assign bitcast_ln174_8_fu_1049_p1 = out_AOV_load_8_reg_1477;

assign bitcast_ln174_9_fu_1052_p1 = out_AOV_load_9_reg_1482;

assign bitcast_ln174_fu_658_p1 = out_AOV_load_reg_1288;

assign bitcast_ln59_1_fu_930_p1 = tmp_101_reg_1421;

assign bitcast_ln59_2_fu_991_p1 = tmp_102_fu_981_p4;

assign bitcast_ln59_fu_900_p1 = tmp_100_fu_890_p4;

assign bitcast_ln73_fu_740_p1 = p_x_assign_fu_723_p10;

assign empty_fu_629_p2 = (loop_index_reg_358 + 4'd1);

assign exitcond1_fu_623_p2 = ((loop_index_reg_358 == 4'd8) ? 1'b1 : 1'b0);

assign fault_fu_1043_p2 = (1'd1 ^ and_ln513_fu_1037_p2);

assign grp_fu_473_p4 = {{sourceStream_read_reg_1190[39:16]}};

assign grp_insert_point_fu_430_ap_start = grp_insert_point_fu_430_ap_start_reg;

assign icmp_ln1073_1_fu_817_p2 = ((i_3_reg_394 < n_regions_V_1_reg_1372) ? 1'b1 : 1'b0);

assign icmp_ln1073_fu_807_p2 = ((n_regions_V_q0 == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln59_1_fu_924_p2 = ((trunc_ln59_1_fu_914_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln59_2_fu_951_p2 = ((tmp_122_fu_933_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln59_3_fu_957_p2 = ((trunc_ln59_2_fu_943_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln59_4_fu_1009_p2 = ((tmp_124_fu_995_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln59_5_fu_1015_p2 = ((trunc_ln59_3_fu_1005_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln59_fu_918_p2 = ((tmp_fu_904_p4 != 8'd255) ? 1'b1 : 1'b0);

assign icmp_ln60_fu_1031_p2 = ((j_reg_405 == 64'd7) ? 1'b1 : 1'b0);

assign icmp_ln70_fu_711_p2 = ((i_reg_369 == 4'd8) ? 1'b1 : 1'b0);

assign icmp_ln73_2_fu_764_p2 = ((trunc_ln73_fu_754_p1 == 23'd0) ? 1'b1 : 1'b0);

assign icmp_ln73_fu_758_p2 = ((tmp_119_fu_744_p4 != 8'd255) ? 1'b1 : 1'b0);

assign in_AOV_1_fu_590_p1 = trunc_ln145_5_fu_516_p4;

assign in_AOV_2_fu_594_p1 = trunc_ln145_6_fu_526_p4;

assign in_AOV_3_fu_598_p1 = trunc_ln145_7_fu_536_p4;

assign in_AOV_4_fu_602_p1 = trunc_ln145_8_fu_546_p4;

assign in_AOV_5_fu_606_p1 = trunc_ln145_9_fu_556_p4;

assign in_AOV_6_fu_610_p1 = trunc_ln145_1_fu_566_p4;

assign in_AOV_7_fu_614_p1 = trunc_ln145_2_fu_576_p4;

assign in_AOV_fu_586_p1 = trunc_ln145_4_fu_506_p4;

assign in_checkId_V_fu_482_p1 = sourceStream_dout[7:0];

assign loop_index_cast_fu_618_p1 = loop_index_reg_358;

assign n_regions_V_d0 = grp_insert_point_fu_430_ap_return;

assign or_ln174_1_fu_1136_p5 = {{{{tmp_127_fu_1116_p4}, {tmp_8_fu_1108_p3}}, {tmp_128_fu_1126_p4}}, {in_checkId_V_reg_1196}};

assign or_ln174_2_fu_684_p13 = {{{{{{{{{{{{bitcast_ln174_7_fu_680_p1}, {bitcast_ln174_6_fu_676_p1}}, {bitcast_ln174_5_fu_673_p1}}, {bitcast_ln174_4_fu_670_p1}}, {bitcast_ln174_3_fu_667_p1}}, {bitcast_ln174_2_fu_664_p1}}, {bitcast_ln174_1_fu_661_p1}}, {bitcast_ln174_fu_658_p1}}, {2'd0}}, {trunc_ln145_s_reg_1206}}, {grp_fu_473_p4}}, {in_checkId_V_reg_1196}};

assign or_ln174_fu_1102_p2 = (or_ln174_s_fu_1075_p14 | 320'd281474976710656);

assign or_ln174_s_fu_1075_p14 = {{{{{{{{{{{{{bitcast_ln174_15_fu_1071_p1}, {bitcast_ln174_14_fu_1067_p1}}, {bitcast_ln174_13_fu_1064_p1}}, {bitcast_ln174_12_fu_1061_p1}}, {bitcast_ln174_11_fu_1058_p1}}, {bitcast_ln174_10_fu_1055_p1}}, {bitcast_ln174_9_fu_1052_p1}}, {bitcast_ln174_8_fu_1049_p1}}, {23'd0}}, {fault_fu_1043_p2}}, {trunc_ln145_s_reg_1206}}, {tmp_139_reg_1472}}, {in_checkId_V_reg_1196}};

assign or_ln59_1_fu_963_p2 = (icmp_ln59_3_fu_957_p2 | icmp_ln59_2_fu_951_p2);

assign or_ln59_2_fu_1021_p2 = (icmp_ln59_5_reg_1461 | icmp_ln59_4_reg_1456);

assign or_ln59_fu_947_p2 = (icmp_ln59_reg_1437 | icmp_ln59_1_reg_1442);

assign or_ln73_2_fu_786_p2 = (grp_fu_458_p2 | and_ln73_fu_780_p2);

assign or_ln73_3_fu_774_p2 = (grp_fu_468_p2 | grp_fu_463_p2);

assign or_ln73_fu_770_p2 = (icmp_ln73_reg_1349 | icmp_ln73_2_reg_1354);

assign regions_1_address1 = grp_insert_point_fu_430_regions_min_1_address1;

assign regions_1_d0 = grp_insert_point_fu_430_regions_min_1_d0;

assign regions_1_d1 = grp_insert_point_fu_430_regions_min_1_d1;

assign regions_2_address1 = grp_insert_point_fu_430_regions_max_0_address1;

assign regions_2_d0 = grp_insert_point_fu_430_regions_max_0_d0;

assign regions_2_d1 = grp_insert_point_fu_430_regions_max_0_d1;

assign regions_3_address1 = grp_insert_point_fu_430_regions_max_1_address1;

assign regions_3_d0 = grp_insert_point_fu_430_regions_max_1_d0;

assign regions_3_d1 = grp_insert_point_fu_430_regions_max_1_d1;

assign regions_4_address0 = grp_insert_point_fu_430_regions_center_0_address0;

assign regions_4_address1 = grp_insert_point_fu_430_regions_center_0_address1;

assign regions_4_ce0 = grp_insert_point_fu_430_regions_center_0_ce0;

assign regions_4_ce1 = grp_insert_point_fu_430_regions_center_0_ce1;

assign regions_4_d0 = grp_insert_point_fu_430_regions_center_0_d0;

assign regions_4_d1 = grp_insert_point_fu_430_regions_center_0_d1;

assign regions_4_we0 = grp_insert_point_fu_430_regions_center_0_we0;

assign regions_4_we1 = grp_insert_point_fu_430_regions_center_0_we1;

assign regions_5_address0 = grp_insert_point_fu_430_regions_center_1_address0;

assign regions_5_address1 = grp_insert_point_fu_430_regions_center_1_address1;

assign regions_5_ce0 = grp_insert_point_fu_430_regions_center_1_ce0;

assign regions_5_ce1 = grp_insert_point_fu_430_regions_center_1_ce1;

assign regions_5_d0 = grp_insert_point_fu_430_regions_center_1_d0;

assign regions_5_d1 = grp_insert_point_fu_430_regions_center_1_d1;

assign regions_5_we0 = grp_insert_point_fu_430_regions_center_1_we0;

assign regions_5_we1 = grp_insert_point_fu_430_regions_center_1_we1;

assign regions_address1 = grp_insert_point_fu_430_regions_min_0_address1;

assign regions_d0 = grp_insert_point_fu_430_regions_min_0_d0;

assign regions_d1 = grp_insert_point_fu_430_regions_min_0_d1;

assign shl_ln59_fu_847_p2 = add_ln59_fu_842_p2 << 12'd3;

assign tmp_119_fu_744_p4 = {{bitcast_ln73_fu_740_p1[30:23]}};

assign tmp_122_fu_933_p4 = {{bitcast_ln59_1_fu_930_p1[30:23]}};

assign tmp_124_fu_995_p4 = {{bitcast_ln59_2_fu_991_p1[30:23]}};

assign tmp_127_fu_1116_p4 = {{or_ln174_fu_1102_p2[319:64]}};

assign tmp_128_fu_1126_p4 = {{or_ln174_fu_1102_p2[40:8]}};

assign tmp_137_fu_796_p3 = {{in_checkId_V_reg_1196}, {3'd0}};

assign tmp_138_fu_828_p4 = {{i_3_reg_394[7:1]}};

assign tmp_8_fu_1108_p3 = or_ln174_fu_1102_p2[320'd48];

assign tmp_fu_904_p4 = {{bitcast_ln59_fu_900_p1[30:23]}};

assign trunc_ln1073_fu_813_p1 = i_3_reg_394[0:0];

assign trunc_ln145_1_fu_566_p4 = {{sourceStream_dout[287:256]}};

assign trunc_ln145_2_fu_576_p4 = {{sourceStream_dout[319:288]}};

assign trunc_ln145_4_fu_506_p4 = {{sourceStream_dout[95:64]}};

assign trunc_ln145_5_fu_516_p4 = {{sourceStream_dout[127:96]}};

assign trunc_ln145_6_fu_526_p4 = {{sourceStream_dout[159:128]}};

assign trunc_ln145_7_fu_536_p4 = {{sourceStream_dout[191:160]}};

assign trunc_ln145_8_fu_546_p4 = {{sourceStream_dout[223:192]}};

assign trunc_ln145_9_fu_556_p4 = {{sourceStream_dout[255:224]}};

assign trunc_ln526_fu_654_p1 = sourceStream_read_reg_1190[5:0];

assign trunc_ln59_1_fu_914_p1 = bitcast_ln59_fu_900_p1[22:0];

assign trunc_ln59_2_fu_943_p1 = bitcast_ln59_1_fu_930_p1[22:0];

assign trunc_ln59_3_fu_1005_p1 = bitcast_ln59_2_fu_991_p1[22:0];

assign trunc_ln59_fu_853_p1 = j_reg_405[11:0];

assign trunc_ln73_fu_754_p1 = bitcast_ln73_fu_740_p1[22:0];

assign zext_ln512_fu_803_p1 = tmp_137_fu_796_p3;

assign zext_ln587_2_fu_792_p1 = in_checkId_V_reg_1196;

assign zext_ln587_fu_650_p1 = in_checkId_V_reg_1196;

assign zext_ln59_1_fu_862_p1 = add_ln59_1_fu_857_p2;

assign zext_ln59_fu_838_p1 = tmp_138_fu_828_p4;

always @ (posedge ap_clk) begin
    ap_done_reg <= 1'b0;
    zext_ln512_reg_1367[2:0] <= 3'b000;
    zext_ln512_reg_1367[11] <= 1'b0;
    shl_ln59_reg_1396[2:0] <= 3'b000;
end

endmodule //run_compute
