// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module run_read_data (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        sourceStream_din,
        sourceStream_num_data_valid,
        sourceStream_fifo_cap,
        sourceStream_full_n,
        sourceStream_write,
        m_axi_gmem_AWVALID,
        m_axi_gmem_AWREADY,
        m_axi_gmem_AWADDR,
        m_axi_gmem_AWID,
        m_axi_gmem_AWLEN,
        m_axi_gmem_AWSIZE,
        m_axi_gmem_AWBURST,
        m_axi_gmem_AWLOCK,
        m_axi_gmem_AWCACHE,
        m_axi_gmem_AWPROT,
        m_axi_gmem_AWQOS,
        m_axi_gmem_AWREGION,
        m_axi_gmem_AWUSER,
        m_axi_gmem_WVALID,
        m_axi_gmem_WREADY,
        m_axi_gmem_WDATA,
        m_axi_gmem_WSTRB,
        m_axi_gmem_WLAST,
        m_axi_gmem_WID,
        m_axi_gmem_WUSER,
        m_axi_gmem_ARVALID,
        m_axi_gmem_ARREADY,
        m_axi_gmem_ARADDR,
        m_axi_gmem_ARID,
        m_axi_gmem_ARLEN,
        m_axi_gmem_ARSIZE,
        m_axi_gmem_ARBURST,
        m_axi_gmem_ARLOCK,
        m_axi_gmem_ARCACHE,
        m_axi_gmem_ARPROT,
        m_axi_gmem_ARQOS,
        m_axi_gmem_ARREGION,
        m_axi_gmem_ARUSER,
        m_axi_gmem_RVALID,
        m_axi_gmem_RREADY,
        m_axi_gmem_RDATA,
        m_axi_gmem_RLAST,
        m_axi_gmem_RID,
        m_axi_gmem_RFIFONUM,
        m_axi_gmem_RUSER,
        m_axi_gmem_RRESP,
        m_axi_gmem_BVALID,
        m_axi_gmem_BREADY,
        m_axi_gmem_BRESP,
        m_axi_gmem_BID,
        m_axi_gmem_BUSER,
        inputAOV,
        startCopy,
        startCopy_ap_vld,
        startCopy_ap_ack,
        copying,
        copying_ap_vld
);

parameter    ap_ST_fsm_state1 = 75'd1;
parameter    ap_ST_fsm_state2 = 75'd2;
parameter    ap_ST_fsm_state3 = 75'd4;
parameter    ap_ST_fsm_state4 = 75'd8;
parameter    ap_ST_fsm_state5 = 75'd16;
parameter    ap_ST_fsm_state6 = 75'd32;
parameter    ap_ST_fsm_state7 = 75'd64;
parameter    ap_ST_fsm_state8 = 75'd128;
parameter    ap_ST_fsm_state9 = 75'd256;
parameter    ap_ST_fsm_state10 = 75'd512;
parameter    ap_ST_fsm_state11 = 75'd1024;
parameter    ap_ST_fsm_state12 = 75'd2048;
parameter    ap_ST_fsm_state13 = 75'd4096;
parameter    ap_ST_fsm_state14 = 75'd8192;
parameter    ap_ST_fsm_state15 = 75'd16384;
parameter    ap_ST_fsm_state16 = 75'd32768;
parameter    ap_ST_fsm_state17 = 75'd65536;
parameter    ap_ST_fsm_state18 = 75'd131072;
parameter    ap_ST_fsm_state19 = 75'd262144;
parameter    ap_ST_fsm_state20 = 75'd524288;
parameter    ap_ST_fsm_state21 = 75'd1048576;
parameter    ap_ST_fsm_state22 = 75'd2097152;
parameter    ap_ST_fsm_state23 = 75'd4194304;
parameter    ap_ST_fsm_state24 = 75'd8388608;
parameter    ap_ST_fsm_state25 = 75'd16777216;
parameter    ap_ST_fsm_state26 = 75'd33554432;
parameter    ap_ST_fsm_state27 = 75'd67108864;
parameter    ap_ST_fsm_state28 = 75'd134217728;
parameter    ap_ST_fsm_state29 = 75'd268435456;
parameter    ap_ST_fsm_state30 = 75'd536870912;
parameter    ap_ST_fsm_state31 = 75'd1073741824;
parameter    ap_ST_fsm_state32 = 75'd2147483648;
parameter    ap_ST_fsm_state33 = 75'd4294967296;
parameter    ap_ST_fsm_state34 = 75'd8589934592;
parameter    ap_ST_fsm_state35 = 75'd17179869184;
parameter    ap_ST_fsm_state36 = 75'd34359738368;
parameter    ap_ST_fsm_state37 = 75'd68719476736;
parameter    ap_ST_fsm_state38 = 75'd137438953472;
parameter    ap_ST_fsm_state39 = 75'd274877906944;
parameter    ap_ST_fsm_state40 = 75'd549755813888;
parameter    ap_ST_fsm_state41 = 75'd1099511627776;
parameter    ap_ST_fsm_state42 = 75'd2199023255552;
parameter    ap_ST_fsm_state43 = 75'd4398046511104;
parameter    ap_ST_fsm_state44 = 75'd8796093022208;
parameter    ap_ST_fsm_state45 = 75'd17592186044416;
parameter    ap_ST_fsm_state46 = 75'd35184372088832;
parameter    ap_ST_fsm_state47 = 75'd70368744177664;
parameter    ap_ST_fsm_state48 = 75'd140737488355328;
parameter    ap_ST_fsm_state49 = 75'd281474976710656;
parameter    ap_ST_fsm_state50 = 75'd562949953421312;
parameter    ap_ST_fsm_state51 = 75'd1125899906842624;
parameter    ap_ST_fsm_state52 = 75'd2251799813685248;
parameter    ap_ST_fsm_state53 = 75'd4503599627370496;
parameter    ap_ST_fsm_state54 = 75'd9007199254740992;
parameter    ap_ST_fsm_state55 = 75'd18014398509481984;
parameter    ap_ST_fsm_state56 = 75'd36028797018963968;
parameter    ap_ST_fsm_state57 = 75'd72057594037927936;
parameter    ap_ST_fsm_state58 = 75'd144115188075855872;
parameter    ap_ST_fsm_state59 = 75'd288230376151711744;
parameter    ap_ST_fsm_state60 = 75'd576460752303423488;
parameter    ap_ST_fsm_state61 = 75'd1152921504606846976;
parameter    ap_ST_fsm_state62 = 75'd2305843009213693952;
parameter    ap_ST_fsm_state63 = 75'd4611686018427387904;
parameter    ap_ST_fsm_state64 = 75'd9223372036854775808;
parameter    ap_ST_fsm_state65 = 75'd18446744073709551616;
parameter    ap_ST_fsm_state66 = 75'd36893488147419103232;
parameter    ap_ST_fsm_state67 = 75'd73786976294838206464;
parameter    ap_ST_fsm_state68 = 75'd147573952589676412928;
parameter    ap_ST_fsm_state69 = 75'd295147905179352825856;
parameter    ap_ST_fsm_state70 = 75'd590295810358705651712;
parameter    ap_ST_fsm_state71 = 75'd1180591620717411303424;
parameter    ap_ST_fsm_state72 = 75'd2361183241434822606848;
parameter    ap_ST_fsm_state73 = 75'd4722366482869645213696;
parameter    ap_ST_fsm_state74 = 75'd9444732965739290427392;
parameter    ap_ST_fsm_state75 = 75'd18889465931478580854784;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [319:0] sourceStream_din;
input  [1:0] sourceStream_num_data_valid;
input  [1:0] sourceStream_fifo_cap;
input   sourceStream_full_n;
output   sourceStream_write;
output   m_axi_gmem_AWVALID;
input   m_axi_gmem_AWREADY;
output  [63:0] m_axi_gmem_AWADDR;
output  [0:0] m_axi_gmem_AWID;
output  [31:0] m_axi_gmem_AWLEN;
output  [2:0] m_axi_gmem_AWSIZE;
output  [1:0] m_axi_gmem_AWBURST;
output  [1:0] m_axi_gmem_AWLOCK;
output  [3:0] m_axi_gmem_AWCACHE;
output  [2:0] m_axi_gmem_AWPROT;
output  [3:0] m_axi_gmem_AWQOS;
output  [3:0] m_axi_gmem_AWREGION;
output  [0:0] m_axi_gmem_AWUSER;
output   m_axi_gmem_WVALID;
input   m_axi_gmem_WREADY;
output  [511:0] m_axi_gmem_WDATA;
output  [63:0] m_axi_gmem_WSTRB;
output   m_axi_gmem_WLAST;
output  [0:0] m_axi_gmem_WID;
output  [0:0] m_axi_gmem_WUSER;
output   m_axi_gmem_ARVALID;
input   m_axi_gmem_ARREADY;
output  [63:0] m_axi_gmem_ARADDR;
output  [0:0] m_axi_gmem_ARID;
output  [31:0] m_axi_gmem_ARLEN;
output  [2:0] m_axi_gmem_ARSIZE;
output  [1:0] m_axi_gmem_ARBURST;
output  [1:0] m_axi_gmem_ARLOCK;
output  [3:0] m_axi_gmem_ARCACHE;
output  [2:0] m_axi_gmem_ARPROT;
output  [3:0] m_axi_gmem_ARQOS;
output  [3:0] m_axi_gmem_ARREGION;
output  [0:0] m_axi_gmem_ARUSER;
input   m_axi_gmem_RVALID;
output   m_axi_gmem_RREADY;
input  [511:0] m_axi_gmem_RDATA;
input   m_axi_gmem_RLAST;
input  [0:0] m_axi_gmem_RID;
input  [8:0] m_axi_gmem_RFIFONUM;
input  [0:0] m_axi_gmem_RUSER;
input  [1:0] m_axi_gmem_RRESP;
input   m_axi_gmem_BVALID;
output   m_axi_gmem_BREADY;
input  [1:0] m_axi_gmem_BRESP;
input  [0:0] m_axi_gmem_BID;
input  [0:0] m_axi_gmem_BUSER;
input  [63:0] inputAOV;
input  [7:0] startCopy;
input   startCopy_ap_vld;
output   startCopy_ap_ack;
output  [7:0] copying;
output   copying_ap_vld;

reg ap_idle;
reg sourceStream_write;
reg m_axi_gmem_ARVALID;
reg[63:0] m_axi_gmem_ARADDR;
reg[0:0] m_axi_gmem_ARID;
reg[31:0] m_axi_gmem_ARLEN;
reg[2:0] m_axi_gmem_ARSIZE;
reg[1:0] m_axi_gmem_ARBURST;
reg[1:0] m_axi_gmem_ARLOCK;
reg[3:0] m_axi_gmem_ARCACHE;
reg[2:0] m_axi_gmem_ARPROT;
reg[3:0] m_axi_gmem_ARQOS;
reg[3:0] m_axi_gmem_ARREGION;
reg[0:0] m_axi_gmem_ARUSER;
reg m_axi_gmem_RREADY;
reg startCopy_ap_ack;
reg[7:0] copying;
reg copying_ap_vld;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [74:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    sourceStream_blk_n;
wire    ap_CS_fsm_state75;
reg   [0:0] icmp_ln557_reg_241;
reg    gmem_blk_n_AR;
wire    ap_CS_fsm_state4;
reg    gmem_blk_n_R;
wire    ap_CS_fsm_state74;
reg    startCopy_blk_n;
wire    ap_CS_fsm_state2;
wire  signed [57:0] trunc_ln_fu_137_p4;
reg   [57:0] trunc_ln_reg_230;
reg   [63:0] gmem_addr_reg_235;
wire   [0:0] icmp_ln557_fu_157_p2;
reg   [511:0] gmem_addr_read_reg_245;
reg   [7:0] tmp2_reg_252;
wire    grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_ap_start;
wire    grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_ap_done;
wire    grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_ap_idle;
wire    grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_ap_ready;
wire    grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWVALID;
wire   [63:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWADDR;
wire   [0:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWID;
wire   [31:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWLEN;
wire   [2:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWSIZE;
wire   [1:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWBURST;
wire   [1:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWLOCK;
wire   [3:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWCACHE;
wire   [2:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWPROT;
wire   [3:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWQOS;
wire   [3:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWREGION;
wire   [0:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWUSER;
wire    grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_WVALID;
wire   [511:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_WDATA;
wire   [63:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_WSTRB;
wire    grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_WLAST;
wire   [0:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_WID;
wire   [0:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_WUSER;
wire    grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARVALID;
wire   [63:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARADDR;
wire   [0:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARID;
wire   [31:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARLEN;
wire   [2:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARSIZE;
wire   [1:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARBURST;
wire   [1:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARLOCK;
wire   [3:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARCACHE;
wire   [2:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARPROT;
wire   [3:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARQOS;
wire   [3:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARREGION;
wire   [0:0] grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARUSER;
wire    grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_RREADY;
wire    grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_BREADY;
reg    grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_ap_start_reg;
wire    ap_CS_fsm_state3;
wire  signed [63:0] sext_ln575_fu_147_p1;
reg    ap_block_state1;
reg   [7:0] copying_preg;
reg    ap_block_state75;
wire   [0:0] icmp_ln591_fu_192_p2;
wire  signed [8:0] sext_ln591_fu_173_p1;
wire   [8:0] add_ln591_fu_176_p2;
wire   [7:0] tmp_fu_182_p4;
wire   [255:0] tmp_8_fu_198_p4;
wire   [39:0] tmp_s_fu_207_p4;
wire   [23:0] trunc_ln174_fu_216_p1;
reg   [74:0] ap_NS_fsm;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
reg    ap_ST_fsm_state3_blk;
reg    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
wire    ap_ST_fsm_state40_blk;
wire    ap_ST_fsm_state41_blk;
wire    ap_ST_fsm_state42_blk;
wire    ap_ST_fsm_state43_blk;
wire    ap_ST_fsm_state44_blk;
wire    ap_ST_fsm_state45_blk;
wire    ap_ST_fsm_state46_blk;
wire    ap_ST_fsm_state47_blk;
wire    ap_ST_fsm_state48_blk;
wire    ap_ST_fsm_state49_blk;
wire    ap_ST_fsm_state50_blk;
wire    ap_ST_fsm_state51_blk;
wire    ap_ST_fsm_state52_blk;
wire    ap_ST_fsm_state53_blk;
wire    ap_ST_fsm_state54_blk;
wire    ap_ST_fsm_state55_blk;
wire    ap_ST_fsm_state56_blk;
wire    ap_ST_fsm_state57_blk;
wire    ap_ST_fsm_state58_blk;
wire    ap_ST_fsm_state59_blk;
wire    ap_ST_fsm_state60_blk;
wire    ap_ST_fsm_state61_blk;
wire    ap_ST_fsm_state62_blk;
wire    ap_ST_fsm_state63_blk;
wire    ap_ST_fsm_state64_blk;
wire    ap_ST_fsm_state65_blk;
wire    ap_ST_fsm_state66_blk;
wire    ap_ST_fsm_state67_blk;
wire    ap_ST_fsm_state68_blk;
wire    ap_ST_fsm_state69_blk;
wire    ap_ST_fsm_state70_blk;
wire    ap_ST_fsm_state71_blk;
wire    ap_ST_fsm_state72_blk;
wire    ap_ST_fsm_state73_blk;
reg    ap_ST_fsm_state74_blk;
reg    ap_ST_fsm_state75_blk;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 75'd1;
#0 grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_ap_start_reg = 1'b0;
#0 copying_preg = 8'd0;
end

run_read_data_Pipeline_VITIS_LOOP_573_2 grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .ap_start(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_ap_start),
    .ap_done(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_ap_done),
    .ap_idle(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_ap_idle),
    .ap_ready(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_ap_ready),
    .m_axi_gmem_AWVALID(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWVALID),
    .m_axi_gmem_AWREADY(1'b0),
    .m_axi_gmem_AWADDR(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWADDR),
    .m_axi_gmem_AWID(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWID),
    .m_axi_gmem_AWLEN(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWLEN),
    .m_axi_gmem_AWSIZE(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWSIZE),
    .m_axi_gmem_AWBURST(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWBURST),
    .m_axi_gmem_AWLOCK(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWLOCK),
    .m_axi_gmem_AWCACHE(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWCACHE),
    .m_axi_gmem_AWPROT(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWPROT),
    .m_axi_gmem_AWQOS(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWQOS),
    .m_axi_gmem_AWREGION(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWREGION),
    .m_axi_gmem_AWUSER(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_AWUSER),
    .m_axi_gmem_WVALID(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_WVALID),
    .m_axi_gmem_WREADY(1'b0),
    .m_axi_gmem_WDATA(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_WDATA),
    .m_axi_gmem_WSTRB(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_WSTRB),
    .m_axi_gmem_WLAST(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_WLAST),
    .m_axi_gmem_WID(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_WID),
    .m_axi_gmem_WUSER(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_WUSER),
    .m_axi_gmem_ARVALID(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARVALID),
    .m_axi_gmem_ARREADY(m_axi_gmem_ARREADY),
    .m_axi_gmem_ARADDR(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARADDR),
    .m_axi_gmem_ARID(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARID),
    .m_axi_gmem_ARLEN(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARLEN),
    .m_axi_gmem_ARSIZE(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARSIZE),
    .m_axi_gmem_ARBURST(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARBURST),
    .m_axi_gmem_ARLOCK(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARLOCK),
    .m_axi_gmem_ARCACHE(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARCACHE),
    .m_axi_gmem_ARPROT(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARPROT),
    .m_axi_gmem_ARQOS(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARQOS),
    .m_axi_gmem_ARREGION(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARREGION),
    .m_axi_gmem_ARUSER(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARUSER),
    .m_axi_gmem_RVALID(m_axi_gmem_RVALID),
    .m_axi_gmem_RREADY(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_RREADY),
    .m_axi_gmem_RDATA(m_axi_gmem_RDATA),
    .m_axi_gmem_RLAST(m_axi_gmem_RLAST),
    .m_axi_gmem_RID(m_axi_gmem_RID),
    .m_axi_gmem_RFIFONUM(m_axi_gmem_RFIFONUM),
    .m_axi_gmem_RUSER(m_axi_gmem_RUSER),
    .m_axi_gmem_RRESP(m_axi_gmem_RRESP),
    .m_axi_gmem_BVALID(1'b0),
    .m_axi_gmem_BREADY(grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_BREADY),
    .m_axi_gmem_BRESP(2'd0),
    .m_axi_gmem_BID(1'd0),
    .m_axi_gmem_BUSER(1'd0),
    .sext_ln575(trunc_ln_reg_230)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        copying_preg <= 8'd0;
    end else begin
        if ((~((icmp_ln557_reg_241 == 1'd0) & (sourceStream_full_n == 1'b0)) & (icmp_ln591_fu_192_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75) & (icmp_ln557_reg_241 == 1'd0))) begin
            copying_preg <= 8'd0;
        end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln557_fu_157_p2 == 1'd0) & (startCopy_ap_vld == 1'b1))) begin
            copying_preg <= 8'd255;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_ap_start_reg <= 1'b0;
    end else begin
        if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln557_fu_157_p2 == 1'd0) & (startCopy_ap_vld == 1'b1))) begin
            grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_ap_start_reg <= 1'b1;
        end else if ((grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_ap_ready == 1'b1)) begin
            grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_ap_start_reg <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        gmem_addr_read_reg_245 <= m_axi_gmem_RDATA;
        tmp2_reg_252 <= {{m_axi_gmem_RDATA[55:48]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state1)) begin
        gmem_addr_reg_235 <= sext_ln575_fu_147_p1;
        trunc_ln_reg_230 <= {{inputAOV[63:6]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        icmp_ln557_reg_241 <= icmp_ln557_fu_157_p2;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((startCopy_ap_vld == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

always @ (*) begin
    if ((grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_ap_done == 1'b0)) begin
        ap_ST_fsm_state3_blk = 1'b1;
    end else begin
        ap_ST_fsm_state3_blk = 1'b0;
    end
end

assign ap_ST_fsm_state40_blk = 1'b0;

assign ap_ST_fsm_state41_blk = 1'b0;

assign ap_ST_fsm_state42_blk = 1'b0;

assign ap_ST_fsm_state43_blk = 1'b0;

assign ap_ST_fsm_state44_blk = 1'b0;

assign ap_ST_fsm_state45_blk = 1'b0;

assign ap_ST_fsm_state46_blk = 1'b0;

assign ap_ST_fsm_state47_blk = 1'b0;

assign ap_ST_fsm_state48_blk = 1'b0;

assign ap_ST_fsm_state49_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_ARREADY == 1'b0)) begin
        ap_ST_fsm_state4_blk = 1'b1;
    end else begin
        ap_ST_fsm_state4_blk = 1'b0;
    end
end

assign ap_ST_fsm_state50_blk = 1'b0;

assign ap_ST_fsm_state51_blk = 1'b0;

assign ap_ST_fsm_state52_blk = 1'b0;

assign ap_ST_fsm_state53_blk = 1'b0;

assign ap_ST_fsm_state54_blk = 1'b0;

assign ap_ST_fsm_state55_blk = 1'b0;

assign ap_ST_fsm_state56_blk = 1'b0;

assign ap_ST_fsm_state57_blk = 1'b0;

assign ap_ST_fsm_state58_blk = 1'b0;

assign ap_ST_fsm_state59_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state60_blk = 1'b0;

assign ap_ST_fsm_state61_blk = 1'b0;

assign ap_ST_fsm_state62_blk = 1'b0;

assign ap_ST_fsm_state63_blk = 1'b0;

assign ap_ST_fsm_state64_blk = 1'b0;

assign ap_ST_fsm_state65_blk = 1'b0;

assign ap_ST_fsm_state66_blk = 1'b0;

assign ap_ST_fsm_state67_blk = 1'b0;

assign ap_ST_fsm_state68_blk = 1'b0;

assign ap_ST_fsm_state69_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state70_blk = 1'b0;

assign ap_ST_fsm_state71_blk = 1'b0;

assign ap_ST_fsm_state72_blk = 1'b0;

assign ap_ST_fsm_state73_blk = 1'b0;

always @ (*) begin
    if ((m_axi_gmem_RVALID == 1'b0)) begin
        ap_ST_fsm_state74_blk = 1'b1;
    end else begin
        ap_ST_fsm_state74_blk = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln557_reg_241 == 1'd0) & (sourceStream_full_n == 1'b0))) begin
        ap_ST_fsm_state75_blk = 1'b1;
    end else begin
        ap_ST_fsm_state75_blk = 1'b0;
    end
end

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((icmp_ln557_reg_241 == 1'd0) & (sourceStream_full_n == 1'b0)) & (icmp_ln591_fu_192_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75) & (icmp_ln557_reg_241 == 1'd0))) begin
        copying = 8'd0;
    end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln557_fu_157_p2 == 1'd0) & (startCopy_ap_vld == 1'b1))) begin
        copying = 8'd255;
    end else begin
        copying = copying_preg;
    end
end

always @ (*) begin
    if (((~((icmp_ln557_reg_241 == 1'd0) & (sourceStream_full_n == 1'b0)) & (icmp_ln591_fu_192_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state75) & (icmp_ln557_reg_241 == 1'd0)) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln557_fu_157_p2 == 1'd0) & (startCopy_ap_vld == 1'b1)))) begin
        copying_ap_vld = 1'b1;
    end else begin
        copying_ap_vld = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        gmem_blk_n_AR = m_axi_gmem_ARREADY;
    end else begin
        gmem_blk_n_AR = 1'b1;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state74)) begin
        gmem_blk_n_R = m_axi_gmem_RVALID;
    end else begin
        gmem_blk_n_R = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (m_axi_gmem_ARREADY == 1'b1))) begin
        m_axi_gmem_ARADDR = gmem_addr_reg_235;
    end else if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln557_fu_157_p2 == 1'd0)))) begin
        m_axi_gmem_ARADDR = grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARADDR;
    end else begin
        m_axi_gmem_ARADDR = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln557_fu_157_p2 == 1'd0)))) begin
        m_axi_gmem_ARBURST = grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARBURST;
    end else begin
        m_axi_gmem_ARBURST = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln557_fu_157_p2 == 1'd0)))) begin
        m_axi_gmem_ARCACHE = grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARCACHE;
    end else begin
        m_axi_gmem_ARCACHE = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln557_fu_157_p2 == 1'd0)))) begin
        m_axi_gmem_ARID = grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARID;
    end else begin
        m_axi_gmem_ARID = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (m_axi_gmem_ARREADY == 1'b1))) begin
        m_axi_gmem_ARLEN = 32'd1;
    end else if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln557_fu_157_p2 == 1'd0)))) begin
        m_axi_gmem_ARLEN = grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARLEN;
    end else begin
        m_axi_gmem_ARLEN = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln557_fu_157_p2 == 1'd0)))) begin
        m_axi_gmem_ARLOCK = grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARLOCK;
    end else begin
        m_axi_gmem_ARLOCK = 2'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln557_fu_157_p2 == 1'd0)))) begin
        m_axi_gmem_ARPROT = grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARPROT;
    end else begin
        m_axi_gmem_ARPROT = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln557_fu_157_p2 == 1'd0)))) begin
        m_axi_gmem_ARQOS = grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARQOS;
    end else begin
        m_axi_gmem_ARQOS = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln557_fu_157_p2 == 1'd0)))) begin
        m_axi_gmem_ARREGION = grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARREGION;
    end else begin
        m_axi_gmem_ARREGION = 4'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln557_fu_157_p2 == 1'd0)))) begin
        m_axi_gmem_ARSIZE = grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARSIZE;
    end else begin
        m_axi_gmem_ARSIZE = 3'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln557_fu_157_p2 == 1'd0)))) begin
        m_axi_gmem_ARUSER = grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARUSER;
    end else begin
        m_axi_gmem_ARUSER = 1'd0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & (m_axi_gmem_ARREADY == 1'b1))) begin
        m_axi_gmem_ARVALID = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln557_fu_157_p2 == 1'd0)))) begin
        m_axi_gmem_ARVALID = grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_ARVALID;
    end else begin
        m_axi_gmem_ARVALID = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state74) & (m_axi_gmem_RVALID == 1'b1))) begin
        m_axi_gmem_RREADY = 1'b1;
    end else if (((1'b1 == ap_CS_fsm_state3) | ((1'b1 == ap_CS_fsm_state2) & (icmp_ln557_fu_157_p2 == 1'd0)))) begin
        m_axi_gmem_RREADY = grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_m_axi_gmem_RREADY;
    end else begin
        m_axi_gmem_RREADY = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state75) & (icmp_ln557_reg_241 == 1'd0))) begin
        sourceStream_blk_n = sourceStream_full_n;
    end else begin
        sourceStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((icmp_ln557_reg_241 == 1'd0) & (sourceStream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state75) & (icmp_ln557_reg_241 == 1'd0))) begin
        sourceStream_write = 1'b1;
    end else begin
        sourceStream_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state2) & (startCopy_ap_vld == 1'b1))) begin
        startCopy_ap_ack = 1'b1;
    end else begin
        startCopy_ap_ack = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        startCopy_blk_n = startCopy_ap_vld;
    end else begin
        startCopy_blk_n = 1'b1;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln557_fu_157_p2 == 1'd1) & (startCopy_ap_vld == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else if (((1'b1 == ap_CS_fsm_state2) & (icmp_ln557_fu_157_p2 == 1'd0) & (startCopy_ap_vld == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            if (((grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_ap_done == 1'b1) & (1'b1 == ap_CS_fsm_state3))) begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (m_axi_gmem_ARREADY == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state4;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            ap_NS_fsm = ap_ST_fsm_state41;
        end
        ap_ST_fsm_state41 : begin
            ap_NS_fsm = ap_ST_fsm_state42;
        end
        ap_ST_fsm_state42 : begin
            ap_NS_fsm = ap_ST_fsm_state43;
        end
        ap_ST_fsm_state43 : begin
            ap_NS_fsm = ap_ST_fsm_state44;
        end
        ap_ST_fsm_state44 : begin
            ap_NS_fsm = ap_ST_fsm_state45;
        end
        ap_ST_fsm_state45 : begin
            ap_NS_fsm = ap_ST_fsm_state46;
        end
        ap_ST_fsm_state46 : begin
            ap_NS_fsm = ap_ST_fsm_state47;
        end
        ap_ST_fsm_state47 : begin
            ap_NS_fsm = ap_ST_fsm_state48;
        end
        ap_ST_fsm_state48 : begin
            ap_NS_fsm = ap_ST_fsm_state49;
        end
        ap_ST_fsm_state49 : begin
            ap_NS_fsm = ap_ST_fsm_state50;
        end
        ap_ST_fsm_state50 : begin
            ap_NS_fsm = ap_ST_fsm_state51;
        end
        ap_ST_fsm_state51 : begin
            ap_NS_fsm = ap_ST_fsm_state52;
        end
        ap_ST_fsm_state52 : begin
            ap_NS_fsm = ap_ST_fsm_state53;
        end
        ap_ST_fsm_state53 : begin
            ap_NS_fsm = ap_ST_fsm_state54;
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state55;
        end
        ap_ST_fsm_state55 : begin
            ap_NS_fsm = ap_ST_fsm_state56;
        end
        ap_ST_fsm_state56 : begin
            ap_NS_fsm = ap_ST_fsm_state57;
        end
        ap_ST_fsm_state57 : begin
            ap_NS_fsm = ap_ST_fsm_state58;
        end
        ap_ST_fsm_state58 : begin
            ap_NS_fsm = ap_ST_fsm_state59;
        end
        ap_ST_fsm_state59 : begin
            ap_NS_fsm = ap_ST_fsm_state60;
        end
        ap_ST_fsm_state60 : begin
            ap_NS_fsm = ap_ST_fsm_state61;
        end
        ap_ST_fsm_state61 : begin
            ap_NS_fsm = ap_ST_fsm_state62;
        end
        ap_ST_fsm_state62 : begin
            ap_NS_fsm = ap_ST_fsm_state63;
        end
        ap_ST_fsm_state63 : begin
            ap_NS_fsm = ap_ST_fsm_state64;
        end
        ap_ST_fsm_state64 : begin
            ap_NS_fsm = ap_ST_fsm_state65;
        end
        ap_ST_fsm_state65 : begin
            ap_NS_fsm = ap_ST_fsm_state66;
        end
        ap_ST_fsm_state66 : begin
            ap_NS_fsm = ap_ST_fsm_state67;
        end
        ap_ST_fsm_state67 : begin
            ap_NS_fsm = ap_ST_fsm_state68;
        end
        ap_ST_fsm_state68 : begin
            ap_NS_fsm = ap_ST_fsm_state69;
        end
        ap_ST_fsm_state69 : begin
            ap_NS_fsm = ap_ST_fsm_state70;
        end
        ap_ST_fsm_state70 : begin
            ap_NS_fsm = ap_ST_fsm_state71;
        end
        ap_ST_fsm_state71 : begin
            ap_NS_fsm = ap_ST_fsm_state72;
        end
        ap_ST_fsm_state72 : begin
            ap_NS_fsm = ap_ST_fsm_state73;
        end
        ap_ST_fsm_state73 : begin
            ap_NS_fsm = ap_ST_fsm_state74;
        end
        ap_ST_fsm_state74 : begin
            if (((1'b1 == ap_CS_fsm_state74) & (m_axi_gmem_RVALID == 1'b1))) begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state74;
            end
        end
        ap_ST_fsm_state75 : begin
            if ((~((icmp_ln557_reg_241 == 1'd0) & (sourceStream_full_n == 1'b0)) & (1'b1 == ap_CS_fsm_state75))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state75;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln591_fu_176_p2 = ($signed(sext_ln591_fu_173_p1) + $signed(9'd510));

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state74 = ap_CS_fsm[32'd73];

assign ap_CS_fsm_state75 = ap_CS_fsm[32'd74];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state75 = ((icmp_ln557_reg_241 == 1'd0) & (sourceStream_full_n == 1'b0));
end

assign ap_done = ap_done_reg;

assign ap_ready = 1'b0;

assign grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_ap_start = grp_read_data_Pipeline_VITIS_LOOP_573_2_fu_130_ap_start_reg;

assign icmp_ln557_fu_157_p2 = ((startCopy == 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln591_fu_192_p2 = ((tmp_fu_182_p4 == 8'd0) ? 1'b1 : 1'b0);

assign m_axi_gmem_AWADDR = 64'd0;

assign m_axi_gmem_AWBURST = 2'd0;

assign m_axi_gmem_AWCACHE = 4'd0;

assign m_axi_gmem_AWID = 1'd0;

assign m_axi_gmem_AWLEN = 32'd0;

assign m_axi_gmem_AWLOCK = 2'd0;

assign m_axi_gmem_AWPROT = 3'd0;

assign m_axi_gmem_AWQOS = 4'd0;

assign m_axi_gmem_AWREGION = 4'd0;

assign m_axi_gmem_AWSIZE = 3'd0;

assign m_axi_gmem_AWUSER = 1'd0;

assign m_axi_gmem_AWVALID = 1'b0;

assign m_axi_gmem_BREADY = 1'b0;

assign m_axi_gmem_WDATA = 512'd0;

assign m_axi_gmem_WID = 1'd0;

assign m_axi_gmem_WLAST = 1'b0;

assign m_axi_gmem_WSTRB = 64'd0;

assign m_axi_gmem_WUSER = 1'd0;

assign m_axi_gmem_WVALID = 1'b0;

assign sext_ln575_fu_147_p1 = trunc_ln_fu_137_p4;

assign sext_ln591_fu_173_p1 = $signed(tmp2_reg_252);

assign sourceStream_din = {{{tmp_8_fu_198_p4}, {tmp_s_fu_207_p4}}, {trunc_ln174_fu_216_p1}};

assign tmp_8_fu_198_p4 = {{gmem_addr_read_reg_245[351:96]}};

assign tmp_fu_182_p4 = {{add_ln591_fu_176_p2[8:1]}};

assign tmp_s_fu_207_p4 = {{gmem_addr_read_reg_245[71:32]}};

assign trunc_ln174_fu_216_p1 = gmem_addr_read_reg_245[23:0];

assign trunc_ln_fu_137_p4 = {{inputAOV[63:6]}};

always @ (posedge ap_clk) begin
    ap_done_reg <= 1'b0;
end

endmodule //run_read_data
