// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module run_handle_outcome (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        errorInTask_address0,
        errorInTask_ce0,
        errorInTask_we0,
        errorInTask_d0,
        errorInTask_q0,
        outcomeInRam_address0,
        outcomeInRam_ce0,
        outcomeInRam_we0,
        outcomeInRam_d0,
        failedTask,
        failedTask_ap_vld,
        failedTask_ap_ack,
        destStream_dout,
        destStream_num_data_valid,
        destStream_fifo_cap,
        destStream_empty_n,
        destStream_read
);

parameter    ap_ST_fsm_state1 = 41'd1;
parameter    ap_ST_fsm_state2 = 41'd2;
parameter    ap_ST_fsm_state3 = 41'd4;
parameter    ap_ST_fsm_state4 = 41'd8;
parameter    ap_ST_fsm_state5 = 41'd16;
parameter    ap_ST_fsm_state6 = 41'd32;
parameter    ap_ST_fsm_state7 = 41'd64;
parameter    ap_ST_fsm_state8 = 41'd128;
parameter    ap_ST_fsm_state9 = 41'd256;
parameter    ap_ST_fsm_state10 = 41'd512;
parameter    ap_ST_fsm_state11 = 41'd1024;
parameter    ap_ST_fsm_state12 = 41'd2048;
parameter    ap_ST_fsm_state13 = 41'd4096;
parameter    ap_ST_fsm_state14 = 41'd8192;
parameter    ap_ST_fsm_state15 = 41'd16384;
parameter    ap_ST_fsm_state16 = 41'd32768;
parameter    ap_ST_fsm_state17 = 41'd65536;
parameter    ap_ST_fsm_state18 = 41'd131072;
parameter    ap_ST_fsm_state19 = 41'd262144;
parameter    ap_ST_fsm_state20 = 41'd524288;
parameter    ap_ST_fsm_state21 = 41'd1048576;
parameter    ap_ST_fsm_state22 = 41'd2097152;
parameter    ap_ST_fsm_state23 = 41'd4194304;
parameter    ap_ST_fsm_state24 = 41'd8388608;
parameter    ap_ST_fsm_state25 = 41'd16777216;
parameter    ap_ST_fsm_state26 = 41'd33554432;
parameter    ap_ST_fsm_state27 = 41'd67108864;
parameter    ap_ST_fsm_state28 = 41'd134217728;
parameter    ap_ST_fsm_state29 = 41'd268435456;
parameter    ap_ST_fsm_state30 = 41'd536870912;
parameter    ap_ST_fsm_state31 = 41'd1073741824;
parameter    ap_ST_fsm_state32 = 41'd2147483648;
parameter    ap_ST_fsm_state33 = 41'd4294967296;
parameter    ap_ST_fsm_state34 = 41'd8589934592;
parameter    ap_ST_fsm_state35 = 41'd17179869184;
parameter    ap_ST_fsm_state36 = 41'd34359738368;
parameter    ap_ST_fsm_state37 = 41'd68719476736;
parameter    ap_ST_fsm_state38 = 41'd137438953472;
parameter    ap_ST_fsm_state39 = 41'd274877906944;
parameter    ap_ST_fsm_state40 = 41'd549755813888;
parameter    ap_ST_fsm_state41 = 41'd1099511627776;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output  [3:0] errorInTask_address0;
output   errorInTask_ce0;
output   errorInTask_we0;
output  [7:0] errorInTask_d0;
input  [7:0] errorInTask_q0;
output  [3:0] outcomeInRam_address0;
output   outcomeInRam_ce0;
output  [35:0] outcomeInRam_we0;
output  [287:0] outcomeInRam_d0;
output  [15:0] failedTask;
output   failedTask_ap_vld;
input   failedTask_ap_ack;
input  [296:0] destStream_dout;
input  [1:0] destStream_num_data_valid;
input  [1:0] destStream_fifo_cap;
input   destStream_empty_n;
output   destStream_read;

reg ap_idle;
reg[3:0] errorInTask_address0;
reg errorInTask_ce0;
reg errorInTask_we0;
reg[3:0] outcomeInRam_address0;
reg outcomeInRam_ce0;
reg[35:0] outcomeInRam_we0;
reg[287:0] outcomeInRam_d0;
reg destStream_read;

reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [40:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg   [3:0] failedTaskExecutionIds_V_address0;
reg    failedTaskExecutionIds_V_ce0;
reg    failedTaskExecutionIds_V_we0;
wire   [7:0] failedTaskExecutionIds_V_q0;
reg    failedTask_blk_n;
wire    ap_CS_fsm_state40;
reg   [0:0] in_fault_reg_546;
wire    ap_CS_fsm_state41;
reg   [0:0] icmp_ln1065_reg_572;
reg   [0:0] icmp_ln454_reg_563;
reg    destStream_blk_n;
wire    ap_CS_fsm_state2;
reg   [7:0] tmp_executionId_V_reg_540;
wire   [63:0] zext_ln587_fu_201_p1;
reg   [63:0] zext_ln587_reg_551;
reg   [3:0] errorInTask_addr_reg_558;
wire   [0:0] icmp_ln454_fu_302_p2;
wire    ap_CS_fsm_state3;
wire   [0:0] icmp_ln1065_fu_308_p2;
wire    ap_CS_fsm_state4;
wire   [287:0] zext_ln458_fu_313_p1;
reg   [3:0] outcomeInRam_addr_reg_581;
wire   [287:0] zext_ln458_1_fu_322_p1;
wire    ap_CS_fsm_state5;
wire   [287:0] zext_ln458_2_fu_327_p1;
wire    ap_CS_fsm_state6;
wire   [287:0] zext_ln458_3_fu_332_p1;
wire    ap_CS_fsm_state7;
wire   [287:0] zext_ln458_4_fu_337_p1;
wire    ap_CS_fsm_state8;
wire   [287:0] zext_ln458_5_fu_342_p1;
wire    ap_CS_fsm_state9;
wire   [287:0] zext_ln458_6_fu_347_p1;
wire    ap_CS_fsm_state10;
wire   [287:0] zext_ln458_7_fu_352_p1;
wire    ap_CS_fsm_state11;
wire   [287:0] zext_ln458_8_fu_357_p1;
wire    ap_CS_fsm_state12;
wire   [287:0] zext_ln458_9_fu_362_p1;
wire    ap_CS_fsm_state13;
wire   [287:0] zext_ln458_10_fu_367_p1;
wire    ap_CS_fsm_state14;
wire   [287:0] zext_ln458_11_fu_372_p1;
wire    ap_CS_fsm_state15;
wire   [287:0] zext_ln458_12_fu_377_p1;
wire    ap_CS_fsm_state16;
wire   [287:0] zext_ln458_13_fu_382_p1;
wire    ap_CS_fsm_state17;
wire   [287:0] zext_ln458_14_fu_387_p1;
wire    ap_CS_fsm_state18;
wire   [287:0] zext_ln458_15_fu_392_p1;
wire    ap_CS_fsm_state19;
wire   [287:0] zext_ln458_16_fu_397_p1;
wire    ap_CS_fsm_state20;
wire   [287:0] zext_ln458_17_fu_402_p1;
wire    ap_CS_fsm_state21;
wire   [287:0] zext_ln458_18_fu_407_p1;
wire    ap_CS_fsm_state22;
wire   [287:0] zext_ln458_19_fu_412_p1;
wire    ap_CS_fsm_state23;
wire   [287:0] zext_ln458_20_fu_417_p1;
wire    ap_CS_fsm_state24;
wire   [287:0] zext_ln458_21_fu_422_p1;
wire    ap_CS_fsm_state25;
wire   [287:0] zext_ln458_22_fu_427_p1;
wire    ap_CS_fsm_state26;
wire   [287:0] zext_ln458_23_fu_432_p1;
wire    ap_CS_fsm_state27;
wire   [287:0] zext_ln458_24_fu_437_p1;
wire    ap_CS_fsm_state28;
wire   [287:0] zext_ln458_25_fu_442_p1;
wire    ap_CS_fsm_state29;
wire   [287:0] zext_ln458_26_fu_447_p1;
wire    ap_CS_fsm_state30;
wire   [287:0] zext_ln458_27_fu_452_p1;
wire    ap_CS_fsm_state31;
wire   [287:0] zext_ln458_28_fu_457_p1;
wire    ap_CS_fsm_state32;
wire   [287:0] zext_ln458_29_fu_462_p1;
wire    ap_CS_fsm_state33;
wire   [287:0] zext_ln458_30_fu_467_p1;
wire    ap_CS_fsm_state34;
wire   [287:0] zext_ln458_31_fu_472_p1;
wire    ap_CS_fsm_state35;
wire   [287:0] zext_ln458_32_fu_477_p1;
wire    ap_CS_fsm_state36;
wire   [287:0] zext_ln458_33_fu_482_p1;
wire    ap_CS_fsm_state37;
wire   [287:0] zext_ln458_34_fu_487_p1;
wire    ap_CS_fsm_state38;
wire   [287:0] zext_ln458_35_fu_492_p1;
wire    ap_CS_fsm_state39;
wire   [3:0] failedTaskExecutionIds_V_addr_1_gep_fu_138_p3;
reg   [7:0] outcome_checkId_V_1_fu_78;
wire   [7:0] tmp_checkId_V_fu_149_p1;
reg    ap_block_state40;
reg    ap_block_state40_io;
wire   [3:0] tmp_taskId_V_fu_163_p4;
reg   [40:0] ap_NS_fsm;
reg    ap_block_state1;
reg    ap_ST_fsm_state1_blk;
reg    ap_ST_fsm_state2_blk;
wire    ap_ST_fsm_state3_blk;
wire    ap_ST_fsm_state4_blk;
wire    ap_ST_fsm_state5_blk;
wire    ap_ST_fsm_state6_blk;
wire    ap_ST_fsm_state7_blk;
wire    ap_ST_fsm_state8_blk;
wire    ap_ST_fsm_state9_blk;
wire    ap_ST_fsm_state10_blk;
wire    ap_ST_fsm_state11_blk;
wire    ap_ST_fsm_state12_blk;
wire    ap_ST_fsm_state13_blk;
wire    ap_ST_fsm_state14_blk;
wire    ap_ST_fsm_state15_blk;
wire    ap_ST_fsm_state16_blk;
wire    ap_ST_fsm_state17_blk;
wire    ap_ST_fsm_state18_blk;
wire    ap_ST_fsm_state19_blk;
wire    ap_ST_fsm_state20_blk;
wire    ap_ST_fsm_state21_blk;
wire    ap_ST_fsm_state22_blk;
wire    ap_ST_fsm_state23_blk;
wire    ap_ST_fsm_state24_blk;
wire    ap_ST_fsm_state25_blk;
wire    ap_ST_fsm_state26_blk;
wire    ap_ST_fsm_state27_blk;
wire    ap_ST_fsm_state28_blk;
wire    ap_ST_fsm_state29_blk;
wire    ap_ST_fsm_state30_blk;
wire    ap_ST_fsm_state31_blk;
wire    ap_ST_fsm_state32_blk;
wire    ap_ST_fsm_state33_blk;
wire    ap_ST_fsm_state34_blk;
wire    ap_ST_fsm_state35_blk;
wire    ap_ST_fsm_state36_blk;
wire    ap_ST_fsm_state37_blk;
wire    ap_ST_fsm_state38_blk;
wire    ap_ST_fsm_state39_blk;
reg    ap_ST_fsm_state40_blk;
reg    ap_predicate_op256_write_state41;
reg    ap_block_state41;
reg    ap_block_state41_io;
reg    ap_ST_fsm_state41_blk;
wire    regslice_forward_failedTask_U_apdone_blk;
reg    failedTask_ap_vld_int_regslice;
wire    failedTask_ap_ack_int_regslice;
wire    regslice_forward_failedTask_U_vld_out;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 41'd1;
end

run_handle_outcome_failedTaskExecutionIds_V_RAM_AUTO_1R1W #(
    .DataWidth( 8 ),
    .AddressRange( 16 ),
    .AddressWidth( 4 ))
failedTaskExecutionIds_V_U(
    .clk(ap_clk),
    .reset(ap_rst),
    .address0(failedTaskExecutionIds_V_address0),
    .ce0(failedTaskExecutionIds_V_ce0),
    .we0(failedTaskExecutionIds_V_we0),
    .d0(tmp_executionId_V_reg_540),
    .q0(failedTaskExecutionIds_V_q0)
);

run_regslice_forward #(
    .DataWidth( 16 ))
regslice_forward_failedTask_U(
    .ap_clk(ap_clk),
    .ap_rst(ap_rst),
    .data_in(16'd0),
    .vld_in(failedTask_ap_vld_int_regslice),
    .ack_in(failedTask_ap_ack_int_regslice),
    .data_out(failedTask),
    .vld_out(regslice_forward_failedTask_U_vld_out),
    .ack_out(failedTask_ap_ack),
    .apdone_blk(regslice_forward_failedTask_U_apdone_blk)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        errorInTask_addr_reg_558 <= zext_ln587_fu_201_p1;
        in_fault_reg_546 <= destStream_dout[32'd40];
        tmp_executionId_V_reg_540 <= {{destStream_dout[15:8]}};
        zext_ln587_reg_551[3 : 0] <= zext_ln587_fu_201_p1[3 : 0];
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln454_reg_563 == 1'd0))) begin
        icmp_ln1065_reg_572 <= icmp_ln1065_fu_308_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        icmp_ln454_reg_563 <= icmp_ln454_fu_302_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state4) & ((icmp_ln1065_fu_308_p2 == 1'd0) | (icmp_ln454_reg_563 == 1'd1)))) begin
        outcomeInRam_addr_reg_581 <= zext_ln587_reg_551;
    end
end

always @ (posedge ap_clk) begin
    if (((destStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        outcome_checkId_V_1_fu_78 <= tmp_checkId_V_fu_149_p1;
    end
end

assign ap_ST_fsm_state10_blk = 1'b0;

assign ap_ST_fsm_state11_blk = 1'b0;

assign ap_ST_fsm_state12_blk = 1'b0;

assign ap_ST_fsm_state13_blk = 1'b0;

assign ap_ST_fsm_state14_blk = 1'b0;

assign ap_ST_fsm_state15_blk = 1'b0;

assign ap_ST_fsm_state16_blk = 1'b0;

assign ap_ST_fsm_state17_blk = 1'b0;

assign ap_ST_fsm_state18_blk = 1'b0;

assign ap_ST_fsm_state19_blk = 1'b0;

always @ (*) begin
    if (((ap_done_reg == 1'b1) | (ap_start == 1'b0))) begin
        ap_ST_fsm_state1_blk = 1'b1;
    end else begin
        ap_ST_fsm_state1_blk = 1'b0;
    end
end

assign ap_ST_fsm_state20_blk = 1'b0;

assign ap_ST_fsm_state21_blk = 1'b0;

assign ap_ST_fsm_state22_blk = 1'b0;

assign ap_ST_fsm_state23_blk = 1'b0;

assign ap_ST_fsm_state24_blk = 1'b0;

assign ap_ST_fsm_state25_blk = 1'b0;

assign ap_ST_fsm_state26_blk = 1'b0;

assign ap_ST_fsm_state27_blk = 1'b0;

assign ap_ST_fsm_state28_blk = 1'b0;

assign ap_ST_fsm_state29_blk = 1'b0;

always @ (*) begin
    if ((destStream_empty_n == 1'b0)) begin
        ap_ST_fsm_state2_blk = 1'b1;
    end else begin
        ap_ST_fsm_state2_blk = 1'b0;
    end
end

assign ap_ST_fsm_state30_blk = 1'b0;

assign ap_ST_fsm_state31_blk = 1'b0;

assign ap_ST_fsm_state32_blk = 1'b0;

assign ap_ST_fsm_state33_blk = 1'b0;

assign ap_ST_fsm_state34_blk = 1'b0;

assign ap_ST_fsm_state35_blk = 1'b0;

assign ap_ST_fsm_state36_blk = 1'b0;

assign ap_ST_fsm_state37_blk = 1'b0;

assign ap_ST_fsm_state38_blk = 1'b0;

assign ap_ST_fsm_state39_blk = 1'b0;

assign ap_ST_fsm_state3_blk = 1'b0;

always @ (*) begin
    if (((1'b1 == ap_block_state40_io) | ((failedTask_ap_ack_int_regslice == 1'b0) & (in_fault_reg_546 == 1'd1)))) begin
        ap_ST_fsm_state40_blk = 1'b1;
    end else begin
        ap_ST_fsm_state40_blk = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_block_state41_io) | ((failedTask_ap_ack_int_regslice == 1'b0) & (ap_predicate_op256_write_state41 == 1'b1)))) begin
        ap_ST_fsm_state41_blk = 1'b1;
    end else begin
        ap_ST_fsm_state41_blk = 1'b0;
    end
end

assign ap_ST_fsm_state4_blk = 1'b0;

assign ap_ST_fsm_state5_blk = 1'b0;

assign ap_ST_fsm_state6_blk = 1'b0;

assign ap_ST_fsm_state7_blk = 1'b0;

assign ap_ST_fsm_state8_blk = 1'b0;

assign ap_ST_fsm_state9_blk = 1'b0;

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state2)) begin
        destStream_blk_n = destStream_empty_n;
    end else begin
        destStream_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((destStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
        destStream_read = 1'b1;
    end else begin
        destStream_read = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state4)) begin
        errorInTask_address0 = errorInTask_addr_reg_558;
    end else if ((1'b1 == ap_CS_fsm_state2)) begin
        errorInTask_address0 = zext_ln587_fu_201_p1;
    end else begin
        errorInTask_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) | ((destStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2)))) begin
        errorInTask_ce0 = 1'b1;
    end else begin
        errorInTask_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state4) & ((icmp_ln1065_fu_308_p2 == 1'd0) | (icmp_ln454_reg_563 == 1'd1)))) begin
        errorInTask_we0 = 1'b1;
    end else begin
        errorInTask_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state40)) begin
        failedTaskExecutionIds_V_address0 = failedTaskExecutionIds_V_addr_1_gep_fu_138_p3;
    end else if ((1'b1 == ap_CS_fsm_state3)) begin
        failedTaskExecutionIds_V_address0 = zext_ln587_reg_551;
    end else begin
        failedTaskExecutionIds_V_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state3) | (~((1'b1 == ap_block_state40_io) | ((failedTask_ap_ack_int_regslice == 1'b0) & (in_fault_reg_546 == 1'd1))) & (1'b1 == ap_CS_fsm_state40)))) begin
        failedTaskExecutionIds_V_ce0 = 1'b1;
    end else begin
        failedTaskExecutionIds_V_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state40_io) | ((failedTask_ap_ack_int_regslice == 1'b0) & (in_fault_reg_546 == 1'd1))) & (1'b1 == ap_CS_fsm_state40) & (in_fault_reg_546 == 1'd1))) begin
        failedTaskExecutionIds_V_we0 = 1'b1;
    end else begin
        failedTaskExecutionIds_V_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b1 == ap_block_state40_io) | ((failedTask_ap_ack_int_regslice == 1'b0) & (in_fault_reg_546 == 1'd1))) & (1'b1 == ap_CS_fsm_state40) & (in_fault_reg_546 == 1'd1))) begin
        failedTask_ap_vld_int_regslice = 1'b1;
    end else begin
        failedTask_ap_vld_int_regslice = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b1 == ap_CS_fsm_state41) & (((icmp_ln454_reg_563 == 1'd1) & (in_fault_reg_546 == 1'd1)) | ((icmp_ln1065_reg_572 == 1'd0) & (in_fault_reg_546 == 1'd1)))) | ((1'b1 == ap_CS_fsm_state40) & (in_fault_reg_546 == 1'd1)))) begin
        failedTask_blk_n = failedTask_ap_ack_int_regslice;
    end else begin
        failedTask_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5))) begin
        outcomeInRam_address0 = outcomeInRam_addr_reg_581;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        outcomeInRam_address0 = zext_ln587_reg_551;
    end else begin
        outcomeInRam_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | (1'b1 == ap_CS_fsm_state4) | (~((1'b1 == ap_block_state40_io) | ((failedTask_ap_ack_int_regslice == 1'b0) & (in_fault_reg_546 == 1'd1))) & (1'b1 == ap_CS_fsm_state40)))) begin
        outcomeInRam_ce0 = 1'b1;
    end else begin
        outcomeInRam_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state39)) begin
        outcomeInRam_d0 = zext_ln458_35_fu_492_p1;
    end else if ((1'b1 == ap_CS_fsm_state38)) begin
        outcomeInRam_d0 = zext_ln458_34_fu_487_p1;
    end else if ((1'b1 == ap_CS_fsm_state37)) begin
        outcomeInRam_d0 = zext_ln458_33_fu_482_p1;
    end else if ((1'b1 == ap_CS_fsm_state36)) begin
        outcomeInRam_d0 = zext_ln458_32_fu_477_p1;
    end else if ((1'b1 == ap_CS_fsm_state35)) begin
        outcomeInRam_d0 = zext_ln458_31_fu_472_p1;
    end else if ((1'b1 == ap_CS_fsm_state34)) begin
        outcomeInRam_d0 = zext_ln458_30_fu_467_p1;
    end else if ((1'b1 == ap_CS_fsm_state33)) begin
        outcomeInRam_d0 = zext_ln458_29_fu_462_p1;
    end else if ((1'b1 == ap_CS_fsm_state32)) begin
        outcomeInRam_d0 = zext_ln458_28_fu_457_p1;
    end else if ((1'b1 == ap_CS_fsm_state31)) begin
        outcomeInRam_d0 = zext_ln458_27_fu_452_p1;
    end else if ((1'b1 == ap_CS_fsm_state30)) begin
        outcomeInRam_d0 = zext_ln458_26_fu_447_p1;
    end else if ((1'b1 == ap_CS_fsm_state29)) begin
        outcomeInRam_d0 = zext_ln458_25_fu_442_p1;
    end else if ((1'b1 == ap_CS_fsm_state28)) begin
        outcomeInRam_d0 = zext_ln458_24_fu_437_p1;
    end else if ((1'b1 == ap_CS_fsm_state27)) begin
        outcomeInRam_d0 = zext_ln458_23_fu_432_p1;
    end else if ((1'b1 == ap_CS_fsm_state26)) begin
        outcomeInRam_d0 = zext_ln458_22_fu_427_p1;
    end else if ((1'b1 == ap_CS_fsm_state25)) begin
        outcomeInRam_d0 = zext_ln458_21_fu_422_p1;
    end else if ((1'b1 == ap_CS_fsm_state24)) begin
        outcomeInRam_d0 = zext_ln458_20_fu_417_p1;
    end else if ((1'b1 == ap_CS_fsm_state23)) begin
        outcomeInRam_d0 = zext_ln458_19_fu_412_p1;
    end else if ((1'b1 == ap_CS_fsm_state22)) begin
        outcomeInRam_d0 = zext_ln458_18_fu_407_p1;
    end else if ((1'b1 == ap_CS_fsm_state21)) begin
        outcomeInRam_d0 = zext_ln458_17_fu_402_p1;
    end else if ((1'b1 == ap_CS_fsm_state20)) begin
        outcomeInRam_d0 = zext_ln458_16_fu_397_p1;
    end else if ((1'b1 == ap_CS_fsm_state19)) begin
        outcomeInRam_d0 = zext_ln458_15_fu_392_p1;
    end else if ((1'b1 == ap_CS_fsm_state18)) begin
        outcomeInRam_d0 = zext_ln458_14_fu_387_p1;
    end else if ((1'b1 == ap_CS_fsm_state17)) begin
        outcomeInRam_d0 = zext_ln458_13_fu_382_p1;
    end else if ((1'b1 == ap_CS_fsm_state16)) begin
        outcomeInRam_d0 = zext_ln458_12_fu_377_p1;
    end else if ((1'b1 == ap_CS_fsm_state15)) begin
        outcomeInRam_d0 = zext_ln458_11_fu_372_p1;
    end else if ((1'b1 == ap_CS_fsm_state14)) begin
        outcomeInRam_d0 = zext_ln458_10_fu_367_p1;
    end else if ((1'b1 == ap_CS_fsm_state13)) begin
        outcomeInRam_d0 = zext_ln458_9_fu_362_p1;
    end else if ((1'b1 == ap_CS_fsm_state12)) begin
        outcomeInRam_d0 = zext_ln458_8_fu_357_p1;
    end else if ((1'b1 == ap_CS_fsm_state11)) begin
        outcomeInRam_d0 = zext_ln458_7_fu_352_p1;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        outcomeInRam_d0 = zext_ln458_6_fu_347_p1;
    end else if ((1'b1 == ap_CS_fsm_state9)) begin
        outcomeInRam_d0 = zext_ln458_5_fu_342_p1;
    end else if ((1'b1 == ap_CS_fsm_state8)) begin
        outcomeInRam_d0 = zext_ln458_4_fu_337_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        outcomeInRam_d0 = zext_ln458_3_fu_332_p1;
    end else if ((1'b1 == ap_CS_fsm_state6)) begin
        outcomeInRam_d0 = zext_ln458_2_fu_327_p1;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        outcomeInRam_d0 = zext_ln458_1_fu_322_p1;
    end else if ((1'b1 == ap_CS_fsm_state4)) begin
        outcomeInRam_d0 = zext_ln458_fu_313_p1;
    end else begin
        outcomeInRam_d0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state39) | (1'b1 == ap_CS_fsm_state38) | (1'b1 == ap_CS_fsm_state37) | (1'b1 == ap_CS_fsm_state36) | (1'b1 == ap_CS_fsm_state35) | (1'b1 == ap_CS_fsm_state34) | (1'b1 == ap_CS_fsm_state33) | (1'b1 == ap_CS_fsm_state32) | (1'b1 == ap_CS_fsm_state31) | (1'b1 == ap_CS_fsm_state30) | (1'b1 == ap_CS_fsm_state29) | (1'b1 == ap_CS_fsm_state28) | (1'b1 == ap_CS_fsm_state27) | (1'b1 == ap_CS_fsm_state26) | (1'b1 == ap_CS_fsm_state25) | (1'b1 == ap_CS_fsm_state24) | (1'b1 == ap_CS_fsm_state23) | (1'b1 == ap_CS_fsm_state22) | (1'b1 == ap_CS_fsm_state21) | (1'b1 == ap_CS_fsm_state20) | (1'b1 == ap_CS_fsm_state19) | (1'b1 == ap_CS_fsm_state18) | (1'b1 == ap_CS_fsm_state17) | (1'b1 == ap_CS_fsm_state16) | (1'b1 == ap_CS_fsm_state15) | (1'b1 == ap_CS_fsm_state14) | (1'b1 == ap_CS_fsm_state13) | (1'b1 == ap_CS_fsm_state12) | (1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state10) | (1'b1 == ap_CS_fsm_state9) | (1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state7) | (1'b1 == ap_CS_fsm_state6) | (1'b1 == ap_CS_fsm_state5) | ((1'b1 == ap_CS_fsm_state4) & ((icmp_ln1065_fu_308_p2 == 1'd0) | (icmp_ln454_reg_563 == 1'd1))))) begin
        outcomeInRam_we0 = 36'd1;
    end else begin
        outcomeInRam_we0 = 36'd0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if ((~((ap_done_reg == 1'b1) | (ap_start == 1'b0)) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            if (((destStream_empty_n == 1'b1) & (1'b1 == ap_CS_fsm_state2))) begin
                ap_NS_fsm = ap_ST_fsm_state3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            if (((1'b1 == ap_CS_fsm_state4) & (icmp_ln1065_fu_308_p2 == 1'd1) & (icmp_ln454_reg_563 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state5;
            end
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            ap_NS_fsm = ap_ST_fsm_state7;
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            ap_NS_fsm = ap_ST_fsm_state10;
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            ap_NS_fsm = ap_ST_fsm_state14;
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        ap_ST_fsm_state15 : begin
            ap_NS_fsm = ap_ST_fsm_state16;
        end
        ap_ST_fsm_state16 : begin
            ap_NS_fsm = ap_ST_fsm_state17;
        end
        ap_ST_fsm_state17 : begin
            ap_NS_fsm = ap_ST_fsm_state18;
        end
        ap_ST_fsm_state18 : begin
            ap_NS_fsm = ap_ST_fsm_state19;
        end
        ap_ST_fsm_state19 : begin
            ap_NS_fsm = ap_ST_fsm_state20;
        end
        ap_ST_fsm_state20 : begin
            ap_NS_fsm = ap_ST_fsm_state21;
        end
        ap_ST_fsm_state21 : begin
            ap_NS_fsm = ap_ST_fsm_state22;
        end
        ap_ST_fsm_state22 : begin
            ap_NS_fsm = ap_ST_fsm_state23;
        end
        ap_ST_fsm_state23 : begin
            ap_NS_fsm = ap_ST_fsm_state24;
        end
        ap_ST_fsm_state24 : begin
            ap_NS_fsm = ap_ST_fsm_state25;
        end
        ap_ST_fsm_state25 : begin
            ap_NS_fsm = ap_ST_fsm_state26;
        end
        ap_ST_fsm_state26 : begin
            ap_NS_fsm = ap_ST_fsm_state27;
        end
        ap_ST_fsm_state27 : begin
            ap_NS_fsm = ap_ST_fsm_state28;
        end
        ap_ST_fsm_state28 : begin
            ap_NS_fsm = ap_ST_fsm_state29;
        end
        ap_ST_fsm_state29 : begin
            ap_NS_fsm = ap_ST_fsm_state30;
        end
        ap_ST_fsm_state30 : begin
            ap_NS_fsm = ap_ST_fsm_state31;
        end
        ap_ST_fsm_state31 : begin
            ap_NS_fsm = ap_ST_fsm_state32;
        end
        ap_ST_fsm_state32 : begin
            ap_NS_fsm = ap_ST_fsm_state33;
        end
        ap_ST_fsm_state33 : begin
            ap_NS_fsm = ap_ST_fsm_state34;
        end
        ap_ST_fsm_state34 : begin
            ap_NS_fsm = ap_ST_fsm_state35;
        end
        ap_ST_fsm_state35 : begin
            ap_NS_fsm = ap_ST_fsm_state36;
        end
        ap_ST_fsm_state36 : begin
            ap_NS_fsm = ap_ST_fsm_state37;
        end
        ap_ST_fsm_state37 : begin
            ap_NS_fsm = ap_ST_fsm_state38;
        end
        ap_ST_fsm_state38 : begin
            ap_NS_fsm = ap_ST_fsm_state39;
        end
        ap_ST_fsm_state39 : begin
            ap_NS_fsm = ap_ST_fsm_state40;
        end
        ap_ST_fsm_state40 : begin
            if ((~((1'b1 == ap_block_state40_io) | ((failedTask_ap_ack_int_regslice == 1'b0) & (in_fault_reg_546 == 1'd1))) & (1'b1 == ap_CS_fsm_state40))) begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state40;
            end
        end
        ap_ST_fsm_state41 : begin
            if ((~((1'b1 == ap_block_state41_io) | ((failedTask_ap_ack_int_regslice == 1'b0) & (ap_predicate_op256_write_state41 == 1'b1))) & (1'b1 == ap_CS_fsm_state41))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state41;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state16 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state17 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state18 = ap_CS_fsm[32'd17];

assign ap_CS_fsm_state19 = ap_CS_fsm[32'd18];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state20 = ap_CS_fsm[32'd19];

assign ap_CS_fsm_state21 = ap_CS_fsm[32'd20];

assign ap_CS_fsm_state22 = ap_CS_fsm[32'd21];

assign ap_CS_fsm_state23 = ap_CS_fsm[32'd22];

assign ap_CS_fsm_state24 = ap_CS_fsm[32'd23];

assign ap_CS_fsm_state25 = ap_CS_fsm[32'd24];

assign ap_CS_fsm_state26 = ap_CS_fsm[32'd25];

assign ap_CS_fsm_state27 = ap_CS_fsm[32'd26];

assign ap_CS_fsm_state28 = ap_CS_fsm[32'd27];

assign ap_CS_fsm_state29 = ap_CS_fsm[32'd28];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state30 = ap_CS_fsm[32'd29];

assign ap_CS_fsm_state31 = ap_CS_fsm[32'd30];

assign ap_CS_fsm_state32 = ap_CS_fsm[32'd31];

assign ap_CS_fsm_state33 = ap_CS_fsm[32'd32];

assign ap_CS_fsm_state34 = ap_CS_fsm[32'd33];

assign ap_CS_fsm_state35 = ap_CS_fsm[32'd34];

assign ap_CS_fsm_state36 = ap_CS_fsm[32'd35];

assign ap_CS_fsm_state37 = ap_CS_fsm[32'd36];

assign ap_CS_fsm_state38 = ap_CS_fsm[32'd37];

assign ap_CS_fsm_state39 = ap_CS_fsm[32'd38];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state40 = ap_CS_fsm[32'd39];

assign ap_CS_fsm_state41 = ap_CS_fsm[32'd40];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

always @ (*) begin
    ap_block_state1 = ((ap_done_reg == 1'b1) | (ap_start == 1'b0));
end

always @ (*) begin
    ap_block_state40 = ((failedTask_ap_ack_int_regslice == 1'b0) & (in_fault_reg_546 == 1'd1));
end

always @ (*) begin
    ap_block_state40_io = ((failedTask_ap_ack_int_regslice == 1'b0) & (in_fault_reg_546 == 1'd1));
end

always @ (*) begin
    ap_block_state41 = ((failedTask_ap_ack_int_regslice == 1'b0) & (ap_predicate_op256_write_state41 == 1'b1));
end

always @ (*) begin
    ap_block_state41_io = ((failedTask_ap_ack_int_regslice == 1'b0) & (ap_predicate_op256_write_state41 == 1'b1));
end

assign ap_done = ap_done_reg;

always @ (*) begin
    ap_predicate_op256_write_state41 = (((icmp_ln454_reg_563 == 1'd1) & (in_fault_reg_546 == 1'd1)) | ((icmp_ln1065_reg_572 == 1'd0) & (in_fault_reg_546 == 1'd1)));
end

assign ap_ready = 1'b0;

assign errorInTask_d0 = in_fault_reg_546;

assign failedTaskExecutionIds_V_addr_1_gep_fu_138_p3 = zext_ln587_reg_551;

assign failedTask_ap_vld = regslice_forward_failedTask_U_vld_out;

assign icmp_ln1065_fu_308_p2 = ((failedTaskExecutionIds_V_q0 == tmp_executionId_V_reg_540) ? 1'b1 : 1'b0);

assign icmp_ln454_fu_302_p2 = ((errorInTask_q0 == 8'd0) ? 1'b1 : 1'b0);

assign tmp_checkId_V_fu_149_p1 = destStream_dout[7:0];

assign tmp_taskId_V_fu_163_p4 = {{destStream_dout[35:32]}};

assign zext_ln458_10_fu_367_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_11_fu_372_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_12_fu_377_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_13_fu_382_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_14_fu_387_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_15_fu_392_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_16_fu_397_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_17_fu_402_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_18_fu_407_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_19_fu_412_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_1_fu_322_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_20_fu_417_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_21_fu_422_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_22_fu_427_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_23_fu_432_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_24_fu_437_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_25_fu_442_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_26_fu_447_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_27_fu_452_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_28_fu_457_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_29_fu_462_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_2_fu_327_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_30_fu_467_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_31_fu_472_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_32_fu_477_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_33_fu_482_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_34_fu_487_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_35_fu_492_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_3_fu_332_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_4_fu_337_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_5_fu_342_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_6_fu_347_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_7_fu_352_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_8_fu_357_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_9_fu_362_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln458_fu_313_p1 = outcome_checkId_V_1_fu_78;

assign zext_ln587_fu_201_p1 = tmp_taskId_V_fu_163_p4;

always @ (posedge ap_clk) begin
    ap_done_reg <= 1'b0;
    zext_ln587_reg_551[63:4] <= 60'b000000000000000000000000000000000000000000000000000000000000;
end

endmodule //run_handle_outcome
