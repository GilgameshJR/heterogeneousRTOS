-- ==============================================================
-- RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.2 (64-bit)
-- Version: 2022.2
-- Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1 is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    ap_start : IN STD_LOGIC;
    ap_done : OUT STD_LOGIC;
    ap_idle : OUT STD_LOGIC;
    ap_ready : OUT STD_LOGIC;
    regions_center_0_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_0_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_1_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_2_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_3_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_4_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_0_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_1_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_2_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_3_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_4_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_5_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_6_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_center_7_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_0_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_1_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_2_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_3_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_4_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_5_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_6_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_max_7_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_0_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_1_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_2_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_3_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_4_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_5_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_6_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    regions_min_7_5_0 : IN STD_LOGIC_VECTOR (31 downto 0);
    merge_2_out : OUT STD_LOGIC_VECTOR (2 downto 0);
    merge_2_out_ap_vld : OUT STD_LOGIC;
    merge_1_out : OUT STD_LOGIC_VECTOR (2 downto 0);
    merge_1_out_ap_vld : OUT STD_LOGIC;
    grp_fu_6848_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_6848_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_6848_p_opcode : OUT STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_6848_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_6848_p_ce : OUT STD_LOGIC;
    grp_fu_6854_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_6854_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_6854_p_dout0 : IN STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_6854_p_ce : OUT STD_LOGIC;
    grp_fu_6859_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_6859_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_6859_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_6859_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_6859_p_ce : OUT STD_LOGIC;
    grp_fu_6864_p_din0 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_6864_p_din1 : OUT STD_LOGIC_VECTOR (31 downto 0);
    grp_fu_6864_p_opcode : OUT STD_LOGIC_VECTOR (4 downto 0);
    grp_fu_6864_p_dout0 : IN STD_LOGIC_VECTOR (0 downto 0);
    grp_fu_6864_p_ce : OUT STD_LOGIC );
end;


architecture behav of FaultDetector_insert_point_Pipeline_VITIS_LOOP_76_1 is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_logic_0 : STD_LOGIC := '0';
    constant ap_ST_fsm_pp0_stage0 : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    constant ap_ST_fsm_pp0_stage1 : STD_LOGIC_VECTOR (7 downto 0) := "00000010";
    constant ap_ST_fsm_pp0_stage2 : STD_LOGIC_VECTOR (7 downto 0) := "00000100";
    constant ap_ST_fsm_pp0_stage3 : STD_LOGIC_VECTOR (7 downto 0) := "00001000";
    constant ap_ST_fsm_pp0_stage4 : STD_LOGIC_VECTOR (7 downto 0) := "00010000";
    constant ap_ST_fsm_pp0_stage5 : STD_LOGIC_VECTOR (7 downto 0) := "00100000";
    constant ap_ST_fsm_pp0_stage6 : STD_LOGIC_VECTOR (7 downto 0) := "01000000";
    constant ap_ST_fsm_pp0_stage7 : STD_LOGIC_VECTOR (7 downto 0) := "10000000";
    constant ap_const_lv32_0 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000000";
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_lv32_7 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000111";
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv32_1 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000001";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv32_6 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000110";
    constant ap_const_lv32_4 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000100";
    constant ap_const_lv32_2 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000010";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv32_5 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000101";
    constant ap_const_lv32_FFFFFFFF : STD_LOGIC_VECTOR (31 downto 0) := "11111111111111111111111111111111";
    constant ap_const_lv32_17 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000010111";
    constant ap_const_lv32_1E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011110";
    constant ap_const_lv8_FF : STD_LOGIC_VECTOR (7 downto 0) := "11111111";
    constant ap_const_lv23_0 : STD_LOGIC_VECTOR (22 downto 0) := "00000000000000000000000";
    constant ap_const_lv32_80000000 : STD_LOGIC_VECTOR (31 downto 0) := "10000000000000000000000000000000";
    constant ap_const_lv32_1F : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000011111";
    constant ap_const_lv2_1 : STD_LOGIC_VECTOR (1 downto 0) := "01";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv5_4 : STD_LOGIC_VECTOR (4 downto 0) := "00100";
    constant ap_const_lv5_2 : STD_LOGIC_VECTOR (4 downto 0) := "00010";

attribute shreg_extract : string;
    signal ap_CS_fsm : STD_LOGIC_VECTOR (7 downto 0) := "00000001";
    attribute fsm_encoding : string;
    attribute fsm_encoding of ap_CS_fsm : signal is "none";
    signal ap_CS_fsm_pp0_stage0 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage0 : signal is "none";
    signal ap_enable_reg_pp0_iter0 : STD_LOGIC;
    signal ap_enable_reg_pp0_iter1 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter2 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter3 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter4 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter5 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter6 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter7 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter8 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter9 : STD_LOGIC := '0';
    signal ap_enable_reg_pp0_iter10 : STD_LOGIC := '0';
    signal ap_idle_pp0 : STD_LOGIC;
    signal ap_CS_fsm_pp0_stage7 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage7 : signal is "none";
    signal ap_block_state8_pp0_stage7_iter0 : BOOLEAN;
    signal ap_block_state16_pp0_stage7_iter1 : BOOLEAN;
    signal ap_block_state24_pp0_stage7_iter2 : BOOLEAN;
    signal ap_block_state32_pp0_stage7_iter3 : BOOLEAN;
    signal ap_block_state40_pp0_stage7_iter4 : BOOLEAN;
    signal ap_block_state48_pp0_stage7_iter5 : BOOLEAN;
    signal ap_block_state56_pp0_stage7_iter6 : BOOLEAN;
    signal ap_block_state64_pp0_stage7_iter7 : BOOLEAN;
    signal ap_block_state72_pp0_stage7_iter8 : BOOLEAN;
    signal ap_block_state80_pp0_stage7_iter9 : BOOLEAN;
    signal ap_block_pp0_stage7_subdone : BOOLEAN;
    signal icmp_ln1027_reg_3989 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_condition_exit_pp0_iter0_stage7 : STD_LOGIC;
    signal ap_loop_exit_ready : STD_LOGIC;
    signal ap_ready_int : STD_LOGIC;
    signal grp_fu_1262_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1289 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage1 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage1 : signal is "none";
    signal ap_block_state2_pp0_stage1_iter0 : BOOLEAN;
    signal ap_block_state10_pp0_stage1_iter1 : BOOLEAN;
    signal ap_block_state18_pp0_stage1_iter2 : BOOLEAN;
    signal ap_block_state26_pp0_stage1_iter3 : BOOLEAN;
    signal ap_block_state34_pp0_stage1_iter4 : BOOLEAN;
    signal ap_block_state42_pp0_stage1_iter5 : BOOLEAN;
    signal ap_block_state50_pp0_stage1_iter6 : BOOLEAN;
    signal ap_block_state58_pp0_stage1_iter7 : BOOLEAN;
    signal ap_block_state66_pp0_stage1_iter8 : BOOLEAN;
    signal ap_block_state74_pp0_stage1_iter9 : BOOLEAN;
    signal ap_block_state82_pp0_stage1_iter10 : BOOLEAN;
    signal ap_block_pp0_stage1_11001 : BOOLEAN;
    signal ap_CS_fsm_pp0_stage6 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage6 : signal is "none";
    signal ap_block_state7_pp0_stage6_iter0 : BOOLEAN;
    signal ap_block_state15_pp0_stage6_iter1 : BOOLEAN;
    signal ap_block_state23_pp0_stage6_iter2 : BOOLEAN;
    signal ap_block_state31_pp0_stage6_iter3 : BOOLEAN;
    signal ap_block_state39_pp0_stage6_iter4 : BOOLEAN;
    signal ap_block_state47_pp0_stage6_iter5 : BOOLEAN;
    signal ap_block_state55_pp0_stage6_iter6 : BOOLEAN;
    signal ap_block_state63_pp0_stage6_iter7 : BOOLEAN;
    signal ap_block_state71_pp0_stage6_iter8 : BOOLEAN;
    signal ap_block_state79_pp0_stage6_iter9 : BOOLEAN;
    signal ap_block_pp0_stage6_11001 : BOOLEAN;
    signal icmp_ln1027_reg_3989_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_5_reg_4302 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_5_reg_4302_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state9_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state17_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_state25_pp0_stage0_iter3 : BOOLEAN;
    signal ap_block_state33_pp0_stage0_iter4 : BOOLEAN;
    signal ap_block_state41_pp0_stage0_iter5 : BOOLEAN;
    signal ap_block_state49_pp0_stage0_iter6 : BOOLEAN;
    signal ap_block_state57_pp0_stage0_iter7 : BOOLEAN;
    signal ap_block_state65_pp0_stage0_iter8 : BOOLEAN;
    signal ap_block_state73_pp0_stage0_iter9 : BOOLEAN;
    signal ap_block_state81_pp0_stage0_iter10 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal icmp_ln1027_reg_3989_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_1295 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage7_11001 : BOOLEAN;
    signal icmp_ln1027_reg_3989_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_11_reg_4357 : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1254_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1300 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage4 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage4 : signal is "none";
    signal ap_block_state5_pp0_stage4_iter0 : BOOLEAN;
    signal ap_block_state13_pp0_stage4_iter1 : BOOLEAN;
    signal ap_block_state21_pp0_stage4_iter2 : BOOLEAN;
    signal ap_block_state29_pp0_stage4_iter3 : BOOLEAN;
    signal ap_block_state37_pp0_stage4_iter4 : BOOLEAN;
    signal ap_block_state45_pp0_stage4_iter5 : BOOLEAN;
    signal ap_block_state53_pp0_stage4_iter6 : BOOLEAN;
    signal ap_block_state61_pp0_stage4_iter7 : BOOLEAN;
    signal ap_block_state69_pp0_stage4_iter8 : BOOLEAN;
    signal ap_block_state77_pp0_stage4_iter9 : BOOLEAN;
    signal ap_block_pp0_stage4_11001 : BOOLEAN;
    signal and_ln112_1_reg_4244 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_1_reg_4244_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_9_reg_4337 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_9_reg_4337_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1258_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1304 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln112_3_reg_4249 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_3_reg_4249_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal grp_fu_1250_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal reg_1308 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln112_7_reg_4307 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_7_reg_4307_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_1312 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln112_11_reg_4357_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal reg_1316 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1027_reg_3989_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal i_real_3_reg_3974 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_3974_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_3974_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_3974_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_3974_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_3974_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_3974_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_3974_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_3974_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_3_reg_3974_pp0_iter9_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_3982 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_3982_pp0_iter1_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_3982_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_3982_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_3982_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_3982_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_3982_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_3982_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_5_reg_3982_pp0_iter8_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1027_fu_1363_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_3989_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_3989_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_3989_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_3989_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1027_reg_3989_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal trunc_ln104_fu_1369_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln104_reg_3993 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_s_fu_1373_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_s_reg_4009 : STD_LOGIC_VECTOR (31 downto 0);
    signal trunc_ln104_1_fu_1387_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal trunc_ln104_1_reg_4014 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_5_fu_1391_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_5_reg_4030 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_fu_1405_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_6_reg_4035 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_fu_1419_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_7_reg_4040 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_fu_1433_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_8_reg_4049 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_fu_1447_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_9_reg_4054 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_fu_1461_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_1_reg_4063 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_fu_1475_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_2_reg_4068 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_fu_1489_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_4_reg_4073 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_fu_1503_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_11_reg_4082 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_fu_1517_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_12_reg_4091 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_fu_1531_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_13_reg_4096 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_fu_1545_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_3_reg_4101 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_CS_fsm_pp0_stage2 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage2 : signal is "none";
    signal ap_block_state3_pp0_stage2_iter0 : BOOLEAN;
    signal ap_block_state11_pp0_stage2_iter1 : BOOLEAN;
    signal ap_block_state19_pp0_stage2_iter2 : BOOLEAN;
    signal ap_block_state27_pp0_stage2_iter3 : BOOLEAN;
    signal ap_block_state35_pp0_stage2_iter4 : BOOLEAN;
    signal ap_block_state43_pp0_stage2_iter5 : BOOLEAN;
    signal ap_block_state51_pp0_stage2_iter6 : BOOLEAN;
    signal ap_block_state59_pp0_stage2_iter7 : BOOLEAN;
    signal ap_block_state67_pp0_stage2_iter8 : BOOLEAN;
    signal ap_block_state75_pp0_stage2_iter9 : BOOLEAN;
    signal ap_block_pp0_stage2_11001 : BOOLEAN;
    signal tmp_10_fu_1558_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_10_reg_4106 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_fu_1571_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_14_reg_4111 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_fu_1584_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_15_reg_4116 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_fu_1597_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_17_reg_4125 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_fu_1610_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_21_reg_4134 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_fu_1623_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_23_reg_4143 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln112_fu_1670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_reg_4152 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage3 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage3 : signal is "none";
    signal ap_block_state4_pp0_stage3_iter0 : BOOLEAN;
    signal ap_block_state12_pp0_stage3_iter1 : BOOLEAN;
    signal ap_block_state20_pp0_stage3_iter2 : BOOLEAN;
    signal ap_block_state28_pp0_stage3_iter3 : BOOLEAN;
    signal ap_block_state36_pp0_stage3_iter4 : BOOLEAN;
    signal ap_block_state44_pp0_stage3_iter5 : BOOLEAN;
    signal ap_block_state52_pp0_stage3_iter6 : BOOLEAN;
    signal ap_block_state60_pp0_stage3_iter7 : BOOLEAN;
    signal ap_block_state68_pp0_stage3_iter8 : BOOLEAN;
    signal ap_block_state76_pp0_stage3_iter9 : BOOLEAN;
    signal ap_block_pp0_stage3_11001 : BOOLEAN;
    signal icmp_ln112_1_fu_1676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_1_reg_4157 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_2_fu_1682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_2_reg_4162 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_3_fu_1688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_3_reg_4167 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_38_reg_4172 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_4_fu_1728_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_4_reg_4177 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_5_fu_1734_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_5_reg_4182 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_6_fu_1740_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_6_reg_4187 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_7_fu_1746_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_7_reg_4192 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_43_reg_4197 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_16_fu_1752_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_16_reg_4202 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_fu_1765_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_18_reg_4207 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_fu_1778_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_19_reg_4212 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_fu_1791_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_20_reg_4217 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_fu_1804_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_22_reg_4222 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_fu_1817_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_27_reg_4227 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_fu_1830_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_29_reg_4236 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln112_1_fu_1856_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_1_reg_4244_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_3_fu_1875_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_3_reg_4249_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_8_fu_1915_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_8_reg_4254 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_9_fu_1921_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_9_reg_4259 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_10_fu_1927_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_10_reg_4264 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_11_fu_1933_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_11_reg_4269 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_48_reg_4274 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_53_reg_4279 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_33_fu_1939_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_33_reg_4284 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_fu_1952_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_35_reg_4293 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln112_5_fu_1979_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_CS_fsm_pp0_stage5 : STD_LOGIC;
    attribute fsm_encoding of ap_CS_fsm_pp0_stage5 : signal is "none";
    signal ap_block_state6_pp0_stage5_iter0 : BOOLEAN;
    signal ap_block_state14_pp0_stage5_iter1 : BOOLEAN;
    signal ap_block_state22_pp0_stage5_iter2 : BOOLEAN;
    signal ap_block_state30_pp0_stage5_iter3 : BOOLEAN;
    signal ap_block_state38_pp0_stage5_iter4 : BOOLEAN;
    signal ap_block_state46_pp0_stage5_iter5 : BOOLEAN;
    signal ap_block_state54_pp0_stage5_iter6 : BOOLEAN;
    signal ap_block_state62_pp0_stage5_iter7 : BOOLEAN;
    signal ap_block_state70_pp0_stage5_iter8 : BOOLEAN;
    signal ap_block_state78_pp0_stage5_iter9 : BOOLEAN;
    signal ap_block_pp0_stage5_11001 : BOOLEAN;
    signal and_ln112_5_reg_4302_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_7_fu_2060_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_7_reg_4307_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_26_fu_2065_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_26_reg_4312 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_fu_2078_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_28_reg_4317 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_58_reg_4322 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_24_fu_2091_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_24_reg_4327 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_fu_2104_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_25_reg_4332 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln112_9_fu_2193_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_9_reg_4337_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_32_fu_2198_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_32_reg_4342 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_fu_2211_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_34_reg_4347 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_63_reg_4352 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_11_fu_2300_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_11_reg_4357_pp0_iter1_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_30_fu_2305_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_30_reg_4362 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_fu_2318_p10 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_31_reg_4367 : STD_LOGIC_VECTOR (31 downto 0);
    signal icmp_ln1019_fu_2331_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_4372 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_4372_pp0_iter2_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_4372_pp0_iter3_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_4372_pp0_iter4_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_4372_pp0_iter5_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_4372_pp0_iter6_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_4372_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_4372_pp0_iter8_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_4372_pp0_iter9_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln1019_reg_4372_pp0_iter10_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal d_reg_4381 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_reg_4387 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_reg_4392 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub_reg_4397 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1266_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_2_reg_4402 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub2_reg_4408 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_1_reg_4413 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_1_reg_4418 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub75_1_reg_4423 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub87_1_reg_4428 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_2_reg_4433 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_2_reg_4438 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub75_2_reg_4443 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub87_2_reg_4448 : STD_LOGIC_VECTOR (31 downto 0);
    signal d_3_reg_4453 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_3_reg_4459 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_3_reg_4464 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub75_3_reg_4469 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub87_3_reg_4474 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_reg_4479 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1275_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_4484 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_1_reg_4484_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_4_reg_4489 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_4_reg_4494 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub75_4_reg_4499 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_4504 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_2_reg_4504_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal d_4_reg_4509 : STD_LOGIC_VECTOR (31 downto 0);
    signal sub87_4_reg_4515 : STD_LOGIC_VECTOR (31 downto 0);
    signal d1_5_reg_4520 : STD_LOGIC_VECTOR (31 downto 0);
    signal d2_5_reg_4525 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_4530 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_4530_pp0_iter2_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_4530_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_3_reg_4530_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal d_5_reg_4535 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_4_reg_4541 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_4_reg_4541_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_4_reg_4541_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_4_reg_4541_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_reg_4546 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_2_fu_2376_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_2_reg_4551 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_6_fu_2383_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_6_reg_4558 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_5_reg_4565 : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_5_reg_4565_pp0_iter3_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_5_reg_4565_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_5_reg_4565_pp0_iter5_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal mul_5_reg_4565_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_40_reg_4570 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_45_reg_4575 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_10_fu_2390_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_10_reg_4580 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_24_fu_2437_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_24_reg_4587 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_7_fu_2484_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_7_reg_4592 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_14_fu_2491_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_14_reg_4597 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_50_reg_4604 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_18_fu_2498_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_18_reg_4609 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_22_fu_2505_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_22_reg_4616 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_11_fu_2552_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_11_reg_4623 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_55_reg_4628 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_15_fu_2599_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_15_reg_4633 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_1_reg_4638 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_60_reg_4643 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_19_fu_2646_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_19_reg_4648 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_65_reg_4653 : STD_LOGIC_VECTOR (0 downto 0);
    signal ov_23_fu_2693_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_23_reg_4658 : STD_LOGIC_VECTOR (31 downto 0);
    signal ov_23_reg_4658_pp0_iter4_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_3_reg_4663 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_2_reg_4668 : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_4_reg_4673 : STD_LOGIC_VECTOR (31 downto 0);
    signal distance_3_reg_4678 : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_5_reg_4683 : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_5_reg_4683_pp0_iter6_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal overlap_5_reg_4683_pp0_iter7_reg : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_67_reg_4690 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_67_reg_4690_pp0_iter7_reg : STD_LOGIC_VECTOR (0 downto 0);
    signal distance_4_reg_4695 : STD_LOGIC_VECTOR (31 downto 0);
    signal sc_2_fu_2754_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal sc_2_reg_4700 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_load_reg_4707 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_70_reg_4714 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_other_4_fu_2861_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_other_4_reg_4719 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_4_fu_2868_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_4_reg_4725 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_load_reg_4733 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_1_4_reg_4741 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_2_1_reg_4748 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_73_reg_4754 : STD_LOGIC_VECTOR (0 downto 0);
    signal ap_enable_reg_pp0_iter0_reg : STD_LOGIC := '0';
    signal ap_block_pp0_stage0_subdone : BOOLEAN;
    signal ap_condition_exit_pp0_iter10_stage0 : STD_LOGIC;
    signal ap_block_pp0_stage1_subdone : BOOLEAN;
    signal merge_1_fu_340 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_1_7_fu_3040_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_loop_init : STD_LOGIC;
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal merge_2_fu_344 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_2_6_fu_3034_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_fu_348 : STD_LOGIC_VECTOR (31 downto 0);
    signal score_3_fu_3028_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage7 : BOOLEAN;
    signal merge_1_1_fu_352 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_2_fu_2359_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage1 : BOOLEAN;
    signal k_real_4_fu_356 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_3_fu_2351_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_fu_360 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_score_3_fu_2880_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_other_fu_364 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_other_3_fu_2874_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage0_01001 : BOOLEAN;
    signal grp_fu_1246_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1246_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2 : BOOLEAN;
    signal ap_block_pp0_stage3 : BOOLEAN;
    signal ap_block_pp0_stage4 : BOOLEAN;
    signal ap_block_pp0_stage5 : BOOLEAN;
    signal ap_block_pp0_stage6 : BOOLEAN;
    signal grp_fu_1250_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1250_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1254_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1254_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1258_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1258_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1262_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1262_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1266_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1266_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1271_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1271_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1275_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1275_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1279_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1279_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1283_p0 : STD_LOGIC_VECTOR (31 downto 0);
    signal grp_fu_1283_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_fu_1636_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_1_fu_1653_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_36_fu_1639_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_fu_1649_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_37_fu_1656_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_1_fu_1666_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal bitcast_ln112_2_fu_1694_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_3_fu_1711_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_41_fu_1697_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_2_fu_1707_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_42_fu_1714_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_3_fu_1724_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln112_1_fu_1847_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_fu_1851_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_fu_1843_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_3_fu_1866_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_2_fu_1870_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_2_fu_1862_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln112_4_fu_1881_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_5_fu_1898_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_46_fu_1884_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_4_fu_1894_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal tmp_47_fu_1901_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_5_fu_1911_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal or_ln112_4_fu_1965_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_5_fu_1969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_4_fu_1973_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln112_6_fu_1984_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_7_fu_2001_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_51_fu_1987_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_6_fu_1997_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_13_fu_2024_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_12_fu_2018_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_52_fu_2004_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_7_fu_2014_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_15_fu_2042_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_14_fu_2036_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_6_fu_2030_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_7_fu_2048_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_6_fu_2054_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln112_8_fu_2117_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_9_fu_2134_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_56_fu_2120_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_8_fu_2130_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_17_fu_2157_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_16_fu_2151_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_57_fu_2137_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_9_fu_2147_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_19_fu_2175_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_18_fu_2169_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_8_fu_2163_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_9_fu_2181_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_8_fu_2187_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln112_10_fu_2224_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln112_11_fu_2241_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_61_fu_2227_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_10_fu_2237_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_21_fu_2264_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_20_fu_2258_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_62_fu_2244_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln112_11_fu_2254_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln112_23_fu_2282_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln112_22_fu_2276_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_10_fu_2270_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln112_11_fu_2288_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln112_10_fu_2294_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal k_real_fu_2341_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal k_real_2_fu_2346_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal i_real_fu_2336_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln116_fu_2397_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_39_fu_2400_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_fu_2410_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_1_fu_2420_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_fu_2414_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_fu_2426_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_fu_2432_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_1_fu_2444_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_44_fu_2447_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_1_fu_2457_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_3_fu_2467_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_2_fu_2461_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_1_fu_2473_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_1_fu_2479_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_2_fu_2512_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_49_fu_2515_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_2_fu_2525_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_5_fu_2535_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_4_fu_2529_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_2_fu_2541_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_2_fu_2547_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_3_fu_2559_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_54_fu_2562_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_3_fu_2572_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_7_fu_2582_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_6_fu_2576_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_3_fu_2588_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_3_fu_2594_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_4_fu_2606_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_59_fu_2609_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_4_fu_2619_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_9_fu_2629_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_8_fu_2623_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_4_fu_2635_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_4_fu_2641_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln116_5_fu_2653_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_64_fu_2656_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln116_5_fu_2666_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln116_11_fu_2676_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln116_10_fu_2670_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln116_5_fu_2682_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln116_5_fu_2688_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln122_fu_2700_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_66_fu_2703_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln122_fu_2713_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln122_1_fu_2723_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln122_fu_2717_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln122_fu_2729_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln126_fu_2740_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal xor_ln126_fu_2744_p2 : STD_LOGIC_VECTOR (31 downto 0);
    signal and_ln122_fu_2735_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal sc_fu_2750_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln130_fu_2774_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln130_1_fu_2791_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_68_fu_2777_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln130_fu_2787_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln130_2_fu_2814_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_1_fu_2808_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_69_fu_2794_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln130_1_fu_2804_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln130_4_fu_2832_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_3_fu_2826_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_1_fu_2820_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_2_fu_2838_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln130_fu_2844_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln130_fu_2768_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln130_1_fu_2850_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln130_fu_2855_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal bitcast_ln139_fu_2923_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal bitcast_ln139_1_fu_2940_p1 : STD_LOGIC_VECTOR (31 downto 0);
    signal tmp_71_fu_2926_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln139_fu_2936_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln139_1_fu_2963_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln139_fu_2957_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_72_fu_2943_p4 : STD_LOGIC_VECTOR (7 downto 0);
    signal trunc_ln139_1_fu_2953_p1 : STD_LOGIC_VECTOR (22 downto 0);
    signal icmp_ln139_3_fu_2981_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal icmp_ln139_2_fu_2975_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln139_1_fu_2969_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln139_2_fu_2987_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln139_fu_2993_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal tmp_fu_2916_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal and_ln139_1_fu_2999_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal or_ln139_fu_3004_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal score_2_fu_3010_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_2_5_fu_3016_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal merge_1_6_fu_3022_p3 : STD_LOGIC_VECTOR (31 downto 0);
    signal ap_block_pp0_stage2_00001 : BOOLEAN;
    signal ap_block_pp0_stage3_00001 : BOOLEAN;
    signal ap_block_pp0_stage4_00001 : BOOLEAN;
    signal ap_block_pp0_stage5_00001 : BOOLEAN;
    signal ap_block_pp0_stage6_00001 : BOOLEAN;
    signal ap_block_pp0_stage7_00001 : BOOLEAN;
    signal ap_block_pp0_stage0_00001 : BOOLEAN;
    signal ap_block_pp0_stage1_00001 : BOOLEAN;
    signal grp_fu_1258_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1262_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1266_opcode : STD_LOGIC_VECTOR (1 downto 0);
    signal grp_fu_1279_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal grp_fu_1283_opcode : STD_LOGIC_VECTOR (4 downto 0);
    signal ap_done_reg : STD_LOGIC := '0';
    signal ap_continue_int : STD_LOGIC;
    signal ap_done_int : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter1_reg : STD_LOGIC;
    signal ap_idle_pp0_0to9 : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter2_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter3_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter4_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter5_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter6_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter7_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter8_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter9_reg : STD_LOGIC;
    signal ap_loop_exit_ready_pp0_iter10_reg : STD_LOGIC;
    signal ap_NS_fsm : STD_LOGIC_VECTOR (7 downto 0);
    signal ap_idle_pp0_1to10 : STD_LOGIC;
    signal ap_block_pp0_stage2_subdone : BOOLEAN;
    signal ap_block_pp0_stage3_subdone : BOOLEAN;
    signal ap_block_pp0_stage4_subdone : BOOLEAN;
    signal ap_block_pp0_stage5_subdone : BOOLEAN;
    signal ap_block_pp0_stage6_subdone : BOOLEAN;
    signal ap_enable_pp0 : STD_LOGIC;
    signal ap_start_int : STD_LOGIC;
    signal ap_ce_reg : STD_LOGIC;

    component FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        opcode : IN STD_LOGIC_VECTOR (1 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_fmul_32ns_32ns_32_4_max_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_fcmp_32ns_32ns_1_2_no_dsp_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        clk : IN STD_LOGIC;
        reset : IN STD_LOGIC;
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        ce : IN STD_LOGIC;
        opcode : IN STD_LOGIC_VECTOR (4 downto 0);
        dout : OUT STD_LOGIC_VECTOR (0 downto 0) );
    end component;


    component FaultDetector_mux_83_32_1_1 IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (31 downto 0);
        din1 : IN STD_LOGIC_VECTOR (31 downto 0);
        din2 : IN STD_LOGIC_VECTOR (31 downto 0);
        din3 : IN STD_LOGIC_VECTOR (31 downto 0);
        din4 : IN STD_LOGIC_VECTOR (31 downto 0);
        din5 : IN STD_LOGIC_VECTOR (31 downto 0);
        din6 : IN STD_LOGIC_VECTOR (31 downto 0);
        din7 : IN STD_LOGIC_VECTOR (31 downto 0);
        din8 : IN STD_LOGIC_VECTOR (2 downto 0);
        dout : OUT STD_LOGIC_VECTOR (31 downto 0) );
    end component;


    component FaultDetector_flow_control_loop_pipe_sequential_init IS
    port (
        ap_clk : IN STD_LOGIC;
        ap_rst : IN STD_LOGIC;
        ap_start : IN STD_LOGIC;
        ap_ready : OUT STD_LOGIC;
        ap_done : OUT STD_LOGIC;
        ap_start_int : OUT STD_LOGIC;
        ap_loop_init : OUT STD_LOGIC;
        ap_ready_int : IN STD_LOGIC;
        ap_loop_exit_ready : IN STD_LOGIC;
        ap_loop_exit_done : IN STD_LOGIC;
        ap_continue_int : OUT STD_LOGIC;
        ap_done_int : IN STD_LOGIC );
    end component;



begin
    fsub_32ns_32ns_32_8_full_dsp_1_U11 : component FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1250_p0,
        din1 => grp_fu_1250_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1250_p2);

    fsub_32ns_32ns_32_8_full_dsp_1_U12 : component FaultDetector_fsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1254_p0,
        din1 => grp_fu_1254_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1254_p2);

    faddfsub_32ns_32ns_32_8_full_dsp_1_U13 : component FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1258_p0,
        din1 => grp_fu_1258_p1,
        opcode => grp_fu_1258_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_1258_p2);

    faddfsub_32ns_32ns_32_8_full_dsp_1_U14 : component FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1262_p0,
        din1 => grp_fu_1262_p1,
        opcode => grp_fu_1262_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_1262_p2);

    faddfsub_32ns_32ns_32_8_full_dsp_1_U15 : component FaultDetector_faddfsub_32ns_32ns_32_8_full_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 8,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1266_p0,
        din1 => grp_fu_1266_p1,
        opcode => grp_fu_1266_opcode,
        ce => ap_const_logic_1,
        dout => grp_fu_1266_p2);

    fmul_32ns_32ns_32_4_max_dsp_1_U17 : component FaultDetector_fmul_32ns_32ns_32_4_max_dsp_1
    generic map (
        ID => 1,
        NUM_STAGE => 4,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        dout_WIDTH => 32)
    port map (
        clk => ap_clk,
        reset => ap_rst,
        din0 => grp_fu_1275_p0,
        din1 => grp_fu_1275_p1,
        ce => ap_const_logic_1,
        dout => grp_fu_1275_p2);

    mux_83_32_1_1_U20 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_0_0,
        din1 => regions_center_1_0_0,
        din2 => regions_center_2_0_0,
        din3 => regions_center_3_0_0,
        din4 => regions_center_4_0_0,
        din5 => regions_center_5_0_0,
        din6 => regions_center_6_0_0,
        din7 => regions_center_7_0_0,
        din8 => trunc_ln104_fu_1369_p1,
        dout => tmp_s_fu_1373_p10);

    mux_83_32_1_1_U21 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_0_0,
        din1 => regions_center_1_0_0,
        din2 => regions_center_2_0_0,
        din3 => regions_center_3_0_0,
        din4 => regions_center_4_0_0,
        din5 => regions_center_5_0_0,
        din6 => regions_center_6_0_0,
        din7 => regions_center_7_0_0,
        din8 => trunc_ln104_1_fu_1387_p1,
        dout => tmp_5_fu_1391_p10);

    mux_83_32_1_1_U22 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_0_0,
        din1 => regions_max_1_0_0,
        din2 => regions_max_2_0_0,
        din3 => regions_max_3_0_0,
        din4 => regions_max_4_0_0,
        din5 => regions_max_5_0_0,
        din6 => regions_max_6_0_0,
        din7 => regions_max_7_0_0,
        din8 => trunc_ln104_fu_1369_p1,
        dout => tmp_6_fu_1405_p10);

    mux_83_32_1_1_U23 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_0_0,
        din1 => regions_min_1_0_0,
        din2 => regions_min_2_0_0,
        din3 => regions_min_3_0_0,
        din4 => regions_min_4_0_0,
        din5 => regions_min_5_0_0,
        din6 => regions_min_6_0_0,
        din7 => regions_min_7_0_0,
        din8 => trunc_ln104_fu_1369_p1,
        dout => tmp_7_fu_1419_p10);

    mux_83_32_1_1_U24 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_0_0,
        din1 => regions_max_1_0_0,
        din2 => regions_max_2_0_0,
        din3 => regions_max_3_0_0,
        din4 => regions_max_4_0_0,
        din5 => regions_max_5_0_0,
        din6 => regions_max_6_0_0,
        din7 => regions_max_7_0_0,
        din8 => trunc_ln104_1_fu_1387_p1,
        dout => tmp_8_fu_1433_p10);

    mux_83_32_1_1_U25 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_0_0,
        din1 => regions_min_1_0_0,
        din2 => regions_min_2_0_0,
        din3 => regions_min_3_0_0,
        din4 => regions_min_4_0_0,
        din5 => regions_min_5_0_0,
        din6 => regions_min_6_0_0,
        din7 => regions_min_7_0_0,
        din8 => trunc_ln104_1_fu_1387_p1,
        dout => tmp_9_fu_1447_p10);

    mux_83_32_1_1_U26 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_1_0,
        din1 => regions_center_1_1_0,
        din2 => regions_center_2_1_0,
        din3 => regions_center_3_1_0,
        din4 => regions_center_4_1_0,
        din5 => regions_center_5_1_0,
        din6 => regions_center_6_1_0,
        din7 => regions_center_7_1_0,
        din8 => trunc_ln104_fu_1369_p1,
        dout => tmp_1_fu_1461_p10);

    mux_83_32_1_1_U27 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_1_0,
        din1 => regions_center_1_1_0,
        din2 => regions_center_2_1_0,
        din3 => regions_center_3_1_0,
        din4 => regions_center_4_1_0,
        din5 => regions_center_5_1_0,
        din6 => regions_center_6_1_0,
        din7 => regions_center_7_1_0,
        din8 => trunc_ln104_1_fu_1387_p1,
        dout => tmp_2_fu_1475_p10);

    mux_83_32_1_1_U28 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_1_0,
        din1 => regions_min_1_1_0,
        din2 => regions_min_2_1_0,
        din3 => regions_min_3_1_0,
        din4 => regions_min_4_1_0,
        din5 => regions_min_5_1_0,
        din6 => regions_min_6_1_0,
        din7 => regions_min_7_1_0,
        din8 => trunc_ln104_fu_1369_p1,
        dout => tmp_4_fu_1489_p10);

    mux_83_32_1_1_U29 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_1_0,
        din1 => regions_min_1_1_0,
        din2 => regions_min_2_1_0,
        din3 => regions_min_3_1_0,
        din4 => regions_min_4_1_0,
        din5 => regions_min_5_1_0,
        din6 => regions_min_6_1_0,
        din7 => regions_min_7_1_0,
        din8 => trunc_ln104_1_fu_1387_p1,
        dout => tmp_11_fu_1503_p10);

    mux_83_32_1_1_U30 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_2_0,
        din1 => regions_center_1_2_0,
        din2 => regions_center_2_2_0,
        din3 => regions_center_3_2_0,
        din4 => regions_center_4_2_0,
        din5 => regions_center_5_2_0,
        din6 => regions_center_6_2_0,
        din7 => regions_center_7_2_0,
        din8 => trunc_ln104_fu_1369_p1,
        dout => tmp_12_fu_1517_p10);

    mux_83_32_1_1_U31 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_2_0,
        din1 => regions_center_1_2_0,
        din2 => regions_center_2_2_0,
        din3 => regions_center_3_2_0,
        din4 => regions_center_4_2_0,
        din5 => regions_center_5_2_0,
        din6 => regions_center_6_2_0,
        din7 => regions_center_7_2_0,
        din8 => trunc_ln104_1_fu_1387_p1,
        dout => tmp_13_fu_1531_p10);

    mux_83_32_1_1_U32 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_1_0,
        din1 => regions_max_1_1_0,
        din2 => regions_max_2_1_0,
        din3 => regions_max_3_1_0,
        din4 => regions_max_4_1_0,
        din5 => regions_max_5_1_0,
        din6 => regions_max_6_1_0,
        din7 => regions_max_7_1_0,
        din8 => trunc_ln104_reg_3993,
        dout => tmp_3_fu_1545_p10);

    mux_83_32_1_1_U33 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_1_0,
        din1 => regions_max_1_1_0,
        din2 => regions_max_2_1_0,
        din3 => regions_max_3_1_0,
        din4 => regions_max_4_1_0,
        din5 => regions_max_5_1_0,
        din6 => regions_max_6_1_0,
        din7 => regions_max_7_1_0,
        din8 => trunc_ln104_1_reg_4014,
        dout => tmp_10_fu_1558_p10);

    mux_83_32_1_1_U34 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_2_0,
        din1 => regions_max_1_2_0,
        din2 => regions_max_2_2_0,
        din3 => regions_max_3_2_0,
        din4 => regions_max_4_2_0,
        din5 => regions_max_5_2_0,
        din6 => regions_max_6_2_0,
        din7 => regions_max_7_2_0,
        din8 => trunc_ln104_reg_3993,
        dout => tmp_14_fu_1571_p10);

    mux_83_32_1_1_U35 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_2_0,
        din1 => regions_min_1_2_0,
        din2 => regions_min_2_2_0,
        din3 => regions_min_3_2_0,
        din4 => regions_min_4_2_0,
        din5 => regions_min_5_2_0,
        din6 => regions_min_6_2_0,
        din7 => regions_min_7_2_0,
        din8 => trunc_ln104_reg_3993,
        dout => tmp_15_fu_1584_p10);

    mux_83_32_1_1_U36 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_2_0,
        din1 => regions_min_1_2_0,
        din2 => regions_min_2_2_0,
        din3 => regions_min_3_2_0,
        din4 => regions_min_4_2_0,
        din5 => regions_min_5_2_0,
        din6 => regions_min_6_2_0,
        din7 => regions_min_7_2_0,
        din8 => trunc_ln104_1_reg_4014,
        dout => tmp_17_fu_1597_p10);

    mux_83_32_1_1_U37 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_3_0,
        din1 => regions_min_1_3_0,
        din2 => regions_min_2_3_0,
        din3 => regions_min_3_3_0,
        din4 => regions_min_4_3_0,
        din5 => regions_min_5_3_0,
        din6 => regions_min_6_3_0,
        din7 => regions_min_7_3_0,
        din8 => trunc_ln104_reg_3993,
        dout => tmp_21_fu_1610_p10);

    mux_83_32_1_1_U38 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_3_0,
        din1 => regions_min_1_3_0,
        din2 => regions_min_2_3_0,
        din3 => regions_min_3_3_0,
        din4 => regions_min_4_3_0,
        din5 => regions_min_5_3_0,
        din6 => regions_min_6_3_0,
        din7 => regions_min_7_3_0,
        din8 => trunc_ln104_1_reg_4014,
        dout => tmp_23_fu_1623_p10);

    mux_83_32_1_1_U39 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_2_0,
        din1 => regions_max_1_2_0,
        din2 => regions_max_2_2_0,
        din3 => regions_max_3_2_0,
        din4 => regions_max_4_2_0,
        din5 => regions_max_5_2_0,
        din6 => regions_max_6_2_0,
        din7 => regions_max_7_2_0,
        din8 => trunc_ln104_1_reg_4014,
        dout => tmp_16_fu_1752_p10);

    mux_83_32_1_1_U40 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_3_0,
        din1 => regions_center_1_3_0,
        din2 => regions_center_2_3_0,
        din3 => regions_center_3_3_0,
        din4 => regions_center_4_3_0,
        din5 => regions_center_5_3_0,
        din6 => regions_center_6_3_0,
        din7 => regions_center_7_3_0,
        din8 => trunc_ln104_reg_3993,
        dout => tmp_18_fu_1765_p10);

    mux_83_32_1_1_U41 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_3_0,
        din1 => regions_center_1_3_0,
        din2 => regions_center_2_3_0,
        din3 => regions_center_3_3_0,
        din4 => regions_center_4_3_0,
        din5 => regions_center_5_3_0,
        din6 => regions_center_6_3_0,
        din7 => regions_center_7_3_0,
        din8 => trunc_ln104_1_reg_4014,
        dout => tmp_19_fu_1778_p10);

    mux_83_32_1_1_U42 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_3_0,
        din1 => regions_max_1_3_0,
        din2 => regions_max_2_3_0,
        din3 => regions_max_3_3_0,
        din4 => regions_max_4_3_0,
        din5 => regions_max_5_3_0,
        din6 => regions_max_6_3_0,
        din7 => regions_max_7_3_0,
        din8 => trunc_ln104_reg_3993,
        dout => tmp_20_fu_1791_p10);

    mux_83_32_1_1_U43 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_3_0,
        din1 => regions_max_1_3_0,
        din2 => regions_max_2_3_0,
        din3 => regions_max_3_3_0,
        din4 => regions_max_4_3_0,
        din5 => regions_max_5_3_0,
        din6 => regions_max_6_3_0,
        din7 => regions_max_7_3_0,
        din8 => trunc_ln104_1_reg_4014,
        dout => tmp_22_fu_1804_p10);

    mux_83_32_1_1_U44 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_4_0,
        din1 => regions_min_1_4_0,
        din2 => regions_min_2_4_0,
        din3 => regions_min_3_4_0,
        din4 => regions_min_4_4_0,
        din5 => regions_min_5_4_0,
        din6 => regions_min_6_4_0,
        din7 => regions_min_7_4_0,
        din8 => trunc_ln104_reg_3993,
        dout => tmp_27_fu_1817_p10);

    mux_83_32_1_1_U45 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_4_0,
        din1 => regions_min_1_4_0,
        din2 => regions_min_2_4_0,
        din3 => regions_min_3_4_0,
        din4 => regions_min_4_4_0,
        din5 => regions_min_5_4_0,
        din6 => regions_min_6_4_0,
        din7 => regions_min_7_4_0,
        din8 => trunc_ln104_1_reg_4014,
        dout => tmp_29_fu_1830_p10);

    mux_83_32_1_1_U46 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_5_0,
        din1 => regions_min_1_5_0,
        din2 => regions_min_2_5_0,
        din3 => regions_min_3_5_0,
        din4 => regions_min_4_5_0,
        din5 => regions_min_5_5_0,
        din6 => regions_min_6_5_0,
        din7 => regions_min_7_5_0,
        din8 => trunc_ln104_reg_3993,
        dout => tmp_33_fu_1939_p10);

    mux_83_32_1_1_U47 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_min_0_5_0,
        din1 => regions_min_1_5_0,
        din2 => regions_min_2_5_0,
        din3 => regions_min_3_5_0,
        din4 => regions_min_4_5_0,
        din5 => regions_min_5_5_0,
        din6 => regions_min_6_5_0,
        din7 => regions_min_7_5_0,
        din8 => trunc_ln104_1_reg_4014,
        dout => tmp_35_fu_1952_p10);

    mux_83_32_1_1_U48 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_4_0,
        din1 => regions_max_1_4_0,
        din2 => regions_max_2_4_0,
        din3 => regions_max_3_4_0,
        din4 => regions_max_4_4_0,
        din5 => regions_max_5_4_0,
        din6 => regions_max_6_4_0,
        din7 => regions_max_7_4_0,
        din8 => trunc_ln104_reg_3993,
        dout => tmp_26_fu_2065_p10);

    mux_83_32_1_1_U49 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_4_0,
        din1 => regions_max_1_4_0,
        din2 => regions_max_2_4_0,
        din3 => regions_max_3_4_0,
        din4 => regions_max_4_4_0,
        din5 => regions_max_5_4_0,
        din6 => regions_max_6_4_0,
        din7 => regions_max_7_4_0,
        din8 => trunc_ln104_1_reg_4014,
        dout => tmp_28_fu_2078_p10);

    mux_83_32_1_1_U50 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_4_0,
        din1 => regions_center_1_4_0,
        din2 => regions_center_2_4_0,
        din3 => regions_center_3_4_0,
        din4 => regions_center_4_4_0,
        din5 => regions_center_5_4_0,
        din6 => regions_center_6_4_0,
        din7 => regions_center_7_4_0,
        din8 => trunc_ln104_reg_3993,
        dout => tmp_24_fu_2091_p10);

    mux_83_32_1_1_U51 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_4_0,
        din1 => regions_center_1_4_0,
        din2 => regions_center_2_4_0,
        din3 => regions_center_3_4_0,
        din4 => regions_center_4_4_0,
        din5 => regions_center_5_4_0,
        din6 => regions_center_6_4_0,
        din7 => regions_center_7_4_0,
        din8 => trunc_ln104_1_reg_4014,
        dout => tmp_25_fu_2104_p10);

    mux_83_32_1_1_U52 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_5_0,
        din1 => regions_max_1_5_0,
        din2 => regions_max_2_5_0,
        din3 => regions_max_3_5_0,
        din4 => regions_max_4_5_0,
        din5 => regions_max_5_5_0,
        din6 => regions_max_6_5_0,
        din7 => regions_max_7_5_0,
        din8 => trunc_ln104_reg_3993,
        dout => tmp_32_fu_2198_p10);

    mux_83_32_1_1_U53 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_max_0_5_0,
        din1 => regions_max_1_5_0,
        din2 => regions_max_2_5_0,
        din3 => regions_max_3_5_0,
        din4 => regions_max_4_5_0,
        din5 => regions_max_5_5_0,
        din6 => regions_max_6_5_0,
        din7 => regions_max_7_5_0,
        din8 => trunc_ln104_1_reg_4014,
        dout => tmp_34_fu_2211_p10);

    mux_83_32_1_1_U54 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_5_0,
        din1 => regions_center_1_5_0,
        din2 => regions_center_2_5_0,
        din3 => regions_center_3_5_0,
        din4 => regions_center_4_5_0,
        din5 => regions_center_5_5_0,
        din6 => regions_center_6_5_0,
        din7 => regions_center_7_5_0,
        din8 => trunc_ln104_reg_3993,
        dout => tmp_30_fu_2305_p10);

    mux_83_32_1_1_U55 : component FaultDetector_mux_83_32_1_1
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 32,
        din1_WIDTH => 32,
        din2_WIDTH => 32,
        din3_WIDTH => 32,
        din4_WIDTH => 32,
        din5_WIDTH => 32,
        din6_WIDTH => 32,
        din7_WIDTH => 32,
        din8_WIDTH => 3,
        dout_WIDTH => 32)
    port map (
        din0 => regions_center_0_5_0,
        din1 => regions_center_1_5_0,
        din2 => regions_center_2_5_0,
        din3 => regions_center_3_5_0,
        din4 => regions_center_4_5_0,
        din5 => regions_center_5_5_0,
        din6 => regions_center_6_5_0,
        din7 => regions_center_7_5_0,
        din8 => trunc_ln104_1_reg_4014,
        dout => tmp_31_fu_2318_p10);

    flow_control_loop_pipe_sequential_init_U : component FaultDetector_flow_control_loop_pipe_sequential_init
    port map (
        ap_clk => ap_clk,
        ap_rst => ap_rst,
        ap_start => ap_start,
        ap_ready => ap_ready,
        ap_done => ap_done,
        ap_start_int => ap_start_int,
        ap_loop_init => ap_loop_init,
        ap_ready_int => ap_ready_int,
        ap_loop_exit_ready => ap_condition_exit_pp0_iter0_stage7,
        ap_loop_exit_done => ap_done_int,
        ap_continue_int => ap_continue_int,
        ap_done_int => ap_done_int);





    ap_CS_fsm_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
            else
                ap_CS_fsm <= ap_NS_fsm;
            end if;
        end if;
    end process;


    ap_done_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_done_reg <= ap_const_logic_0;
            else
                if ((ap_continue_int = ap_const_logic_1)) then 
                    ap_done_reg <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
                    ap_done_reg <= ap_const_logic_1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter0_reg_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter0_reg <= ap_const_logic_0;
            else
                if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
                    ap_enable_reg_pp0_iter0_reg <= ap_start_int;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter1_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter1 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter10_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
            else
                if (((ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                    ap_enable_reg_pp0_iter10 <= ap_const_logic_0;
                elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter10 <= ap_enable_reg_pp0_iter9;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter2_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter2 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter3_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter3 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter3 <= ap_enable_reg_pp0_iter2;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter4_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter4 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter4 <= ap_enable_reg_pp0_iter3;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter5_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter5 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter5 <= ap_enable_reg_pp0_iter4;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter6_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter6 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter6 <= ap_enable_reg_pp0_iter5;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter7_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter7 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter7 <= ap_enable_reg_pp0_iter6;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter8_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter8 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter8 <= ap_enable_reg_pp0_iter7;
                end if; 
            end if;
        end if;
    end process;


    ap_enable_reg_pp0_iter9_assign_proc : process(ap_clk)
    begin
        if (ap_clk'event and ap_clk =  '1') then
            if (ap_rst = '1') then
                ap_enable_reg_pp0_iter9 <= ap_const_logic_0;
            else
                if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                    ap_enable_reg_pp0_iter9 <= ap_enable_reg_pp0_iter8;
                end if; 
            end if;
        end if;
    end process;


    ap_loop_exit_ready_pp0_iter10_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone) and (ap_loop_exit_ready_pp0_iter9_reg = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter10_reg <= ap_loop_exit_ready_pp0_iter9_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter1_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter1_reg <= ap_loop_exit_ready;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter2_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter2_reg <= ap_loop_exit_ready_pp0_iter1_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter3_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter3_reg <= ap_loop_exit_ready_pp0_iter2_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter4_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter4_reg <= ap_loop_exit_ready_pp0_iter3_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter5_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter5_reg <= ap_loop_exit_ready_pp0_iter4_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter6_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter6_reg <= ap_loop_exit_ready_pp0_iter5_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter7_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter7_reg <= ap_loop_exit_ready_pp0_iter6_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter8_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter8_reg <= ap_loop_exit_ready_pp0_iter7_reg;
            end if; 
        end if;
    end process;

    ap_loop_exit_ready_pp0_iter9_reg_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_const_logic_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
                ap_loop_exit_ready_pp0_iter9_reg <= ap_loop_exit_ready_pp0_iter8_reg;
            end if; 
        end if;
    end process;

    k_real_4_fu_356_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    k_real_4_fu_356 <= ap_const_lv32_1;
                elsif (((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    k_real_4_fu_356 <= k_real_3_fu_2351_p3;
                end if;
            end if; 
        end if;
    end process;

    merge_1_1_fu_352_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                if ((ap_loop_init = ap_const_logic_1)) then 
                    merge_1_1_fu_352 <= ap_const_lv32_0;
                elsif (((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1))) then 
                    merge_1_1_fu_352 <= i_real_2_fu_2359_p3;
                end if;
            end if; 
        end if;
    end process;

    merge_1_fu_340_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                merge_1_fu_340 <= ap_const_lv32_FFFFFFFF;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                merge_1_fu_340 <= merge_1_7_fu_3040_p3;
            end if; 
        end if;
    end process;

    merge_2_fu_344_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                merge_2_fu_344 <= ap_const_lv32_FFFFFFFF;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                merge_2_fu_344 <= merge_2_6_fu_3034_p3;
            end if; 
        end if;
    end process;

    score_fu_348_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                score_fu_348 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
                score_fu_348 <= score_3_fu_3028_p3;
            end if; 
        end if;
    end process;

    tmp_other_fu_364_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                tmp_other_fu_364 <= ap_const_lv32_FFFFFFFF;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1027_reg_3989_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                tmp_other_fu_364 <= tmp_other_3_fu_2874_p3;
            end if; 
        end if;
    end process;

    tmp_score_fu_360_assign_proc : process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0) and (ap_loop_init = ap_const_logic_1))) then 
                tmp_score_fu_360 <= ap_const_lv32_0;
            elsif (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1027_reg_3989_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
                tmp_score_fu_360 <= tmp_score_3_fu_2880_p3;
            end if; 
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                and_ln112_11_reg_4357 <= and_ln112_11_fu_2300_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                and_ln112_11_reg_4357_pp0_iter1_reg <= and_ln112_11_reg_4357;
                and_ln112_11_reg_4357_pp0_iter2_reg <= and_ln112_11_reg_4357_pp0_iter1_reg;
                mul_3_reg_4530_pp0_iter2_reg <= mul_3_reg_4530;
                mul_3_reg_4530_pp0_iter3_reg <= mul_3_reg_4530_pp0_iter2_reg;
                mul_3_reg_4530_pp0_iter4_reg <= mul_3_reg_4530_pp0_iter3_reg;
                ov_23_reg_4658_pp0_iter4_reg <= ov_23_reg_4658;
                overlap_5_reg_4683_pp0_iter6_reg <= overlap_5_reg_4683;
                overlap_5_reg_4683_pp0_iter7_reg <= overlap_5_reg_4683_pp0_iter6_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                and_ln112_1_reg_4244 <= and_ln112_1_fu_1856_p2;
                and_ln112_3_reg_4249 <= and_ln112_3_fu_1875_p2;
                icmp_ln112_10_reg_4264 <= icmp_ln112_10_fu_1927_p2;
                icmp_ln112_11_reg_4269 <= icmp_ln112_11_fu_1933_p2;
                icmp_ln112_8_reg_4254 <= icmp_ln112_8_fu_1915_p2;
                icmp_ln112_9_reg_4259 <= icmp_ln112_9_fu_1921_p2;
                tmp_33_reg_4284 <= tmp_33_fu_1939_p10;
                tmp_35_reg_4293 <= tmp_35_fu_1952_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                and_ln112_1_reg_4244_pp0_iter1_reg <= and_ln112_1_reg_4244;
                and_ln112_1_reg_4244_pp0_iter2_reg <= and_ln112_1_reg_4244_pp0_iter1_reg;
                and_ln112_3_reg_4249_pp0_iter1_reg <= and_ln112_3_reg_4249;
                and_ln112_3_reg_4249_pp0_iter2_reg <= and_ln112_3_reg_4249_pp0_iter1_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                and_ln112_5_reg_4302 <= and_ln112_5_fu_1979_p2;
                and_ln112_7_reg_4307 <= and_ln112_7_fu_2060_p2;
                tmp_26_reg_4312 <= tmp_26_fu_2065_p10;
                tmp_28_reg_4317 <= tmp_28_fu_2078_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                and_ln112_5_reg_4302_pp0_iter1_reg <= and_ln112_5_reg_4302;
                and_ln112_5_reg_4302_pp0_iter2_reg <= and_ln112_5_reg_4302_pp0_iter1_reg;
                and_ln112_7_reg_4307_pp0_iter1_reg <= and_ln112_7_reg_4307;
                and_ln112_7_reg_4307_pp0_iter2_reg <= and_ln112_7_reg_4307_pp0_iter1_reg;
                mul_1_reg_4484_pp0_iter2_reg <= mul_1_reg_4484;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                and_ln112_9_reg_4337 <= and_ln112_9_fu_2193_p2;
                tmp_24_reg_4327 <= tmp_24_fu_2091_p10;
                tmp_25_reg_4332 <= tmp_25_fu_2104_p10;
                tmp_32_reg_4342 <= tmp_32_fu_2198_p10;
                tmp_34_reg_4347 <= tmp_34_fu_2211_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                and_ln112_9_reg_4337_pp0_iter1_reg <= and_ln112_9_reg_4337;
                and_ln112_9_reg_4337_pp0_iter2_reg <= and_ln112_9_reg_4337_pp0_iter1_reg;
                mul_2_reg_4504_pp0_iter2_reg <= mul_2_reg_4504;
                mul_5_reg_4565_pp0_iter3_reg <= mul_5_reg_4565;
                mul_5_reg_4565_pp0_iter4_reg <= mul_5_reg_4565_pp0_iter3_reg;
                mul_5_reg_4565_pp0_iter5_reg <= mul_5_reg_4565_pp0_iter4_reg;
                mul_5_reg_4565_pp0_iter6_reg <= mul_5_reg_4565_pp0_iter5_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                d1_1_reg_4413 <= grp_fu_1250_p2;
                d1_2_reg_4433 <= grp_fu_1266_p2;
                d2_1_reg_4418 <= grp_fu_1254_p2;
                sub2_reg_4408 <= grp_fu_6848_p_dout0;
                sub75_1_reg_4423 <= grp_fu_1258_p2;
                sub87_1_reg_4428 <= grp_fu_1262_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                d1_3_reg_4459 <= grp_fu_1262_p2;
                d2_2_reg_4438 <= grp_fu_6848_p_dout0;
                d2_3_reg_4464 <= grp_fu_1266_p2;
                d_3_reg_4453 <= grp_fu_1258_p2;
                sub75_2_reg_4443 <= grp_fu_1250_p2;
                sub87_2_reg_4448 <= grp_fu_1254_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                d1_4_reg_4489 <= grp_fu_6848_p_dout0;
                d2_4_reg_4494 <= grp_fu_1250_p2;
                mul_1_reg_4484 <= grp_fu_1275_p2;
                mul_reg_4479 <= grp_fu_6854_p_dout0;
                sub75_4_reg_4499 <= grp_fu_1254_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                d1_5_reg_4520 <= grp_fu_1254_p2;
                d2_5_reg_4525 <= grp_fu_1258_p2;
                d_4_reg_4509 <= grp_fu_6848_p_dout0;
                mul_2_reg_4504 <= grp_fu_6854_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                d1_reg_4387 <= grp_fu_1250_p2;
                d2_reg_4392 <= grp_fu_1254_p2;
                d_2_reg_4402 <= grp_fu_1266_p2;
                d_reg_4381 <= grp_fu_6848_p_dout0;
                sub_reg_4397 <= grp_fu_1258_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                d_5_reg_4535 <= grp_fu_6848_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_3989_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                distance_1_reg_4638 <= grp_fu_1262_p2;
                tmp_60_reg_4643 <= grp_fu_6864_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_3989_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                distance_2_reg_4668 <= grp_fu_1266_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_3989_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                distance_3_reg_4678 <= grp_fu_1258_p2;
                overlap_5_reg_4683 <= grp_fu_1275_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_3989_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                distance_4_reg_4695 <= grp_fu_1258_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                distance_reg_4546 <= grp_fu_1258_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                i_real_3_reg_3974 <= merge_1_1_fu_352;
                i_real_3_reg_3974_pp0_iter1_reg <= i_real_3_reg_3974;
                i_real_3_reg_3974_pp0_iter2_reg <= i_real_3_reg_3974_pp0_iter1_reg;
                i_real_3_reg_3974_pp0_iter3_reg <= i_real_3_reg_3974_pp0_iter2_reg;
                i_real_3_reg_3974_pp0_iter4_reg <= i_real_3_reg_3974_pp0_iter3_reg;
                i_real_3_reg_3974_pp0_iter5_reg <= i_real_3_reg_3974_pp0_iter4_reg;
                i_real_3_reg_3974_pp0_iter6_reg <= i_real_3_reg_3974_pp0_iter5_reg;
                i_real_3_reg_3974_pp0_iter7_reg <= i_real_3_reg_3974_pp0_iter6_reg;
                i_real_3_reg_3974_pp0_iter8_reg <= i_real_3_reg_3974_pp0_iter7_reg;
                i_real_3_reg_3974_pp0_iter9_reg <= i_real_3_reg_3974_pp0_iter8_reg;
                icmp_ln1027_reg_3989 <= icmp_ln1027_fu_1363_p2;
                icmp_ln1027_reg_3989_pp0_iter1_reg <= icmp_ln1027_reg_3989;
                icmp_ln1027_reg_3989_pp0_iter2_reg <= icmp_ln1027_reg_3989_pp0_iter1_reg;
                icmp_ln1027_reg_3989_pp0_iter3_reg <= icmp_ln1027_reg_3989_pp0_iter2_reg;
                icmp_ln1027_reg_3989_pp0_iter4_reg <= icmp_ln1027_reg_3989_pp0_iter3_reg;
                icmp_ln1027_reg_3989_pp0_iter5_reg <= icmp_ln1027_reg_3989_pp0_iter4_reg;
                icmp_ln1027_reg_3989_pp0_iter6_reg <= icmp_ln1027_reg_3989_pp0_iter5_reg;
                icmp_ln1027_reg_3989_pp0_iter7_reg <= icmp_ln1027_reg_3989_pp0_iter6_reg;
                icmp_ln1027_reg_3989_pp0_iter8_reg <= icmp_ln1027_reg_3989_pp0_iter7_reg;
                icmp_ln1027_reg_3989_pp0_iter9_reg <= icmp_ln1027_reg_3989_pp0_iter8_reg;
                k_real_5_reg_3982 <= k_real_4_fu_356;
                k_real_5_reg_3982_pp0_iter1_reg <= k_real_5_reg_3982;
                k_real_5_reg_3982_pp0_iter2_reg <= k_real_5_reg_3982_pp0_iter1_reg;
                k_real_5_reg_3982_pp0_iter3_reg <= k_real_5_reg_3982_pp0_iter2_reg;
                k_real_5_reg_3982_pp0_iter4_reg <= k_real_5_reg_3982_pp0_iter3_reg;
                k_real_5_reg_3982_pp0_iter5_reg <= k_real_5_reg_3982_pp0_iter4_reg;
                k_real_5_reg_3982_pp0_iter6_reg <= k_real_5_reg_3982_pp0_iter5_reg;
                k_real_5_reg_3982_pp0_iter7_reg <= k_real_5_reg_3982_pp0_iter6_reg;
                k_real_5_reg_3982_pp0_iter8_reg <= k_real_5_reg_3982_pp0_iter7_reg;
                tmp_67_reg_4690_pp0_iter7_reg <= tmp_67_reg_4690;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1019_reg_4372 <= icmp_ln1019_fu_2331_p2;
                tmp_30_reg_4362 <= tmp_30_fu_2305_p10;
                tmp_31_reg_4367 <= tmp_31_fu_2318_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                icmp_ln1019_reg_4372_pp0_iter10_reg <= icmp_ln1019_reg_4372_pp0_iter9_reg;
                icmp_ln1019_reg_4372_pp0_iter2_reg <= icmp_ln1019_reg_4372;
                icmp_ln1019_reg_4372_pp0_iter3_reg <= icmp_ln1019_reg_4372_pp0_iter2_reg;
                icmp_ln1019_reg_4372_pp0_iter4_reg <= icmp_ln1019_reg_4372_pp0_iter3_reg;
                icmp_ln1019_reg_4372_pp0_iter5_reg <= icmp_ln1019_reg_4372_pp0_iter4_reg;
                icmp_ln1019_reg_4372_pp0_iter6_reg <= icmp_ln1019_reg_4372_pp0_iter5_reg;
                icmp_ln1019_reg_4372_pp0_iter7_reg <= icmp_ln1019_reg_4372_pp0_iter6_reg;
                icmp_ln1019_reg_4372_pp0_iter8_reg <= icmp_ln1019_reg_4372_pp0_iter7_reg;
                icmp_ln1019_reg_4372_pp0_iter9_reg <= icmp_ln1019_reg_4372_pp0_iter8_reg;
                merge_1_4_reg_4741 <= merge_1_fu_340;
                merge_2_1_reg_4748 <= merge_2_fu_344;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                icmp_ln112_1_reg_4157 <= icmp_ln112_1_fu_1676_p2;
                icmp_ln112_2_reg_4162 <= icmp_ln112_2_fu_1682_p2;
                icmp_ln112_3_reg_4167 <= icmp_ln112_3_fu_1688_p2;
                icmp_ln112_4_reg_4177 <= icmp_ln112_4_fu_1728_p2;
                icmp_ln112_5_reg_4182 <= icmp_ln112_5_fu_1734_p2;
                icmp_ln112_6_reg_4187 <= icmp_ln112_6_fu_1740_p2;
                icmp_ln112_7_reg_4192 <= icmp_ln112_7_fu_1746_p2;
                icmp_ln112_reg_4152 <= icmp_ln112_fu_1670_p2;
                tmp_16_reg_4202 <= tmp_16_fu_1752_p10;
                tmp_18_reg_4207 <= tmp_18_fu_1765_p10;
                tmp_19_reg_4212 <= tmp_19_fu_1778_p10;
                tmp_20_reg_4217 <= tmp_20_fu_1791_p10;
                tmp_22_reg_4222 <= tmp_22_fu_1804_p10;
                tmp_27_reg_4227 <= tmp_27_fu_1817_p10;
                tmp_29_reg_4236 <= tmp_29_fu_1830_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                mul_3_reg_4530 <= grp_fu_6854_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul_4_reg_4541 <= grp_fu_6854_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                mul_4_reg_4541_pp0_iter3_reg <= mul_4_reg_4541;
                mul_4_reg_4541_pp0_iter4_reg <= mul_4_reg_4541_pp0_iter3_reg;
                mul_4_reg_4541_pp0_iter5_reg <= mul_4_reg_4541_pp0_iter4_reg;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                mul_5_reg_4565 <= grp_fu_1275_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                ov_10_reg_4580 <= ov_10_fu_2390_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1027_reg_3989_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                ov_11_reg_4623 <= ov_11_fu_2552_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                ov_14_reg_4597 <= ov_14_fu_2491_p3;
                ov_24_reg_4587 <= ov_24_fu_2437_p3;
                ov_7_reg_4592 <= ov_7_fu_2484_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (icmp_ln1027_reg_3989_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                ov_15_reg_4633 <= ov_15_fu_2599_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                ov_18_reg_4609 <= ov_18_fu_2498_p3;
                ov_22_reg_4616 <= ov_22_fu_2505_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_3989_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                ov_19_reg_4648 <= ov_19_fu_2646_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_3989_pp0_iter3_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                ov_23_reg_4658 <= ov_23_fu_2693_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                ov_2_reg_4551 <= ov_2_fu_2376_p3;
                ov_6_reg_4558 <= ov_6_fu_2383_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln1027_reg_3989_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                overlap_3_reg_4663 <= grp_fu_1275_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_3989_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                overlap_4_reg_4673 <= grp_fu_1275_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter7_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_0 = and_ln112_5_reg_4302_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_5_reg_4302_pp0_iter2_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then
                reg_1289 <= grp_fu_1262_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_11_reg_4357) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_11_reg_4357) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then
                reg_1295 <= grp_fu_6848_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_1_reg_4244_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_1_reg_4244_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_9_reg_4337_pp0_iter2_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then
                reg_1300 <= grp_fu_1254_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_3_reg_4249_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_3_reg_4249_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then
                reg_1304 <= grp_fu_1258_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_9_reg_4337_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_lv1_0 = and_ln112_7_reg_4307_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_7_reg_4307_pp0_iter2_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then
                reg_1308 <= grp_fu_1250_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_lv1_0 = and_ln112_11_reg_4357_pp0_iter2_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_11_reg_4357_pp0_iter2_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_1312 <= grp_fu_1254_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln1027_reg_3989_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_3989_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then
                reg_1316 <= grp_fu_6854_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1027_reg_3989_pp0_iter7_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                sc_2_reg_4700 <= sc_2_fu_2754_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_3989_pp0_iter9_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                score_load_reg_4733 <= score_fu_348;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                sub75_3_reg_4469 <= grp_fu_6848_p_dout0;
                sub87_3_reg_4474 <= grp_fu_1250_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_lv1_0 = and_ln112_9_reg_4337) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                sub87_4_reg_4515 <= grp_fu_1250_p2;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_10_reg_4106 <= tmp_10_fu_1558_p10;
                tmp_14_reg_4111 <= tmp_14_fu_1571_p10;
                tmp_15_reg_4116 <= tmp_15_fu_1584_p10;
                tmp_17_reg_4125 <= tmp_17_fu_1597_p10;
                tmp_21_reg_4134 <= tmp_21_fu_1610_p10;
                tmp_23_reg_4143 <= tmp_23_fu_1623_p10;
                tmp_3_reg_4101 <= tmp_3_fu_1545_p10;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1027_fu_1363_p2 = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_11_reg_4082 <= tmp_11_fu_1503_p10;
                tmp_12_reg_4091 <= tmp_12_fu_1517_p10;
                tmp_13_reg_4096 <= tmp_13_fu_1531_p10;
                tmp_1_reg_4063 <= tmp_1_fu_1461_p10;
                tmp_2_reg_4068 <= tmp_2_fu_1475_p10;
                tmp_4_reg_4073 <= tmp_4_fu_1489_p10;
                tmp_5_reg_4030 <= tmp_5_fu_1391_p10;
                tmp_6_reg_4035 <= tmp_6_fu_1405_p10;
                tmp_7_reg_4040 <= tmp_7_fu_1419_p10;
                tmp_8_reg_4049 <= tmp_8_fu_1433_p10;
                tmp_9_reg_4054 <= tmp_9_fu_1447_p10;
                tmp_s_reg_4009 <= tmp_s_fu_1373_p10;
                trunc_ln104_1_reg_4014 <= trunc_ln104_1_fu_1387_p1;
                trunc_ln104_reg_3993 <= trunc_ln104_fu_1369_p1;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then
                tmp_38_reg_4172 <= grp_fu_6859_p_dout0;
                tmp_43_reg_4197 <= grp_fu_6864_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                tmp_40_reg_4570 <= grp_fu_6859_p_dout0;
                tmp_45_reg_4575 <= grp_fu_6864_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then
                tmp_48_reg_4274 <= grp_fu_6859_p_dout0;
                tmp_53_reg_4279 <= grp_fu_6864_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_50_reg_4604 <= grp_fu_6859_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage2_11001) and (icmp_ln1027_reg_3989_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then
                tmp_55_reg_4628 <= grp_fu_6859_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then
                tmp_58_reg_4322 <= grp_fu_6859_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_63_reg_4352 <= grp_fu_6859_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage6_11001) and (icmp_ln1027_reg_3989_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then
                tmp_65_reg_4653 <= grp_fu_6864_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1027_reg_3989_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_67_reg_4690 <= grp_fu_6864_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_3989_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_70_reg_4714 <= grp_fu_6859_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_3989_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then
                tmp_73_reg_4754 <= grp_fu_6864_p_dout0;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage1_11001) and (icmp_ln1027_reg_3989_pp0_iter8_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then
                tmp_other_4_reg_4719 <= tmp_other_4_fu_2861_p3;
                tmp_score_4_reg_4725 <= tmp_score_4_fu_2868_p3;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage7_11001) and (icmp_ln1027_reg_3989_pp0_iter8_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then
                tmp_score_load_reg_4707 <= tmp_score_fu_360;
            end if;
        end if;
    end process;

    ap_NS_fsm_assign_proc : process (ap_CS_fsm, ap_block_pp0_stage7_subdone, ap_block_pp0_stage0_subdone, ap_condition_exit_pp0_iter10_stage0, ap_block_pp0_stage1_subdone, ap_idle_pp0_0to9, ap_idle_pp0_1to10, ap_block_pp0_stage2_subdone, ap_block_pp0_stage3_subdone, ap_block_pp0_stage4_subdone, ap_block_pp0_stage5_subdone, ap_block_pp0_stage6_subdone, ap_start_int)
    begin
        case ap_CS_fsm is
            when ap_ST_fsm_pp0_stage0 => 
                if (((ap_idle_pp0_0to9 = ap_const_logic_1) and (ap_const_logic_1 = ap_condition_exit_pp0_iter10_stage0))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                elsif ((not(((ap_start_int = ap_const_logic_0) and (ap_idle_pp0_1to10 = ap_const_logic_1))) and (ap_const_boolean_0 = ap_block_pp0_stage0_subdone))) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                end if;
            when ap_ST_fsm_pp0_stage1 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage1_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage1;
                end if;
            when ap_ST_fsm_pp0_stage2 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage2_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage2;
                end if;
            when ap_ST_fsm_pp0_stage3 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage3_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage3;
                end if;
            when ap_ST_fsm_pp0_stage4 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage4_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage4;
                end if;
            when ap_ST_fsm_pp0_stage5 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage5_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage5;
                end if;
            when ap_ST_fsm_pp0_stage6 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage6_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage6;
                end if;
            when ap_ST_fsm_pp0_stage7 => 
                if ((ap_const_boolean_0 = ap_block_pp0_stage7_subdone)) then
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage0;
                else
                    ap_NS_fsm <= ap_ST_fsm_pp0_stage7;
                end if;
            when others =>  
                ap_NS_fsm <= "XXXXXXXX";
        end case;
    end process;
    and_ln112_10_fu_2294_p2 <= (or_ln112_11_fu_2288_p2 and or_ln112_10_fu_2270_p2);
    and_ln112_11_fu_2300_p2 <= (tmp_63_reg_4352 and and_ln112_10_fu_2294_p2);
    and_ln112_1_fu_1856_p2 <= (or_ln112_fu_1843_p2 and and_ln112_fu_1851_p2);
    and_ln112_2_fu_1870_p2 <= (tmp_43_reg_4197 and or_ln112_3_fu_1866_p2);
    and_ln112_3_fu_1875_p2 <= (or_ln112_2_fu_1862_p2 and and_ln112_2_fu_1870_p2);
    and_ln112_4_fu_1973_p2 <= (or_ln112_5_fu_1969_p2 and or_ln112_4_fu_1965_p2);
    and_ln112_5_fu_1979_p2 <= (tmp_48_reg_4274 and and_ln112_4_fu_1973_p2);
    and_ln112_6_fu_2054_p2 <= (or_ln112_7_fu_2048_p2 and or_ln112_6_fu_2030_p2);
    and_ln112_7_fu_2060_p2 <= (tmp_53_reg_4279 and and_ln112_6_fu_2054_p2);
    and_ln112_8_fu_2187_p2 <= (or_ln112_9_fu_2181_p2 and or_ln112_8_fu_2163_p2);
    and_ln112_9_fu_2193_p2 <= (tmp_58_reg_4322 and and_ln112_8_fu_2187_p2);
    and_ln112_fu_1851_p2 <= (tmp_38_reg_4172 and or_ln112_1_fu_1847_p2);
    and_ln116_1_fu_2479_p2 <= (tmp_45_reg_4575 and or_ln116_1_fu_2473_p2);
    and_ln116_2_fu_2547_p2 <= (tmp_50_reg_4604 and or_ln116_2_fu_2541_p2);
    and_ln116_3_fu_2594_p2 <= (tmp_55_reg_4628 and or_ln116_3_fu_2588_p2);
    and_ln116_4_fu_2641_p2 <= (tmp_60_reg_4643 and or_ln116_4_fu_2635_p2);
    and_ln116_5_fu_2688_p2 <= (tmp_65_reg_4653 and or_ln116_5_fu_2682_p2);
    and_ln116_fu_2432_p2 <= (tmp_40_reg_4570 and or_ln116_fu_2426_p2);
    and_ln122_fu_2735_p2 <= (tmp_67_reg_4690_pp0_iter7_reg and or_ln122_fu_2729_p2);
    and_ln130_1_fu_2850_p2 <= (tmp_70_reg_4714 and and_ln130_fu_2844_p2);
    and_ln130_fu_2844_p2 <= (or_ln130_2_fu_2838_p2 and or_ln130_1_fu_2820_p2);
    and_ln139_1_fu_2999_p2 <= (tmp_73_reg_4754 and and_ln139_fu_2993_p2);
    and_ln139_fu_2993_p2 <= (or_ln139_2_fu_2987_p2 and or_ln139_1_fu_2969_p2);
    ap_CS_fsm_pp0_stage0 <= ap_CS_fsm(0);
    ap_CS_fsm_pp0_stage1 <= ap_CS_fsm(1);
    ap_CS_fsm_pp0_stage2 <= ap_CS_fsm(2);
    ap_CS_fsm_pp0_stage3 <= ap_CS_fsm(3);
    ap_CS_fsm_pp0_stage4 <= ap_CS_fsm(4);
    ap_CS_fsm_pp0_stage5 <= ap_CS_fsm(5);
    ap_CS_fsm_pp0_stage6 <= ap_CS_fsm(6);
    ap_CS_fsm_pp0_stage7 <= ap_CS_fsm(7);
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_01001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage1_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage2_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage3_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage4_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage5_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage6_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_00001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage7_subdone <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state10_pp0_stage1_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state11_pp0_stage2_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state12_pp0_stage3_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state13_pp0_stage4_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state14_pp0_stage5_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state15_pp0_stage6_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state16_pp0_stage7_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state17_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state18_pp0_stage1_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state19_pp0_stage2_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state20_pp0_stage3_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state21_pp0_stage4_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state22_pp0_stage5_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state23_pp0_stage6_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state24_pp0_stage7_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state25_pp0_stage0_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state26_pp0_stage1_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state27_pp0_stage2_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state28_pp0_stage3_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state29_pp0_stage4_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage1_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state30_pp0_stage5_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state31_pp0_stage6_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state32_pp0_stage7_iter3 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state33_pp0_stage0_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state34_pp0_stage1_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state35_pp0_stage2_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state36_pp0_stage3_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state37_pp0_stage4_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state38_pp0_stage5_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state39_pp0_stage6_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage2_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state40_pp0_stage7_iter4 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state41_pp0_stage0_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state42_pp0_stage1_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state43_pp0_stage2_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state44_pp0_stage3_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state45_pp0_stage4_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state46_pp0_stage5_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state47_pp0_stage6_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state48_pp0_stage7_iter5 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state49_pp0_stage0_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state4_pp0_stage3_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state50_pp0_stage1_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state51_pp0_stage2_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state52_pp0_stage3_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state53_pp0_stage4_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state54_pp0_stage5_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state55_pp0_stage6_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state56_pp0_stage7_iter6 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state57_pp0_stage0_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state58_pp0_stage1_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state59_pp0_stage2_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state5_pp0_stage4_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state60_pp0_stage3_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state61_pp0_stage4_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state62_pp0_stage5_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state63_pp0_stage6_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state64_pp0_stage7_iter7 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state65_pp0_stage0_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state66_pp0_stage1_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state67_pp0_stage2_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state68_pp0_stage3_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state69_pp0_stage4_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state6_pp0_stage5_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state70_pp0_stage5_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state71_pp0_stage6_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state72_pp0_stage7_iter8 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state73_pp0_stage0_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state74_pp0_stage1_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state75_pp0_stage2_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state76_pp0_stage3_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state77_pp0_stage4_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state78_pp0_stage5_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state79_pp0_stage6_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state7_pp0_stage6_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state80_pp0_stage7_iter9 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state81_pp0_stage0_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state82_pp0_stage1_iter10 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state8_pp0_stage7_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state9_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));

    ap_condition_exit_pp0_iter0_stage7_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone, icmp_ln1027_reg_3989)
    begin
        if (((icmp_ln1027_reg_3989 = ap_const_lv1_0) and (ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter0_stage7 <= ap_const_logic_0;
        end if; 
    end process;


    ap_condition_exit_pp0_iter10_stage0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter10, icmp_ln1027_reg_3989_pp0_iter9_reg, ap_block_pp0_stage0_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (icmp_ln1027_reg_3989_pp0_iter9_reg = ap_const_lv1_0) and (ap_enable_reg_pp0_iter10 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_condition_exit_pp0_iter10_stage0 <= ap_const_logic_1;
        else 
            ap_condition_exit_pp0_iter10_stage0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_done_int_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_subdone, ap_done_reg, ap_loop_exit_ready_pp0_iter10_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_subdone) and (ap_loop_exit_ready_pp0_iter10_reg = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_done_int <= ap_const_logic_1;
        else 
            ap_done_int <= ap_done_reg;
        end if; 
    end process;

    ap_enable_pp0 <= (ap_idle_pp0 xor ap_const_logic_1);

    ap_enable_reg_pp0_iter0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0_reg, ap_start_int)
    begin
        if ((ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) then 
            ap_enable_reg_pp0_iter0 <= ap_start_int;
        else 
            ap_enable_reg_pp0_iter0 <= ap_enable_reg_pp0_iter0_reg;
        end if; 
    end process;


    ap_idle_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_idle_pp0, ap_start_int)
    begin
        if (((ap_idle_pp0 = ap_const_logic_1) and (ap_start_int = ap_const_logic_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            ap_idle <= ap_const_logic_1;
        else 
            ap_idle <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0 <= ap_const_logic_1;
        else 
            ap_idle_pp0 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_0to9_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9)
    begin
        if (((ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0) and (ap_enable_reg_pp0_iter0 = ap_const_logic_0))) then 
            ap_idle_pp0_0to9 <= ap_const_logic_1;
        else 
            ap_idle_pp0_0to9 <= ap_const_logic_0;
        end if; 
    end process;


    ap_idle_pp0_1to10_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter7, ap_enable_reg_pp0_iter8, ap_enable_reg_pp0_iter9, ap_enable_reg_pp0_iter10)
    begin
        if (((ap_enable_reg_pp0_iter10 = ap_const_logic_0) and (ap_enable_reg_pp0_iter9 = ap_const_logic_0) and (ap_enable_reg_pp0_iter8 = ap_const_logic_0) and (ap_enable_reg_pp0_iter7 = ap_const_logic_0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_0) and (ap_enable_reg_pp0_iter4 = ap_const_logic_0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_0))) then 
            ap_idle_pp0_1to10 <= ap_const_logic_1;
        else 
            ap_idle_pp0_1to10 <= ap_const_logic_0;
        end if; 
    end process;

    ap_loop_exit_ready <= ap_condition_exit_pp0_iter0_stage7;

    ap_ready_int_assign_proc : process(ap_enable_reg_pp0_iter0, ap_CS_fsm_pp0_stage7, ap_block_pp0_stage7_subdone)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_subdone) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            ap_ready_int <= ap_const_logic_1;
        else 
            ap_ready_int <= ap_const_logic_0;
        end if; 
    end process;

    bitcast_ln112_10_fu_2224_p1 <= tmp_33_reg_4284;
    bitcast_ln112_11_fu_2241_p1 <= tmp_35_reg_4293;
    bitcast_ln112_1_fu_1653_p1 <= tmp_9_reg_4054;
    bitcast_ln112_2_fu_1694_p1 <= tmp_4_reg_4073;
    bitcast_ln112_3_fu_1711_p1 <= tmp_11_reg_4082;
    bitcast_ln112_4_fu_1881_p1 <= tmp_15_reg_4116;
    bitcast_ln112_5_fu_1898_p1 <= tmp_17_reg_4125;
    bitcast_ln112_6_fu_1984_p1 <= tmp_21_reg_4134;
    bitcast_ln112_7_fu_2001_p1 <= tmp_23_reg_4143;
    bitcast_ln112_8_fu_2117_p1 <= tmp_27_reg_4227;
    bitcast_ln112_9_fu_2134_p1 <= tmp_29_reg_4236;
    bitcast_ln112_fu_1636_p1 <= tmp_7_reg_4040;
    bitcast_ln116_1_fu_2444_p1 <= ov_6_reg_4558;
    bitcast_ln116_2_fu_2512_p1 <= ov_10_reg_4580;
    bitcast_ln116_3_fu_2559_p1 <= ov_14_reg_4597;
    bitcast_ln116_4_fu_2606_p1 <= ov_18_reg_4609;
    bitcast_ln116_5_fu_2653_p1 <= ov_22_reg_4616;
    bitcast_ln116_fu_2397_p1 <= ov_2_reg_4551;
    bitcast_ln122_fu_2700_p1 <= overlap_5_reg_4683_pp0_iter7_reg;
    bitcast_ln126_fu_2740_p1 <= reg_1289;
    bitcast_ln130_1_fu_2791_p1 <= tmp_score_load_reg_4707;
    bitcast_ln130_fu_2774_p1 <= sc_2_reg_4700;
    bitcast_ln139_1_fu_2940_p1 <= score_load_reg_4733;
    bitcast_ln139_fu_2923_p1 <= tmp_score_4_reg_4725;

    grp_fu_1246_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_3989, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, and_ln112_11_reg_4357, ap_CS_fsm_pp0_stage4, tmp_s_reg_4009, tmp_7_reg_4040, ap_CS_fsm_pp0_stage2, tmp_23_reg_4143, ap_CS_fsm_pp0_stage3, tmp_16_reg_4202, tmp_33_reg_4284, tmp_35_reg_4293, ap_CS_fsm_pp0_stage5, tmp_26_reg_4312, tmp_24_reg_4327, tmp_30_reg_4362, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1246_p0 <= tmp_30_reg_4362;
        elsif (((ap_const_lv1_0 = and_ln112_11_reg_4357) and (icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1246_p0 <= tmp_33_reg_4284;
        elsif (((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_11_reg_4357) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1246_p0 <= tmp_35_reg_4293;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1246_p0 <= tmp_24_reg_4327;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1246_p0 <= tmp_26_reg_4312;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1246_p0 <= tmp_23_reg_4143;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1246_p0 <= tmp_16_reg_4202;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1246_p0 <= tmp_7_reg_4040;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1246_p0 <= tmp_s_reg_4009;
        else 
            grp_fu_1246_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1246_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_3989, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, and_ln112_11_reg_4357, ap_CS_fsm_pp0_stage4, tmp_5_reg_4030, tmp_9_reg_4054, ap_CS_fsm_pp0_stage2, tmp_17_reg_4125, tmp_21_reg_4134, ap_CS_fsm_pp0_stage3, tmp_27_reg_4227, tmp_33_reg_4284, tmp_35_reg_4293, ap_CS_fsm_pp0_stage5, tmp_25_reg_4332, tmp_31_reg_4367, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1246_p1 <= tmp_31_reg_4367;
        elsif (((ap_const_lv1_0 = and_ln112_11_reg_4357) and (icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1246_p1 <= tmp_35_reg_4293;
        elsif (((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_11_reg_4357) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1246_p1 <= tmp_33_reg_4284;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1246_p1 <= tmp_25_reg_4332;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1246_p1 <= tmp_27_reg_4227;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1246_p1 <= tmp_21_reg_4134;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1246_p1 <= tmp_17_reg_4125;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1246_p1 <= tmp_9_reg_4054;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1246_p1 <= tmp_5_reg_4030;
        else 
            grp_fu_1246_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1250_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_3989_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, tmp_6_reg_4035, tmp_3_reg_4101, ap_CS_fsm_pp0_stage2, tmp_17_reg_4125, tmp_21_reg_4134, ap_CS_fsm_pp0_stage3, tmp_27_reg_4227, ap_CS_fsm_pp0_stage5, and_ln112_7_reg_4307_pp0_iter1_reg, tmp_28_reg_4317, d1_3_reg_4459, d2_3_reg_4464, d2_4_reg_4494, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1250_p0 <= d2_4_reg_4494;
        elsif (((ap_const_lv1_0 = and_ln112_7_reg_4307_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1250_p0 <= d2_3_reg_4464;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_7_reg_4307_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1250_p0 <= d1_3_reg_4459;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1250_p0 <= tmp_27_reg_4227;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1250_p0 <= tmp_28_reg_4317;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1250_p0 <= tmp_21_reg_4134;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1250_p0 <= tmp_17_reg_4125;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1250_p0 <= tmp_3_reg_4101;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1250_p0 <= tmp_6_reg_4035;
        else 
            grp_fu_1250_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1250_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_3989_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, tmp_7_reg_4040, tmp_4_reg_4073, ap_CS_fsm_pp0_stage2, tmp_15_reg_4116, tmp_23_reg_4143, ap_CS_fsm_pp0_stage3, tmp_29_reg_4236, ap_CS_fsm_pp0_stage5, and_ln112_7_reg_4307_pp0_iter1_reg, sub75_3_reg_4469, sub87_3_reg_4474, sub87_4_reg_4515, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1250_p1 <= sub87_4_reg_4515;
        elsif (((ap_const_lv1_0 = and_ln112_7_reg_4307_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1250_p1 <= sub87_3_reg_4474;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_7_reg_4307_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1250_p1 <= sub75_3_reg_4469;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_1250_p1 <= tmp_29_reg_4236;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1250_p1 <= tmp_23_reg_4143;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1250_p1 <= tmp_15_reg_4116;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1250_p1 <= tmp_4_reg_4073;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1250_p1 <= tmp_7_reg_4040;
        else 
            grp_fu_1250_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1254_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_3989_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, and_ln112_1_reg_4244_pp0_iter1_reg, tmp_8_reg_4049, ap_CS_fsm_pp0_stage2, tmp_10_reg_4106, tmp_15_reg_4116, ap_CS_fsm_pp0_stage3, tmp_29_reg_4236, ap_CS_fsm_pp0_stage5, tmp_32_reg_4342, and_ln112_11_reg_4357_pp0_iter1_reg, d1_reg_4387, d2_reg_4392, d1_4_reg_4489, d1_5_reg_4520, d2_5_reg_4525, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_lv1_0 = and_ln112_11_reg_4357_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1254_p0 <= d2_5_reg_4525;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_11_reg_4357_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1254_p0 <= d1_5_reg_4520;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1254_p0 <= d1_4_reg_4489;
        elsif (((ap_const_lv1_0 = and_ln112_1_reg_4244_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1254_p0 <= d2_reg_4392;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_1_reg_4244_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1254_p0 <= d1_reg_4387;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1254_p0 <= tmp_32_reg_4342;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1254_p0 <= tmp_29_reg_4236;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1254_p0 <= tmp_15_reg_4116;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1254_p0 <= tmp_10_reg_4106;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1254_p0 <= tmp_8_reg_4049;
        else 
            grp_fu_1254_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1254_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, reg_1295, icmp_ln1027_reg_3989_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, and_ln112_1_reg_4244_pp0_iter1_reg, tmp_9_reg_4054, tmp_11_reg_4082, ap_CS_fsm_pp0_stage2, tmp_17_reg_4125, ap_CS_fsm_pp0_stage3, tmp_27_reg_4227, tmp_33_reg_4284, ap_CS_fsm_pp0_stage5, and_ln112_11_reg_4357_pp0_iter1_reg, sub_reg_4397, sub2_reg_4408, sub75_4_reg_4499, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if ((((ap_const_lv1_0 = and_ln112_11_reg_4357_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_const_lv1_1 = and_ln112_11_reg_4357_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)))) then 
            grp_fu_1254_p1 <= reg_1295;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1254_p1 <= sub75_4_reg_4499;
        elsif (((ap_const_lv1_0 = and_ln112_1_reg_4244_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1254_p1 <= sub2_reg_4408;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_1_reg_4244_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1254_p1 <= sub_reg_4397;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1254_p1 <= tmp_33_reg_4284;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1254_p1 <= tmp_27_reg_4227;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1254_p1 <= tmp_17_reg_4125;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1254_p1 <= tmp_11_reg_4082;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1254_p1 <= tmp_9_reg_4054;
        else 
            grp_fu_1254_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1258_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_3989, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_3989_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, and_ln112_3_reg_4249_pp0_iter1_reg, icmp_ln1027_reg_3989_pp0_iter4_reg, icmp_ln1027_reg_3989_pp0_iter5_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage6_00001, ap_block_pp0_stage7_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001)
    begin
        if ((((ap_const_lv1_0 = and_ln112_3_reg_4249_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_3_reg_4249_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)))) then 
            grp_fu_1258_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (icmp_ln1027_reg_3989_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (icmp_ln1027_reg_3989_pp0_iter4_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_1258_opcode <= ap_const_lv2_0;
        else 
            grp_fu_1258_opcode <= "XX";
        end if; 
    end process;


    grp_fu_1258_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_3989_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, and_ln112_3_reg_4249_pp0_iter1_reg, tmp_9_reg_4054, tmp_11_reg_4082, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, tmp_18_reg_4207, ap_CS_fsm_pp0_stage5, tmp_34_reg_4347, d1_1_reg_4413, d2_1_reg_4418, mul_reg_4479, distance_2_reg_4668, distance_3_reg_4678, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1258_p0 <= distance_3_reg_4678;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1258_p0 <= distance_2_reg_4668;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1258_p0 <= mul_reg_4479;
        elsif (((ap_const_lv1_0 = and_ln112_3_reg_4249_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1258_p0 <= d2_1_reg_4418;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_3_reg_4249_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1258_p0 <= d1_1_reg_4413;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1258_p0 <= tmp_34_reg_4347;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1258_p0 <= tmp_18_reg_4207;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1258_p0 <= tmp_11_reg_4082;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1258_p0 <= tmp_9_reg_4054;
        else 
            grp_fu_1258_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1258_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter5, ap_enable_reg_pp0_iter6, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_3989_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, and_ln112_3_reg_4249_pp0_iter1_reg, tmp_7_reg_4040, tmp_4_reg_4073, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, tmp_19_reg_4212, tmp_35_reg_4293, ap_CS_fsm_pp0_stage5, sub75_1_reg_4423, sub87_1_reg_4428, mul_3_reg_4530_pp0_iter4_reg, mul_4_reg_4541_pp0_iter5_reg, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1258_p1 <= mul_4_reg_4541_pp0_iter5_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1258_p1 <= mul_3_reg_4530_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1258_p1 <= ap_const_lv32_0;
        elsif (((ap_const_lv1_0 = and_ln112_3_reg_4249_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1258_p1 <= sub87_1_reg_4428;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_3_reg_4249_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1258_p1 <= sub75_1_reg_4423;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1258_p1 <= tmp_35_reg_4293;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1258_p1 <= tmp_19_reg_4212;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1258_p1 <= tmp_4_reg_4073;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1258_p1 <= tmp_7_reg_4040;
        else 
            grp_fu_1258_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1262_opcode_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_3989, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_3989_pp0_iter2_reg, icmp_ln1027_reg_3989_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, icmp_ln1027_reg_3989_pp0_iter6_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, and_ln112_5_reg_4302_pp0_iter1_reg, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage6_00001, ap_block_pp0_stage7_00001, ap_block_pp0_stage1_00001)
    begin
        if ((((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_5_reg_4302_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)) or ((ap_const_lv1_0 = and_ln112_5_reg_4302_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_1262_opcode <= ap_const_lv2_1;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (icmp_ln1027_reg_3989_pp0_iter6_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_1262_opcode <= ap_const_lv2_0;
        else 
            grp_fu_1262_opcode <= "XX";
        end if; 
    end process;


    grp_fu_1262_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_3989_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, tmp_1_reg_4063, tmp_4_reg_4073, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, tmp_20_reg_4217, and_ln112_5_reg_4302_pp0_iter1_reg, d1_2_reg_4433, d2_2_reg_4438, distance_reg_4546, distance_4_reg_4695, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1262_p0 <= distance_4_reg_4695;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1262_p0 <= distance_reg_4546;
        elsif (((ap_const_lv1_0 = and_ln112_5_reg_4302_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1262_p0 <= d2_2_reg_4438;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_5_reg_4302_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1262_p0 <= d1_2_reg_4433;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1262_p0 <= tmp_20_reg_4217;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1262_p0 <= tmp_4_reg_4073;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1262_p0 <= tmp_1_reg_4063;
        else 
            grp_fu_1262_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1262_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter7, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_3989_pp0_iter1_reg, ap_CS_fsm_pp0_stage4, tmp_2_reg_4068, tmp_11_reg_4082, ap_CS_fsm_pp0_stage2, tmp_21_reg_4134, ap_CS_fsm_pp0_stage3, and_ln112_5_reg_4302_pp0_iter1_reg, sub75_2_reg_4443, sub87_2_reg_4448, mul_1_reg_4484_pp0_iter2_reg, mul_5_reg_4565_pp0_iter6_reg, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter7 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1262_p1 <= mul_5_reg_4565_pp0_iter6_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1262_p1 <= mul_1_reg_4484_pp0_iter2_reg;
        elsif (((ap_const_lv1_0 = and_ln112_5_reg_4302_pp0_iter1_reg) and (ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1262_p1 <= sub87_2_reg_4448;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (icmp_ln1027_reg_3989_pp0_iter1_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_lv1_1 = and_ln112_5_reg_4302_pp0_iter1_reg) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1262_p1 <= sub75_2_reg_4443;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1262_p1 <= tmp_21_reg_4134;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1262_p1 <= tmp_11_reg_4082;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1262_p1 <= tmp_2_reg_4068;
        else 
            grp_fu_1262_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1266_opcode_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, icmp_ln1027_reg_3989, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, icmp_ln1027_reg_3989_pp0_iter3_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage6_00001)
    begin
        if ((((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)))) then 
            grp_fu_1266_opcode <= ap_const_lv2_1;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (icmp_ln1027_reg_3989_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1266_opcode <= ap_const_lv2_0;
        else 
            grp_fu_1266_opcode <= "XX";
        end if; 
    end process;


    grp_fu_1266_p0_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, tmp_12_reg_4091, ap_CS_fsm_pp0_stage2, tmp_14_reg_4111, ap_CS_fsm_pp0_stage3, tmp_22_reg_4222, distance_1_reg_4638, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1266_p0 <= distance_1_reg_4638;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1266_p0 <= tmp_22_reg_4222;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1266_p0 <= tmp_14_reg_4111;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1266_p0 <= tmp_12_reg_4091;
        else 
            grp_fu_1266_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1266_p1_assign_proc : process(ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, tmp_13_reg_4096, ap_CS_fsm_pp0_stage2, tmp_15_reg_4116, tmp_23_reg_4143, ap_CS_fsm_pp0_stage3, mul_2_reg_4504_pp0_iter2_reg, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1266_p1 <= mul_2_reg_4504_pp0_iter2_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1266_p1 <= tmp_23_reg_4143;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1266_p1 <= tmp_15_reg_4116;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1266_p1 <= tmp_13_reg_4096;
        else 
            grp_fu_1266_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1271_p0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, reg_1316, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, d_reg_4381, d_2_reg_4402, d_3_reg_4453, d_4_reg_4509, ov_24_reg_4587, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1271_p0 <= reg_1316;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1271_p0 <= ov_24_reg_4587;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1271_p0 <= d_4_reg_4509;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1271_p0 <= d_3_reg_4453;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1271_p0 <= d_2_reg_4402;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1271_p0 <= d_reg_4381;
        else 
            grp_fu_1271_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1271_p1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter3, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, d_reg_4381, d_2_reg_4402, d_3_reg_4453, d_4_reg_4509, ov_7_reg_4592, ov_11_reg_4623, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1271_p1 <= ov_11_reg_4623;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1271_p1 <= ov_7_reg_4592;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1271_p1 <= d_4_reg_4509;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1271_p1 <= d_3_reg_4453;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1271_p1 <= d_2_reg_4402;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1271_p1 <= d_reg_4381;
        else 
            grp_fu_1271_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1275_p0_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, reg_1289, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, reg_1316, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, d_5_reg_4535, overlap_3_reg_4663, overlap_4_reg_4673, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1275_p0 <= overlap_4_reg_4673;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1275_p0 <= overlap_3_reg_4663;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1275_p0 <= reg_1316;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1275_p0 <= d_5_reg_4535;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1275_p0 <= reg_1289;
        else 
            grp_fu_1275_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1275_p1_assign_proc : process(ap_enable_reg_pp0_iter1, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter4, ap_enable_reg_pp0_iter5, reg_1289, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage4, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, d_5_reg_4535, ov_15_reg_4633, ov_19_reg_4648, ov_23_reg_4658_pp0_iter4_reg, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter5 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1275_p1 <= ov_23_reg_4658_pp0_iter4_reg;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1275_p1 <= ov_19_reg_4648;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter4 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1275_p1 <= ov_15_reg_4633;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1275_p1 <= d_5_reg_4535;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter1 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1275_p1 <= reg_1289;
        else 
            grp_fu_1275_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1279_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_3989, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_3989_pp0_iter2_reg, ap_CS_fsm_pp0_stage4, icmp_ln1027_reg_3989_pp0_iter8_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage6_00001, ap_block_pp0_stage7_00001, ap_block_pp0_stage0_00001, ap_block_pp0_stage1_00001)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (icmp_ln1027_reg_3989_pp0_iter8_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1279_opcode <= ap_const_lv5_2;
        elsif ((((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage1_00001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)))) then 
            grp_fu_1279_opcode <= ap_const_lv5_4;
        else 
            grp_fu_1279_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_1279_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, tmp_7_reg_4040, ap_CS_fsm_pp0_stage2, tmp_15_reg_4116, ap_CS_fsm_pp0_stage3, tmp_27_reg_4227, tmp_33_reg_4284, ap_CS_fsm_pp0_stage5, ov_2_reg_4551, ov_10_reg_4580, ov_14_reg_4597, sc_2_reg_4700, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage1, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1279_p0 <= sc_2_reg_4700;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1))) then 
            grp_fu_1279_p0 <= ov_14_reg_4597;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1279_p0 <= ov_10_reg_4580;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1279_p0 <= ov_2_reg_4551;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1279_p0 <= tmp_33_reg_4284;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1279_p0 <= tmp_27_reg_4227;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1279_p0 <= tmp_15_reg_4116;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1279_p0 <= tmp_7_reg_4040;
        else 
            grp_fu_1279_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1279_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter8, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage1, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, tmp_9_reg_4054, ap_CS_fsm_pp0_stage2, tmp_17_reg_4125, ap_CS_fsm_pp0_stage3, tmp_29_reg_4236, tmp_35_reg_4293, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage1, tmp_score_fu_360, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter8 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1279_p1 <= tmp_score_fu_360;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage1)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1279_p1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1279_p1 <= tmp_35_reg_4293;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1279_p1 <= tmp_29_reg_4236;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1279_p1 <= tmp_17_reg_4125;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1279_p1 <= tmp_9_reg_4054;
        else 
            grp_fu_1279_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1283_opcode_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage7, icmp_ln1027_reg_3989, ap_CS_fsm_pp0_stage6, icmp_ln1027_reg_3989_pp0_iter2_reg, ap_CS_fsm_pp0_stage4, icmp_ln1027_reg_3989_pp0_iter3_reg, icmp_ln1027_reg_3989_pp0_iter5_reg, icmp_ln1027_reg_3989_pp0_iter9_reg, ap_CS_fsm_pp0_stage2, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage2_00001, ap_block_pp0_stage3_00001, ap_block_pp0_stage4_00001, ap_block_pp0_stage5_00001, ap_block_pp0_stage6_00001, ap_block_pp0_stage7_00001, ap_block_pp0_stage0_00001)
    begin
        if ((((ap_const_boolean_0 = ap_block_pp0_stage0_00001) and (icmp_ln1027_reg_3989_pp0_iter5_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)) or ((ap_const_boolean_0 = ap_block_pp0_stage7_00001) and (icmp_ln1027_reg_3989_pp0_iter9_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7)))) then 
            grp_fu_1283_opcode <= ap_const_lv5_2;
        elsif ((((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage3_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3)) or ((icmp_ln1027_reg_3989 = ap_const_lv1_1) and (ap_const_boolean_0 = ap_block_pp0_stage2_00001) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2)) or ((ap_const_boolean_0 = ap_block_pp0_stage6_00001) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (icmp_ln1027_reg_3989_pp0_iter2_reg = ap_const_lv1_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5_00001) and (icmp_ln1027_reg_3989_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4_00001) and (icmp_ln1027_reg_3989_pp0_iter3_reg = ap_const_lv1_1) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)))) then 
            grp_fu_1283_opcode <= ap_const_lv5_4;
        else 
            grp_fu_1283_opcode <= "XXXXX";
        end if; 
    end process;


    grp_fu_1283_p0_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, tmp_4_reg_4073, ap_CS_fsm_pp0_stage2, tmp_21_reg_4134, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ov_6_reg_4558, ov_18_reg_4609, ov_22_reg_4616, overlap_5_reg_4683, tmp_score_4_reg_4725, ap_block_pp0_stage0, ap_block_pp0_stage7, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1283_p0 <= tmp_score_4_reg_4725;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            grp_fu_1283_p0 <= overlap_5_reg_4683;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5))) then 
            grp_fu_1283_p0 <= ov_22_reg_4616;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4))) then 
            grp_fu_1283_p0 <= ov_18_reg_4609;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6))) then 
            grp_fu_1283_p0 <= ov_6_reg_4558;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1283_p0 <= tmp_21_reg_4134;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1283_p0 <= tmp_4_reg_4073;
        else 
            grp_fu_1283_p0 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;


    grp_fu_1283_p1_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_enable_reg_pp0_iter0, ap_enable_reg_pp0_iter2, ap_enable_reg_pp0_iter3, ap_enable_reg_pp0_iter6, ap_enable_reg_pp0_iter9, ap_CS_fsm_pp0_stage7, ap_CS_fsm_pp0_stage6, ap_CS_fsm_pp0_stage4, tmp_11_reg_4082, ap_CS_fsm_pp0_stage2, tmp_23_reg_4143, ap_CS_fsm_pp0_stage3, ap_CS_fsm_pp0_stage5, ap_block_pp0_stage0, score_fu_348, ap_block_pp0_stage7, ap_block_pp0_stage2, ap_block_pp0_stage3, ap_block_pp0_stage4, ap_block_pp0_stage5, ap_block_pp0_stage6)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage7) and (ap_enable_reg_pp0_iter9 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage7))) then 
            grp_fu_1283_p1 <= score_fu_348;
        elsif ((((ap_const_boolean_0 = ap_block_pp0_stage6) and (ap_enable_reg_pp0_iter2 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage6)) or ((ap_const_boolean_0 = ap_block_pp0_stage5) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage5)) or ((ap_const_boolean_0 = ap_block_pp0_stage4) and (ap_enable_reg_pp0_iter3 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage4)) or ((ap_const_boolean_0 = ap_block_pp0_stage0) and (ap_enable_reg_pp0_iter6 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0)))) then 
            grp_fu_1283_p1 <= ap_const_lv32_0;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage3) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage3))) then 
            grp_fu_1283_p1 <= tmp_23_reg_4143;
        elsif (((ap_const_boolean_0 = ap_block_pp0_stage2) and (ap_enable_reg_pp0_iter0 = ap_const_logic_1) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage2))) then 
            grp_fu_1283_p1 <= tmp_11_reg_4082;
        else 
            grp_fu_1283_p1 <= "XXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX";
        end if; 
    end process;

    grp_fu_6848_p_ce <= ap_const_logic_1;
    grp_fu_6848_p_din0 <= grp_fu_1246_p0;
    grp_fu_6848_p_din1 <= grp_fu_1246_p1;
    grp_fu_6848_p_opcode <= ap_const_lv2_1(1 - 1 downto 0);
    grp_fu_6854_p_ce <= ap_const_logic_1;
    grp_fu_6854_p_din0 <= grp_fu_1271_p0;
    grp_fu_6854_p_din1 <= grp_fu_1271_p1;
    grp_fu_6859_p_ce <= ap_const_logic_1;
    grp_fu_6859_p_din0 <= grp_fu_1279_p0;
    grp_fu_6859_p_din1 <= grp_fu_1279_p1;
    grp_fu_6859_p_opcode <= grp_fu_1279_opcode;
    grp_fu_6864_p_ce <= ap_const_logic_1;
    grp_fu_6864_p_din0 <= grp_fu_1283_p0;
    grp_fu_6864_p_din1 <= grp_fu_1283_p1;
    grp_fu_6864_p_opcode <= grp_fu_1283_opcode;
    i_real_2_fu_2359_p3 <= 
        i_real_fu_2336_p2 when (icmp_ln1019_fu_2331_p2(0) = '1') else 
        i_real_3_reg_3974;
    i_real_fu_2336_p2 <= std_logic_vector(unsigned(i_real_3_reg_3974) + unsigned(ap_const_lv32_1));
    icmp_ln1019_fu_2331_p2 <= "1" when (k_real_5_reg_3982 = ap_const_lv32_7) else "0";
    icmp_ln1027_fu_1363_p2 <= "1" when (signed(merge_1_1_fu_352) < signed(ap_const_lv32_7)) else "0";
    icmp_ln112_10_fu_1927_p2 <= "0" when (tmp_47_fu_1901_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_11_fu_1933_p2 <= "1" when (trunc_ln112_5_fu_1911_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_12_fu_2018_p2 <= "0" when (tmp_51_fu_1987_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_13_fu_2024_p2 <= "1" when (trunc_ln112_6_fu_1997_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_14_fu_2036_p2 <= "0" when (tmp_52_fu_2004_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_15_fu_2042_p2 <= "1" when (trunc_ln112_7_fu_2014_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_16_fu_2151_p2 <= "0" when (tmp_56_fu_2120_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_17_fu_2157_p2 <= "1" when (trunc_ln112_8_fu_2130_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_18_fu_2169_p2 <= "0" when (tmp_57_fu_2137_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_19_fu_2175_p2 <= "1" when (trunc_ln112_9_fu_2147_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_1_fu_1676_p2 <= "1" when (trunc_ln112_fu_1649_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_20_fu_2258_p2 <= "0" when (tmp_61_fu_2227_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_21_fu_2264_p2 <= "1" when (trunc_ln112_10_fu_2237_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_22_fu_2276_p2 <= "0" when (tmp_62_fu_2244_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_23_fu_2282_p2 <= "1" when (trunc_ln112_11_fu_2254_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_2_fu_1682_p2 <= "0" when (tmp_37_fu_1656_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_3_fu_1688_p2 <= "1" when (trunc_ln112_1_fu_1666_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_4_fu_1728_p2 <= "0" when (tmp_41_fu_1697_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_5_fu_1734_p2 <= "1" when (trunc_ln112_2_fu_1707_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_6_fu_1740_p2 <= "0" when (tmp_42_fu_1714_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_7_fu_1746_p2 <= "1" when (trunc_ln112_3_fu_1724_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_8_fu_1915_p2 <= "0" when (tmp_46_fu_1884_p4 = ap_const_lv8_FF) else "1";
    icmp_ln112_9_fu_1921_p2 <= "1" when (trunc_ln112_4_fu_1894_p1 = ap_const_lv23_0) else "0";
    icmp_ln112_fu_1670_p2 <= "0" when (tmp_36_fu_1639_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_10_fu_2670_p2 <= "0" when (tmp_64_fu_2656_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_11_fu_2676_p2 <= "1" when (trunc_ln116_5_fu_2666_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_1_fu_2420_p2 <= "1" when (trunc_ln116_fu_2410_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_2_fu_2461_p2 <= "0" when (tmp_44_fu_2447_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_3_fu_2467_p2 <= "1" when (trunc_ln116_1_fu_2457_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_4_fu_2529_p2 <= "0" when (tmp_49_fu_2515_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_5_fu_2535_p2 <= "1" when (trunc_ln116_2_fu_2525_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_6_fu_2576_p2 <= "0" when (tmp_54_fu_2562_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_7_fu_2582_p2 <= "1" when (trunc_ln116_3_fu_2572_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_8_fu_2623_p2 <= "0" when (tmp_59_fu_2609_p4 = ap_const_lv8_FF) else "1";
    icmp_ln116_9_fu_2629_p2 <= "1" when (trunc_ln116_4_fu_2619_p1 = ap_const_lv23_0) else "0";
    icmp_ln116_fu_2414_p2 <= "0" when (tmp_39_fu_2400_p4 = ap_const_lv8_FF) else "1";
    icmp_ln122_1_fu_2723_p2 <= "1" when (trunc_ln122_fu_2713_p1 = ap_const_lv23_0) else "0";
    icmp_ln122_fu_2717_p2 <= "0" when (tmp_66_fu_2703_p4 = ap_const_lv8_FF) else "1";
    icmp_ln130_1_fu_2808_p2 <= "0" when (tmp_68_fu_2777_p4 = ap_const_lv8_FF) else "1";
    icmp_ln130_2_fu_2814_p2 <= "1" when (trunc_ln130_fu_2787_p1 = ap_const_lv23_0) else "0";
    icmp_ln130_3_fu_2826_p2 <= "0" when (tmp_69_fu_2794_p4 = ap_const_lv8_FF) else "1";
    icmp_ln130_4_fu_2832_p2 <= "1" when (trunc_ln130_1_fu_2804_p1 = ap_const_lv23_0) else "0";
    icmp_ln130_fu_2768_p2 <= "1" when (tmp_other_fu_364 = ap_const_lv32_FFFFFFFF) else "0";
    icmp_ln139_1_fu_2963_p2 <= "1" when (trunc_ln139_fu_2936_p1 = ap_const_lv23_0) else "0";
    icmp_ln139_2_fu_2975_p2 <= "0" when (tmp_72_fu_2943_p4 = ap_const_lv8_FF) else "1";
    icmp_ln139_3_fu_2981_p2 <= "1" when (trunc_ln139_1_fu_2953_p1 = ap_const_lv23_0) else "0";
    icmp_ln139_fu_2957_p2 <= "0" when (tmp_71_fu_2926_p4 = ap_const_lv8_FF) else "1";
    k_real_2_fu_2346_p2 <= std_logic_vector(unsigned(k_real_5_reg_3982) + unsigned(ap_const_lv32_1));
    k_real_3_fu_2351_p3 <= 
        k_real_fu_2341_p2 when (icmp_ln1019_fu_2331_p2(0) = '1') else 
        k_real_2_fu_2346_p2;
    k_real_fu_2341_p2 <= std_logic_vector(unsigned(i_real_3_reg_3974) + unsigned(ap_const_lv32_2));
    merge_1_6_fu_3022_p3 <= 
        i_real_3_reg_3974_pp0_iter9_reg when (or_ln139_fu_3004_p2(0) = '1') else 
        merge_1_4_reg_4741;
    merge_1_7_fu_3040_p3 <= 
        merge_1_6_fu_3022_p3 when (icmp_ln1019_reg_4372_pp0_iter10_reg(0) = '1') else 
        merge_1_4_reg_4741;
    merge_1_out <= merge_1_fu_340(3 - 1 downto 0);

    merge_1_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1027_reg_3989_pp0_iter9_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_3989_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            merge_1_out_ap_vld <= ap_const_logic_1;
        else 
            merge_1_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    merge_2_5_fu_3016_p3 <= 
        tmp_other_4_reg_4719 when (or_ln139_fu_3004_p2(0) = '1') else 
        merge_2_1_reg_4748;
    merge_2_6_fu_3034_p3 <= 
        merge_2_5_fu_3016_p3 when (icmp_ln1019_reg_4372_pp0_iter10_reg(0) = '1') else 
        merge_2_1_reg_4748;
    merge_2_out <= merge_2_fu_344(3 - 1 downto 0);

    merge_2_out_ap_vld_assign_proc : process(ap_CS_fsm_pp0_stage0, ap_block_pp0_stage0_11001, icmp_ln1027_reg_3989_pp0_iter9_reg)
    begin
        if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (icmp_ln1027_reg_3989_pp0_iter9_reg = ap_const_lv1_0) and (ap_const_logic_1 = ap_CS_fsm_pp0_stage0))) then 
            merge_2_out_ap_vld <= ap_const_logic_1;
        else 
            merge_2_out_ap_vld <= ap_const_logic_0;
        end if; 
    end process;

    or_ln112_10_fu_2270_p2 <= (icmp_ln112_21_fu_2264_p2 or icmp_ln112_20_fu_2258_p2);
    or_ln112_11_fu_2288_p2 <= (icmp_ln112_23_fu_2282_p2 or icmp_ln112_22_fu_2276_p2);
    or_ln112_1_fu_1847_p2 <= (icmp_ln112_3_reg_4167 or icmp_ln112_2_reg_4162);
    or_ln112_2_fu_1862_p2 <= (icmp_ln112_5_reg_4182 or icmp_ln112_4_reg_4177);
    or_ln112_3_fu_1866_p2 <= (icmp_ln112_7_reg_4192 or icmp_ln112_6_reg_4187);
    or_ln112_4_fu_1965_p2 <= (icmp_ln112_9_reg_4259 or icmp_ln112_8_reg_4254);
    or_ln112_5_fu_1969_p2 <= (icmp_ln112_11_reg_4269 or icmp_ln112_10_reg_4264);
    or_ln112_6_fu_2030_p2 <= (icmp_ln112_13_fu_2024_p2 or icmp_ln112_12_fu_2018_p2);
    or_ln112_7_fu_2048_p2 <= (icmp_ln112_15_fu_2042_p2 or icmp_ln112_14_fu_2036_p2);
    or_ln112_8_fu_2163_p2 <= (icmp_ln112_17_fu_2157_p2 or icmp_ln112_16_fu_2151_p2);
    or_ln112_9_fu_2181_p2 <= (icmp_ln112_19_fu_2175_p2 or icmp_ln112_18_fu_2169_p2);
    or_ln112_fu_1843_p2 <= (icmp_ln112_reg_4152 or icmp_ln112_1_reg_4157);
    or_ln116_1_fu_2473_p2 <= (icmp_ln116_3_fu_2467_p2 or icmp_ln116_2_fu_2461_p2);
    or_ln116_2_fu_2541_p2 <= (icmp_ln116_5_fu_2535_p2 or icmp_ln116_4_fu_2529_p2);
    or_ln116_3_fu_2588_p2 <= (icmp_ln116_7_fu_2582_p2 or icmp_ln116_6_fu_2576_p2);
    or_ln116_4_fu_2635_p2 <= (icmp_ln116_9_fu_2629_p2 or icmp_ln116_8_fu_2623_p2);
    or_ln116_5_fu_2682_p2 <= (icmp_ln116_11_fu_2676_p2 or icmp_ln116_10_fu_2670_p2);
    or_ln116_fu_2426_p2 <= (icmp_ln116_fu_2414_p2 or icmp_ln116_1_fu_2420_p2);
    or_ln122_fu_2729_p2 <= (icmp_ln122_fu_2717_p2 or icmp_ln122_1_fu_2723_p2);
    or_ln130_1_fu_2820_p2 <= (icmp_ln130_2_fu_2814_p2 or icmp_ln130_1_fu_2808_p2);
    or_ln130_2_fu_2838_p2 <= (icmp_ln130_4_fu_2832_p2 or icmp_ln130_3_fu_2826_p2);
    or_ln130_fu_2855_p2 <= (icmp_ln130_fu_2768_p2 or and_ln130_1_fu_2850_p2);
    or_ln139_1_fu_2969_p2 <= (icmp_ln139_fu_2957_p2 or icmp_ln139_1_fu_2963_p2);
    or_ln139_2_fu_2987_p2 <= (icmp_ln139_3_fu_2981_p2 or icmp_ln139_2_fu_2975_p2);
    or_ln139_fu_3004_p2 <= (tmp_fu_2916_p3 or and_ln139_1_fu_2999_p2);
    ov_10_fu_2390_p3 <= 
        reg_1289 when (and_ln112_5_reg_4302_pp0_iter2_reg(0) = '1') else 
        reg_1289;
    ov_11_fu_2552_p3 <= 
        ap_const_lv32_0 when (and_ln116_2_fu_2547_p2(0) = '1') else 
        ov_10_reg_4580;
    ov_14_fu_2491_p3 <= 
        reg_1308 when (and_ln112_7_reg_4307_pp0_iter2_reg(0) = '1') else 
        reg_1308;
    ov_15_fu_2599_p3 <= 
        ap_const_lv32_0 when (and_ln116_3_fu_2594_p2(0) = '1') else 
        ov_14_reg_4597;
    ov_18_fu_2498_p3 <= 
        reg_1300 when (and_ln112_9_reg_4337_pp0_iter2_reg(0) = '1') else 
        reg_1308;
    ov_19_fu_2646_p3 <= 
        ap_const_lv32_0 when (and_ln116_4_fu_2641_p2(0) = '1') else 
        ov_18_reg_4609;
    ov_22_fu_2505_p3 <= 
        reg_1312 when (and_ln112_11_reg_4357_pp0_iter2_reg(0) = '1') else 
        reg_1312;
    ov_23_fu_2693_p3 <= 
        ap_const_lv32_0 when (and_ln116_5_fu_2688_p2(0) = '1') else 
        ov_22_reg_4616;
    ov_24_fu_2437_p3 <= 
        ap_const_lv32_0 when (and_ln116_fu_2432_p2(0) = '1') else 
        ov_2_reg_4551;
    ov_2_fu_2376_p3 <= 
        reg_1300 when (and_ln112_1_reg_4244_pp0_iter2_reg(0) = '1') else 
        reg_1300;
    ov_6_fu_2383_p3 <= 
        reg_1304 when (and_ln112_3_reg_4249_pp0_iter2_reg(0) = '1') else 
        reg_1304;
    ov_7_fu_2484_p3 <= 
        ap_const_lv32_0 when (and_ln116_1_fu_2479_p2(0) = '1') else 
        ov_6_reg_4558;
    sc_2_fu_2754_p3 <= 
        overlap_5_reg_4683_pp0_iter7_reg when (and_ln122_fu_2735_p2(0) = '1') else 
        sc_fu_2750_p1;
    sc_fu_2750_p1 <= xor_ln126_fu_2744_p2;
    score_2_fu_3010_p3 <= 
        tmp_score_4_reg_4725 when (or_ln139_fu_3004_p2(0) = '1') else 
        score_load_reg_4733;
    score_3_fu_3028_p3 <= 
        score_2_fu_3010_p3 when (icmp_ln1019_reg_4372_pp0_iter10_reg(0) = '1') else 
        score_load_reg_4733;
    tmp_36_fu_1639_p4 <= bitcast_ln112_fu_1636_p1(30 downto 23);
    tmp_37_fu_1656_p4 <= bitcast_ln112_1_fu_1653_p1(30 downto 23);
    tmp_39_fu_2400_p4 <= bitcast_ln116_fu_2397_p1(30 downto 23);
    tmp_41_fu_1697_p4 <= bitcast_ln112_2_fu_1694_p1(30 downto 23);
    tmp_42_fu_1714_p4 <= bitcast_ln112_3_fu_1711_p1(30 downto 23);
    tmp_44_fu_2447_p4 <= bitcast_ln116_1_fu_2444_p1(30 downto 23);
    tmp_46_fu_1884_p4 <= bitcast_ln112_4_fu_1881_p1(30 downto 23);
    tmp_47_fu_1901_p4 <= bitcast_ln112_5_fu_1898_p1(30 downto 23);
    tmp_49_fu_2515_p4 <= bitcast_ln116_2_fu_2512_p1(30 downto 23);
    tmp_51_fu_1987_p4 <= bitcast_ln112_6_fu_1984_p1(30 downto 23);
    tmp_52_fu_2004_p4 <= bitcast_ln112_7_fu_2001_p1(30 downto 23);
    tmp_54_fu_2562_p4 <= bitcast_ln116_3_fu_2559_p1(30 downto 23);
    tmp_56_fu_2120_p4 <= bitcast_ln112_8_fu_2117_p1(30 downto 23);
    tmp_57_fu_2137_p4 <= bitcast_ln112_9_fu_2134_p1(30 downto 23);
    tmp_59_fu_2609_p4 <= bitcast_ln116_4_fu_2606_p1(30 downto 23);
    tmp_61_fu_2227_p4 <= bitcast_ln112_10_fu_2224_p1(30 downto 23);
    tmp_62_fu_2244_p4 <= bitcast_ln112_11_fu_2241_p1(30 downto 23);
    tmp_64_fu_2656_p4 <= bitcast_ln116_5_fu_2653_p1(30 downto 23);
    tmp_66_fu_2703_p4 <= bitcast_ln122_fu_2700_p1(30 downto 23);
    tmp_68_fu_2777_p4 <= bitcast_ln130_fu_2774_p1(30 downto 23);
    tmp_69_fu_2794_p4 <= bitcast_ln130_1_fu_2791_p1(30 downto 23);
    tmp_71_fu_2926_p4 <= bitcast_ln139_fu_2923_p1(30 downto 23);
    tmp_72_fu_2943_p4 <= bitcast_ln139_1_fu_2940_p1(30 downto 23);
    tmp_fu_2916_p3 <= merge_1_4_reg_4741(31 downto 31);
    tmp_other_3_fu_2874_p3 <= 
        ap_const_lv32_FFFFFFFF when (icmp_ln1019_reg_4372_pp0_iter9_reg(0) = '1') else 
        tmp_other_4_reg_4719;
    tmp_other_4_fu_2861_p3 <= 
        k_real_5_reg_3982_pp0_iter8_reg when (or_ln130_fu_2855_p2(0) = '1') else 
        tmp_other_fu_364;
    tmp_score_3_fu_2880_p3 <= 
        ap_const_lv32_0 when (icmp_ln1019_reg_4372_pp0_iter9_reg(0) = '1') else 
        tmp_score_4_reg_4725;
    tmp_score_4_fu_2868_p3 <= 
        sc_2_reg_4700 when (or_ln130_fu_2855_p2(0) = '1') else 
        tmp_score_load_reg_4707;
    trunc_ln104_1_fu_1387_p1 <= k_real_4_fu_356(3 - 1 downto 0);
    trunc_ln104_fu_1369_p1 <= merge_1_1_fu_352(3 - 1 downto 0);
    trunc_ln112_10_fu_2237_p1 <= bitcast_ln112_10_fu_2224_p1(23 - 1 downto 0);
    trunc_ln112_11_fu_2254_p1 <= bitcast_ln112_11_fu_2241_p1(23 - 1 downto 0);
    trunc_ln112_1_fu_1666_p1 <= bitcast_ln112_1_fu_1653_p1(23 - 1 downto 0);
    trunc_ln112_2_fu_1707_p1 <= bitcast_ln112_2_fu_1694_p1(23 - 1 downto 0);
    trunc_ln112_3_fu_1724_p1 <= bitcast_ln112_3_fu_1711_p1(23 - 1 downto 0);
    trunc_ln112_4_fu_1894_p1 <= bitcast_ln112_4_fu_1881_p1(23 - 1 downto 0);
    trunc_ln112_5_fu_1911_p1 <= bitcast_ln112_5_fu_1898_p1(23 - 1 downto 0);
    trunc_ln112_6_fu_1997_p1 <= bitcast_ln112_6_fu_1984_p1(23 - 1 downto 0);
    trunc_ln112_7_fu_2014_p1 <= bitcast_ln112_7_fu_2001_p1(23 - 1 downto 0);
    trunc_ln112_8_fu_2130_p1 <= bitcast_ln112_8_fu_2117_p1(23 - 1 downto 0);
    trunc_ln112_9_fu_2147_p1 <= bitcast_ln112_9_fu_2134_p1(23 - 1 downto 0);
    trunc_ln112_fu_1649_p1 <= bitcast_ln112_fu_1636_p1(23 - 1 downto 0);
    trunc_ln116_1_fu_2457_p1 <= bitcast_ln116_1_fu_2444_p1(23 - 1 downto 0);
    trunc_ln116_2_fu_2525_p1 <= bitcast_ln116_2_fu_2512_p1(23 - 1 downto 0);
    trunc_ln116_3_fu_2572_p1 <= bitcast_ln116_3_fu_2559_p1(23 - 1 downto 0);
    trunc_ln116_4_fu_2619_p1 <= bitcast_ln116_4_fu_2606_p1(23 - 1 downto 0);
    trunc_ln116_5_fu_2666_p1 <= bitcast_ln116_5_fu_2653_p1(23 - 1 downto 0);
    trunc_ln116_fu_2410_p1 <= bitcast_ln116_fu_2397_p1(23 - 1 downto 0);
    trunc_ln122_fu_2713_p1 <= bitcast_ln122_fu_2700_p1(23 - 1 downto 0);
    trunc_ln130_1_fu_2804_p1 <= bitcast_ln130_1_fu_2791_p1(23 - 1 downto 0);
    trunc_ln130_fu_2787_p1 <= bitcast_ln130_fu_2774_p1(23 - 1 downto 0);
    trunc_ln139_1_fu_2953_p1 <= bitcast_ln139_1_fu_2940_p1(23 - 1 downto 0);
    trunc_ln139_fu_2936_p1 <= bitcast_ln139_fu_2923_p1(23 - 1 downto 0);
    xor_ln126_fu_2744_p2 <= (bitcast_ln126_fu_2740_p1 xor ap_const_lv32_80000000);
end behav;
